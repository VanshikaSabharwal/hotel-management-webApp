/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sanity";
exports.ids = ["vendor-chunks/@sanity"];
exports.modules = {

/***/ "(ssr)/./node_modules/@sanity/asset-utils/dist/asset-utils.esm.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sanity/asset-utils/dist/asset-utils.esm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CROP: () => (/* binding */ DEFAULT_CROP),\n/* harmony export */   DEFAULT_HOTSPOT: () => (/* binding */ DEFAULT_HOTSPOT),\n/* harmony export */   buildFilePath: () => (/* binding */ buildFilePath),\n/* harmony export */   buildFileUrl: () => (/* binding */ buildFileUrl),\n/* harmony export */   buildImagePath: () => (/* binding */ buildImagePath),\n/* harmony export */   buildImageUrl: () => (/* binding */ buildImageUrl),\n/* harmony export */   getAssetDocumentId: () => (/* binding */ getAssetDocumentId),\n/* harmony export */   getAssetUrlType: () => (/* binding */ getAssetUrlType),\n/* harmony export */   getDefaultCrop: () => (/* binding */ getDefaultCrop),\n/* harmony export */   getDefaultHotspot: () => (/* binding */ getDefaultHotspot),\n/* harmony export */   getExtension: () => (/* binding */ getExtension),\n/* harmony export */   getFile: () => (/* binding */ getFile),\n/* harmony export */   getFileAsset: () => (/* binding */ getFileAsset),\n/* harmony export */   getIdFromString: () => (/* binding */ getIdFromString),\n/* harmony export */   getImage: () => (/* binding */ getImage),\n/* harmony export */   getImageAsset: () => (/* binding */ getImageAsset),\n/* harmony export */   getImageDimensions: () => (/* binding */ getImageDimensions),\n/* harmony export */   getProject: () => (/* binding */ getProject),\n/* harmony export */   getUrlFilename: () => (/* binding */ getUrlFilename),\n/* harmony export */   getUrlPath: () => (/* binding */ getUrlPath),\n/* harmony export */   isAssetFilename: () => (/* binding */ isAssetFilename),\n/* harmony export */   isAssetId: () => (/* binding */ isAssetId),\n/* harmony export */   isAssetIdStub: () => (/* binding */ isAssetIdStub),\n/* harmony export */   isAssetObjectStub: () => (/* binding */ isAssetObjectStub),\n/* harmony export */   isAssetPathStub: () => (/* binding */ isAssetPathStub),\n/* harmony export */   isAssetUrlStub: () => (/* binding */ isAssetUrlStub),\n/* harmony export */   isDefaultCrop: () => (/* binding */ isDefaultCrop),\n/* harmony export */   isDefaultHotspot: () => (/* binding */ isDefaultHotspot),\n/* harmony export */   isFileAssetFilename: () => (/* binding */ isFileAssetFilename),\n/* harmony export */   isFileAssetId: () => (/* binding */ isFileAssetId),\n/* harmony export */   isFileSource: () => (/* binding */ isFileSource),\n/* harmony export */   isImageAssetFilename: () => (/* binding */ isImageAssetFilename),\n/* harmony export */   isImageAssetId: () => (/* binding */ isImageAssetId),\n/* harmony export */   isImageSource: () => (/* binding */ isImageSource),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isReference: () => (/* binding */ isReference),\n/* harmony export */   isSanityAssetUrl: () => (/* binding */ isSanityAssetUrl),\n/* harmony export */   isSanityFileAsset: () => (/* binding */ isSanityFileAsset),\n/* harmony export */   isSanityFileUrl: () => (/* binding */ isSanityFileUrl),\n/* harmony export */   isSanityImageAsset: () => (/* binding */ isSanityImageAsset),\n/* harmony export */   isSanityImageUrl: () => (/* binding */ isSanityImageUrl),\n/* harmony export */   isValidFilename: () => (/* binding */ isValidFilename),\n/* harmony export */   parseAssetFilename: () => (/* binding */ parseAssetFilename),\n/* harmony export */   parseAssetId: () => (/* binding */ parseAssetId),\n/* harmony export */   parseAssetUrl: () => (/* binding */ parseAssetUrl),\n/* harmony export */   parseFileAssetId: () => (/* binding */ parseFileAssetId),\n/* harmony export */   parseFileAssetUrl: () => (/* binding */ parseFileAssetUrl),\n/* harmony export */   parseImageAssetId: () => (/* binding */ parseImageAssetId),\n/* harmony export */   parseImageAssetUrl: () => (/* binding */ parseImageAssetUrl),\n/* harmony export */   tryGetAssetDocumentId: () => (/* binding */ tryGetAssetDocumentId),\n/* harmony export */   tryGetAssetPath: () => (/* binding */ tryGetAssetPath),\n/* harmony export */   tryGetExtension: () => (/* binding */ tryGetExtension),\n/* harmony export */   tryGetFile: () => (/* binding */ tryGetFile),\n/* harmony export */   tryGetFileAsset: () => (/* binding */ tryGetFileAsset),\n/* harmony export */   tryGetIdFromString: () => (/* binding */ tryGetIdFromString),\n/* harmony export */   tryGetImage: () => (/* binding */ tryGetImage),\n/* harmony export */   tryGetImageAsset: () => (/* binding */ tryGetImageAsset),\n/* harmony export */   tryGetImageDimensions: () => (/* binding */ tryGetImageDimensions),\n/* harmony export */   tryGetProject: () => (/* binding */ tryGetProject),\n/* harmony export */   tryGetUrlFilename: () => (/* binding */ tryGetUrlFilename),\n/* harmony export */   tryGetUrlPath: () => (/* binding */ tryGetUrlPath)\n/* harmony export */ });\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\n/**\r\n * Default crop (equals to \"whole image\")\r\n */\nvar DEFAULT_CROP = /*#__PURE__*/Object.freeze({\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0\n});\n/**\r\n * Default hotspot (equals to horizontal/vertical center, full size of image)\r\n */\n\nvar DEFAULT_HOTSPOT = /*#__PURE__*/Object.freeze({\n  x: 0.5,\n  y: 0.5,\n  height: 1,\n  width: 1\n});\n/**\r\n * Returns cloned version of the default crop (prevents accidental mutations)\r\n *\r\n * @returns Default image crop object\r\n */\n\nvar getDefaultCrop = function getDefaultCrop() {\n  return _extends({}, DEFAULT_CROP);\n};\n/**\r\n * Returns cloned version of the default hotspot (prevents accidental mutations)\r\n *\r\n * @returns Default image hotspot object\r\n */\n\nvar getDefaultHotspot = function getDefaultHotspot() {\n  return _extends({}, DEFAULT_HOTSPOT);\n};\n/**\r\n * Returns whether or not the passed crop has the default values for a crop region\r\n *\r\n * @param crop The crop to return whether or not is the default crop\r\n * @returns True if passed crop matches default, false otherwise\r\n */\n\nvar isDefaultCrop = function isDefaultCrop(crop) {\n  var top = crop.top,\n      bottom = crop.bottom,\n      left = crop.left,\n      right = crop.right;\n  var defaultTop = DEFAULT_CROP.top,\n      defaultBottom = DEFAULT_CROP.bottom,\n      defaultLeft = DEFAULT_CROP.left,\n      defaultRight = DEFAULT_CROP.right;\n  return top === defaultTop && bottom === defaultBottom && left === defaultLeft && right === defaultRight;\n};\n/**\r\n * Returns whether or not the passed hotspot has the default values for a hotspot region\r\n *\r\n * @param hotspot The hotspot to return whether or not is the default hotspot\r\n * @returns True if passed hotspot matches default, false otherwise\r\n */\n\nvar isDefaultHotspot = function isDefaultHotspot(hotspot) {\n  var x = hotspot.x,\n      y = hotspot.y,\n      width = hotspot.width,\n      height = hotspot.height;\n  var defaultX = DEFAULT_HOTSPOT.x,\n      defaultY = DEFAULT_HOTSPOT.y,\n      defaultWidth = DEFAULT_HOTSPOT.width,\n      defaultHeight = DEFAULT_HOTSPOT.height;\n  return x === defaultX && y === defaultY && width === defaultWidth && height === defaultHeight;\n};\n\n/**\r\n * Error type thrown when the library fails to resolve a value, such as an asset ID,\r\n * filename or project ID/dataset information.\r\n *\r\n * The `input` property holds the value passed as the input, which failed to be\r\n * resolved to something meaningful.\r\n */\nvar UnresolvableError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(UnresolvableError, _Error);\n\n  function UnresolvableError(inputSource, message) {\n    var _this;\n\n    if (message === void 0) {\n      message = 'Failed to resolve asset ID from source';\n    }\n\n    _this = _Error.call(this, message) || this;\n    _this.unresolvable = true;\n    _this.input = inputSource;\n    return _this;\n  }\n\n  return UnresolvableError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\r\n * Checks whether or not an error instance is of type UnresolvableError\r\n *\r\n * @param err - Error to check for unresolvable error type\r\n * @returns True if the passed error instance appears to be an unresolveable error\r\n */\n\nfunction isUnresolvableError(err) {\n  var error = err;\n  return Boolean(error.unresolvable && 'input' in error);\n}\n/**\r\n * Returns a getter which returns `undefined` instead of throwing,\r\n * if encountering an `UnresolvableError`\r\n *\r\n * @param method - Function to use as resolver\r\n * @returns Function that returns `undefined` if passed resolver throws UnresolvableError\r\n * @internal\r\n */\n\nfunction getForgivingResolver(method) {\n  return function () {\n    try {\n      return method.apply(void 0, arguments);\n    } catch (err) {\n      if (isUnresolvableError(err)) {\n        return undefined;\n      }\n\n      throw err;\n    }\n  };\n}\n\n/**\r\n * @internal\r\n */\nvar cdnUrl = 'https://cdn.sanity.io';\n/**\r\n * @internal\r\n */\n\nvar fileAssetFilenamePattern = /^([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+\\.[a-z0-9]+$/;\n/**\r\n * @internal\r\n */\n\nvar fileAssetIdPattern = /^file-([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-[a-z0-9]+$/;\n/**\r\n * @internal\r\n */\n\nvar imageAssetFilenamePattern = /^([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})-\\d+x\\d+\\.[a-z0-9]+$/;\n/**\r\n * @internal\r\n */\n\nvar imageAssetIdPattern = /^image-([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-\\d+x\\d+-[a-z0-9]+$/;\n/**\r\n * @internal\r\n */\n\nvar pathPattern = /^(images|files)\\/([a-z0-9]+)\\/([a-z0-9][-\\w]*)\\//;\n/**\r\n * @internal\r\n */\n\nvar idPattern = /^(?:image-(?:[a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-\\d+x\\d+-[a-z0-9]+|file-(?:[a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-[a-z0-9]+)$/;\n/**\r\n * For use in cases where the project and dataset doesn't really matter\r\n *\r\n * @internal\r\n */\n\nvar dummyProject = {\n  projectId: 'a',\n  dataset: 'b'\n};\n\n/**\r\n * Checks whether or not the given source is a Sanity reference\r\n * (an object containing _ref string key)\r\n *\r\n * @param ref - Possible reference\r\n * @returns Whether or not the passed object is a reference\r\n */\n\nfunction isReference(ref) {\n  return isObject(ref) && typeof ref._ref === 'string';\n}\n/**\r\n * Checks whether or not the given source is an asset ID stub\r\n * (an object containing an `_id` property)\r\n *\r\n * @param stub - Possible asset id stub\r\n * @returns Whether or not the passed object is an object id stub\r\n */\n\nfunction isAssetIdStub(stub) {\n  return isObject(stub) && typeof stub._id === 'string';\n}\n/**\r\n * Checks whether or not the given source is an asset path stub\r\n * (an object containing a `path` property)\r\n *\r\n * @param stub - Possible asset path stub\r\n * @returns Whether or not the passed object is an object path stub\r\n */\n\nfunction isAssetPathStub(stub) {\n  return isObject(stub) && typeof stub.path === 'string';\n}\n/**\r\n * Checks whether or not the given source is an asset URL stub\r\n * (an object containing a `url` property)\r\n *\r\n * @param stub - Possible asset url stub\r\n * @returns Whether or not the passed object is an object url stub\r\n */\n\nfunction isAssetUrlStub(stub) {\n  return isObject(stub) && typeof stub.url === 'string';\n}\n/**\r\n * Checks whether or not the given source is a (partial) sanity file asset document.\r\n * Only checks the `_type` property, all other properties _may_ be missing\r\n *\r\n * @param src - Source to check\r\n * @returns Whether or not the given source is a file asset\r\n */\n\nfunction isSanityFileAsset(src) {\n  return isObject(src) && src._type === 'sanity.fileAsset';\n}\n/**\r\n * Checks whether or not the given source is a (partial) sanity image asset document.\r\n * Only checks the `_type` property, all other properties _may_ be missing\r\n *\r\n * @param src - Source to check\r\n * @returns Whether or not the given source is a file asset\r\n */\n\nfunction isSanityImageAsset(src) {\n  return isObject(src) && src._type === 'sanity.imageAsset';\n}\n/**\r\n * Checks whether or not the given document ID is a valid Sanity image asset document ID\r\n *\r\n * @param documentId - Document ID to check\r\n * @returns Whether or not the given document ID is a Sanity image asset document ID\r\n */\n\nfunction isImageAssetId(documentId) {\n  return imageAssetIdPattern.test(documentId);\n}\n/**\r\n * Checks whether or not the given document ID is a valid Sanity file asset document ID\r\n *\r\n * @param documentId - Document ID to check\r\n * @returns Whether or not the given document ID is a Sanity file asset document ID\r\n */\n\nfunction isFileAssetId(documentId) {\n  return fileAssetIdPattern.test(documentId);\n}\n/**\r\n * Checks whether or not the given document ID is a valid Sanity asset document ID (file or image)\r\n *\r\n * @param documentId - Document ID to check\r\n * @returns Whether or not the given document ID is a Sanity asset document ID (file or image)\r\n */\n\nfunction isAssetId(documentId) {\n  return isImageAssetId(documentId) || isFileAssetId(documentId);\n}\n/**\r\n * Checks whether or not the given source is an asset object stub\r\n *\r\n * @param stub - Possible asset object stub\r\n * @returns Whether or not the passed object is an object stub\r\n */\n\nfunction isAssetObjectStub(stub) {\n  var item = stub;\n  return isObject(item) && item.asset && typeof item.asset === 'object';\n}\n/**\r\n * Checks whether or not the passed object is an object (and not `null`)\r\n *\r\n * @param obj Item to check whether or not is an object\r\n * @returns Whether or not `obj` is an object\r\n * @internal\r\n */\n\nfunction isObject(obj) {\n  return obj !== null && !Array.isArray(obj) && typeof obj === 'object';\n}\n\n/**\r\n * Builds the base image path from the minimal set of parts required to assemble it\r\n *\r\n * @param asset - An asset-like shape defining ID, dimensions and extension\r\n * @param options - Project ID and dataset the image belongs to, along with other options\r\n * @return string\r\n */\n\nfunction buildImagePath(asset, options) {\n  var projectId = (options == null ? void 0 : options.projectId) || asset.projectId;\n  var dataset = (options == null ? void 0 : options.dataset) || asset.dataset;\n\n  if (!projectId || !dataset) {\n    throw new Error('Project details (projectId and dataset) required to resolve path for image');\n  }\n\n  var dimensions = 'metadata' in asset ? asset.metadata.dimensions : {\n    width: asset.width,\n    height: asset.height\n  };\n  var originalFilename = 'originalFilename' in asset ? asset.originalFilename : undefined;\n  var assetId = asset.assetId,\n      extension = asset.extension,\n      vanityFilename = asset.vanityFilename;\n  var width = dimensions.width,\n      height = dimensions.height;\n  var vanity = getVanityStub(originalFilename, vanityFilename, options);\n  return \"images/\" + projectId + \"/\" + dataset + \"/\" + assetId + \"-\" + width + \"x\" + height + \".\" + extension + vanity;\n}\n/**\r\n * Builds the base image URL from the minimal set of parts required to assemble it\r\n *\r\n * @param asset - An asset-like shape defining ID, dimensions and extension\r\n * @param options - Project ID and dataset the image belongs to\r\n * @return string\r\n */\n\nfunction buildImageUrl(asset, options) {\n  return cdnUrl + \"/\" + buildImagePath(asset, options);\n}\n/**\r\n * Builds the base file path from the minimal set of parts required to assemble it\r\n *\r\n * @param asset - An asset-like shape defining ID, dimensions and extension\r\n * @param options - Project ID and dataset the file belongs to, along with other options\r\n * @return string\r\n */\n\nfunction buildFilePath(asset, options) {\n  var projectId = (options == null ? void 0 : options.projectId) || asset.projectId;\n  var dataset = (options == null ? void 0 : options.dataset) || asset.dataset;\n\n  if (!projectId || !dataset) {\n    throw new Error('Project details (projectId and dataset) required to resolve path for file');\n  }\n\n  var originalFilename = 'originalFilename' in asset ? asset.originalFilename : undefined;\n  var assetId = asset.assetId,\n      extension = asset.extension,\n      vanityFilename = asset.vanityFilename;\n  var vanity = getVanityStub(originalFilename, vanityFilename, options);\n  return \"files/\" + projectId + \"/\" + dataset + \"/\" + assetId + \".\" + extension + vanity;\n}\n/**\r\n * Builds the base file URL from the minimal set of parts required to assemble it\r\n *\r\n * @param asset - An asset-like shape defining ID and extension\r\n * @param options - Project ID and dataset the file belongs to, along with other options\r\n * @return string\r\n */\n\nfunction buildFileUrl(asset, project) {\n  return cdnUrl + \"/\" + buildFilePath(asset, project);\n}\n/**\r\n * Checks whether or not the given URL contains an asset path\r\n *\r\n * @param url - URL or path name\r\n * @returns Whether or not it contained an asset path\r\n */\n\nfunction hasPath(urlOrPath) {\n  return pathPattern.test(tryGetUrlPath(urlOrPath) || '');\n}\n/**\r\n * Tries to get the asset path from a given asset source\r\n *\r\n * @param src - The source image to infer an asset path from\r\n * @returns A path if resolvable, undefined otherwise\r\n */\n\n\nfunction tryGetAssetPath(src) {\n  if (isAssetObjectStub(src)) {\n    return tryGetAssetPath(src.asset);\n  }\n\n  if (isReference(src)) {\n    return undefined;\n  }\n\n  if (typeof src === 'string') {\n    return hasPath(src) ? getUrlPath(src) : undefined;\n  }\n\n  if (isAssetPathStub(src)) {\n    return src.path;\n  }\n\n  if (isAssetUrlStub(src)) {\n    return getUrlPath(src.url);\n  }\n\n  return undefined;\n}\n/**\r\n * Strips the CDN URL and query params from a URL, eg:\r\n * `https://cdn.sanity.io/images/project/dataset/filename-200x200.jpg?foo=bar` =>\r\n * `images/project/dataset/filename-200x200.jpg`\r\n *\r\n * @param url - URL to get path name from\r\n * @returns The path of a CDN URL\r\n * @throws If URL is not a valid Sanity asset URL\r\n */\n\nfunction getUrlPath(url) {\n  if (pathPattern.test(url)) {\n    // Already just a path\n    return url;\n  }\n\n  if (!url.startsWith(cdnUrl + \"/\")) {\n    throw new UnresolvableError(\"Failed to resolve path from URL \\\"\" + url + \"\\\"\");\n  }\n\n  var qsPos = url.indexOf('?');\n  var toIndex = qsPos === -1 ? undefined : qsPos;\n  return url.slice(cdnUrl.length + 1, toIndex);\n}\n/**\r\n * See {@link getUrlPath}\r\n *\r\n * @inheritFrom {@link getUrlPath}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetUrlPath = /*#__PURE__*/getForgivingResolver(getUrlPath);\n/**\r\n * Strips the CDN URL, path and query params from a URL, eg:\r\n * `https://cdn.sanity.io/images/project/dataset/filename-200x200.jpg?foo=bar` =>\r\n * `filename-200x200.jpg`\r\n *\r\n * @param url - URL to get filename from\r\n * @returns The filename of an URL, if URL matches the CDN URL\r\n * @throws If URL is not a valid Sanity asset URL\r\n */\n\nfunction getUrlFilename(url) {\n  var path = tryGetUrlPath(url) || url;\n  var filename = path.replace(/^(images|files)\\/[a-z0-9]+\\/[a-z0-9][-\\w]\\/*/, '');\n\n  if (!isValidFilename(filename)) {\n    throw new UnresolvableError(\"Failed to resolve filename from URL \\\"\" + url + \"\\\"\");\n  }\n\n  return filename;\n}\n/**\r\n * See {@link getUrlFilename}\r\n *\r\n * @inheritFrom {@link getUrlFilename}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetUrlFilename = /*#__PURE__*/getForgivingResolver(getUrlFilename);\n/**\r\n * Checks whether or not a given filename matches the expected Sanity asset filename pattern\r\n *\r\n * @param filename - Filename to check for validity\r\n * @returns Whether or not the specified filename is valid\r\n */\n\nfunction isValidFilename(filename) {\n  return fileAssetFilenamePattern.test(filename) || imageAssetFilenamePattern.test(filename);\n}\n/**\r\n * Get the \"path stub\" at the end of the path, if the user hasn't explicitly opted out of this behavior\r\n */\n\nfunction getVanityStub(originalFilename, vanityFilename, options) {\n  var vanity = vanityFilename || originalFilename;\n  return (options == null ? void 0 : options.useVanityName) === false || !vanity ? '' : \"/\" + vanity;\n}\n\n/**\r\n * @internal\r\n */\n\nvar exampleFileId = 'file-027401f31c3ac1e6d78c5d539ccd1beff72b9b11-pdf';\n/**\r\n * @internal\r\n */\n\nvar exampleImageId = 'image-027401f31c3ac1e6d78c5d539ccd1beff72b9b11-2000x3000-jpg';\n/**\r\n * Parses a Sanity asset document ID into individual parts (type, id, extension, width/height etc)\r\n *\r\n * @param documentId - Document ID to parse into named parts\r\n * @returns Object of named properties\r\n * @throws If document ID is invalid\r\n */\n\nfunction parseAssetId(documentId) {\n  if (imageAssetIdPattern.test(documentId)) {\n    return parseImageAssetId(documentId);\n  }\n\n  if (fileAssetIdPattern.test(documentId)) {\n    return parseFileAssetId(documentId);\n  }\n\n  throw new Error(\"Invalid image/file asset ID: \" + documentId);\n}\n/**\r\n * Parses a Sanity file asset document ID into individual parts (type, id, extension)\r\n *\r\n * @param documentId - File asset document ID to parse into named parts\r\n * @returns Object of named properties\r\n * @throws If document ID invalid\r\n */\n\nfunction parseFileAssetId(documentId) {\n  if (!fileAssetIdPattern.test(documentId)) {\n    throw new Error(\"Malformed file asset ID '\" + documentId + \"'. Expected an id like \\\"\" + exampleFileId + \"\\\"\");\n  }\n\n  var _documentId$split = documentId.split('-'),\n      assetId = _documentId$split[1],\n      extension = _documentId$split[2];\n\n  return {\n    type: 'file',\n    assetId: assetId,\n    extension: extension\n  };\n}\n/**\r\n * Parses a Sanity image asset document ID into individual parts (type, id, extension, width, height)\r\n *\r\n * @param documentId - Image asset document ID to parse into named parts\r\n * @returns Object of named properties\r\n * @throws If document ID invalid\r\n */\n\nfunction parseImageAssetId(documentId) {\n  var _documentId$split2 = documentId.split('-'),\n      assetId = _documentId$split2[1],\n      dimensionString = _documentId$split2[2],\n      extension = _documentId$split2[3];\n\n  var _split$map = (dimensionString || '').split('x').map(Number),\n      width = _split$map[0],\n      height = _split$map[1];\n\n  if (!assetId || !dimensionString || !extension || !(width > 0) || !(height > 0)) {\n    throw new Error(\"Malformed asset ID '\" + documentId + \"'. Expected an id like \\\"\" + exampleImageId + \"\\\".\");\n  }\n\n  return {\n    type: 'image',\n    assetId: assetId,\n    width: width,\n    height: height,\n    extension: extension\n  };\n}\n/**\r\n * Parses a Sanity asset filename into individual parts (type, id, extension, width, height)\r\n *\r\n * @param filename - Filename to parse into named parts\r\n * @returns Object of named properties\r\n * @throws If image/filename is invalid\r\n */\n\nfunction parseAssetFilename(filename) {\n  var file = tryGetUrlFilename(filename) || '';\n\n  if (!isValidFilename(file)) {\n    throw new Error(\"Invalid image/file asset filename: \" + filename);\n  }\n\n  try {\n    var type = imageAssetFilenamePattern.test(file) ? 'image' : 'file';\n    var assetId = file.replace(/\\.([a-z0-9+]+)$/i, '-$1');\n    return parseAssetId(type + \"-\" + assetId);\n  } catch (err) {\n    throw new Error(\"Invalid image/file asset filename: \" + filename);\n  }\n}\n/**\r\n * Parses a full Sanity asset URL into individual parts\r\n * (type, project ID, dataset, id, extension, width, height)\r\n *\r\n * @param url - Full URL to parse into named parts\r\n * @returns Object of named properties\r\n * @throws If URL is invalid or not a Sanity asset URL\r\n */\n\nfunction parseAssetUrl(url) {\n  if (!url.startsWith(cdnUrl)) {\n    throw new Error(\"URL is not a valid Sanity asset URL: \" + url);\n  }\n\n  var path = url.slice(cdnUrl.length).replace(/^\\/+/, '');\n\n  var _ref = path.match(pathPattern) || [],\n      projectPath = _ref[0],\n      projectId = _ref[2],\n      dataset = _ref[3];\n\n  if (!projectId || !dataset) {\n    throw new Error(\"URL is not a valid Sanity asset URL: \" + url);\n  }\n\n  var _path$slice$split = path.slice(projectPath.length).split('/'),\n      filename = _path$slice$split[0],\n      vanityFilename = _path$slice$split[1];\n\n  var parsed = parseAssetFilename(filename);\n  return _extends({}, parsed, {\n    projectId: projectId,\n    dataset: dataset,\n    vanityFilename: vanityFilename\n  });\n}\n/**\r\n * Parses a full Sanity image asset URL into individual parts\r\n * (type, project ID, dataset, id, extension, width, height)\r\n *\r\n * @param url - Full URL to parse into named parts\r\n * @returns Object of named properties\r\n * @throws If URL is invalid or not a Sanity image asset URL\r\n */\n\nfunction parseImageAssetUrl(url) {\n  var parsed = parseAssetUrl(url);\n\n  if (parsed.type !== 'image') {\n    throw new Error(\"URL is not a valid Sanity image asset URL: \" + url);\n  }\n\n  return parsed;\n}\n/**\r\n * Parses a full Sanity file asset URL into individual parts\r\n * (type, project ID, dataset, id, extension, width, height)\r\n *\r\n * @param url - Full URL to parse into named parts\r\n * @returns Object of named properties\r\n * @throws If URL is invalid or not a Sanity file asset URL\r\n */\n\nfunction parseFileAssetUrl(url) {\n  var parsed = parseAssetUrl(url);\n\n  if (parsed.type !== 'file') {\n    throw new Error(\"URL is not a valid Sanity file asset URL: \" + url);\n  }\n\n  return parsed;\n}\n/**\r\n * Validates that a given URL is a Sanity asset URL, and returns the asset type if valid.\r\n *\r\n * @param url URL to extract asset type from\r\n * @returns Asset type if valid URL, false otherwise\r\n * @internal\r\n */\n\nfunction getAssetUrlType(url) {\n  try {\n    return parseAssetUrl(url).type;\n  } catch (err) {\n    return false;\n  }\n}\n\n/**\r\n * Returns the width, height and aspect ratio of a passed image asset, from any\r\n * inferrable structure (id, url, path, asset document, image object etc)\r\n *\r\n * @param src - Input source (image object, asset, reference, id, url, path)\r\n * @returns Object with width, height and aspect ratio properties\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed image source could not be resolved to an asset ID\r\n */\n\nfunction getImageDimensions(src) {\n  var imageId = getAssetDocumentId(src);\n\n  var _parseImageAssetId = parseImageAssetId(imageId),\n      width = _parseImageAssetId.width,\n      height = _parseImageAssetId.height;\n\n  var aspectRatio = width / height;\n  return {\n    width: width,\n    height: height,\n    aspectRatio: aspectRatio\n  };\n}\n/**\r\n * See {@link getImageDimensions}\r\n *\r\n * @inheritFrom {@link getImageDimensions}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetImageDimensions = /*#__PURE__*/getForgivingResolver(getImageDimensions);\n/**\r\n * Returns the file extension for a given asset\r\n *\r\n * @param src - Input source (file/image object, asset, reference, id, url, path)\r\n * @returns The file extension, if resolvable (no `.` included)\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed asset source could not be resolved to an asset ID\r\n */\n\nfunction getExtension(src) {\n  return isFileSource(src) ? getFile(src, dummyProject).asset.extension : getImage(src, dummyProject).asset.extension;\n}\n/**\r\n * See {@link getExtension}\r\n *\r\n * @inheritFrom {@link getExtension}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetExtension = /*#__PURE__*/getForgivingResolver(getExtension);\n/**\r\n * Tries to resolve an image object with as much information as possible,\r\n * from any inferrable structure (id, url, path, image object etc)\r\n *\r\n * @param src - Input source (image object, asset, reference, id, url, path)\r\n * @param project Project ID and dataset the image belongs to\r\n * @returns Image object\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed image source could not be resolved to an asset ID\r\n */\n\nfunction getImage(src, project) {\n  var projectDetails = project || tryGetProject(src);\n  var asset = getImageAsset(src, projectDetails);\n  var img = src;\n  return {\n    asset: asset,\n    crop: img.crop || getDefaultCrop(),\n    hotspot: img.hotspot || getDefaultHotspot()\n  };\n}\n/**\r\n * See {@link getImage}\r\n *\r\n * @inheritFrom {@link getImage}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetImage = /*#__PURE__*/getForgivingResolver(getImage);\n/**\r\n * Tries to resolve a (partial) image asset document with as much information as possible,\r\n * from any inferrable structure (id, url, path, image object etc)\r\n *\r\n * @param src - Input source (image object, asset, reference, id, url, path)\r\n * @param project - Project ID and dataset the image belongs to\r\n * @returns Image asset document\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed image source could not be resolved to an asset ID\r\n */\n\nfunction getImageAsset(src, project) {\n  var projectDetails = project || getProject(src);\n\n  var pathOptions = _extends({}, projectDetails, {\n    useVanityName: false\n  });\n\n  var _id = getAssetDocumentId(src);\n\n  var sourceObj = src;\n  var source = sourceObj.asset || src;\n  var metadata = source.metadata || {};\n\n  var _parseImageAssetId2 = parseImageAssetId(_id),\n      assetId = _parseImageAssetId2.assetId,\n      width = _parseImageAssetId2.width,\n      height = _parseImageAssetId2.height,\n      extension = _parseImageAssetId2.extension;\n\n  var aspectRatio = width / height;\n\n  var baseAsset = _extends({}, isSanityImageAsset(src) ? src : {}, {\n    _id: _id,\n    _type: 'sanity.imageAsset',\n    assetId: assetId,\n    extension: extension,\n    metadata: _extends({}, metadata, {\n      dimensions: {\n        width: width,\n        height: height,\n        aspectRatio: aspectRatio\n      }\n    }),\n    // Placeholders, overwritten below\n    url: '',\n    path: ''\n  });\n\n  return _extends({}, baseAsset, {\n    path: buildImagePath(baseAsset, pathOptions),\n    url: buildImageUrl(baseAsset, pathOptions)\n  });\n}\n/**\r\n * See {@link getImageAsset}\r\n *\r\n * @inheritFrom {@link getImageAsset}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetImageAsset = /*#__PURE__*/getForgivingResolver(getImageAsset);\n/**\r\n * Tries to resolve an file object with as much information as possible,\r\n * from any inferrable structure (id, url, path, file object etc)\r\n *\r\n * @param src - Input source (file object, asset, reference, id, url, path)\r\n * @param project Project ID and dataset the file belongs to\r\n * @returns File object\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed file source could not be resolved to an asset ID\r\n */\n\nfunction getFile(src, project) {\n  var projectDetails = project || tryGetProject(src);\n  var asset = getFileAsset(src, projectDetails);\n  return {\n    asset: asset\n  };\n}\n/**\r\n * See {@link getFile}\r\n *\r\n * @inheritFrom {@link getFile}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetFile = /*#__PURE__*/getForgivingResolver(getFile);\n/**\r\n * Tries to resolve a (partial) file asset document with as much information as possible,\r\n * from any inferrable structure (id, url, path, file object etc)\r\n *\r\n * @param src - Input source (file object, asset, reference, id, url, path)\r\n * @param options - Project ID and dataset the file belongs to, along with other options\r\n * @returns File asset document\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed file source could not be resolved to an asset ID\r\n */\n\nfunction getFileAsset(src, options) {\n  var projectDetails = _extends({}, options || getProject(src), {\n    useVanityName: false\n  });\n\n  var _id = getAssetDocumentId(src);\n\n  var sourceObj = src;\n  var source = sourceObj.asset || src;\n\n  var _parseFileAssetId = parseFileAssetId(_id),\n      assetId = _parseFileAssetId.assetId,\n      extension = _parseFileAssetId.extension;\n\n  var baseAsset = _extends({}, isSanityFileAsset(src) ? src : {}, {\n    _id: _id,\n    _type: 'sanity.fileAsset',\n    assetId: assetId,\n    extension: extension,\n    metadata: source.metadata || {},\n    // Placeholders, overwritten below\n    url: '',\n    path: ''\n  });\n\n  return _extends({}, baseAsset, {\n    path: buildFilePath(baseAsset, projectDetails),\n    url: buildFileUrl(baseAsset, projectDetails)\n  });\n}\n/**\r\n * See {@link getFileAsset}\r\n *\r\n * @inheritFrom {@link getFileAsset}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetFileAsset = /*#__PURE__*/getForgivingResolver(getFileAsset);\n/**\r\n * Tries to resolve the asset document ID from any inferrable structure\r\n *\r\n * @param src - Input source (image/file object, asset, reference, id, url, path)\r\n * @returns The asset document ID\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed asset source could not be resolved to an asset document ID\r\n */\n\nfunction getAssetDocumentId(src) {\n  var source = isAssetObjectStub(src) ? src.asset : src;\n  var id = '';\n\n  if (typeof source === 'string') {\n    id = getIdFromString(source);\n  } else if (isReference(source)) {\n    id = source._ref;\n  } else if (isAssetIdStub(source)) {\n    id = source._id;\n  } else if (isAssetPathStub(source)) {\n    id = idFromUrl(cdnUrl + \"/\" + source.path);\n  } else if (isAssetUrlStub(source)) {\n    id = idFromUrl(source.url);\n  }\n\n  var hasId = id && idPattern.test(id);\n\n  if (!hasId) {\n    throw new UnresolvableError(src);\n  }\n\n  return id;\n}\n/**\r\n * See {@link getAssetDocumentId}\r\n *\r\n * @inheritFrom {@link getAssetDocumentId}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetAssetDocumentId = /*#__PURE__*/getForgivingResolver(getAssetDocumentId);\n/**\r\n * Tries to cooerce a string (ID, URL or path) to an image asset ID\r\n *\r\n * @param str - Input string (ID, URL or path)\r\n * @returns string\r\n *\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed image source could not be resolved to an asset ID\r\n */\n\nfunction getIdFromString(str) {\n  if (idPattern.test(str)) {\n    // Already an ID\n    return str;\n  }\n\n  if (str.indexOf(cdnUrl + \"/images\") === 0 || str.indexOf(cdnUrl + \"/files\") === 0) {\n    // Full URL\n    return idFromUrl(str);\n  }\n\n  if (pathPattern.test(str)) {\n    // Path\n    return idFromUrl(cdnUrl + \"/\" + str);\n  }\n\n  if (isFileAssetFilename(str)) {\n    // Just a filename (projectId/dataset irrelevant: just need asset ID)\n    return idFromUrl(cdnUrl + \"/files/a/b/\" + str);\n  }\n\n  if (isImageAssetFilename(str)) {\n    // Just a filename (projectId/dataset irrelevant: just need asset ID)\n    return idFromUrl(cdnUrl + \"/images/a/b/\" + str);\n  }\n\n  throw new UnresolvableError(str);\n}\n/**\r\n * See {@link getIdFromString}\r\n *\r\n * @inheritFrom {@link getIdFromString}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetIdFromString = /*#__PURE__*/getForgivingResolver(getIdFromString);\n/**\r\n * Converts from a full asset URL to just the asset document ID\r\n *\r\n * @param url - A full asset URL to convert\r\n * @returns string\r\n */\n\nfunction idFromUrl(url) {\n  var path = getUrlPath(url);\n\n  var _path$split = path.split('/'),\n      type = _path$split[0],\n      fileName = _path$split[3];\n\n  var prefix = type.replace(/s$/, '');\n  return prefix + \"-\" + fileName.replace(/\\./g, '-');\n}\n/**\r\n * Resolves project ID and dataset the image belongs to, based on full URL or path\r\n * @param source - Image URL or path\r\n * @returns object | undefined\r\n *\r\n * @throws {@link UnresolvableError}\r\n * Throws if passed image source could not be resolved to an asset ID\r\n */\n\n\nfunction getProject(src) {\n  var path = tryGetAssetPath(src);\n\n  if (!path) {\n    throw new UnresolvableError(src, 'Failed to resolve project ID and dataset from source');\n  }\n\n  var _ref = path.match(pathPattern) || [],\n      projectId = _ref[2],\n      dataset = _ref[3];\n\n  if (!projectId || !dataset) {\n    throw new UnresolvableError(src, 'Failed to resolve project ID and dataset from source');\n  }\n\n  return {\n    projectId: projectId,\n    dataset: dataset\n  };\n}\n/**\r\n * See {@link getProject}\r\n *\r\n * @inheritFrom {@link getProject}\r\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\r\n */\n\nvar tryGetProject = /*#__PURE__*/getForgivingResolver(getProject);\n/**\r\n * Returns whether or not the passed filename is a valid image asset filename\r\n *\r\n * @param filename - Filename to validate\r\n * @returns Whether or not the filename is an image asset filename\r\n */\n\nfunction isImageAssetFilename(filename) {\n  return imageAssetFilenamePattern.test(filename);\n}\n/**\r\n * Returns whether or not the passed filename is a valid file asset filename\r\n *\r\n * @param filename - Filename to validate\r\n * @returns Whether or not the filename is a file asset filename\r\n */\n\nfunction isFileAssetFilename(filename) {\n  return fileAssetFilenamePattern.test(filename);\n}\n/**\r\n * Returns whether or not the passed filename is a valid file or image asset filename\r\n *\r\n * @param filename - Filename to validate\r\n * @returns Whether or not the filename is an asset filename\r\n */\n\nfunction isAssetFilename(filename) {\n  return isImageAssetFilename(filename) || isFileAssetFilename(filename);\n}\n/**\r\n * Return whether or not the passed source is a file source\r\n *\r\n * @param src - Source to check\r\n * @returns Whether or not the given source is a file source\r\n */\n\nfunction isFileSource(src) {\n  var assetId = tryGetAssetDocumentId(src);\n  return assetId ? assetId.startsWith('file-') : false;\n}\n/**\r\n * Return whether or not the passed source is an image source\r\n *\r\n * @param src - Source to check\r\n * @returns Whether or not the given source is an image source\r\n */\n\nfunction isImageSource(src) {\n  var assetId = tryGetAssetDocumentId(src);\n  return assetId ? assetId.startsWith('image-') : false;\n}\n\n/**\r\n * Checks whether or not a given URL is a valid Sanity asset URL\r\n *\r\n * @param url URL to test\r\n * @returns True if url is a valid Sanity asset URL, false otherwise\r\n */\n\nfunction isSanityAssetUrl(url) {\n  return getAssetUrlType(url) !== false;\n}\n/**\r\n * Checks whether or not a given URL is a valid Sanity image asset URL\r\n *\r\n * @param url URL to test\r\n * @returns True if url is a valid Sanity image asset URL, false otherwise\r\n */\n\nfunction isSanityImageUrl(url) {\n  return getAssetUrlType(url) === 'image';\n}\n/**\r\n * Checks whether or not a given URL is a valid Sanity file asset URL\r\n *\r\n * @param url URL to test\r\n * @returns True if url is a valid Sanity file asset URL, false otherwise\r\n */\n\nfunction isSanityFileUrl(url) {\n  return getAssetUrlType(url) === 'file';\n}\n\n\n//# sourceMappingURL=asset-utils.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/asset-utils/dist/asset-utils.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/bifur-client/dist/esm/createClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sanity/bifur-client/dist/esm/createClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient)\n/* harmony export */ });\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/partition.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid */ \"(ssr)/./node_modules/nanoid/index.js\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n// at 1000 IDs per second ~4 million years needed in order to have a 1% probability of at least one collision.\n// => https://zelark.github.io/nano-id-cc/\nvar defaultGetNextRequestId = (0,nanoid__WEBPACK_IMPORTED_MODULE_0__.customAlphabet)('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-', 20);\nvar HEARTBEAT = '♥';\nfunction formatRequest(method, params, id) {\n    return JSON.stringify({\n        jsonrpc: '2.0',\n        method: method,\n        params: addApiVersion(params, 'v1'),\n        id: id,\n    });\n}\nfunction tryParse(input) {\n    try {\n        return [null, JSON.parse(input)];\n    }\n    catch (error) {\n        return error instanceof Error ? [error] : [new Error(\"\".concat(error))];\n    }\n}\nfunction addApiVersion(params, v) {\n    return __assign(__assign({}, params), { apiVersion: v });\n}\nvar createClient = function (connection$, options) {\n    if (options === void 0) { options = {}; }\n    var token$ = options.token$, _a = options.getNextRequestId, getNextRequestId = _a === void 0 ? defaultGetNextRequestId : _a;\n    var _b = (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.partition)(connection$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.switchMap)(function (connection) { return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.fromEvent)(connection, 'message'); })), function (event) { return event.data === HEARTBEAT; }), heartbeats$ = _b[0], responses$ = _b[1];\n    var parsedResponses$ = responses$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.mergeMap)(function (response) {\n        var _a = tryParse(response.data), err = _a[0], msg = _a[1];\n        if (err) {\n            console.warn('Unable to parse message: %s', err.message);\n            return rxjs__WEBPACK_IMPORTED_MODULE_4__.EMPTY;\n        }\n        if (!msg || !msg.jsonrpc) {\n            console.warn('Received empty or non-jsonrpc message: %s', msg);\n            return rxjs__WEBPACK_IMPORTED_MODULE_4__.EMPTY;\n        }\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(msg);\n    }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.share)());\n    var authedConnection$ = token$\n        ? (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.combineLatest)([token$, connection$]).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.distinctUntilChanged)(function (_a, _b) {\n            var oldToken = _a[0], oldSocket = _a[1];\n            var newToken = _b[0], newSocket = _b[1];\n            return oldToken === newToken && oldSocket === newSocket;\n        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.switchMap)(function (_a) {\n            var token = _a[0], ws = _a[1];\n            return token\n                ? call(ws, 'authorization', {\n                    authorization: \"Bearer \".concat(token),\n                }).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.take)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.mapTo)(ws))\n                : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(ws);\n        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.shareReplay)({ refCount: true, bufferSize: 1 }))\n        : connection$;\n    function call(ws, method, params) {\n        if (params === void 0) { params = {}; }\n        var requestId = getNextRequestId();\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.merge)(parsedResponses$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.filter)(function (rpcResult) { return rpcResult.id === requestId; }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(function (rpcResult) { return rpcResult.result; })), (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.defer)(function () {\n            ws.send(formatRequest(method, params, requestId));\n            return rxjs__WEBPACK_IMPORTED_MODULE_4__.EMPTY;\n        }));\n    }\n    // Will call the rpc method and return an observable that emits the first reply and then ends\n    function requestMethod(method, params) {\n        return authedConnection$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.take)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.mergeMap)(function (ws) { return call(ws, method, params).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.take)(1)); }));\n    }\n    // Will call the rpc method with the '_subscribe' suffix and return an observable of all received messages and\n    // keeps the subscription open forever/until unsubscribe\n    function requestSubscribe(method, params) {\n        return authedConnection$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.take)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.mergeMap)(function (ws) {\n            return call(ws, \"\".concat(method, \"_subscribe\"), params).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.take)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.mergeMap)(function (subscriptionId) {\n                return parsedResponses$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.filter)(function (message) {\n                    return message.method === \"\".concat(method, \"_subscription\") &&\n                        message.params.subscription === subscriptionId;\n                }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(function (message) { return message.params.result; }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.finalize)(function () {\n                    if (ws.readyState !== ws.CLOSED &&\n                        ws.readyState !== ws.CLOSING) {\n                        ws.send(formatRequest(\"\".concat(method, \"_unsubscribe\"), { subscriptionId: subscriptionId }, getNextRequestId()));\n                    }\n                }));\n            }));\n        }));\n    }\n    return {\n        // heartbeat$ is a stream of date objects representing when the \"last message was received\"\n        // it will keep the connection open until it is unsubscribed and can therefore be used to keep connection alive\n        // between requests\n        heartbeats: (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.merge)(authedConnection$, heartbeats$, responses$).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(function () { return new Date(); })),\n        listen: function (method, params) {\n            return requestSubscribe(method, params);\n        },\n        request: function (method, params) {\n            return requestMethod(method, params);\n        },\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/bifur-client/dist/esm/createClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/bifur-client/dist/esm/createConnect.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sanity/bifur-client/dist/esm/createConnect.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketError: () => (/* binding */ WebSocketError),\n/* harmony export */   createConnect: () => (/* binding */ createConnect)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar WebSocketError = /** @class */ (function (_super) {\n    __extends(WebSocketError, _super);\n    function WebSocketError(message, type, code, reason) {\n        var _this = _super.call(this, message) || this;\n        _this.type = type;\n        _this.code = code;\n        _this.reason = reason;\n        return _this;\n    }\n    return WebSocketError;\n}(Error));\n\nfunction createConnect(getWebsocketInstance) {\n    return function (url) {\n        return new rxjs__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {\n            var ws = getWebsocketInstance(url);\n            var didUnsubscribe = false;\n            var onOpen = function () {\n                subscriber.next(ws);\n            };\n            var onError = function () {\n                subscriber.error(new WebSocketError('WebSocket connection error', 'CONNECTION_ERROR'));\n            };\n            var onClose = function (ev) {\n                if (!didUnsubscribe) {\n                    subscriber.error(new WebSocketError('WebSocket connection error', 'CONNECTION_CLOSED', ev.code, ev.reason));\n                }\n                else {\n                    subscriber.complete();\n                }\n            };\n            ws.onopen = onOpen;\n            ws.onclose = onClose;\n            ws.onerror = onError;\n            return function () {\n                didUnsubscribe = true;\n                ws.close(1000, 'WebSockets connection closed by client');\n            };\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9iaWZ1ci1jbGllbnQvZGlzdC9lc20vY3JlYXRlQ29ubmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0I7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNpQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDeUI7QUFDbkI7QUFDUDtBQUNBLG1CQUFtQiw0Q0FBVTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvYmlmdXItY2xpZW50L2Rpc3QvZXNtL2NyZWF0ZUNvbm5lY3QuanM/YWNlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xudmFyIFdlYlNvY2tldEVycm9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhXZWJTb2NrZXRFcnJvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBXZWJTb2NrZXRFcnJvcihtZXNzYWdlLCB0eXBlLCBjb2RlLCByZWFzb24pIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbWVzc2FnZSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIF90aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICBfdGhpcy5yZWFzb24gPSByZWFzb247XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIFdlYlNvY2tldEVycm9yO1xufShFcnJvcikpO1xuZXhwb3J0IHsgV2ViU29ja2V0RXJyb3IgfTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0KGdldFdlYnNvY2tldEluc3RhbmNlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICh1cmwpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlKGZ1bmN0aW9uIChzdWJzY3JpYmVyKSB7XG4gICAgICAgICAgICB2YXIgd3MgPSBnZXRXZWJzb2NrZXRJbnN0YW5jZSh1cmwpO1xuICAgICAgICAgICAgdmFyIGRpZFVuc3Vic2NyaWJlID0gZmFsc2U7XG4gICAgICAgICAgICB2YXIgb25PcGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHN1YnNjcmliZXIubmV4dCh3cyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIG9uRXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlci5lcnJvcihuZXcgV2ViU29ja2V0RXJyb3IoJ1dlYlNvY2tldCBjb25uZWN0aW9uIGVycm9yJywgJ0NPTk5FQ1RJT05fRVJST1InKSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIG9uQ2xvc2UgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWRpZFVuc3Vic2NyaWJlKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXIuZXJyb3IobmV3IFdlYlNvY2tldEVycm9yKCdXZWJTb2NrZXQgY29ubmVjdGlvbiBlcnJvcicsICdDT05ORUNUSU9OX0NMT1NFRCcsIGV2LmNvZGUsIGV2LnJlYXNvbikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlci5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB3cy5vbm9wZW4gPSBvbk9wZW47XG4gICAgICAgICAgICB3cy5vbmNsb3NlID0gb25DbG9zZTtcbiAgICAgICAgICAgIHdzLm9uZXJyb3IgPSBvbkVycm9yO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBkaWRVbnN1YnNjcmliZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgd3MuY2xvc2UoMTAwMCwgJ1dlYlNvY2tldHMgY29ubmVjdGlvbiBjbG9zZWQgYnkgY2xpZW50Jyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/bifur-client/dist/esm/createConnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/bifur-client/dist/esm/errorCodes.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sanity/bifur-client/dist/esm/errorCodes.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_CODES: () => (/* binding */ ERROR_CODES)\n/* harmony export */ });\nvar ERROR_CODES;\n(function (ERROR_CODES) {\n    // Connection-level errors\n    ERROR_CODES[ERROR_CODES[\"BAD_REQUEST\"] = 4000] = \"BAD_REQUEST\";\n    ERROR_CODES[ERROR_CODES[\"UNAUTHORIZED\"] = 4001] = \"UNAUTHORIZED\";\n    ERROR_CODES[ERROR_CODES[\"NOT_FOUND\"] = 4004] = \"NOT_FOUND\";\n    // Application-level errors\n    ERROR_CODES[ERROR_CODES[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    ERROR_CODES[ERROR_CODES[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    ERROR_CODES[ERROR_CODES[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    ERROR_CODES[ERROR_CODES[\"SUBSCRIPTION_NOT_FOUND\"] = -32602] = \"SUBSCRIPTION_NOT_FOUND\";\n    ERROR_CODES[ERROR_CODES[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n})(ERROR_CODES || (ERROR_CODES = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9iaWZ1ci1jbGllbnQvZGlzdC9lc20vZXJyb3JDb2Rlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvYmlmdXItY2xpZW50L2Rpc3QvZXNtL2Vycm9yQ29kZXMuanM/NDA4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIEVSUk9SX0NPREVTO1xuKGZ1bmN0aW9uIChFUlJPUl9DT0RFUykge1xuICAgIC8vIENvbm5lY3Rpb24tbGV2ZWwgZXJyb3JzXG4gICAgRVJST1JfQ09ERVNbRVJST1JfQ09ERVNbXCJCQURfUkVRVUVTVFwiXSA9IDQwMDBdID0gXCJCQURfUkVRVUVTVFwiO1xuICAgIEVSUk9SX0NPREVTW0VSUk9SX0NPREVTW1wiVU5BVVRIT1JJWkVEXCJdID0gNDAwMV0gPSBcIlVOQVVUSE9SSVpFRFwiO1xuICAgIEVSUk9SX0NPREVTW0VSUk9SX0NPREVTW1wiTk9UX0ZPVU5EXCJdID0gNDAwNF0gPSBcIk5PVF9GT1VORFwiO1xuICAgIC8vIEFwcGxpY2F0aW9uLWxldmVsIGVycm9yc1xuICAgIEVSUk9SX0NPREVTW0VSUk9SX0NPREVTW1wiSU5WQUxJRF9SRVFVRVNUXCJdID0gLTMyNjAwXSA9IFwiSU5WQUxJRF9SRVFVRVNUXCI7XG4gICAgRVJST1JfQ09ERVNbRVJST1JfQ09ERVNbXCJNRVRIT0RfTk9UX0ZPVU5EXCJdID0gLTMyNjAxXSA9IFwiTUVUSE9EX05PVF9GT1VORFwiO1xuICAgIEVSUk9SX0NPREVTW0VSUk9SX0NPREVTW1wiSU5WQUxJRF9QQVJBTVNcIl0gPSAtMzI2MDJdID0gXCJJTlZBTElEX1BBUkFNU1wiO1xuICAgIEVSUk9SX0NPREVTW0VSUk9SX0NPREVTW1wiU1VCU0NSSVBUSU9OX05PVF9GT1VORFwiXSA9IC0zMjYwMl0gPSBcIlNVQlNDUklQVElPTl9OT1RfRk9VTkRcIjtcbiAgICBFUlJPUl9DT0RFU1tFUlJPUl9DT0RFU1tcIlBBUlNFX0VSUk9SXCJdID0gLTMyNzAwXSA9IFwiUEFSU0VfRVJST1JcIjtcbn0pKEVSUk9SX0NPREVTIHx8IChFUlJPUl9DT0RFUyA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/bifur-client/dist/esm/errorCodes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/bifur-client/dist/esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sanity/bifur-client/dist/esm/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_CODES: () => (/* reexport safe */ _errorCodes__WEBPACK_IMPORTED_MODULE_3__.ERROR_CODES),\n/* harmony export */   createClient: () => (/* reexport safe */ _createClient__WEBPACK_IMPORTED_MODULE_0__.createClient),\n/* harmony export */   fromSanityClient: () => (/* binding */ fromSanityClient),\n/* harmony export */   fromUrl: () => (/* binding */ fromUrl)\n/* harmony export */ });\n/* harmony import */ var _createClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createClient */ \"(ssr)/./node_modules/@sanity/bifur-client/dist/esm/createClient.js\");\n/* harmony import */ var _createConnect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createConnect */ \"(ssr)/./node_modules/@sanity/bifur-client/dist/esm/createConnect.js\");\n/* harmony import */ var _operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operators */ \"(ssr)/./node_modules/@sanity/bifur-client/dist/esm/operators.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var _errorCodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errorCodes */ \"(ssr)/./node_modules/@sanity/bifur-client/dist/esm/errorCodes.js\");\n\n\n\n\n\nvar id = function (arg) { return arg; };\n\n\nfunction fromUrl(url, options) {\n    if (options === void 0) { options = {}; }\n    var timeout = options.timeout, token$ = options.token$;\n    var connect = (0,_createConnect__WEBPACK_IMPORTED_MODULE_1__.createConnect)(function (url, protocols) {\n        return new window.WebSocket(url, protocols);\n    });\n    return (0,_createClient__WEBPACK_IMPORTED_MODULE_0__.createClient)(connect(url).pipe(timeout\n        ? (0,_operators__WEBPACK_IMPORTED_MODULE_2__.timeoutFirstWith)(timeout, (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.throwError)(function () {\n            return new Error(\"Timeout after \".concat(timeout, \" while establishing WebSockets connection\"));\n        }))\n        : id, (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.shareReplay)({ refCount: true }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.takeUntil)((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.fromEvent)(window, 'beforeunload'))), { token$: token$ });\n}\nfunction fromSanityClient(client) {\n    var _a = client.config(), dataset = _a.dataset, token = _a.token;\n    return fromUrl(client.getUrl(\"/socket/\".concat(dataset)).replace(/^http/, 'ws'), token ? { token$: (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.of)(token) } : {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9iaWZ1ci1jbGllbnQvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0U7QUFDRDtBQUNTO0FBQ1A7QUFDakQsMEJBQTBCO0FBQ2lCO0FBQ25CO0FBQ2pCO0FBQ1AsOEJBQThCO0FBQzlCO0FBQ0Esa0JBQWtCLDZEQUFhO0FBQy9CO0FBQ0EsS0FBSztBQUNMLFdBQVcsMkRBQVk7QUFDdkIsVUFBVSw0REFBZ0IsVUFBVSxnREFBVTtBQUM5QztBQUNBLFNBQVM7QUFDVCxjQUFjLDJEQUFXLEdBQUcsZ0JBQWdCLEdBQUcseURBQVMsQ0FBQywrQ0FBUyw4QkFBOEIsZ0JBQWdCO0FBQ2hIO0FBQ087QUFDUDtBQUNBLCtGQUErRixRQUFRLHdDQUFFLFVBQVUsSUFBSTtBQUN2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2hvdGVsLW1hbmFnZW1lbnQvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9iaWZ1ci1jbGllbnQvZGlzdC9lc20vaW5kZXguanM/MzhhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICcuL2NyZWF0ZUNsaWVudCc7XG5pbXBvcnQgeyBjcmVhdGVDb25uZWN0IH0gZnJvbSAnLi9jcmVhdGVDb25uZWN0JztcbmltcG9ydCB7IHRpbWVvdXRGaXJzdFdpdGggfSBmcm9tICcuL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBzaGFyZVJlcGxheSwgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgdGhyb3dFcnJvciwgZnJvbUV2ZW50LCBvZiB9IGZyb20gJ3J4anMnO1xudmFyIGlkID0gZnVuY3Rpb24gKGFyZykgeyByZXR1cm4gYXJnOyB9O1xuZXhwb3J0IHsgRVJST1JfQ09ERVMgfSBmcm9tICcuL2Vycm9yQ29kZXMnO1xuZXhwb3J0IHsgY3JlYXRlQ2xpZW50IH07XG5leHBvcnQgZnVuY3Rpb24gZnJvbVVybCh1cmwsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciB0aW1lb3V0ID0gb3B0aW9ucy50aW1lb3V0LCB0b2tlbiQgPSBvcHRpb25zLnRva2VuJDtcbiAgICB2YXIgY29ubmVjdCA9IGNyZWF0ZUNvbm5lY3QoZnVuY3Rpb24gKHVybCwgcHJvdG9jb2xzKSB7XG4gICAgICAgIHJldHVybiBuZXcgd2luZG93LldlYlNvY2tldCh1cmwsIHByb3RvY29scyk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNyZWF0ZUNsaWVudChjb25uZWN0KHVybCkucGlwZSh0aW1lb3V0XG4gICAgICAgID8gdGltZW91dEZpcnN0V2l0aCh0aW1lb3V0LCB0aHJvd0Vycm9yKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJUaW1lb3V0IGFmdGVyIFwiLmNvbmNhdCh0aW1lb3V0LCBcIiB3aGlsZSBlc3RhYmxpc2hpbmcgV2ViU29ja2V0cyBjb25uZWN0aW9uXCIpKTtcbiAgICAgICAgfSkpXG4gICAgICAgIDogaWQsIHNoYXJlUmVwbGF5KHsgcmVmQ291bnQ6IHRydWUgfSksIHRha2VVbnRpbChmcm9tRXZlbnQod2luZG93LCAnYmVmb3JldW5sb2FkJykpKSwgeyB0b2tlbiQ6IHRva2VuJCB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU2FuaXR5Q2xpZW50KGNsaWVudCkge1xuICAgIHZhciBfYSA9IGNsaWVudC5jb25maWcoKSwgZGF0YXNldCA9IF9hLmRhdGFzZXQsIHRva2VuID0gX2EudG9rZW47XG4gICAgcmV0dXJuIGZyb21VcmwoY2xpZW50LmdldFVybChcIi9zb2NrZXQvXCIuY29uY2F0KGRhdGFzZXQpKS5yZXBsYWNlKC9eaHR0cC8sICd3cycpLCB0b2tlbiA/IHsgdG9rZW4kOiBvZih0b2tlbikgfSA6IHt9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/bifur-client/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/bifur-client/dist/esm/operators.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/bifur-client/dist/esm/operators.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   timeoutFirstWith: () => (/* binding */ timeoutFirstWith)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/race.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/timer.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n\n\n// Operator that will time out using <withObservable> if <due> time passes before receiving the first value\nvar timeoutFirstWith = function (due, withObservable) {\n    return function (input$) {\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.race)(input$, (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.timer)(due).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.mergeMap)(function () { return withObservable; })));\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9iaWZ1ci1jbGllbnQvZGlzdC9lc20vb3BlcmF0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUM7QUFDTztBQUMxQztBQUNPO0FBQ1A7QUFDQSxlQUFlLDBDQUFJLFNBQVMsMkNBQUssV0FBVyx3REFBUSxlQUFlLHdCQUF3QjtBQUMzRjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG90ZWwtbWFuYWdlbWVudC8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2JpZnVyLWNsaWVudC9kaXN0L2VzbS9vcGVyYXRvcnMuanM/NjE5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0aW1lciwgcmFjZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWVyZ2VNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG4vLyBPcGVyYXRvciB0aGF0IHdpbGwgdGltZSBvdXQgdXNpbmcgPHdpdGhPYnNlcnZhYmxlPiBpZiA8ZHVlPiB0aW1lIHBhc3NlcyBiZWZvcmUgcmVjZWl2aW5nIHRoZSBmaXJzdCB2YWx1ZVxuZXhwb3J0IHZhciB0aW1lb3V0Rmlyc3RXaXRoID0gZnVuY3Rpb24gKGR1ZSwgd2l0aE9ic2VydmFibGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGlucHV0JCkge1xuICAgICAgICByZXR1cm4gcmFjZShpbnB1dCQsIHRpbWVyKGR1ZSkucGlwZShtZXJnZU1hcChmdW5jdGlvbiAoKSB7IHJldHVybiB3aXRoT2JzZXJ2YWJsZTsgfSkpKTtcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/bifur-client/dist/esm/operators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/builder.js":
/*!************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/builder.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ImageUrlBuilder = void 0;\nvar urlForImage_1 = __importStar(__webpack_require__(/*! ./urlForImage */ \"(ssr)/./node_modules/@sanity/image-url/lib/node/urlForImage.js\"));\nvar validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min'];\nvar validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy'];\nvar validAutoModes = ['format'];\nfunction isSanityModernClientLike(client) {\n    return client && 'config' in client ? typeof client.config === 'function' : false;\n}\nfunction isSanityClientLike(client) {\n    return client && 'clientConfig' in client ? typeof client.clientConfig === 'object' : false;\n}\nfunction rewriteSpecName(key) {\n    var specs = urlForImage_1.SPEC_NAME_TO_URL_NAME_MAPPINGS;\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var entry = specs_1[_i];\n        var specName = entry[0], param = entry[1];\n        if (key === specName || key === param) {\n            return specName;\n        }\n    }\n    return key;\n}\nfunction urlBuilder(options) {\n    // Did we get a modernish client?\n    if (isSanityModernClientLike(options)) {\n        // Inherit config from client\n        var _a = options.config(), apiUrl = _a.apiHost, projectId = _a.projectId, dataset = _a.dataset;\n        var apiHost = apiUrl || 'https://api.sanity.io';\n        return new ImageUrlBuilder(null, {\n            baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n            projectId: projectId,\n            dataset: dataset,\n        });\n    }\n    // Did we get a SanityClient?\n    var client = options;\n    if (isSanityClientLike(client)) {\n        // Inherit config from client\n        var _b = client.clientConfig, apiUrl = _b.apiHost, projectId = _b.projectId, dataset = _b.dataset;\n        var apiHost = apiUrl || 'https://api.sanity.io';\n        return new ImageUrlBuilder(null, {\n            baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n            projectId: projectId,\n            dataset: dataset,\n        });\n    }\n    // Or just accept the options as given\n    return new ImageUrlBuilder(null, options);\n}\nexports[\"default\"] = urlBuilder;\nvar ImageUrlBuilder = /** @class */ (function () {\n    function ImageUrlBuilder(parent, options) {\n        this.options = parent\n            ? __assign(__assign({}, (parent.options || {})), (options || {})) : __assign({}, (options || {})); // Copy options\n    }\n    ImageUrlBuilder.prototype.withOptions = function (options) {\n        var baseUrl = options.baseUrl || this.options.baseUrl;\n        var newOptions = { baseUrl: baseUrl };\n        for (var key in options) {\n            if (options.hasOwnProperty(key)) {\n                var specKey = rewriteSpecName(key);\n                newOptions[specKey] = options[key];\n            }\n        }\n        return new ImageUrlBuilder(this, __assign({ baseUrl: baseUrl }, newOptions));\n    };\n    // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n    // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n    // studio, the 'image'-document must be provided.\n    ImageUrlBuilder.prototype.image = function (source) {\n        return this.withOptions({ source: source });\n    };\n    // Specify the dataset\n    ImageUrlBuilder.prototype.dataset = function (dataset) {\n        return this.withOptions({ dataset: dataset });\n    };\n    // Specify the projectId\n    ImageUrlBuilder.prototype.projectId = function (projectId) {\n        return this.withOptions({ projectId: projectId });\n    };\n    // Specify background color\n    ImageUrlBuilder.prototype.bg = function (bg) {\n        return this.withOptions({ bg: bg });\n    };\n    // Set DPR scaling factor\n    ImageUrlBuilder.prototype.dpr = function (dpr) {\n        // A DPR of 1 is the default - so only include it if we have a different value\n        return this.withOptions(dpr && dpr !== 1 ? { dpr: dpr } : {});\n    };\n    // Specify the width of the image in pixels\n    ImageUrlBuilder.prototype.width = function (width) {\n        return this.withOptions({ width: width });\n    };\n    // Specify the height of the image in pixels\n    ImageUrlBuilder.prototype.height = function (height) {\n        return this.withOptions({ height: height });\n    };\n    // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n    ImageUrlBuilder.prototype.focalPoint = function (x, y) {\n        return this.withOptions({ focalPoint: { x: x, y: y } });\n    };\n    ImageUrlBuilder.prototype.maxWidth = function (maxWidth) {\n        return this.withOptions({ maxWidth: maxWidth });\n    };\n    ImageUrlBuilder.prototype.minWidth = function (minWidth) {\n        return this.withOptions({ minWidth: minWidth });\n    };\n    ImageUrlBuilder.prototype.maxHeight = function (maxHeight) {\n        return this.withOptions({ maxHeight: maxHeight });\n    };\n    ImageUrlBuilder.prototype.minHeight = function (minHeight) {\n        return this.withOptions({ minHeight: minHeight });\n    };\n    // Specify width and height in pixels\n    ImageUrlBuilder.prototype.size = function (width, height) {\n        return this.withOptions({ width: width, height: height });\n    };\n    // Specify blur between 0 and 100\n    ImageUrlBuilder.prototype.blur = function (blur) {\n        return this.withOptions({ blur: blur });\n    };\n    ImageUrlBuilder.prototype.sharpen = function (sharpen) {\n        return this.withOptions({ sharpen: sharpen });\n    };\n    // Specify the desired rectangle of the image\n    ImageUrlBuilder.prototype.rect = function (left, top, width, height) {\n        return this.withOptions({ rect: { left: left, top: top, width: width, height: height } });\n    };\n    // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n    ImageUrlBuilder.prototype.format = function (format) {\n        return this.withOptions({ format: format });\n    };\n    ImageUrlBuilder.prototype.invert = function (invert) {\n        return this.withOptions({ invert: invert });\n    };\n    // Rotation in degrees 0, 90, 180, 270\n    ImageUrlBuilder.prototype.orientation = function (orientation) {\n        return this.withOptions({ orientation: orientation });\n    };\n    // Compression quality 0-100\n    ImageUrlBuilder.prototype.quality = function (quality) {\n        return this.withOptions({ quality: quality });\n    };\n    // Make it a download link. Parameter is default filename.\n    ImageUrlBuilder.prototype.forceDownload = function (download) {\n        return this.withOptions({ download: download });\n    };\n    // Flip image horizontally\n    ImageUrlBuilder.prototype.flipHorizontal = function () {\n        return this.withOptions({ flipHorizontal: true });\n    };\n    // Flip image vertically\n    ImageUrlBuilder.prototype.flipVertical = function () {\n        return this.withOptions({ flipVertical: true });\n    };\n    // Ignore crop/hotspot from image record, even when present\n    ImageUrlBuilder.prototype.ignoreImageParams = function () {\n        return this.withOptions({ ignoreImageParams: true });\n    };\n    ImageUrlBuilder.prototype.fit = function (value) {\n        if (validFits.indexOf(value) === -1) {\n            throw new Error(\"Invalid fit mode \\\"\".concat(value, \"\\\"\"));\n        }\n        return this.withOptions({ fit: value });\n    };\n    ImageUrlBuilder.prototype.crop = function (value) {\n        if (validCrops.indexOf(value) === -1) {\n            throw new Error(\"Invalid crop mode \\\"\".concat(value, \"\\\"\"));\n        }\n        return this.withOptions({ crop: value });\n    };\n    // Saturation\n    ImageUrlBuilder.prototype.saturation = function (saturation) {\n        return this.withOptions({ saturation: saturation });\n    };\n    ImageUrlBuilder.prototype.auto = function (value) {\n        if (validAutoModes.indexOf(value) === -1) {\n            throw new Error(\"Invalid auto mode \\\"\".concat(value, \"\\\"\"));\n        }\n        return this.withOptions({ auto: value });\n    };\n    // Specify the number of pixels to pad the image\n    ImageUrlBuilder.prototype.pad = function (pad) {\n        return this.withOptions({ pad: pad });\n    };\n    // Gets the url based on the submitted parameters\n    ImageUrlBuilder.prototype.url = function () {\n        return (0, urlForImage_1.default)(this.options);\n    };\n    // Alias for url()\n    ImageUrlBuilder.prototype.toString = function () {\n        return this.url();\n    };\n    return ImageUrlBuilder;\n}());\nexports.ImageUrlBuilder = ImageUrlBuilder;\n//# sourceMappingURL=builder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/index.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar builder_1 = __importDefault(__webpack_require__(/*! ./builder */ \"(ssr)/./node_modules/@sanity/image-url/lib/node/builder.js\"));\nmodule.exports = builder_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLGdDQUFnQyxtQkFBTyxDQUFDLDZFQUFXO0FBQ25EO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvaW1hZ2UtdXJsL2xpYi9ub2RlL2luZGV4LmpzP2E3MDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG52YXIgYnVpbGRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2J1aWxkZXJcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBidWlsZGVyXzEuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/parseAssetId.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';\nfunction parseAssetId(ref) {\n    var _a = ref.split('-'), id = _a[1], dimensionString = _a[2], format = _a[3];\n    if (!id || !dimensionString || !format) {\n        throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n    }\n    var _b = dimensionString.split('x'), imgWidthStr = _b[0], imgHeightStr = _b[1];\n    var width = +imgWidthStr;\n    var height = +imgHeightStr;\n    var isValidAssetId = isFinite(width) && isFinite(height);\n    if (!isValidAssetId) {\n        throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n    }\n    return { id: id, width: width, height: height, format: format };\n}\nexports[\"default\"] = parseAssetId;\n//# sourceMappingURL=parseAssetId.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvcGFyc2VBc3NldElkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvdGVsLW1hbmFnZW1lbnQvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvcGFyc2VBc3NldElkLmpzP2Y4ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZXhhbXBsZSA9ICdpbWFnZS1UYjlFdzhDWEl3YVk2UjFrak12STB1UlItMjAwMHgzMDAwLWpwZyc7XG5mdW5jdGlvbiBwYXJzZUFzc2V0SWQocmVmKSB7XG4gICAgdmFyIF9hID0gcmVmLnNwbGl0KCctJyksIGlkID0gX2FbMV0sIGRpbWVuc2lvblN0cmluZyA9IF9hWzJdLCBmb3JtYXQgPSBfYVszXTtcbiAgICBpZiAoIWlkIHx8ICFkaW1lbnNpb25TdHJpbmcgfHwgIWZvcm1hdCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNYWxmb3JtZWQgYXNzZXQgX3JlZiAnXCIuY29uY2F0KHJlZiwgXCInLiBFeHBlY3RlZCBhbiBpZCBsaWtlIFxcXCJcIikuY29uY2F0KGV4YW1wbGUsIFwiXFxcIi5cIikpO1xuICAgIH1cbiAgICB2YXIgX2IgPSBkaW1lbnNpb25TdHJpbmcuc3BsaXQoJ3gnKSwgaW1nV2lkdGhTdHIgPSBfYlswXSwgaW1nSGVpZ2h0U3RyID0gX2JbMV07XG4gICAgdmFyIHdpZHRoID0gK2ltZ1dpZHRoU3RyO1xuICAgIHZhciBoZWlnaHQgPSAraW1nSGVpZ2h0U3RyO1xuICAgIHZhciBpc1ZhbGlkQXNzZXRJZCA9IGlzRmluaXRlKHdpZHRoKSAmJiBpc0Zpbml0ZShoZWlnaHQpO1xuICAgIGlmICghaXNWYWxpZEFzc2V0SWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWFsZm9ybWVkIGFzc2V0IF9yZWYgJ1wiLmNvbmNhdChyZWYsIFwiJy4gRXhwZWN0ZWQgYW4gaWQgbGlrZSBcXFwiXCIpLmNvbmNhdChleGFtcGxlLCBcIlxcXCIuXCIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgaWQ6IGlkLCB3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0LCBmb3JtYXQ6IGZvcm1hdCB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gcGFyc2VBc3NldElkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2VBc3NldElkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/parseSource.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/parseSource.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar isRef = function (src) {\n    var source = src;\n    return source ? typeof source._ref === 'string' : false;\n};\nvar isAsset = function (src) {\n    var source = src;\n    return source ? typeof source._id === 'string' : false;\n};\nvar isAssetStub = function (src) {\n    var source = src;\n    return source && source.asset ? typeof source.asset.url === 'string' : false;\n};\n// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nfunction parseSource(source) {\n    if (!source) {\n        return null;\n    }\n    var image;\n    if (typeof source === 'string' && isUrl(source)) {\n        // Someone passed an existing image url?\n        image = {\n            asset: { _ref: urlToId(source) },\n        };\n    }\n    else if (typeof source === 'string') {\n        // Just an asset id\n        image = {\n            asset: { _ref: source },\n        };\n    }\n    else if (isRef(source)) {\n        // We just got passed an asset directly\n        image = {\n            asset: source,\n        };\n    }\n    else if (isAsset(source)) {\n        // If we were passed an image asset document\n        image = {\n            asset: {\n                _ref: source._id || '',\n            },\n        };\n    }\n    else if (isAssetStub(source)) {\n        // If we were passed a partial asset (`url`, but no `_id`)\n        image = {\n            asset: {\n                _ref: urlToId(source.asset.url),\n            },\n        };\n    }\n    else if (typeof source.asset === 'object') {\n        // Probably an actual image with materialized asset\n        image = __assign({}, source);\n    }\n    else {\n        // We got something that does not look like an image, or it is an image\n        // that currently isn't sporting an asset.\n        return null;\n    }\n    var img = source;\n    if (img.crop) {\n        image.crop = img.crop;\n    }\n    if (img.hotspot) {\n        image.hotspot = img.hotspot;\n    }\n    return applyDefaults(image);\n}\nexports[\"default\"] = parseSource;\nfunction isUrl(url) {\n    return /^https?:\\/\\//.test(\"\".concat(url));\n}\nfunction urlToId(url) {\n    var parts = url.split('/').slice(-1);\n    return \"image-\".concat(parts[0]).replace(/\\.([a-z]+)$/, '-$1');\n}\n// Mock crop and hotspot if image lacks it\nfunction applyDefaults(image) {\n    if (image.crop && image.hotspot) {\n        return image;\n    }\n    // We need to pad in default values for crop or hotspot\n    var result = __assign({}, image);\n    if (!result.crop) {\n        result.crop = {\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n        };\n    }\n    if (!result.hotspot) {\n        result.hotspot = {\n            x: 0.5,\n            y: 0.5,\n            height: 1.0,\n            width: 1.0,\n        };\n    }\n    return result;\n}\n//# sourceMappingURL=parseSource.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvcGFyc2VTb3VyY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1QkFBdUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixjQUFjO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvaW1hZ2UtdXJsL2xpYi9ub2RlL3BhcnNlU291cmNlLmpzPzVhM2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGlzUmVmID0gZnVuY3Rpb24gKHNyYykge1xuICAgIHZhciBzb3VyY2UgPSBzcmM7XG4gICAgcmV0dXJuIHNvdXJjZSA/IHR5cGVvZiBzb3VyY2UuX3JlZiA9PT0gJ3N0cmluZycgOiBmYWxzZTtcbn07XG52YXIgaXNBc3NldCA9IGZ1bmN0aW9uIChzcmMpIHtcbiAgICB2YXIgc291cmNlID0gc3JjO1xuICAgIHJldHVybiBzb3VyY2UgPyB0eXBlb2Ygc291cmNlLl9pZCA9PT0gJ3N0cmluZycgOiBmYWxzZTtcbn07XG52YXIgaXNBc3NldFN0dWIgPSBmdW5jdGlvbiAoc3JjKSB7XG4gICAgdmFyIHNvdXJjZSA9IHNyYztcbiAgICByZXR1cm4gc291cmNlICYmIHNvdXJjZS5hc3NldCA/IHR5cGVvZiBzb3VyY2UuYXNzZXQudXJsID09PSAnc3RyaW5nJyA6IGZhbHNlO1xufTtcbi8vIENvbnZlcnQgYW4gYXNzZXQtaWQsIGFzc2V0IG9yIGltYWdlIHRvIGFuIGltYWdlIHJlY29yZCBzdWl0YWJsZSBmb3IgcHJvY2Vzc2luZ1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmZ1bmN0aW9uIHBhcnNlU291cmNlKHNvdXJjZSkge1xuICAgIGlmICghc291cmNlKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB2YXIgaW1hZ2U7XG4gICAgaWYgKHR5cGVvZiBzb3VyY2UgPT09ICdzdHJpbmcnICYmIGlzVXJsKHNvdXJjZSkpIHtcbiAgICAgICAgLy8gU29tZW9uZSBwYXNzZWQgYW4gZXhpc3RpbmcgaW1hZ2UgdXJsP1xuICAgICAgICBpbWFnZSA9IHtcbiAgICAgICAgICAgIGFzc2V0OiB7IF9yZWY6IHVybFRvSWQoc291cmNlKSB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2Ygc291cmNlID09PSAnc3RyaW5nJykge1xuICAgICAgICAvLyBKdXN0IGFuIGFzc2V0IGlkXG4gICAgICAgIGltYWdlID0ge1xuICAgICAgICAgICAgYXNzZXQ6IHsgX3JlZjogc291cmNlIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzUmVmKHNvdXJjZSkpIHtcbiAgICAgICAgLy8gV2UganVzdCBnb3QgcGFzc2VkIGFuIGFzc2V0IGRpcmVjdGx5XG4gICAgICAgIGltYWdlID0ge1xuICAgICAgICAgICAgYXNzZXQ6IHNvdXJjZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNBc3NldChzb3VyY2UpKSB7XG4gICAgICAgIC8vIElmIHdlIHdlcmUgcGFzc2VkIGFuIGltYWdlIGFzc2V0IGRvY3VtZW50XG4gICAgICAgIGltYWdlID0ge1xuICAgICAgICAgICAgYXNzZXQ6IHtcbiAgICAgICAgICAgICAgICBfcmVmOiBzb3VyY2UuX2lkIHx8ICcnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNBc3NldFN0dWIoc291cmNlKSkge1xuICAgICAgICAvLyBJZiB3ZSB3ZXJlIHBhc3NlZCBhIHBhcnRpYWwgYXNzZXQgKGB1cmxgLCBidXQgbm8gYF9pZGApXG4gICAgICAgIGltYWdlID0ge1xuICAgICAgICAgICAgYXNzZXQ6IHtcbiAgICAgICAgICAgICAgICBfcmVmOiB1cmxUb0lkKHNvdXJjZS5hc3NldC51cmwpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHNvdXJjZS5hc3NldCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgLy8gUHJvYmFibHkgYW4gYWN0dWFsIGltYWdlIHdpdGggbWF0ZXJpYWxpemVkIGFzc2V0XG4gICAgICAgIGltYWdlID0gX19hc3NpZ24oe30sIHNvdXJjZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBXZSBnb3Qgc29tZXRoaW5nIHRoYXQgZG9lcyBub3QgbG9vayBsaWtlIGFuIGltYWdlLCBvciBpdCBpcyBhbiBpbWFnZVxuICAgICAgICAvLyB0aGF0IGN1cnJlbnRseSBpc24ndCBzcG9ydGluZyBhbiBhc3NldC5cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciBpbWcgPSBzb3VyY2U7XG4gICAgaWYgKGltZy5jcm9wKSB7XG4gICAgICAgIGltYWdlLmNyb3AgPSBpbWcuY3JvcDtcbiAgICB9XG4gICAgaWYgKGltZy5ob3RzcG90KSB7XG4gICAgICAgIGltYWdlLmhvdHNwb3QgPSBpbWcuaG90c3BvdDtcbiAgICB9XG4gICAgcmV0dXJuIGFwcGx5RGVmYXVsdHMoaW1hZ2UpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gcGFyc2VTb3VyY2U7XG5mdW5jdGlvbiBpc1VybCh1cmwpIHtcbiAgICByZXR1cm4gL15odHRwcz86XFwvXFwvLy50ZXN0KFwiXCIuY29uY2F0KHVybCkpO1xufVxuZnVuY3Rpb24gdXJsVG9JZCh1cmwpIHtcbiAgICB2YXIgcGFydHMgPSB1cmwuc3BsaXQoJy8nKS5zbGljZSgtMSk7XG4gICAgcmV0dXJuIFwiaW1hZ2UtXCIuY29uY2F0KHBhcnRzWzBdKS5yZXBsYWNlKC9cXC4oW2Etel0rKSQvLCAnLSQxJyk7XG59XG4vLyBNb2NrIGNyb3AgYW5kIGhvdHNwb3QgaWYgaW1hZ2UgbGFja3MgaXRcbmZ1bmN0aW9uIGFwcGx5RGVmYXVsdHMoaW1hZ2UpIHtcbiAgICBpZiAoaW1hZ2UuY3JvcCAmJiBpbWFnZS5ob3RzcG90KSB7XG4gICAgICAgIHJldHVybiBpbWFnZTtcbiAgICB9XG4gICAgLy8gV2UgbmVlZCB0byBwYWQgaW4gZGVmYXVsdCB2YWx1ZXMgZm9yIGNyb3Agb3IgaG90c3BvdFxuICAgIHZhciByZXN1bHQgPSBfX2Fzc2lnbih7fSwgaW1hZ2UpO1xuICAgIGlmICghcmVzdWx0LmNyb3ApIHtcbiAgICAgICAgcmVzdWx0LmNyb3AgPSB7XG4gICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICAgICAgcmlnaHQ6IDAsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmICghcmVzdWx0LmhvdHNwb3QpIHtcbiAgICAgICAgcmVzdWx0LmhvdHNwb3QgPSB7XG4gICAgICAgICAgICB4OiAwLjUsXG4gICAgICAgICAgICB5OiAwLjUsXG4gICAgICAgICAgICBoZWlnaHQ6IDEuMCxcbiAgICAgICAgICAgIHdpZHRoOiAxLjAsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZVNvdXJjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/parseSource.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/urlForImage.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/urlForImage.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseSource = exports.SPEC_NAME_TO_URL_NAME_MAPPINGS = void 0;\nvar parseAssetId_1 = __importDefault(__webpack_require__(/*! ./parseAssetId */ \"(ssr)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js\"));\nvar parseSource_1 = __importDefault(__webpack_require__(/*! ./parseSource */ \"(ssr)/./node_modules/@sanity/image-url/lib/node/parseSource.js\"));\nexports.parseSource = parseSource_1.default;\nexports.SPEC_NAME_TO_URL_NAME_MAPPINGS = [\n    ['width', 'w'],\n    ['height', 'h'],\n    ['format', 'fm'],\n    ['download', 'dl'],\n    ['blur', 'blur'],\n    ['sharpen', 'sharp'],\n    ['invert', 'invert'],\n    ['orientation', 'or'],\n    ['minHeight', 'min-h'],\n    ['maxHeight', 'max-h'],\n    ['minWidth', 'min-w'],\n    ['maxWidth', 'max-w'],\n    ['quality', 'q'],\n    ['fit', 'fit'],\n    ['crop', 'crop'],\n    ['saturation', 'sat'],\n    ['auto', 'auto'],\n    ['dpr', 'dpr'],\n    ['pad', 'pad'],\n];\nfunction urlForImage(options) {\n    var spec = __assign({}, (options || {}));\n    var source = spec.source;\n    delete spec.source;\n    var image = (0, parseSource_1.default)(source);\n    if (!image) {\n        throw new Error(\"Unable to resolve image URL from source (\".concat(JSON.stringify(source), \")\"));\n    }\n    var id = image.asset._ref || image.asset._id || '';\n    var asset = (0, parseAssetId_1.default)(id);\n    // Compute crop rect in terms of pixel coordinates in the raw source image\n    var cropLeft = Math.round(image.crop.left * asset.width);\n    var cropTop = Math.round(image.crop.top * asset.height);\n    var crop = {\n        left: cropLeft,\n        top: cropTop,\n        width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n        height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop),\n    };\n    // Compute hot spot rect in terms of pixel coordinates\n    var hotSpotVerticalRadius = (image.hotspot.height * asset.height) / 2;\n    var hotSpotHorizontalRadius = (image.hotspot.width * asset.width) / 2;\n    var hotSpotCenterX = image.hotspot.x * asset.width;\n    var hotSpotCenterY = image.hotspot.y * asset.height;\n    var hotspot = {\n        left: hotSpotCenterX - hotSpotHorizontalRadius,\n        top: hotSpotCenterY - hotSpotVerticalRadius,\n        right: hotSpotCenterX + hotSpotHorizontalRadius,\n        bottom: hotSpotCenterY + hotSpotVerticalRadius,\n    };\n    // If irrelevant, or if we are requested to: don't perform crop/fit based on\n    // the crop/hotspot.\n    if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n        spec = __assign(__assign({}, spec), fit({ crop: crop, hotspot: hotspot }, spec));\n    }\n    return specToImageUrl(__assign(__assign({}, spec), { asset: asset }));\n}\nexports[\"default\"] = urlForImage;\n// eslint-disable-next-line complexity\nfunction specToImageUrl(spec) {\n    var cdnUrl = (spec.baseUrl || 'https://cdn.sanity.io').replace(/\\/+$/, '');\n    var filename = \"\".concat(spec.asset.id, \"-\").concat(spec.asset.width, \"x\").concat(spec.asset.height, \".\").concat(spec.asset.format);\n    var baseUrl = \"\".concat(cdnUrl, \"/images/\").concat(spec.projectId, \"/\").concat(spec.dataset, \"/\").concat(filename);\n    var params = [];\n    if (spec.rect) {\n        // Only bother url with a crop if it actually crops anything\n        var _a = spec.rect, left = _a.left, top_1 = _a.top, width = _a.width, height = _a.height;\n        var isEffectiveCrop = left !== 0 || top_1 !== 0 || height !== spec.asset.height || width !== spec.asset.width;\n        if (isEffectiveCrop) {\n            params.push(\"rect=\".concat(left, \",\").concat(top_1, \",\").concat(width, \",\").concat(height));\n        }\n    }\n    if (spec.bg) {\n        params.push(\"bg=\".concat(spec.bg));\n    }\n    if (spec.focalPoint) {\n        params.push(\"fp-x=\".concat(spec.focalPoint.x));\n        params.push(\"fp-y=\".concat(spec.focalPoint.y));\n    }\n    var flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('');\n    if (flip) {\n        params.push(\"flip=\".concat(flip));\n    }\n    // Map from spec name to url param name, and allow using the actual param name as an alternative\n    exports.SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function (mapping) {\n        var specName = mapping[0], param = mapping[1];\n        if (typeof spec[specName] !== 'undefined') {\n            params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[specName])));\n        }\n        else if (typeof spec[param] !== 'undefined') {\n            params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[param])));\n        }\n    });\n    if (params.length === 0) {\n        return baseUrl;\n    }\n    return \"\".concat(baseUrl, \"?\").concat(params.join('&'));\n}\nfunction fit(source, spec) {\n    var cropRect;\n    var imgWidth = spec.width;\n    var imgHeight = spec.height;\n    // If we are not constraining the aspect ratio, we'll just use the whole crop\n    if (!(imgWidth && imgHeight)) {\n        return { width: imgWidth, height: imgHeight, rect: source.crop };\n    }\n    var crop = source.crop;\n    var hotspot = source.hotspot;\n    // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n    var desiredAspectRatio = imgWidth / imgHeight;\n    var cropAspectRatio = crop.width / crop.height;\n    if (cropAspectRatio > desiredAspectRatio) {\n        // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n        var height = Math.round(crop.height);\n        var width = Math.round(height * desiredAspectRatio);\n        var top_2 = Math.max(0, Math.round(crop.top));\n        // Center output horizontally over hotspot\n        var hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left);\n        var left = Math.max(0, Math.round(hotspotXCenter - width / 2));\n        // Keep output within crop\n        if (left < crop.left) {\n            left = crop.left;\n        }\n        else if (left + width > crop.left + crop.width) {\n            left = crop.left + crop.width - width;\n        }\n        cropRect = { left: left, top: top_2, width: width, height: height };\n    }\n    else {\n        // The crop is taller than the desired ratio, we are cutting from top and bottom\n        var width = crop.width;\n        var height = Math.round(width / desiredAspectRatio);\n        var left = Math.max(0, Math.round(crop.left));\n        // Center output vertically over hotspot\n        var hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top);\n        var top_3 = Math.max(0, Math.round(hotspotYCenter - height / 2));\n        // Keep output rect within crop\n        if (top_3 < crop.top) {\n            top_3 = crop.top;\n        }\n        else if (top_3 + height > crop.top + crop.height) {\n            top_3 = crop.top + crop.height - height;\n        }\n        cropRect = { left: left, top: top_3, width: width, height: height };\n    }\n    return {\n        width: imgWidth,\n        height: imgHeight,\n        rect: cropRect,\n    };\n}\n//# sourceMappingURL=urlForImage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/urlForImage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/browser.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@sanity/portable-text-editor/node_modules/debug/src/browser.js ***!
  \*************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/common.js\")(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wb3J0YWJsZS10ZXh0LWVkaXRvci9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsd0JBQXdCLDJFQUEyRSxrQ0FBa0Msd0JBQXdCLE9BQU8sa0NBQWtDLG1JQUFtSTs7QUFFelU7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLGtCQUFrQjtBQUNsQixZQUFZO0FBQ1osWUFBWTtBQUNaLGlCQUFpQjtBQUNqQixlQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7OztBQUdKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSSxlQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGlCQUFpQjtBQUNyQjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGVBQWU7QUFDbkI7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLG9HQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvcG9ydGFibGUtdGV4dC1lZGl0b3Ivbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9icm93c2VyLmpzPzI1MzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbi8qIGVzbGludC1lbnYgYnJvd3NlciAqL1xuXG4vKipcbiAqIFRoaXMgaXMgdGhlIHdlYiBicm93c2VyIGltcGxlbWVudGF0aW9uIG9mIGBkZWJ1ZygpYC5cbiAqL1xuZXhwb3J0cy5sb2cgPSBsb2c7XG5leHBvcnRzLmZvcm1hdEFyZ3MgPSBmb3JtYXRBcmdzO1xuZXhwb3J0cy5zYXZlID0gc2F2ZTtcbmV4cG9ydHMubG9hZCA9IGxvYWQ7XG5leHBvcnRzLnVzZUNvbG9ycyA9IHVzZUNvbG9ycztcbmV4cG9ydHMuc3RvcmFnZSA9IGxvY2Fsc3RvcmFnZSgpO1xuLyoqXG4gKiBDb2xvcnMuXG4gKi9cblxuZXhwb3J0cy5jb2xvcnMgPSBbJyMwMDAwQ0MnLCAnIzAwMDBGRicsICcjMDAzM0NDJywgJyMwMDMzRkYnLCAnIzAwNjZDQycsICcjMDA2NkZGJywgJyMwMDk5Q0MnLCAnIzAwOTlGRicsICcjMDBDQzAwJywgJyMwMENDMzMnLCAnIzAwQ0M2NicsICcjMDBDQzk5JywgJyMwMENDQ0MnLCAnIzAwQ0NGRicsICcjMzMwMENDJywgJyMzMzAwRkYnLCAnIzMzMzNDQycsICcjMzMzM0ZGJywgJyMzMzY2Q0MnLCAnIzMzNjZGRicsICcjMzM5OUNDJywgJyMzMzk5RkYnLCAnIzMzQ0MwMCcsICcjMzNDQzMzJywgJyMzM0NDNjYnLCAnIzMzQ0M5OScsICcjMzNDQ0NDJywgJyMzM0NDRkYnLCAnIzY2MDBDQycsICcjNjYwMEZGJywgJyM2NjMzQ0MnLCAnIzY2MzNGRicsICcjNjZDQzAwJywgJyM2NkNDMzMnLCAnIzk5MDBDQycsICcjOTkwMEZGJywgJyM5OTMzQ0MnLCAnIzk5MzNGRicsICcjOTlDQzAwJywgJyM5OUNDMzMnLCAnI0NDMDAwMCcsICcjQ0MwMDMzJywgJyNDQzAwNjYnLCAnI0NDMDA5OScsICcjQ0MwMENDJywgJyNDQzAwRkYnLCAnI0NDMzMwMCcsICcjQ0MzMzMzJywgJyNDQzMzNjYnLCAnI0NDMzM5OScsICcjQ0MzM0NDJywgJyNDQzMzRkYnLCAnI0NDNjYwMCcsICcjQ0M2NjMzJywgJyNDQzk5MDAnLCAnI0NDOTkzMycsICcjQ0NDQzAwJywgJyNDQ0NDMzMnLCAnI0ZGMDAwMCcsICcjRkYwMDMzJywgJyNGRjAwNjYnLCAnI0ZGMDA5OScsICcjRkYwMENDJywgJyNGRjAwRkYnLCAnI0ZGMzMwMCcsICcjRkYzMzMzJywgJyNGRjMzNjYnLCAnI0ZGMzM5OScsICcjRkYzM0NDJywgJyNGRjMzRkYnLCAnI0ZGNjYwMCcsICcjRkY2NjMzJywgJyNGRjk5MDAnLCAnI0ZGOTkzMycsICcjRkZDQzAwJywgJyNGRkNDMzMnXTtcbi8qKlxuICogQ3VycmVudGx5IG9ubHkgV2ViS2l0LWJhc2VkIFdlYiBJbnNwZWN0b3JzLCBGaXJlZm94ID49IHYzMSxcbiAqIGFuZCB0aGUgRmlyZWJ1ZyBleHRlbnNpb24gKGFueSBGaXJlZm94IHZlcnNpb24pIGFyZSBrbm93blxuICogdG8gc3VwcG9ydCBcIiVjXCIgQ1NTIGN1c3RvbWl6YXRpb25zLlxuICpcbiAqIFRPRE86IGFkZCBhIGBsb2NhbFN0b3JhZ2VgIHZhcmlhYmxlIHRvIGV4cGxpY2l0bHkgZW5hYmxlL2Rpc2FibGUgY29sb3JzXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG5cbmZ1bmN0aW9uIHVzZUNvbG9ycygpIHtcbiAgLy8gTkI6IEluIGFuIEVsZWN0cm9uIHByZWxvYWQgc2NyaXB0LCBkb2N1bWVudCB3aWxsIGJlIGRlZmluZWQgYnV0IG5vdCBmdWxseVxuICAvLyBpbml0aWFsaXplZC4gU2luY2Ugd2Uga25vdyB3ZSdyZSBpbiBDaHJvbWUsIHdlJ2xsIGp1c3QgZGV0ZWN0IHRoaXMgY2FzZVxuICAvLyBleHBsaWNpdGx5XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cucHJvY2VzcyAmJiAod2luZG93LnByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJyB8fCB3aW5kb3cucHJvY2Vzcy5fX253anMpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gLy8gSW50ZXJuZXQgRXhwbG9yZXIgYW5kIEVkZ2UgZG8gbm90IHN1cHBvcnQgY29sb3JzLlxuXG5cbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci51c2VyQWdlbnQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC8oZWRnZXx0cmlkZW50KVxcLyhcXGQrKS8pKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IC8vIElzIHdlYmtpdD8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTY0NTk2MDYvMzc2NzczXG4gIC8vIGRvY3VtZW50IGlzIHVuZGVmaW5lZCBpbiByZWFjdC1uYXRpdmU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC1uYXRpdmUvcHVsbC8xNjMyXG5cblxuICByZXR1cm4gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5XZWJraXRBcHBlYXJhbmNlIHx8IC8vIElzIGZpcmVidWc/IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM5ODEyMC8zNzY3NzNcbiAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmNvbnNvbGUgJiYgKHdpbmRvdy5jb25zb2xlLmZpcmVidWcgfHwgd2luZG93LmNvbnNvbGUuZXhjZXB0aW9uICYmIHdpbmRvdy5jb25zb2xlLnRhYmxlKSB8fCAvLyBJcyBmaXJlZm94ID49IHYzMT9cbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9Ub29scy9XZWJfQ29uc29sZSNTdHlsaW5nX21lc3NhZ2VzXG4gIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci51c2VyQWdlbnQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9maXJlZm94XFwvKFxcZCspLykgJiYgcGFyc2VJbnQoUmVnRXhwLiQxLCAxMCkgPj0gMzEgfHwgLy8gRG91YmxlIGNoZWNrIHdlYmtpdCBpbiB1c2VyQWdlbnQganVzdCBpbiBjYXNlIHdlIGFyZSBpbiBhIHdvcmtlclxuICB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IudXNlckFnZW50ICYmIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvYXBwbGV3ZWJraXRcXC8oXFxkKykvKTtcbn1cbi8qKlxuICogQ29sb3JpemUgbG9nIGFyZ3VtZW50cyBpZiBlbmFibGVkLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuXG5mdW5jdGlvbiBmb3JtYXRBcmdzKGFyZ3MpIHtcbiAgYXJnc1swXSA9ICh0aGlzLnVzZUNvbG9ycyA/ICclYycgOiAnJykgKyB0aGlzLm5hbWVzcGFjZSArICh0aGlzLnVzZUNvbG9ycyA/ICcgJWMnIDogJyAnKSArIGFyZ3NbMF0gKyAodGhpcy51c2VDb2xvcnMgPyAnJWMgJyA6ICcgJykgKyAnKycgKyBtb2R1bGUuZXhwb3J0cy5odW1hbml6ZSh0aGlzLmRpZmYpO1xuXG4gIGlmICghdGhpcy51c2VDb2xvcnMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgYyA9ICdjb2xvcjogJyArIHRoaXMuY29sb3I7XG4gIGFyZ3Muc3BsaWNlKDEsIDAsIGMsICdjb2xvcjogaW5oZXJpdCcpOyAvLyBUaGUgZmluYWwgXCIlY1wiIGlzIHNvbWV3aGF0IHRyaWNreSwgYmVjYXVzZSB0aGVyZSBjb3VsZCBiZSBvdGhlclxuICAvLyBhcmd1bWVudHMgcGFzc2VkIGVpdGhlciBiZWZvcmUgb3IgYWZ0ZXIgdGhlICVjLCBzbyB3ZSBuZWVkIHRvXG4gIC8vIGZpZ3VyZSBvdXQgdGhlIGNvcnJlY3QgaW5kZXggdG8gaW5zZXJ0IHRoZSBDU1MgaW50b1xuXG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBsYXN0QyA9IDA7XG4gIGFyZ3NbMF0ucmVwbGFjZSgvJVthLXpBLVolXS9nLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICBpZiAobWF0Y2ggPT09ICclJScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpbmRleCsrO1xuXG4gICAgaWYgKG1hdGNoID09PSAnJWMnKSB7XG4gICAgICAvLyBXZSBvbmx5IGFyZSBpbnRlcmVzdGVkIGluIHRoZSAqbGFzdCogJWNcbiAgICAgIC8vICh0aGUgdXNlciBtYXkgaGF2ZSBwcm92aWRlZCB0aGVpciBvd24pXG4gICAgICBsYXN0QyA9IGluZGV4O1xuICAgIH1cbiAgfSk7XG4gIGFyZ3Muc3BsaWNlKGxhc3RDLCAwLCBjKTtcbn1cbi8qKlxuICogSW52b2tlcyBgY29uc29sZS5sb2coKWAgd2hlbiBhdmFpbGFibGUuXG4gKiBOby1vcCB3aGVuIGBjb25zb2xlLmxvZ2AgaXMgbm90IGEgXCJmdW5jdGlvblwiLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuXG5mdW5jdGlvbiBsb2coKSB7XG4gIHZhciBfY29uc29sZTtcblxuICAvLyBUaGlzIGhhY2tlcnkgaXMgcmVxdWlyZWQgZm9yIElFOC85LCB3aGVyZVxuICAvLyB0aGUgYGNvbnNvbGUubG9nYCBmdW5jdGlvbiBkb2Vzbid0IGhhdmUgJ2FwcGx5J1xuICByZXR1cm4gKHR5cGVvZiBjb25zb2xlID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2YoY29uc29sZSkpID09PSAnb2JqZWN0JyAmJiBjb25zb2xlLmxvZyAmJiAoX2NvbnNvbGUgPSBjb25zb2xlKS5sb2cuYXBwbHkoX2NvbnNvbGUsIGFyZ3VtZW50cyk7XG59XG4vKipcbiAqIFNhdmUgYG5hbWVzcGFjZXNgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5cbmZ1bmN0aW9uIHNhdmUobmFtZXNwYWNlcykge1xuICB0cnkge1xuICAgIGlmIChuYW1lc3BhY2VzKSB7XG4gICAgICBleHBvcnRzLnN0b3JhZ2Uuc2V0SXRlbSgnZGVidWcnLCBuYW1lc3BhY2VzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXhwb3J0cy5zdG9yYWdlLnJlbW92ZUl0ZW0oJ2RlYnVnJyk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikgey8vIFN3YWxsb3dcbiAgICAvLyBYWFggKEBRaXgtKSBzaG91bGQgd2UgYmUgbG9nZ2luZyB0aGVzZT9cbiAgfVxufVxuLyoqXG4gKiBMb2FkIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcmV0dXJuIHtTdHJpbmd9IHJldHVybnMgdGhlIHByZXZpb3VzbHkgcGVyc2lzdGVkIGRlYnVnIG1vZGVzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5cbmZ1bmN0aW9uIGxvYWQoKSB7XG4gIHZhciByO1xuXG4gIHRyeSB7XG4gICAgciA9IGV4cG9ydHMuc3RvcmFnZS5nZXRJdGVtKCdkZWJ1ZycpO1xuICB9IGNhdGNoIChlcnJvcikge30gLy8gU3dhbGxvd1xuICAvLyBYWFggKEBRaXgtKSBzaG91bGQgd2UgYmUgbG9nZ2luZyB0aGVzZT9cbiAgLy8gSWYgZGVidWcgaXNuJ3Qgc2V0IGluIExTLCBhbmQgd2UncmUgaW4gRWxlY3Ryb24sIHRyeSB0byBsb2FkICRERUJVR1xuXG5cbiAgaWYgKCFyICYmIHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiAnZW52JyBpbiBwcm9jZXNzKSB7XG4gICAgciA9IHByb2Nlc3MuZW52LkRFQlVHO1xuICB9XG5cbiAgcmV0dXJuIHI7XG59XG4vKipcbiAqIExvY2Fsc3RvcmFnZSBhdHRlbXB0cyB0byByZXR1cm4gdGhlIGxvY2Fsc3RvcmFnZS5cbiAqXG4gKiBUaGlzIGlzIG5lY2Vzc2FyeSBiZWNhdXNlIHNhZmFyaSB0aHJvd3NcbiAqIHdoZW4gYSB1c2VyIGRpc2FibGVzIGNvb2tpZXMvbG9jYWxzdG9yYWdlXG4gKiBhbmQgeW91IGF0dGVtcHQgdG8gYWNjZXNzIGl0LlxuICpcbiAqIEByZXR1cm4ge0xvY2FsU3RvcmFnZX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblxuZnVuY3Rpb24gbG9jYWxzdG9yYWdlKCkge1xuICB0cnkge1xuICAgIC8vIFRWTUxLaXQgKEFwcGxlIFRWIEpTIFJ1bnRpbWUpIGRvZXMgbm90IGhhdmUgYSB3aW5kb3cgb2JqZWN0LCBqdXN0IGxvY2FsU3RvcmFnZSBpbiB0aGUgZ2xvYmFsIGNvbnRleHRcbiAgICAvLyBUaGUgQnJvd3NlciBhbHNvIGhhcyBsb2NhbFN0b3JhZ2UgaW4gdGhlIGdsb2JhbCBjb250ZXh0LlxuICAgIHJldHVybiBsb2NhbFN0b3JhZ2U7XG4gIH0gY2F0Y2ggKGVycm9yKSB7Ly8gU3dhbGxvd1xuICAgIC8vIFhYWCAoQFFpeC0pIHNob3VsZCB3ZSBiZSBsb2dnaW5nIHRoZXNlP1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9jb21tb24nKShleHBvcnRzKTtcbnZhciBmb3JtYXR0ZXJzID0gbW9kdWxlLmV4cG9ydHMuZm9ybWF0dGVycztcbi8qKlxuICogTWFwICVqIHRvIGBKU09OLnN0cmluZ2lmeSgpYCwgc2luY2Ugbm8gV2ViIEluc3BlY3RvcnMgZG8gdGhhdCBieSBkZWZhdWx0LlxuICovXG5cbmZvcm1hdHRlcnMuaiA9IGZ1bmN0aW9uICh2KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHYpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiAnW1VuZXhwZWN0ZWRKU09OUGFyc2VFcnJvcl06ICcgKyBlcnJvci5tZXNzYWdlO1xuICB9XG59O1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/common.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sanity/portable-text-editor/node_modules/debug/src/common.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = __webpack_require__(/*! ms */ \"(ssr)/./node_modules/ms/index.js\");\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wb3J0YWJsZS10ZXh0LWVkaXRvci9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsNENBQUk7QUFDckM7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLGFBQWEsZUFBZTtBQUM1QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwRUFBMEUsYUFBYTtBQUN2RjtBQUNBOztBQUVBLHdCQUF3Qjs7QUFFeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7O0FBR1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZDQUE2Qzs7QUFFN0M7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyxHQUFHOztBQUVWO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQSxnQkFBZ0Isa0NBQWtDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLGFBQWE7QUFDYjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdEQUFnRCxTQUFTO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdEQUFnRCxTQUFTO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIsYUFBYTtBQUNiO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG90ZWwtbWFuYWdlbWVudC8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3BvcnRhYmxlLXRleHQtZWRpdG9yL25vZGVfbW9kdWxlcy9kZWJ1Zy9zcmMvY29tbW9uLmpzPzFiYzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogVGhpcyBpcyB0aGUgY29tbW9uIGxvZ2ljIGZvciBib3RoIHRoZSBOb2RlLmpzIGFuZCB3ZWIgYnJvd3NlclxuICogaW1wbGVtZW50YXRpb25zIG9mIGBkZWJ1ZygpYC5cbiAqL1xuZnVuY3Rpb24gc2V0dXAoZW52KSB7XG4gIGNyZWF0ZURlYnVnLmRlYnVnID0gY3JlYXRlRGVidWc7XG4gIGNyZWF0ZURlYnVnLmRlZmF1bHQgPSBjcmVhdGVEZWJ1ZztcbiAgY3JlYXRlRGVidWcuY29lcmNlID0gY29lcmNlO1xuICBjcmVhdGVEZWJ1Zy5kaXNhYmxlID0gZGlzYWJsZTtcbiAgY3JlYXRlRGVidWcuZW5hYmxlID0gZW5hYmxlO1xuICBjcmVhdGVEZWJ1Zy5lbmFibGVkID0gZW5hYmxlZDtcbiAgY3JlYXRlRGVidWcuaHVtYW5pemUgPSByZXF1aXJlKCdtcycpO1xuICBPYmplY3Qua2V5cyhlbnYpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGNyZWF0ZURlYnVnW2tleV0gPSBlbnZba2V5XTtcbiAgfSk7XG4gIC8qKlxuICAqIEFjdGl2ZSBgZGVidWdgIGluc3RhbmNlcy5cbiAgKi9cblxuICBjcmVhdGVEZWJ1Zy5pbnN0YW5jZXMgPSBbXTtcbiAgLyoqXG4gICogVGhlIGN1cnJlbnRseSBhY3RpdmUgZGVidWcgbW9kZSBuYW1lcywgYW5kIG5hbWVzIHRvIHNraXAuXG4gICovXG5cbiAgY3JlYXRlRGVidWcubmFtZXMgPSBbXTtcbiAgY3JlYXRlRGVidWcuc2tpcHMgPSBbXTtcbiAgLyoqXG4gICogTWFwIG9mIHNwZWNpYWwgXCIlblwiIGhhbmRsaW5nIGZ1bmN0aW9ucywgZm9yIHRoZSBkZWJ1ZyBcImZvcm1hdFwiIGFyZ3VtZW50LlxuICAqXG4gICogVmFsaWQga2V5IG5hbWVzIGFyZSBhIHNpbmdsZSwgbG93ZXIgb3IgdXBwZXItY2FzZSBsZXR0ZXIsIGkuZS4gXCJuXCIgYW5kIFwiTlwiLlxuICAqL1xuXG4gIGNyZWF0ZURlYnVnLmZvcm1hdHRlcnMgPSB7fTtcbiAgLyoqXG4gICogU2VsZWN0cyBhIGNvbG9yIGZvciBhIGRlYnVnIG5hbWVzcGFjZVxuICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2UgVGhlIG5hbWVzcGFjZSBzdHJpbmcgZm9yIHRoZSBmb3IgdGhlIGRlYnVnIGluc3RhbmNlIHRvIGJlIGNvbG9yZWRcbiAgKiBAcmV0dXJuIHtOdW1iZXJ8U3RyaW5nfSBBbiBBTlNJIGNvbG9yIGNvZGUgZm9yIHRoZSBnaXZlbiBuYW1lc3BhY2VcbiAgKiBAYXBpIHByaXZhdGVcbiAgKi9cblxuICBmdW5jdGlvbiBzZWxlY3RDb2xvcihuYW1lc3BhY2UpIHtcbiAgICB2YXIgaGFzaCA9IDA7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5hbWVzcGFjZS5sZW5ndGg7IGkrKykge1xuICAgICAgaGFzaCA9IChoYXNoIDw8IDUpIC0gaGFzaCArIG5hbWVzcGFjZS5jaGFyQ29kZUF0KGkpO1xuICAgICAgaGFzaCB8PSAwOyAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcbiAgICB9XG5cbiAgICByZXR1cm4gY3JlYXRlRGVidWcuY29sb3JzW01hdGguYWJzKGhhc2gpICUgY3JlYXRlRGVidWcuY29sb3JzLmxlbmd0aF07XG4gIH1cblxuICBjcmVhdGVEZWJ1Zy5zZWxlY3RDb2xvciA9IHNlbGVjdENvbG9yO1xuICAvKipcbiAgKiBDcmVhdGUgYSBkZWJ1Z2dlciB3aXRoIHRoZSBnaXZlbiBgbmFtZXNwYWNlYC5cbiAgKlxuICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VcbiAgKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAgKiBAYXBpIHB1YmxpY1xuICAqL1xuXG4gIGZ1bmN0aW9uIGNyZWF0ZURlYnVnKG5hbWVzcGFjZSkge1xuICAgIHZhciBwcmV2VGltZTtcblxuICAgIGZ1bmN0aW9uIGRlYnVnKCkge1xuICAgICAgLy8gRGlzYWJsZWQ/XG4gICAgICBpZiAoIWRlYnVnLmVuYWJsZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNlbGYgPSBkZWJ1ZzsgLy8gU2V0IGBkaWZmYCB0aW1lc3RhbXBcblxuICAgICAgdmFyIGN1cnIgPSBOdW1iZXIobmV3IERhdGUoKSk7XG4gICAgICB2YXIgbXMgPSBjdXJyIC0gKHByZXZUaW1lIHx8IGN1cnIpO1xuICAgICAgc2VsZi5kaWZmID0gbXM7XG4gICAgICBzZWxmLnByZXYgPSBwcmV2VGltZTtcbiAgICAgIHNlbGYuY3VyciA9IGN1cnI7XG4gICAgICBwcmV2VGltZSA9IGN1cnI7XG4gICAgICBhcmdzWzBdID0gY3JlYXRlRGVidWcuY29lcmNlKGFyZ3NbMF0pO1xuXG4gICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIEFueXRoaW5nIGVsc2UgbGV0J3MgaW5zcGVjdCB3aXRoICVPXG4gICAgICAgIGFyZ3MudW5zaGlmdCgnJU8nKTtcbiAgICAgIH0gLy8gQXBwbHkgYW55IGBmb3JtYXR0ZXJzYCB0cmFuc2Zvcm1hdGlvbnNcblxuXG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgYXJnc1swXSA9IGFyZ3NbMF0ucmVwbGFjZSgvJShbYS16QS1aJV0pL2csIGZ1bmN0aW9uIChtYXRjaCwgZm9ybWF0KSB7XG4gICAgICAgIC8vIElmIHdlIGVuY291bnRlciBhbiBlc2NhcGVkICUgdGhlbiBkb24ndCBpbmNyZWFzZSB0aGUgYXJyYXkgaW5kZXhcbiAgICAgICAgaWYgKG1hdGNoID09PSAnJSUnKSB7XG4gICAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5kZXgrKztcbiAgICAgICAgdmFyIGZvcm1hdHRlciA9IGNyZWF0ZURlYnVnLmZvcm1hdHRlcnNbZm9ybWF0XTtcblxuICAgICAgICBpZiAodHlwZW9mIGZvcm1hdHRlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHZhciB2YWwgPSBhcmdzW2luZGV4XTtcbiAgICAgICAgICBtYXRjaCA9IGZvcm1hdHRlci5jYWxsKHNlbGYsIHZhbCk7IC8vIE5vdyB3ZSBuZWVkIHRvIHJlbW92ZSBgYXJnc1tpbmRleF1gIHNpbmNlIGl0J3MgaW5saW5lZCBpbiB0aGUgYGZvcm1hdGBcblxuICAgICAgICAgIGFyZ3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICBpbmRleC0tO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgICAgfSk7IC8vIEFwcGx5IGVudi1zcGVjaWZpYyBmb3JtYXR0aW5nIChjb2xvcnMsIGV0Yy4pXG5cbiAgICAgIGNyZWF0ZURlYnVnLmZvcm1hdEFyZ3MuY2FsbChzZWxmLCBhcmdzKTtcbiAgICAgIHZhciBsb2dGbiA9IHNlbGYubG9nIHx8IGNyZWF0ZURlYnVnLmxvZztcbiAgICAgIGxvZ0ZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICAgIH1cblxuICAgIGRlYnVnLm5hbWVzcGFjZSA9IG5hbWVzcGFjZTtcbiAgICBkZWJ1Zy5lbmFibGVkID0gY3JlYXRlRGVidWcuZW5hYmxlZChuYW1lc3BhY2UpO1xuICAgIGRlYnVnLnVzZUNvbG9ycyA9IGNyZWF0ZURlYnVnLnVzZUNvbG9ycygpO1xuICAgIGRlYnVnLmNvbG9yID0gc2VsZWN0Q29sb3IobmFtZXNwYWNlKTtcbiAgICBkZWJ1Zy5kZXN0cm95ID0gZGVzdHJveTtcbiAgICBkZWJ1Zy5leHRlbmQgPSBleHRlbmQ7IC8vIERlYnVnLmZvcm1hdEFyZ3MgPSBmb3JtYXRBcmdzO1xuICAgIC8vIGRlYnVnLnJhd0xvZyA9IHJhd0xvZztcbiAgICAvLyBlbnYtc3BlY2lmaWMgaW5pdGlhbGl6YXRpb24gbG9naWMgZm9yIGRlYnVnIGluc3RhbmNlc1xuXG4gICAgaWYgKHR5cGVvZiBjcmVhdGVEZWJ1Zy5pbml0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjcmVhdGVEZWJ1Zy5pbml0KGRlYnVnKTtcbiAgICB9XG5cbiAgICBjcmVhdGVEZWJ1Zy5pbnN0YW5jZXMucHVzaChkZWJ1Zyk7XG4gICAgcmV0dXJuIGRlYnVnO1xuICB9XG5cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICB2YXIgaW5kZXggPSBjcmVhdGVEZWJ1Zy5pbnN0YW5jZXMuaW5kZXhPZih0aGlzKTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIGNyZWF0ZURlYnVnLmluc3RhbmNlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gZXh0ZW5kKG5hbWVzcGFjZSwgZGVsaW1pdGVyKSB7XG4gICAgcmV0dXJuIGNyZWF0ZURlYnVnKHRoaXMubmFtZXNwYWNlICsgKHR5cGVvZiBkZWxpbWl0ZXIgPT09ICd1bmRlZmluZWQnID8gJzonIDogZGVsaW1pdGVyKSArIG5hbWVzcGFjZSk7XG4gIH1cbiAgLyoqXG4gICogRW5hYmxlcyBhIGRlYnVnIG1vZGUgYnkgbmFtZXNwYWNlcy4gVGhpcyBjYW4gaW5jbHVkZSBtb2Rlc1xuICAqIHNlcGFyYXRlZCBieSBhIGNvbG9uIGFuZCB3aWxkY2FyZHMuXG4gICpcbiAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICAqIEBhcGkgcHVibGljXG4gICovXG5cblxuICBmdW5jdGlvbiBlbmFibGUobmFtZXNwYWNlcykge1xuICAgIGNyZWF0ZURlYnVnLnNhdmUobmFtZXNwYWNlcyk7XG4gICAgY3JlYXRlRGVidWcubmFtZXMgPSBbXTtcbiAgICBjcmVhdGVEZWJ1Zy5za2lwcyA9IFtdO1xuICAgIHZhciBpO1xuICAgIHZhciBzcGxpdCA9ICh0eXBlb2YgbmFtZXNwYWNlcyA9PT0gJ3N0cmluZycgPyBuYW1lc3BhY2VzIDogJycpLnNwbGl0KC9bXFxzLF0rLyk7XG4gICAgdmFyIGxlbiA9IHNwbGl0Lmxlbmd0aDtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgaWYgKCFzcGxpdFtpXSkge1xuICAgICAgICAvLyBpZ25vcmUgZW1wdHkgc3RyaW5nc1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgbmFtZXNwYWNlcyA9IHNwbGl0W2ldLnJlcGxhY2UoL1xcKi9nLCAnLio/Jyk7XG5cbiAgICAgIGlmIChuYW1lc3BhY2VzWzBdID09PSAnLScpIHtcbiAgICAgICAgY3JlYXRlRGVidWcuc2tpcHMucHVzaChuZXcgUmVnRXhwKCdeJyArIG5hbWVzcGFjZXMuc3Vic3RyKDEpICsgJyQnKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjcmVhdGVEZWJ1Zy5uYW1lcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcyArICckJykpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoaSA9IDA7IGkgPCBjcmVhdGVEZWJ1Zy5pbnN0YW5jZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpbnN0YW5jZSA9IGNyZWF0ZURlYnVnLmluc3RhbmNlc1tpXTtcbiAgICAgIGluc3RhbmNlLmVuYWJsZWQgPSBjcmVhdGVEZWJ1Zy5lbmFibGVkKGluc3RhbmNlLm5hbWVzcGFjZSk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAqIERpc2FibGUgZGVidWcgb3V0cHV0LlxuICAqXG4gICogQGFwaSBwdWJsaWNcbiAgKi9cblxuXG4gIGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgY3JlYXRlRGVidWcuZW5hYmxlKCcnKTtcbiAgfVxuICAvKipcbiAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIG1vZGUgbmFtZSBpcyBlbmFibGVkLCBmYWxzZSBvdGhlcndpc2UuXG4gICpcbiAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICogQGFwaSBwdWJsaWNcbiAgKi9cblxuXG4gIGZ1bmN0aW9uIGVuYWJsZWQobmFtZSkge1xuICAgIGlmIChuYW1lW25hbWUubGVuZ3RoIC0gMV0gPT09ICcqJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdmFyIGk7XG4gICAgdmFyIGxlbjtcblxuICAgIGZvciAoaSA9IDAsIGxlbiA9IGNyZWF0ZURlYnVnLnNraXBzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBpZiAoY3JlYXRlRGVidWcuc2tpcHNbaV0udGVzdChuYW1lKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMCwgbGVuID0gY3JlYXRlRGVidWcubmFtZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGlmIChjcmVhdGVEZWJ1Zy5uYW1lc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvKipcbiAgKiBDb2VyY2UgYHZhbGAuXG4gICpcbiAgKiBAcGFyYW0ge01peGVkfSB2YWxcbiAgKiBAcmV0dXJuIHtNaXhlZH1cbiAgKiBAYXBpIHByaXZhdGVcbiAgKi9cblxuXG4gIGZ1bmN0aW9uIGNvZXJjZSh2YWwpIHtcbiAgICBpZiAodmFsIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgIHJldHVybiB2YWwuc3RhY2sgfHwgdmFsLm1lc3NhZ2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuXG4gIGNyZWF0ZURlYnVnLmVuYWJsZShjcmVhdGVEZWJ1Zy5sb2FkKCkpO1xuICByZXR1cm4gY3JlYXRlRGVidWc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0dXA7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@sanity/portable-text-editor/node_modules/debug/src/index.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || false === true || process.__nwjs) {\n  module.exports = __webpack_require__(/*! ./browser.js */ \"(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/browser.js\");\n} else {\n  module.exports = __webpack_require__(/*! ./node.js */ \"(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/node.js\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wb3J0YWJsZS10ZXh0LWVkaXRvci9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFLEtBQWU7QUFDcEYsRUFBRSwrSUFBd0M7QUFDMUMsRUFBRTtBQUNGLEVBQUUseUlBQXFDO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG90ZWwtbWFuYWdlbWVudC8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3BvcnRhYmxlLXRleHQtZWRpdG9yL25vZGVfbW9kdWxlcy9kZWJ1Zy9zcmMvaW5kZXguanM/Y2JmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBEZXRlY3QgRWxlY3Ryb24gcmVuZGVyZXIgLyBud2pzIHByb2Nlc3MsIHdoaWNoIGlzIG5vZGUsIGJ1dCB3ZSBzaG91bGRcbiAqIHRyZWF0IGFzIGEgYnJvd3Nlci5cbiAqL1xuaWYgKHR5cGVvZiBwcm9jZXNzID09PSAndW5kZWZpbmVkJyB8fCBwcm9jZXNzLnR5cGUgPT09ICdyZW5kZXJlcicgfHwgcHJvY2Vzcy5icm93c2VyID09PSB0cnVlIHx8IHByb2Nlc3MuX19ud2pzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9icm93c2VyLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbm9kZS5qcycpO1xufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/node.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@sanity/portable-text-editor/node_modules/debug/src/node.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Module dependencies.\n */\nvar tty = __webpack_require__(/*! tty */ \"tty\");\n\nvar util = __webpack_require__(/*! util */ \"util\");\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = __webpack_require__(/*! supports-color */ \"(ssr)/./node_modules/supports-color/index.js\");\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/common.js\")(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n')\n    .map(function (str) { return str.trim(); })\n    .join(' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wb3J0YWJsZS10ZXh0LWVkaXRvci9ub2RlX21vZHVsZXMvZGVidWcvc3JjL25vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsVUFBVSxtQkFBTyxDQUFDLGdCQUFLOztBQUV2QixXQUFXLG1CQUFPLENBQUMsa0JBQU07QUFDekI7QUFDQTtBQUNBOzs7QUFHQSxZQUFZO0FBQ1osV0FBVztBQUNYLGtCQUFrQjtBQUNsQixZQUFZO0FBQ1osWUFBWTtBQUNaLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7O0FBRUEsY0FBYzs7QUFFZDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyxvRUFBZ0I7O0FBRTlDO0FBQ0EsSUFBSSxjQUFjO0FBQ2xCO0FBQ0EsRUFBRSxpQkFBaUIsNERBQTREOztBQUUvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxtQkFBbUI7QUFDbkI7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsR0FBRyxHQUFHOztBQUVOOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQyxJQUFJO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0NBQStDLEVBQUU7QUFDakQsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsaUJBQWlCO0FBQ25DO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyxvR0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvQkFBb0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvcG9ydGFibGUtdGV4dC1lZGl0b3Ivbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9ub2RlLmpzPzFlZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xudmFyIHR0eSA9IHJlcXVpcmUoJ3R0eScpO1xuXG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcbi8qKlxuICogVGhpcyBpcyB0aGUgTm9kZS5qcyBpbXBsZW1lbnRhdGlvbiBvZiBgZGVidWcoKWAuXG4gKi9cblxuXG5leHBvcnRzLmluaXQgPSBpbml0O1xuZXhwb3J0cy5sb2cgPSBsb2c7XG5leHBvcnRzLmZvcm1hdEFyZ3MgPSBmb3JtYXRBcmdzO1xuZXhwb3J0cy5zYXZlID0gc2F2ZTtcbmV4cG9ydHMubG9hZCA9IGxvYWQ7XG5leHBvcnRzLnVzZUNvbG9ycyA9IHVzZUNvbG9ycztcbi8qKlxuICogQ29sb3JzLlxuICovXG5cbmV4cG9ydHMuY29sb3JzID0gWzYsIDIsIDMsIDQsIDUsIDFdO1xuXG50cnkge1xuICAvLyBPcHRpb25hbCBkZXBlbmRlbmN5IChhcyBpbiwgZG9lc24ndCBuZWVkIHRvIGJlIGluc3RhbGxlZCwgTk9UIGxpa2Ugb3B0aW9uYWxEZXBlbmRlbmNpZXMgaW4gcGFja2FnZS5qc29uKVxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWV4dHJhbmVvdXMtZGVwZW5kZW5jaWVzXG4gIHZhciBzdXBwb3J0c0NvbG9yID0gcmVxdWlyZSgnc3VwcG9ydHMtY29sb3InKTtcblxuICBpZiAoc3VwcG9ydHNDb2xvciAmJiAoc3VwcG9ydHNDb2xvci5zdGRlcnIgfHwgc3VwcG9ydHNDb2xvcikubGV2ZWwgPj0gMikge1xuICAgIGV4cG9ydHMuY29sb3JzID0gWzIwLCAyMSwgMjYsIDI3LCAzMiwgMzMsIDM4LCAzOSwgNDAsIDQxLCA0MiwgNDMsIDQ0LCA0NSwgNTYsIDU3LCA2MiwgNjMsIDY4LCA2OSwgNzQsIDc1LCA3NiwgNzcsIDc4LCA3OSwgODAsIDgxLCA5MiwgOTMsIDk4LCA5OSwgMTEyLCAxMTMsIDEyOCwgMTI5LCAxMzQsIDEzNSwgMTQ4LCAxNDksIDE2MCwgMTYxLCAxNjIsIDE2MywgMTY0LCAxNjUsIDE2NiwgMTY3LCAxNjgsIDE2OSwgMTcwLCAxNzEsIDE3MiwgMTczLCAxNzgsIDE3OSwgMTg0LCAxODUsIDE5NiwgMTk3LCAxOTgsIDE5OSwgMjAwLCAyMDEsIDIwMiwgMjAzLCAyMDQsIDIwNSwgMjA2LCAyMDcsIDIwOCwgMjA5LCAyMTQsIDIxNSwgMjIwLCAyMjFdO1xuICB9XG59IGNhdGNoIChlcnJvcikge30gLy8gU3dhbGxvdyAtIHdlIG9ubHkgY2FyZSBpZiBgc3VwcG9ydHMtY29sb3JgIGlzIGF2YWlsYWJsZTsgaXQgZG9lc24ndCBoYXZlIHRvIGJlLlxuXG4vKipcbiAqIEJ1aWxkIHVwIHRoZSBkZWZhdWx0IGBpbnNwZWN0T3B0c2Agb2JqZWN0IGZyb20gdGhlIGVudmlyb25tZW50IHZhcmlhYmxlcy5cbiAqXG4gKiAgICQgREVCVUdfQ09MT1JTPW5vIERFQlVHX0RFUFRIPTEwIERFQlVHX1NIT1dfSElEREVOPWVuYWJsZWQgbm9kZSBzY3JpcHQuanNcbiAqL1xuXG5cbmV4cG9ydHMuaW5zcGVjdE9wdHMgPSBPYmplY3Qua2V5cyhwcm9jZXNzLmVudikuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIC9eZGVidWdfL2kudGVzdChrZXkpO1xufSkucmVkdWNlKGZ1bmN0aW9uIChvYmosIGtleSkge1xuICAvLyBDYW1lbC1jYXNlXG4gIHZhciBwcm9wID0ga2V5LnN1YnN0cmluZyg2KS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL18oW2Etel0pL2csIGZ1bmN0aW9uIChfLCBrKSB7XG4gICAgcmV0dXJuIGsudG9VcHBlckNhc2UoKTtcbiAgfSk7IC8vIENvZXJjZSBzdHJpbmcgdmFsdWUgaW50byBKUyB2YWx1ZVxuXG4gIHZhciB2YWwgPSBwcm9jZXNzLmVudltrZXldO1xuXG4gIGlmICgvXih5ZXN8b258dHJ1ZXxlbmFibGVkKSQvaS50ZXN0KHZhbCkpIHtcbiAgICB2YWwgPSB0cnVlO1xuICB9IGVsc2UgaWYgKC9eKG5vfG9mZnxmYWxzZXxkaXNhYmxlZCkkL2kudGVzdCh2YWwpKSB7XG4gICAgdmFsID0gZmFsc2U7XG4gIH0gZWxzZSBpZiAodmFsID09PSAnbnVsbCcpIHtcbiAgICB2YWwgPSBudWxsO1xuICB9IGVsc2Uge1xuICAgIHZhbCA9IE51bWJlcih2YWwpO1xuICB9XG5cbiAgb2JqW3Byb3BdID0gdmFsO1xuICByZXR1cm4gb2JqO1xufSwge30pO1xuLyoqXG4gKiBJcyBzdGRvdXQgYSBUVFk/IENvbG9yZWQgb3V0cHV0IGlzIGVuYWJsZWQgd2hlbiBgdHJ1ZWAuXG4gKi9cblxuZnVuY3Rpb24gdXNlQ29sb3JzKCkge1xuICByZXR1cm4gJ2NvbG9ycycgaW4gZXhwb3J0cy5pbnNwZWN0T3B0cyA/IEJvb2xlYW4oZXhwb3J0cy5pbnNwZWN0T3B0cy5jb2xvcnMpIDogdHR5LmlzYXR0eShwcm9jZXNzLnN0ZGVyci5mZCk7XG59XG4vKipcbiAqIEFkZHMgQU5TSSBjb2xvciBlc2NhcGUgY29kZXMgaWYgZW5hYmxlZC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblxuZnVuY3Rpb24gZm9ybWF0QXJncyhhcmdzKSB7XG4gIHZhciBuYW1lID0gdGhpcy5uYW1lc3BhY2UsXG4gICAgICB1c2VDb2xvcnMgPSB0aGlzLnVzZUNvbG9ycztcblxuICBpZiAodXNlQ29sb3JzKSB7XG4gICAgdmFyIGMgPSB0aGlzLmNvbG9yO1xuICAgIHZhciBjb2xvckNvZGUgPSBcIlxceDFCWzNcIiArIChjIDwgOCA/IGMgOiAnODs1OycgKyBjKTtcbiAgICB2YXIgcHJlZml4ID0gXCIgIFwiLmNvbmNhdChjb2xvckNvZGUsIFwiOzFtXCIpLmNvbmNhdChuYW1lLCBcIiBcXHgxQlswbVwiKTtcbiAgICBhcmdzWzBdID0gcHJlZml4ICsgYXJnc1swXS5zcGxpdCgnXFxuJykuam9pbignXFxuJyArIHByZWZpeCk7XG4gICAgYXJncy5wdXNoKGNvbG9yQ29kZSArICdtKycgKyBtb2R1bGUuZXhwb3J0cy5odW1hbml6ZSh0aGlzLmRpZmYpICsgXCJcXHgxQlswbVwiKTtcbiAgfSBlbHNlIHtcbiAgICBhcmdzWzBdID0gZ2V0RGF0ZSgpICsgbmFtZSArICcgJyArIGFyZ3NbMF07XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGF0ZSgpIHtcbiAgaWYgKGV4cG9ydHMuaW5zcGVjdE9wdHMuaGlkZURhdGUpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICByZXR1cm4gbmV3IERhdGUoKS50b0lTT1N0cmluZygpICsgJyAnO1xufVxuLyoqXG4gKiBJbnZva2VzIGB1dGlsLmZvcm1hdCgpYCB3aXRoIHRoZSBzcGVjaWZpZWQgYXJndW1lbnRzIGFuZCB3cml0ZXMgdG8gc3RkZXJyLlxuICovXG5cblxuZnVuY3Rpb24gbG9nKCkge1xuICByZXR1cm4gcHJvY2Vzcy5zdGRlcnIud3JpdGUodXRpbC5mb3JtYXQuYXBwbHkodXRpbCwgYXJndW1lbnRzKSArICdcXG4nKTtcbn1cbi8qKlxuICogU2F2ZSBgbmFtZXNwYWNlc2AuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZXNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblxuZnVuY3Rpb24gc2F2ZShuYW1lc3BhY2VzKSB7XG4gIGlmIChuYW1lc3BhY2VzKSB7XG4gICAgcHJvY2Vzcy5lbnYuREVCVUcgPSBuYW1lc3BhY2VzO1xuICB9IGVsc2Uge1xuICAgIC8vIElmIHlvdSBzZXQgYSBwcm9jZXNzLmVudiBmaWVsZCB0byBudWxsIG9yIHVuZGVmaW5lZCwgaXQgZ2V0cyBjYXN0IHRvIHRoZVxuICAgIC8vIHN0cmluZyAnbnVsbCcgb3IgJ3VuZGVmaW5lZCcuIEp1c3QgZGVsZXRlIGluc3RlYWQuXG4gICAgZGVsZXRlIHByb2Nlc3MuZW52LkRFQlVHO1xuICB9XG59XG4vKipcbiAqIExvYWQgYG5hbWVzcGFjZXNgLlxuICpcbiAqIEByZXR1cm4ge1N0cmluZ30gcmV0dXJucyB0aGUgcHJldmlvdXNseSBwZXJzaXN0ZWQgZGVidWcgbW9kZXNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblxuZnVuY3Rpb24gbG9hZCgpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52LkRFQlVHO1xufVxuLyoqXG4gKiBJbml0IGxvZ2ljIGZvciBgZGVidWdgIGluc3RhbmNlcy5cbiAqXG4gKiBDcmVhdGUgYSBuZXcgYGluc3BlY3RPcHRzYCBvYmplY3QgaW4gY2FzZSBgdXNlQ29sb3JzYCBpcyBzZXRcbiAqIGRpZmZlcmVudGx5IGZvciBhIHBhcnRpY3VsYXIgYGRlYnVnYCBpbnN0YW5jZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGluaXQoZGVidWcpIHtcbiAgZGVidWcuaW5zcGVjdE9wdHMgPSB7fTtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhleHBvcnRzLmluc3BlY3RPcHRzKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBkZWJ1Zy5pbnNwZWN0T3B0c1trZXlzW2ldXSA9IGV4cG9ydHMuaW5zcGVjdE9wdHNba2V5c1tpXV07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2NvbW1vbicpKGV4cG9ydHMpO1xudmFyIGZvcm1hdHRlcnMgPSBtb2R1bGUuZXhwb3J0cy5mb3JtYXR0ZXJzO1xuLyoqXG4gKiBNYXAgJW8gdG8gYHV0aWwuaW5zcGVjdCgpYCwgYWxsIG9uIGEgc2luZ2xlIGxpbmUuXG4gKi9cblxuZm9ybWF0dGVycy5vID0gZnVuY3Rpb24gKHYpIHtcbiAgdGhpcy5pbnNwZWN0T3B0cy5jb2xvcnMgPSB0aGlzLnVzZUNvbG9ycztcbiAgcmV0dXJuIHV0aWwuaW5zcGVjdCh2LCB0aGlzLmluc3BlY3RPcHRzKVxuICAgIC5zcGxpdCgnXFxuJylcbiAgICAubWFwKGZ1bmN0aW9uIChzdHIpIHsgcmV0dXJuIHN0ci50cmltKCk7IH0pXG4gICAgLmpvaW4oJyAnKTtcbn07XG4vKipcbiAqIE1hcCAlTyB0byBgdXRpbC5pbnNwZWN0KClgLCBhbGxvd2luZyBtdWx0aXBsZSBsaW5lcyBpZiBuZWVkZWQuXG4gKi9cblxuXG5mb3JtYXR0ZXJzLk8gPSBmdW5jdGlvbiAodikge1xuICB0aGlzLmluc3BlY3RPcHRzLmNvbG9ycyA9IHRoaXMudXNlQ29sb3JzO1xuICByZXR1cm4gdXRpbC5pbnNwZWN0KHYsIHRoaXMuaW5zcGVjdE9wdHMpO1xufTtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/eventsource/node.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/eventsource/node.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! eventsource */ \"(ssr)/./node_modules/eventsource/lib/eventsource.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9ldmVudHNvdXJjZS9ub2RlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhHQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvdGVsLW1hbmFnZW1lbnQvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9ldmVudHNvdXJjZS9ub2RlLmpzPzNiZDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdldmVudHNvdXJjZScpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/eventsource/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/block-tools/lib/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@sanity/block-tools/lib/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBlockContentFeatures: () => (/* binding */ getBlockContentFeatures),\n/* harmony export */   htmlToBlocks: () => (/* binding */ htmlToBlocks),\n/* harmony export */   normalizeBlock: () => (/* binding */ normalizeBlock),\n/* harmony export */   randomKey: () => (/* binding */ randomKey)\n/* harmony export */ });\n/* harmony import */ var lodash_flatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/flatten.js */ \"(ssr)/./node_modules/lodash/flatten.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEqual.js */ \"(ssr)/./node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/uniq.js */ \"(ssr)/./node_modules/lodash/uniq.js\");\n/* harmony import */ var get_random_values_esm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! get-random-values-esm */ \"(ssr)/./node_modules/get-random-values-esm/index.mjs\");\n\n\n\n\nfunction findBlockType(type) {\n  return type.type ? findBlockType(type.type) : type.name === \"block\";\n}\nconst toString = Object.prototype.toString;\nfunction resolveJsType(val) {\n  switch (toString.call(val)) {\n    case \"[object Function]\":\n      return \"function\";\n    case \"[object Date]\":\n      return \"date\";\n    case \"[object RegExp]\":\n      return \"regexp\";\n    case \"[object Arguments]\":\n      return \"arguments\";\n    case \"[object Array]\":\n      return \"array\";\n    case \"[object String]\":\n      return \"string\";\n  }\n  return val === null ? \"null\" : val === void 0 ? \"undefined\" : val && typeof val == \"object\" && \"nodeType\" in val && val.nodeType === 1 ? \"element\" : val === Object(val) ? \"object\" : typeof val;\n}\nfunction isRecord$1(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction isPortableTextTextBlock(value) {\n  return isRecord$1(value) && typeof value._type == \"string\" && // block types can be named, so expect anything here.\n  Array.isArray(value.children) && value.children.every((child) => isRecord$1(child)) && (\"markDefs\" in value ? Array.isArray(value.markDefs) && value.markDefs.every((def) => isRecord$1(def)) : !0) && (\"style\" in value ? typeof value.style == \"string\" : !0);\n}\nfunction isPortableTextSpan(value) {\n  return isRecord$1(value) && value._type === \"span\" && typeof value.text == \"string\" && (\"marks\" in value ? Array.isArray(value.marks) && value.marks.every((mark) => typeof mark == \"string\") : !0);\n}\nfunction isRecord(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction isObjectSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"object\" : !1;\n}\nfunction isArraySchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"array\" : !1;\n}\nfunction isTitledListValue(item) {\n  return typeof item == \"object\" && item !== null && \"title\" in item && \"value\" in item;\n}\nfunction isSpanSchemaType(type) {\n  return isRecord(type) ? Array.isArray(type.annotations) && Array.isArray(type.decorators) : !1;\n}\nfunction isBlockSchemaType(type) {\n  if (!isRecord(type) || !Array.isArray(type.fields)) return !1;\n  const maybeSpanChildren = type.fields.find(isBlockChildrenObjectField), maybeStyle = type.fields.find(isBlockStyleObjectField), maybeList = type.fields.find(isBlockListObjectField);\n  return isBlockChildrenObjectField(maybeSpanChildren) && isBlockStyleObjectField(maybeStyle) && isBlockListObjectField(maybeList);\n}\nfunction isBlockStyleObjectField(field) {\n  return !isRecord(field) || field.name !== \"style\" ? !1 : isRecord(field.type) && field.type.jsonType === \"string\";\n}\nfunction isBlockListObjectField(field) {\n  return !isRecord(field) || field.name !== \"listItem\" ? !1 : isRecord(field.type) && field.type.jsonType === \"string\";\n}\nfunction isBlockChildrenObjectField(field) {\n  return !isRecord(field) || field.name !== \"children\" || !isArraySchemaType(field.type) ? !1 : field.type.of.some(isSpanSchemaType);\n}\nvar s = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, c = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 };\nnew Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nObject.fromEntries(Object.entries(c).map((t) => t.reverse()));\nObject.fromEntries(Object.entries(s).map((t) => t.reverse()));\nvar S = `${Object.values(s).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return { cleaned: t.replace(f, \"\"), encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\" };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nconst PRESERVE_WHITESPACE_TAGS = [\"pre\", \"textarea\", \"code\"], BLOCK_DEFAULT_STYLE = \"normal\", DEFAULT_BLOCK = Object.freeze({\n  _type: \"block\",\n  markDefs: [],\n  style: BLOCK_DEFAULT_STYLE\n}), DEFAULT_SPAN = Object.freeze({\n  _type: \"span\",\n  marks: []\n}), HTML_BLOCK_TAGS = {\n  p: DEFAULT_BLOCK,\n  blockquote: { ...DEFAULT_BLOCK, style: \"blockquote\" }\n}, HTML_SPAN_TAGS = {\n  span: { object: \"text\" }\n}, HTML_LIST_CONTAINER_TAGS = {\n  ol: { object: null },\n  ul: { object: null }\n}, HTML_HEADER_TAGS = {\n  h1: { ...DEFAULT_BLOCK, style: \"h1\" },\n  h2: { ...DEFAULT_BLOCK, style: \"h2\" },\n  h3: { ...DEFAULT_BLOCK, style: \"h3\" },\n  h4: { ...DEFAULT_BLOCK, style: \"h4\" },\n  h5: { ...DEFAULT_BLOCK, style: \"h5\" },\n  h6: { ...DEFAULT_BLOCK, style: \"h6\" }\n}, HTML_MISC_TAGS = {\n  br: { ...DEFAULT_BLOCK, style: BLOCK_DEFAULT_STYLE }\n}, HTML_DECORATOR_TAGS = {\n  b: \"strong\",\n  strong: \"strong\",\n  i: \"em\",\n  em: \"em\",\n  u: \"underline\",\n  s: \"strike-through\",\n  strike: \"strike-through\",\n  del: \"strike-through\",\n  code: \"code\",\n  sup: \"sup\",\n  sub: \"sub\",\n  ins: \"ins\",\n  mark: \"mark\",\n  small: \"small\"\n}, HTML_LIST_ITEM_TAGS = {\n  li: {\n    ...DEFAULT_BLOCK,\n    style: BLOCK_DEFAULT_STYLE,\n    level: 1,\n    listItem: \"bullet\"\n  }\n}, ELEMENT_MAP = {\n  ...HTML_BLOCK_TAGS,\n  ...HTML_SPAN_TAGS,\n  ...HTML_LIST_CONTAINER_TAGS,\n  ...HTML_LIST_ITEM_TAGS,\n  ...HTML_HEADER_TAGS,\n  ...HTML_MISC_TAGS\n};\nlodash_uniq_js__WEBPACK_IMPORTED_MODULE_2__(\n  Object.values(ELEMENT_MAP).filter((tag) => \"style\" in tag).map((tag) => tag.style)\n);\nlodash_uniq_js__WEBPACK_IMPORTED_MODULE_2__(Object.values(HTML_DECORATOR_TAGS));\nfunction blockContentFeatures(blockContentType) {\n  var _a, _b;\n  if (!blockContentType)\n    throw new Error(\"Parameter 'blockContentType' required\");\n  const blockType = blockContentType.of.find(findBlockType);\n  if (!isBlockSchemaType(blockType))\n    throw new Error(\"'block' type is not defined in this schema (required).\");\n  const ofType = (_b = (_a = blockType.fields.find(isBlockChildrenObjectField)) == null ? void 0 : _a.type) == null ? void 0 : _b.of;\n  if (!ofType)\n    throw new Error(\"No `of` declaration found for blocks `children` field\");\n  const spanType = ofType.find((member) => member.name === \"span\");\n  if (!spanType)\n    throw new Error(\"No `span` type found in `block` schema type `children` definition\");\n  const inlineObjectTypes = ofType.filter(\n    (inlineType) => inlineType.name !== \"span\" && isObjectSchemaType(inlineType)\n  ), blockObjectTypes = blockContentType.of.filter(\n    (memberType) => memberType.name !== blockType.name && isObjectSchemaType(memberType)\n  );\n  return {\n    styles: resolveEnabledStyles(blockType),\n    decorators: resolveEnabledDecorators(spanType),\n    annotations: resolveEnabledAnnotationTypes(spanType),\n    lists: resolveEnabledListItems(blockType),\n    types: {\n      block: blockContentType,\n      span: spanType,\n      inlineObjects: inlineObjectTypes,\n      blockObjects: blockObjectTypes\n    }\n  };\n}\nfunction resolveEnabledStyles(blockType) {\n  const styleField = blockType.fields.find(isBlockStyleObjectField);\n  if (!styleField)\n    throw new Error(\"A field with name 'style' is not defined in the block type (required).\");\n  const textStyles = getTitledListValuesFromEnumListOptions(styleField.type.options);\n  if (textStyles.length === 0)\n    throw new Error(\n      \"The style fields need at least one style defined. I.e: {title: 'Normal', value: 'normal'}.\"\n    );\n  return textStyles;\n}\nfunction resolveEnabledAnnotationTypes(spanType) {\n  return spanType.annotations.map((annotation) => ({\n    title: annotation.title,\n    type: annotation,\n    value: annotation.name,\n    icon: annotation.icon\n  }));\n}\nfunction resolveEnabledDecorators(spanType) {\n  return spanType.decorators;\n}\nfunction resolveEnabledListItems(blockType) {\n  const listField = blockType.fields.find(isBlockListObjectField);\n  if (!listField)\n    throw new Error(\"A field with name 'list' is not defined in the block type (required).\");\n  const listItems = getTitledListValuesFromEnumListOptions(listField.type.options);\n  if (!listItems)\n    throw new Error(\"The list field need at least to be an empty array\");\n  return listItems;\n}\nfunction getTitledListValuesFromEnumListOptions(options) {\n  const list = options ? options.list : void 0;\n  return Array.isArray(list) ? list.map((item) => isTitledListValue(item) ? item : { title: item, value: item }) : [];\n}\nconst _XPathResult = {\n  ANY_TYPE: 0,\n  NUMBER_TYPE: 1,\n  STRING_TYPE: 2,\n  BOOLEAN_TYPE: 3,\n  UNORDERED_NODE_ITERATOR_TYPE: 4,\n  ORDERED_NODE_ITERATOR_TYPE: 5,\n  UNORDERED_NODE_SNAPSHOT_TYPE: 6,\n  ORDERED_NODE_SNAPSHOT_TYPE: 7,\n  ANY_UNORDERED_NODE_TYPE: 8,\n  FIRST_ORDERED_NODE_TYPE: 9\n};\nvar preprocessGDocs = (html, doc, options) => {\n  var _a;\n  const whitespaceOnPasteMode = (options == null ? void 0 : options.unstable_whitespaceOnPasteMode) || \"preserve\";\n  let gDocsRootOrSiblingNode = doc.evaluate(\n    '//*[@id and contains(@id, \"docs-internal-guid\")]',\n    doc,\n    null,\n    _XPathResult.ORDERED_NODE_ITERATOR_TYPE,\n    null\n  ).iterateNext();\n  if (gDocsRootOrSiblingNode) {\n    const isWrappedRootTag = tagName(gDocsRootOrSiblingNode) === \"b\";\n    switch (isWrappedRootTag || (gDocsRootOrSiblingNode = doc.body), whitespaceOnPasteMode) {\n      case \"normalize\":\n        normalizeWhitespace(gDocsRootOrSiblingNode);\n        break;\n      case \"remove\":\n        removeAllWhitespace(gDocsRootOrSiblingNode);\n        break;\n    }\n    const childNodes = doc.evaluate(\n      \"//*\",\n      doc,\n      null,\n      _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n      null\n    );\n    for (let i = childNodes.snapshotLength - 1; i >= 0; i--) {\n      const elm = childNodes.snapshotItem(i);\n      elm == null || elm.setAttribute(\"data-is-google-docs\", \"true\"), ((elm == null ? void 0 : elm.parentElement) === gDocsRootOrSiblingNode || !isWrappedRootTag && elm.parentElement === doc.body) && (elm == null || elm.setAttribute(\"data-is-root-node\", \"true\"), tagName(elm)), tagName(elm) === \"li\" && elm.firstChild && tagName(elm == null ? void 0 : elm.firstChild) === \"img\" && elm.removeChild(elm.firstChild);\n    }\n    return isWrappedRootTag && ((_a = doc.body.firstElementChild) == null || _a.replaceWith(...Array.from(gDocsRootOrSiblingNode.childNodes))), doc;\n  }\n  return doc;\n};\nconst unwantedWordDocumentPaths = [\n  \"/html/text()\",\n  \"/html/head/text()\",\n  \"/html/body/text()\",\n  \"/html/body/ul/text()\",\n  \"/html/body/ol/text()\",\n  \"//comment()\",\n  \"//style\",\n  \"//xml\",\n  \"//script\",\n  \"//meta\",\n  \"//link\"\n];\nvar preprocessHTML = (html, doc) => {\n  var _a, _b, _c;\n  const bodyTextNodes = doc.evaluate(\n    \"/html/body/text()\",\n    doc,\n    null,\n    _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n  for (let i = bodyTextNodes.snapshotLength - 1; i >= 0; i--) {\n    const node = bodyTextNodes.snapshotItem(i), text = node.textContent || \"\";\n    if (text.replace(/[^\\S\\n]+$/g, \"\")) {\n      const newNode = doc.createElement(\"span\");\n      newNode.appendChild(doc.createTextNode(text)), (_a = node.parentNode) == null || _a.replaceChild(newNode, node);\n    } else\n      (_b = node.parentNode) == null || _b.removeChild(node);\n  }\n  const unwantedNodes = doc.evaluate(\n    unwantedWordDocumentPaths.join(\"|\"),\n    doc,\n    null,\n    _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n  for (let i = unwantedNodes.snapshotLength - 1; i >= 0; i--) {\n    const unwanted = unwantedNodes.snapshotItem(i);\n    unwanted && ((_c = unwanted.parentNode) == null || _c.removeChild(unwanted));\n  }\n  return doc;\n}, preprocessNotion = (html, doc) => {\n  const NOTION_REGEX = /<!-- notionvc:.*?-->/g;\n  if (html.match(NOTION_REGEX)) {\n    const childNodes = doc.evaluate(\n      \"//*\",\n      doc,\n      null,\n      _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n      null\n    );\n    for (let i = childNodes.snapshotLength - 1; i >= 0; i--) {\n      const elm = childNodes.snapshotItem(i);\n      elm == null || elm.setAttribute(\"data-is-notion\", \"true\");\n    }\n    return doc;\n  }\n  return doc;\n}, preprocessWhitespace = (_2, doc) => {\n  function processNode(node) {\n    var _a, _b;\n    if (node.nodeType === _XPathResult.BOOLEAN_TYPE && !PRESERVE_WHITESPACE_TAGS.includes(((_a = node.parentElement) == null ? void 0 : _a.tagName.toLowerCase()) || \"\"))\n      node.textContent = ((_b = node.textContent) == null ? void 0 : _b.replace(/\\s\\s+/g, \" \").replace(/[\\r\\n]+/g, \" \")) || \"\";\n    else\n      for (let i = 0; i < node.childNodes.length; i++)\n        processNode(node.childNodes[i]);\n  }\n  return processNode(doc.body), doc;\n};\nconst WORD_HTML_REGEX = /(class=\"?Mso|style=(?:\"|')[^\"]*?\\bmso-|w:WordDocument|<o:\\w+>|<\\/font>)/, unwantedPaths = [\n  \"//o:p\",\n  \"//span[@style='mso-list:Ignore']\",\n  \"//span[@style='mso-list: Ignore']\"\n], mappedPaths = [\n  \"//p[@class='MsoTocHeading']\",\n  \"//p[@class='MsoTitle']\",\n  \"//p[@class='MsoToaHeading']\",\n  \"//p[@class='MsoSubtitle']\",\n  \"//span[@class='MsoSubtleEmphasis']\",\n  \"//span[@class='MsoIntenseEmphasis']\"\n], elementMap = {\n  MsoTocHeading: [\"h3\"],\n  MsoTitle: [\"h1\"],\n  MsoToaHeading: [\"h2\"],\n  MsoSubtitle: [\"h5\"],\n  MsoSubtleEmphasis: [\"span\", \"em\"],\n  MsoIntenseEmphasis: [\"span\", \"em\", \"strong\"]\n  // Remove cruft\n};\nfunction isWordHtml(html) {\n  return WORD_HTML_REGEX.test(html);\n}\nvar preprocessWord = (html, doc) => {\n  var _a;\n  if (!isWordHtml(html))\n    return doc;\n  const unwantedNodes = doc.evaluate(\n    unwantedPaths.join(\"|\"),\n    doc,\n    (prefix) => prefix === \"o\" ? \"urn:schemas-microsoft-com:office:office\" : null,\n    _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n  for (let i = unwantedNodes.snapshotLength - 1; i >= 0; i--) {\n    const unwanted = unwantedNodes.snapshotItem(i);\n    unwanted != null && unwanted.parentNode && unwanted.parentNode.removeChild(unwanted);\n  }\n  const mappedElements = doc.evaluate(\n    mappedPaths.join(\"|\"),\n    doc,\n    null,\n    _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n  for (let i = mappedElements.snapshotLength - 1; i >= 0; i--) {\n    const mappedElm = mappedElements.snapshotItem(i), tags = elementMap[mappedElm.className], text = new Text(mappedElm.textContent || \"\");\n    if (!tags)\n      continue;\n    const parentElement = document.createElement(tags[0]);\n    let parent = parentElement, child = parentElement;\n    tags.slice(1).forEach((tag) => {\n      child = document.createElement(tag), parent.appendChild(child), parent = child;\n    }), child.appendChild(text), (_a = mappedElm == null ? void 0 : mappedElm.parentNode) == null || _a.replaceChild(parentElement, mappedElm);\n  }\n  return doc;\n}, preprocessors = [\n  preprocessWhitespace,\n  preprocessNotion,\n  preprocessWord,\n  preprocessGDocs,\n  preprocessHTML\n];\nfunction createRuleOptions(blockContentType) {\n  const features = blockContentFeatures(blockContentType), enabledBlockStyles = features.styles.map((item) => item.value || item.title), enabledSpanDecorators = features.decorators.map((item) => item.value || item.title), enabledBlockAnnotations = features.annotations.map((item) => item.value || item.title || \"\"), enabledListTypes = features.lists.map((item) => item.value || item.title || \"\");\n  return {\n    enabledBlockStyles,\n    enabledSpanDecorators,\n    enabledBlockAnnotations,\n    enabledListTypes\n  };\n}\nfunction tagName(el) {\n  if (el && \"tagName\" in el)\n    return el.tagName.toLowerCase();\n}\nfunction preprocess(html, parseHtml, options) {\n  const cleanHTML = O(html), doc = parseHtml(normalizeHtmlBeforePreprocess(cleanHTML));\n  return preprocessors.forEach((processor) => {\n    processor(cleanHTML, doc, options);\n  }), doc;\n}\nfunction normalizeHtmlBeforePreprocess(html) {\n  return html.trim();\n}\nfunction defaultParseHtml() {\n  if (resolveJsType(DOMParser) === \"undefined\")\n    throw new Error(\n      \"The native `DOMParser` global which the `Html` deserializer uses by default is not present in this environment. You must supply the `options.parseHtml` function instead.\"\n    );\n  return (html) => new DOMParser().parseFromString(html, \"text/html\");\n}\nfunction flattenNestedBlocks(blocks2) {\n  let depth = 0;\n  const flattened = [], traverse = (nodes) => {\n    const toRemove = [];\n    nodes.forEach((node) => {\n      depth === 0 && flattened.push(node), isPortableTextTextBlock(node) && (depth > 0 && (toRemove.push(node), flattened.push(node)), depth++, traverse(node.children)), node._type === \"__block\" && (toRemove.push(node), flattened.push(node.block));\n    }), toRemove.forEach((node) => {\n      nodes.splice(nodes.indexOf(node), 1);\n    }), depth--;\n  };\n  return traverse(blocks2), flattened;\n}\nfunction nextSpan(block, index) {\n  const next = block.children[index + 1];\n  return next && next._type === \"span\" ? next : null;\n}\nfunction prevSpan(block, index) {\n  const prev = block.children[index - 1];\n  return prev && prev._type === \"span\" ? prev : null;\n}\nfunction isWhiteSpaceChar(text) {\n  return [\"\\xA0\", \" \"].includes(text);\n}\nfunction trimWhitespace(blocks2) {\n  return blocks2.forEach((block) => {\n    isPortableTextTextBlock(block) && block.children.forEach((child, index) => {\n      if (!isMinimalSpan(child))\n        return;\n      const nextChild = nextSpan(block, index), prevChild = prevSpan(block, index);\n      index === 0 && (child.text = child.text.replace(/^[^\\S\\n]+/g, \"\")), index === block.children.length - 1 && (child.text = child.text.replace(/[^\\S\\n]+$/g, \"\")), /\\s/.test(child.text.slice(Math.max(0, child.text.length - 1))) && nextChild && isMinimalSpan(nextChild) && /\\s/.test(nextChild.text.slice(0, 1)) && (child.text = child.text.replace(/[^\\S\\n]+$/g, \"\")), /\\s/.test(child.text.slice(0, 1)) && prevChild && isMinimalSpan(prevChild) && /\\s/.test(prevChild.text.slice(Math.max(0, prevChild.text.length - 1))) && (child.text = child.text.replace(/^[^\\S\\n]+/g, \"\")), child.text || block.children.splice(index, 1), prevChild && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(prevChild.marks, child.marks) && isWhiteSpaceChar(child.text) ? (prevChild.text += \" \", block.children.splice(index, 1)) : nextChild && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(nextChild.marks, child.marks) && isWhiteSpaceChar(child.text) && (nextChild.text = ` ${nextChild.text}`, block.children.splice(index, 1));\n    });\n  }), blocks2;\n}\nfunction ensureRootIsBlocks(blocks2) {\n  return blocks2.reduce((memo, node, i, original) => {\n    if (node._type === \"block\")\n      return memo.push(node), memo;\n    if (node._type === \"__block\")\n      return memo.push(node.block), memo;\n    const lastBlock = memo[memo.length - 1];\n    if (i > 0 && !isPortableTextTextBlock(original[i - 1]) && isPortableTextTextBlock(lastBlock))\n      return lastBlock.children.push(node), memo;\n    const block = {\n      ...DEFAULT_BLOCK,\n      children: [node]\n    };\n    return memo.push(block), memo;\n  }, []);\n}\nfunction isNodeList(node) {\n  return Object.prototype.toString.call(node) == \"[object NodeList]\";\n}\nfunction isMinimalSpan(node) {\n  return node._type === \"span\";\n}\nfunction isMinimalBlock(node) {\n  return node._type === \"block\";\n}\nfunction isPlaceholderDecorator(node) {\n  return node._type === \"__decorator\";\n}\nfunction isPlaceholderAnnotation(node) {\n  return node._type === \"__annotation\";\n}\nfunction isElement(node) {\n  return node.nodeType === 1;\n}\nfunction normalizeWhitespace(rootNode) {\n  let emptyBlockCount = 0, lastParent = null;\n  const nodesToRemove = [];\n  for (let child = rootNode.firstChild; child; child = child.nextSibling) {\n    if (!isElement(child)) {\n      normalizeWhitespace(child), emptyBlockCount = 0;\n      continue;\n    }\n    const elm = child;\n    isWhitespaceBlock(elm) ? (lastParent && elm.parentElement === lastParent ? (emptyBlockCount++, emptyBlockCount > 1 && nodesToRemove.push(elm)) : emptyBlockCount = 1, lastParent = elm.parentElement) : (normalizeWhitespace(child), emptyBlockCount = 0);\n  }\n  nodesToRemove.forEach((node) => {\n    var _a;\n    return (_a = node.parentElement) == null ? void 0 : _a.removeChild(node);\n  });\n}\nfunction removeAllWhitespace(rootNode) {\n  const nodesToRemove = [];\n  function collectNodesToRemove(currentNode) {\n    var _a, _b;\n    if (isElement(currentNode)) {\n      const elm = currentNode;\n      if (tagName(elm) === \"br\" && (tagName(elm.nextElementSibling) === \"p\" || tagName(elm.previousElementSibling) === \"p\")) {\n        nodesToRemove.push(elm);\n        return;\n      }\n      if ((tagName(elm) === \"p\" || tagName(elm) === \"br\") && ((_b = (_a = elm == null ? void 0 : elm.firstChild) == null ? void 0 : _a.textContent) == null ? void 0 : _b.trim()) === \"\") {\n        nodesToRemove.push(elm);\n        return;\n      }\n      for (let child = elm.firstChild; child; child = child.nextSibling)\n        collectNodesToRemove(child);\n    }\n  }\n  collectNodesToRemove(rootNode), nodesToRemove.forEach((node) => {\n    var _a;\n    return (_a = node.parentElement) == null ? void 0 : _a.removeChild(node);\n  });\n}\nfunction isWhitespaceBlock(elm) {\n  var _a;\n  return [\"p\", \"br\"].includes(tagName(elm) || \"\") && !((_a = elm.textContent) != null && _a.trim());\n}\nconst LIST_CONTAINER_TAGS = Object.keys(HTML_LIST_CONTAINER_TAGS);\nfunction isEmphasis$1(el) {\n  const style = isElement(el) && el.getAttribute(\"style\");\n  return /font-style\\s*:\\s*italic/.test(style || \"\");\n}\nfunction isStrong$1(el) {\n  const style = isElement(el) && el.getAttribute(\"style\");\n  return /font-weight\\s*:\\s*700/.test(style || \"\");\n}\nfunction isUnderline$1(el) {\n  if (!isElement(el) || tagName(el.parentNode) === \"a\")\n    return !1;\n  const style = isElement(el) && el.getAttribute(\"style\");\n  return /text-decoration\\s*:\\s*underline/.test(style || \"\");\n}\nfunction isStrikethrough(el) {\n  const style = isElement(el) && el.getAttribute(\"style\");\n  return /text-decoration\\s*:\\s*(?:.*line-through.*;)/.test(style || \"\");\n}\nfunction isGoogleDocs(el) {\n  return isElement(el) && !!el.getAttribute(\"data-is-google-docs\");\n}\nfunction isRootNode(el) {\n  return isElement(el) && !!el.getAttribute(\"data-is-root-node\");\n}\nfunction getListItemStyle$1(el) {\n  const parentTag = tagName(el.parentNode);\n  if (!(parentTag && !LIST_CONTAINER_TAGS.includes(parentTag)))\n    return tagName(el.parentNode) === \"ul\" ? \"bullet\" : \"number\";\n}\nfunction getListItemLevel$1(el) {\n  let level = 0;\n  if (tagName(el) === \"li\") {\n    let parentNode = el.parentNode;\n    for (; parentNode; ) {\n      const parentTag = tagName(parentNode);\n      parentTag && LIST_CONTAINER_TAGS.includes(parentTag) && level++, parentNode = parentNode.parentNode;\n    }\n  } else\n    level = 1;\n  return level;\n}\nconst blocks = {\n  ...HTML_BLOCK_TAGS,\n  ...HTML_HEADER_TAGS\n};\nfunction getBlockStyle(el, enabledBlockStyles) {\n  const childTag = tagName(el.firstChild), block = childTag && blocks[childTag];\n  return block && enabledBlockStyles.includes(block.style) ? block.style : BLOCK_DEFAULT_STYLE;\n}\nfunction createGDocsRules(_blockContentType, options) {\n  return [\n    {\n      deserialize(el) {\n        if (isElement(el) && tagName(el) === \"span\" && isGoogleDocs(el)) {\n          const span = {\n            ...DEFAULT_SPAN,\n            marks: [],\n            text: el.textContent\n          };\n          return isStrong$1(el) && span.marks.push(\"strong\"), isUnderline$1(el) && span.marks.push(\"underline\"), isStrikethrough(el) && span.marks.push(\"strike-through\"), isEmphasis$1(el) && span.marks.push(\"em\"), span;\n        }\n      }\n    },\n    {\n      deserialize(el, next) {\n        var _a;\n        if (tagName(el) === \"li\" && isGoogleDocs(el))\n          return {\n            ...DEFAULT_BLOCK,\n            listItem: getListItemStyle$1(el),\n            level: getListItemLevel$1(el),\n            style: getBlockStyle(el, options.enabledBlockStyles),\n            children: next(((_a = el.firstChild) == null ? void 0 : _a.childNodes) || [])\n          };\n      }\n    },\n    {\n      deserialize(el) {\n        var _a;\n        if (tagName(el) === \"br\" && isGoogleDocs(el) && isElement(el) && el.classList.contains(\"apple-interchange-newline\"))\n          return {\n            ...DEFAULT_SPAN,\n            text: \"\"\n          };\n        if (tagName(el) === \"br\" && isGoogleDocs(el) && isElement(el) && ((_a = el == null ? void 0 : el.parentNode) == null ? void 0 : _a.textContent) === \"\")\n          return {\n            ...DEFAULT_SPAN,\n            text: \"\"\n          };\n        if (tagName(el) === \"br\" && isGoogleDocs(el) && isElement(el) && isRootNode(el))\n          return {\n            ...DEFAULT_SPAN,\n            text: \"\"\n          };\n      }\n    }\n  ];\n}\nfunction whatwgRNG(length = 16) {\n  const rnds8 = new Uint8Array(length);\n  return (0,get_random_values_esm__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(rnds8), rnds8;\n}\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i)\n  byteToHex[i] = (i + 256).toString(16).slice(1);\nfunction randomKey(length) {\n  return whatwgRNG(length).reduce((str, n) => str + byteToHex[n], \"\").slice(0, length);\n}\nfunction resolveListItem(listNodeTagName, enabledListTypes) {\n  if (listNodeTagName === \"ul\" && enabledListTypes.includes(\"bullet\"))\n    return \"bullet\";\n  if (listNodeTagName === \"ol\" && enabledListTypes.includes(\"number\"))\n    return \"number\";\n}\nfunction createHTMLRules(blockContentType, options) {\n  return [\n    // Text nodes\n    {\n      deserialize(el) {\n        if (tagName(el) === \"pre\")\n          return;\n        const isValidText = (el.nodeType === 3 && (el.textContent || \"\").replace(/[\\r\\n]/g, \" \").replace(/\\s\\s+/g, \" \") === \" \" && el.nextSibling && el.nextSibling.nodeType !== 3 && el.previousSibling && el.previousSibling.nodeType !== 3 || el.textContent !== \" \") && tagName(el.parentNode) !== \"body\";\n        if (el.nodeName === \"#text\" && isValidText)\n          return {\n            ...DEFAULT_SPAN,\n            marks: [],\n            text: (el.textContent || \"\").replace(/\\s\\s+/g, \" \")\n          };\n      }\n    },\n    // Pre element\n    {\n      deserialize(el) {\n        if (tagName(el) !== \"pre\")\n          return;\n        const isCodeEnabled = options.enabledBlockStyles.includes(\"code\");\n        return {\n          _type: \"block\",\n          style: \"normal\",\n          markDefs: [],\n          children: [\n            {\n              ...DEFAULT_SPAN,\n              marks: isCodeEnabled ? [\"code\"] : [],\n              text: el.textContent || \"\"\n            }\n          ]\n        };\n      }\n    },\n    // Blockquote element\n    {\n      deserialize(el, next) {\n        if (tagName(el) !== \"blockquote\")\n          return;\n        const blocks2 = {\n          ...HTML_BLOCK_TAGS,\n          ...HTML_HEADER_TAGS\n        };\n        delete blocks2.blockquote;\n        const children = [];\n        return el.childNodes.forEach((node, index) => {\n          if (node.nodeType === 1 && Object.keys(blocks2).includes(node.localName.toLowerCase())) {\n            if (!el.ownerDocument)\n              return;\n            const span = el.ownerDocument.createElement(\"span\");\n            span.appendChild(el.ownerDocument.createTextNode(\"\\r\")), node.childNodes.forEach((cn) => {\n              span.appendChild(cn.cloneNode(!0));\n            }), index !== el.childNodes.length && span.appendChild(el.ownerDocument.createTextNode(\"\\r\")), children.push(span);\n          } else\n            children.push(node);\n        }), {\n          _type: \"block\",\n          style: \"blockquote\",\n          markDefs: [],\n          children: next(children)\n        };\n      }\n    },\n    // Block elements\n    {\n      deserialize(el, next) {\n        const blocks2 = {\n          ...HTML_BLOCK_TAGS,\n          ...HTML_HEADER_TAGS\n        }, tag = tagName(el);\n        let block = tag ? blocks2[tag] : void 0;\n        if (block)\n          return el.parentNode && tagName(el.parentNode) === \"li\" ? next(el.childNodes) : (options.enabledBlockStyles.includes(block.style) || (block = DEFAULT_BLOCK), {\n            ...block,\n            children: next(el.childNodes)\n          });\n      }\n    },\n    // Ignore span tags\n    {\n      deserialize(el, next) {\n        const tag = tagName(el);\n        if (!(!tag || !(tag in HTML_SPAN_TAGS)))\n          return next(el.childNodes);\n      }\n    },\n    // Ignore div tags\n    {\n      deserialize(el, next) {\n        if (tagName(el) === \"div\")\n          return next(el.childNodes);\n      }\n    },\n    // Ignore list containers\n    {\n      deserialize(el, next) {\n        const tag = tagName(el);\n        if (!(!tag || !(tag in HTML_LIST_CONTAINER_TAGS)))\n          return next(el.childNodes);\n      }\n    },\n    // Deal with br's\n    {\n      deserialize(el) {\n        if (tagName(el) === \"br\")\n          return {\n            ...DEFAULT_SPAN,\n            text: `\n`\n          };\n      }\n    },\n    // Deal with list items\n    {\n      deserialize(el, next, block) {\n        const tag = tagName(el), listItem = tag ? HTML_LIST_ITEM_TAGS[tag] : void 0, parentTag = tagName(el.parentNode) || \"\";\n        if (!listItem || !el.parentNode || !HTML_LIST_CONTAINER_TAGS[parentTag])\n          return;\n        const enabledListItem = resolveListItem(parentTag, options.enabledListTypes);\n        return enabledListItem ? (listItem.listItem = enabledListItem, {\n          ...listItem,\n          children: next(el.childNodes)\n        }) : block({ _type: \"block\", children: next(el.childNodes) });\n      }\n    },\n    // Deal with decorators - this is a limited set of known html elements that we know how to deserialize\n    {\n      deserialize(el, next) {\n        const decorator = HTML_DECORATOR_TAGS[tagName(el) || \"\"];\n        if (!(!decorator || !options.enabledSpanDecorators.includes(decorator)))\n          return {\n            _type: \"__decorator\",\n            name: decorator,\n            children: next(el.childNodes)\n          };\n      }\n    },\n    // Special case for hyperlinks, add annotation (if allowed by schema),\n    // If not supported just write out the link text and href in plain text.\n    {\n      deserialize(el, next) {\n        if (tagName(el) != \"a\")\n          return;\n        const linkEnabled = options.enabledBlockAnnotations.includes(\"link\"), href = isElement(el) && el.getAttribute(\"href\");\n        if (!href)\n          return next(el.childNodes);\n        let markDef;\n        return linkEnabled ? (markDef = {\n          _key: randomKey(12),\n          _type: \"link\",\n          href\n        }, {\n          _type: \"__annotation\",\n          markDef,\n          children: next(el.childNodes)\n        }) : el.appendChild(el.ownerDocument.createTextNode(` (${href})`)) && next(el.childNodes);\n      }\n    }\n  ];\n}\nfunction isEmphasis(el) {\n  const style = isElement(el) && el.getAttribute(\"style\");\n  return /font-style:italic/.test(style || \"\");\n}\nfunction isStrong(el) {\n  const style = isElement(el) && el.getAttribute(\"style\");\n  return /font-weight:700/.test(style || \"\") || /font-weight:600/.test(style || \"\");\n}\nfunction isUnderline(el) {\n  const style = isElement(el) && el.getAttribute(\"style\");\n  return /text-decoration:underline/.test(style || \"\");\n}\nfunction isNotion(el) {\n  return isElement(el) && !!el.getAttribute(\"data-is-notion\");\n}\nfunction createNotionRules(_blockContentType) {\n  return [\n    {\n      deserialize(el) {\n        if (isElement(el) && tagName(el) === \"span\" && isNotion(el)) {\n          const span = {\n            ...DEFAULT_SPAN,\n            marks: [],\n            text: el.textContent\n          };\n          return isStrong(el) && span.marks.push(\"strong\"), isUnderline(el) && span.marks.push(\"underline\"), isEmphasis(el) && span.marks.push(\"em\"), span;\n        }\n      }\n    }\n  ];\n}\nfunction getListItemStyle(el) {\n  const style = isElement(el) && el.getAttribute(\"style\");\n  if (style && style.match(/lfo\\d+/))\n    return style.match(\"lfo1\") ? \"bullet\" : \"number\";\n}\nfunction getListItemLevel(el) {\n  const style = isElement(el) && el.getAttribute(\"style\");\n  if (!style)\n    return;\n  const levelMatch = style.match(/level\\d+/);\n  if (!levelMatch)\n    return;\n  const [level] = levelMatch[0].match(/\\d/) || [];\n  return (level ? parseInt(level, 10) : 1) || 1;\n}\nfunction isWordListElement(el) {\n  return isElement(el) && el.className ? el.className === \"MsoListParagraphCxSpFirst\" || el.className === \"MsoListParagraphCxSpMiddle\" || el.className === \"MsoListParagraphCxSpLast\" : !1;\n}\nfunction createWordRules() {\n  return [\n    {\n      deserialize(el, next) {\n        if (tagName(el) === \"p\" && isWordListElement(el))\n          return {\n            ...DEFAULT_BLOCK,\n            listItem: getListItemStyle(el),\n            level: getListItemLevel(el),\n            style: BLOCK_DEFAULT_STYLE,\n            children: next(el.childNodes)\n          };\n      }\n    }\n  ];\n}\nfunction createRules(blockContentType, options) {\n  return [\n    ...createWordRules(),\n    ...createNotionRules(),\n    ...createGDocsRules(blockContentType, options),\n    ...createHTMLRules(blockContentType, options)\n  ];\n}\nvar __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass HtmlDeserializer {\n  /**\n   * Create a new serializer respecting a Sanity block content type's schema\n   *\n   * @param blockContentType - Schema type for array containing _at least_ a block child type\n   * @param options - Options for the deserialization process\n   */\n  constructor(blockContentType, options = {}) {\n    __publicField(this, \"blockContentType\"), __publicField(this, \"rules\"), __publicField(this, \"parseHtml\"), __publicField(this, \"_markDefs\", []), __publicField(this, \"deserialize\", (html) => {\n      this._markDefs = [];\n      const { parseHtml: parseHtml2 } = this, fragment = parseHtml2(html), children = Array.from(fragment.childNodes), blocks2 = trimWhitespace(\n        flattenNestedBlocks(ensureRootIsBlocks(this.deserializeElements(children)))\n      );\n      this._markDefs.length > 0 && blocks2.filter((block) => block._type === \"block\").forEach((block) => {\n        block.markDefs = block.markDefs || [], block.markDefs = block.markDefs.concat(\n          this._markDefs.filter((def) => lodash_flatten_js__WEBPACK_IMPORTED_MODULE_0__(block.children.map((child) => child.marks || [])).includes(def._key))\n        );\n      });\n      const type = this.blockContentType.of.find(findBlockType);\n      return type ? blocks2.map((block) => (block._type === \"block\" && (block._type = type.name), block)) : blocks2;\n    }), __publicField(this, \"deserializeElements\", (elements = []) => {\n      let nodes = [];\n      return elements.forEach((element) => {\n        nodes = nodes.concat(this.deserializeElement(element));\n      }), nodes;\n    }), __publicField(this, \"deserializeElement\", (element) => {\n      var _a, _b;\n      const next = (elements) => {\n        if (isNodeList(elements))\n          return this.deserializeElements(Array.from(elements));\n        if (Array.isArray(elements))\n          return this.deserializeElements(elements);\n        if (elements)\n          return this.deserializeElement(elements);\n      }, block = (props) => ({\n        _type: \"__block\",\n        block: props\n      });\n      let node;\n      for (let i = 0; i < this.rules.length; i++) {\n        const rule = this.rules[i];\n        if (!rule.deserialize)\n          continue;\n        const ret = rule.deserialize(element, next, block), type = resolveJsType(ret);\n        if (type !== \"array\" && type !== \"object\" && type !== \"null\" && type !== \"undefined\")\n          throw new Error(`A rule returned an invalid deserialized representation: \"${node}\".`);\n        if (ret !== void 0) {\n          {\n            if (ret === null)\n              throw new Error(\"Deserializer rule returned `null`\");\n            Array.isArray(ret) ? node = ret : isPlaceholderDecorator(ret) ? node = this.deserializeDecorator(ret) : isPlaceholderAnnotation(ret) ? node = this.deserializeAnnotation(ret) : node = ret;\n          }\n          if (ret && !Array.isArray(ret) && isMinimalBlock(ret) && \"listItem\" in ret) {\n            let parent = (_a = element.parentNode) == null ? void 0 : _a.parentNode;\n            for (; parent && tagName(parent) === \"li\"; )\n              parent = (_b = parent.parentNode) == null ? void 0 : _b.parentNode, ret.level = ret.level ? ret.level + 1 : 1;\n          }\n          ret && !Array.isArray(ret) && isMinimalBlock(ret) && ret.style === \"blockquote\" && ret.children.forEach((child, index) => {\n            isMinimalSpan(child) && child.text === \"\\r\" && (child.text = `\n\n`, (index === 0 || index === ret.children.length - 1) && ret.children.splice(index, 1));\n          });\n          break;\n        }\n      }\n      return node || next(element.childNodes) || [];\n    }), __publicField(this, \"deserializeDecorator\", (decorator) => {\n      const { name } = decorator, applyDecorator = (node) => {\n        if (isPlaceholderDecorator(node))\n          return this.deserializeDecorator(node);\n        if (isMinimalSpan(node))\n          node.marks = node.marks || [], node.text.trim() && node.marks.unshift(name);\n        else if (\"children\" in node && Array.isArray(node.children)) {\n          const block = node;\n          block.children = block.children.map(applyDecorator);\n        }\n        return node;\n      };\n      return decorator.children.reduce((children, node) => {\n        const ret = applyDecorator(node);\n        return Array.isArray(ret) ? children.concat(ret) : (children.push(ret), children);\n      }, []);\n    }), __publicField(this, \"deserializeAnnotation\", (annotation) => {\n      const { markDef } = annotation;\n      this._markDefs.push(markDef);\n      const applyAnnotation = (node) => {\n        if (isPlaceholderAnnotation(node))\n          return this.deserializeAnnotation(node);\n        if (isMinimalSpan(node))\n          node.marks = node.marks || [], node.text.trim() && node.marks.unshift(markDef._key);\n        else if (\"children\" in node && Array.isArray(node.children)) {\n          const block = node;\n          block.children = block.children.map(applyAnnotation);\n        }\n        return node;\n      };\n      return annotation.children.reduce((children, node) => {\n        const ret = applyAnnotation(node);\n        return Array.isArray(ret) ? children.concat(ret) : (children.push(ret), children);\n      }, []);\n    });\n    const { rules = [], unstable_whitespaceOnPasteMode = \"preserve\" } = options;\n    if (!blockContentType)\n      throw new Error(\"Parameter 'blockContentType' is required\");\n    const standardRules = createRules(blockContentType, createRuleOptions(blockContentType));\n    this.rules = [...rules, ...standardRules];\n    const parseHtml = options.parseHtml || defaultParseHtml();\n    this.blockContentType = blockContentType, this.parseHtml = (html) => preprocess(html, parseHtml, { unstable_whitespaceOnPasteMode }).body;\n  }\n}\nfunction normalizeBlock(node, options = {}) {\n  if (node._type !== (options.blockTypeName || \"block\"))\n    return \"_key\" in node ? node : { ...node, _key: randomKey(12) };\n  const block = {\n    _key: randomKey(12),\n    children: [],\n    markDefs: [],\n    ...node\n  }, lastChild = block.children[block.children.length - 1];\n  if (!lastChild)\n    return block.children = [\n      {\n        _type: \"span\",\n        _key: `${block._key}0`,\n        text: \"\",\n        marks: []\n      }\n    ], block;\n  const usedMarkDefs = [], allowedDecorators = options.allowedDecorators && Array.isArray(options.allowedDecorators) ? options.allowedDecorators : !1;\n  return block.children = block.children.reduce(\n    (acc, child) => {\n      const previousChild = acc[acc.length - 1];\n      return previousChild && isPortableTextSpan(child) && isPortableTextSpan(previousChild) && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(previousChild.marks, child.marks) ? (lastChild && lastChild === child && child.text === \"\" && block.children.length > 1 || (previousChild.text += child.text), acc) : (acc.push(child), acc);\n    },\n    []\n  ).map((child, index) => {\n    if (!child)\n      throw new Error(\"missing child\");\n    return child._key = `${block._key}${index}`, isPortableTextSpan(child) && (child.marks ? allowedDecorators && (child.marks = child.marks.filter((mark) => {\n      var _a;\n      const isAllowed = allowedDecorators.includes(mark), isUsed = (_a = block.markDefs) == null ? void 0 : _a.some((def) => def._key === mark);\n      return isAllowed || isUsed;\n    })) : child.marks = [], usedMarkDefs.push(...child.marks)), child;\n  }), block.markDefs = (block.markDefs || []).filter((markDef) => usedMarkDefs.includes(markDef._key)), block;\n}\nfunction htmlToBlocks(html, blockContentType, options = {}) {\n  return new HtmlDeserializer(blockContentType, options).deserialize(html).map((block) => normalizeBlock(block));\n}\nfunction getBlockContentFeatures(blockContentType) {\n  return blockContentFeatures(blockContentType);\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/block-tools/lib/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ C),\n/* harmony export */   stegaClean: () => (/* binding */ stegaClean),\n/* harmony export */   vercelStegaCleanAll: () => (/* binding */ vercelStegaCleanAll)\n/* harmony export */ });\nvar s = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, c = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, u = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nfunction E(t) {\n  let e = JSON.stringify(t);\n  return `${u}${Array.from(e).map((r) => {\n    let n = r.charCodeAt(0);\n    if (n > 255)\n      throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n    return Array.from(n.toString(4).padStart(4, \"0\")).map((o) => String.fromCodePoint(c[o])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction I(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction T(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction C(t, e, r = \"auto\") {\n  return r === !0 || r === \"auto\" && (I(t) || T(t)) ? t : `${t}${E(e)}`;\n}\nObject.fromEntries(Object.entries(c).map((t) => t.reverse()));\nObject.fromEntries(Object.entries(s).map((t) => t.reverse()));\nvar S = `${Object.values(s).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return { cleaned: t.replace(f, \"\"), encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\" };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nfunction stegaClean(result) {\n  return O(result);\n}\nconst vercelStegaCleanAll = stegaClean;\n\n//# sourceMappingURL=stegaClean.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsVUFBVSxpS0FBaUssUUFBUSxxQ0FBcUM7QUFDeE47QUFDQTtBQUNBLFlBQVksRUFBRSxFQUFFO0FBQ2hCO0FBQ0E7QUFDQSx5RkFBeUYsR0FBRyxlQUFlLEdBQUcsR0FBRyxFQUFFO0FBQ25IO0FBQ0EsR0FBRyxXQUFXO0FBQ2Q7QUFDQTtBQUNBLDRFQUE0RSxFQUFFLHFCQUFxQixJQUFJO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsRUFBRSxFQUFFLEtBQUs7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQ0FBaUMsRUFBRSxnQkFBZ0IsWUFBWSxzQkFBc0IsRUFBRSxFQUFFLEdBQUc7QUFDdkc7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvdGVsLW1hbmFnZW1lbnQvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanM/YzMyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcyA9IHsgMDogODIwMywgMTogODIwNCwgMjogODIwNSwgMzogODI5MCwgNDogODI5MSwgNTogODI4OCwgNjogNjUyNzksIDc6IDgyODksIDg6IDExOTE1NSwgOTogMTE5MTU2LCBhOiAxMTkxNTcsIGI6IDExOTE1OCwgYzogMTE5MTU5LCBkOiAxMTkxNjAsIGU6IDExOTE2MSwgZjogMTE5MTYyIH0sIGMgPSB7IDA6IDgyMDMsIDE6IDgyMDQsIDI6IDgyMDUsIDM6IDY1Mjc5IH0sIHUgPSBuZXcgQXJyYXkoNCkuZmlsbChTdHJpbmcuZnJvbUNvZGVQb2ludChjWzBdKSkuam9pbihcIlwiKTtcbmZ1bmN0aW9uIEUodCkge1xuICBsZXQgZSA9IEpTT04uc3RyaW5naWZ5KHQpO1xuICByZXR1cm4gYCR7dX0ke0FycmF5LmZyb20oZSkubWFwKChyKSA9PiB7XG4gICAgbGV0IG4gPSByLmNoYXJDb2RlQXQoMCk7XG4gICAgaWYgKG4gPiAyNTUpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE9ubHkgQVNDSUkgZWRpdCBpbmZvIGNhbiBiZSBlbmNvZGVkLiBFcnJvciBhdHRlbXB0aW5nIHRvIGVuY29kZSAke2V9IG9uIGNoYXJhY3RlciAke3J9ICgke259KWApO1xuICAgIHJldHVybiBBcnJheS5mcm9tKG4udG9TdHJpbmcoNCkucGFkU3RhcnQoNCwgXCIwXCIpKS5tYXAoKG8pID0+IFN0cmluZy5mcm9tQ29kZVBvaW50KGNbb10pKS5qb2luKFwiXCIpO1xuICB9KS5qb2luKFwiXCIpfWA7XG59XG5mdW5jdGlvbiBJKHQpIHtcbiAgcmV0dXJuICFOdW1iZXIuaXNOYU4oTnVtYmVyKHQpKSB8fCAvW2Etel0vaS50ZXN0KHQpICYmICEvXFxkKyg/OlstOlxcL11cXGQrKXsyfSg/OlRcXGQrKD86Wy06XFwvXVxcZCspezEsMn0oXFwuXFxkKyk/Wj8pPy8udGVzdCh0KSA/ICExIDogISFEYXRlLnBhcnNlKHQpO1xufVxuZnVuY3Rpb24gVCh0KSB7XG4gIHRyeSB7XG4gICAgbmV3IFVSTCh0LCB0LnN0YXJ0c1dpdGgoXCIvXCIpID8gXCJodHRwczovL2FjbWUuY29tXCIgOiB2b2lkIDApO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gITE7XG4gIH1cbiAgcmV0dXJuICEwO1xufVxuZnVuY3Rpb24gQyh0LCBlLCByID0gXCJhdXRvXCIpIHtcbiAgcmV0dXJuIHIgPT09ICEwIHx8IHIgPT09IFwiYXV0b1wiICYmIChJKHQpIHx8IFQodCkpID8gdCA6IGAke3R9JHtFKGUpfWA7XG59XG5PYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoYykubWFwKCh0KSA9PiB0LnJldmVyc2UoKSkpO1xuT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKHMpLm1hcCgodCkgPT4gdC5yZXZlcnNlKCkpKTtcbnZhciBTID0gYCR7T2JqZWN0LnZhbHVlcyhzKS5tYXAoKHQpID0+IGBcXFxcdXske3QudG9TdHJpbmcoMTYpfX1gKS5qb2luKFwiXCIpfWAsIGYgPSBuZXcgUmVnRXhwKGBbJHtTfV17NCx9YCwgXCJndVwiKTtcbmZ1bmN0aW9uIF8odCkge1xuICB2YXIgZTtcbiAgcmV0dXJuIHsgY2xlYW5lZDogdC5yZXBsYWNlKGYsIFwiXCIpLCBlbmNvZGVkOiAoKGUgPSB0Lm1hdGNoKGYpKSA9PSBudWxsID8gdm9pZCAwIDogZVswXSkgfHwgXCJcIiB9O1xufVxuZnVuY3Rpb24gTyh0KSB7XG4gIHJldHVybiB0ICYmIEpTT04ucGFyc2UoXyhKU09OLnN0cmluZ2lmeSh0KSkuY2xlYW5lZCk7XG59XG5mdW5jdGlvbiBzdGVnYUNsZWFuKHJlc3VsdCkge1xuICByZXR1cm4gTyhyZXN1bHQpO1xufVxuY29uc3QgdmVyY2VsU3RlZ2FDbGVhbkFsbCA9IHN0ZWdhQ2xlYW47XG5leHBvcnQge1xuICBDLFxuICBzdGVnYUNsZWFuLFxuICB2ZXJjZWxTdGVnYUNsZWFuQWxsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RlZ2FDbGVhbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeIntoResult: () => (/* binding */ encodeIntoResult),\n/* harmony export */   stegaEncodeSourceMap: () => (/* binding */ stegaEncodeSourceMap),\n/* harmony export */   stegaEncodeSourceMap$1: () => (/* binding */ stegaEncodeSourceMap$1)\n/* harmony export */ });\n/* harmony import */ var _stegaClean_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stegaClean.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!(csm != null && csm.mappings))\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  return isArray(value) ? value.map((v, idx) => {\n    if (isRecord(v)) {\n      const _key = v._key;\n      if (typeof _key == \"string\")\n        return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n    }\n    return walkMap(v, mappingFn, path.concat(idx));\n  }) : isRecord(value) ? Object.fromEntries(\n    Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n  ) : mappingFn(value, path);\n}\nfunction encodeIntoResult(result, csm, encoder) {\n  return walkMap(result, (value, path) => {\n    if (typeof value != \"string\")\n      return value;\n    const resolveMappingResult = resolveMapping(path, csm);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, matchedPath } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\n    return encoder({\n      sourcePath: fullSourceSegments,\n      sourceDocument,\n      resultPath: path,\n      value\n    });\n  });\n}\nconst DRAFTS_PREFIX = \"drafts.\";\nfunction getPublishedId(id) {\n  return id.startsWith(DRAFTS_PREFIX) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), _id.startsWith(DRAFTS_PREFIX) && searchParams.set(\"isDraft\", \"\");\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\n  if (isValidDate(value) || isValidURL(value))\n    return !1;\n  const endPath = sourcePath.at(-1);\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && endPath.startsWith(\"_\") || typeof endPath == \"number\" && sourcePath.at(-2) === \"marks\" || endPath === \"href\" && typeof sourcePath.at(-2) == \"number\" && sourcePath.at(-3) === \"markDefs\" || endPath === \"style\" || endPath === \"listItem\" || sourcePath.some(\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\n}, denylist = /* @__PURE__ */ new Set([\n  \"color\",\n  \"colour\",\n  \"currency\",\n  \"email\",\n  \"format\",\n  \"gid\",\n  \"hex\",\n  \"href\",\n  \"hsl\",\n  \"hsla\",\n  \"icon\",\n  \"id\",\n  \"index\",\n  \"key\",\n  \"language\",\n  \"layout\",\n  \"link\",\n  \"linkAction\",\n  \"locale\",\n  \"lqip\",\n  \"page\",\n  \"path\",\n  \"ref\",\n  \"rgb\",\n  \"rgba\",\n  \"route\",\n  \"secret\",\n  \"slug\",\n  \"status\",\n  \"tag\",\n  \"template\",\n  \"theme\",\n  \"type\",\n  \"unit\",\n  \"url\",\n  \"username\",\n  \"variant\",\n  \"website\"\n]);\nfunction isValidDate(dateString) {\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\n}\nfunction isValidURL(url) {\n  try {\n    new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction hasTypeLike(path) {\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\n}\nconst TRUNCATE_LENGTH = 20;\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n  const { filter, logger, enabled } = config;\n  if (!enabled) {\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\n    throw (_a = logger == null ? void 0 : logger.error) == null || _a.call(logger, `[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  if (!resultSourceMap)\n    return (_b = logger == null ? void 0 : logger.error) == null || _b.call(logger, \"[@sanity/client]: Missing Content Source Map from response body\", {\n      result,\n      resultSourceMap,\n      config\n    }), result;\n  if (!config.studioUrl) {\n    const msg = \"config.studioUrl must be defined\";\n    throw (_c = logger == null ? void 0 : logger.error) == null || _c.call(logger, `[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  const report = {\n    encoded: [],\n    skipped: []\n  }, resultWithStega = encodeIntoResult(\n    result,\n    resultSourceMap,\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, filterDefault, sourceDocument, value })) === !1)\n        return logger && report.skipped.push({\n          path: prettyPathForLogging(sourcePath),\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n          length: value.length\n        }), value;\n      logger && report.encoded.push({\n        path: prettyPathForLogging(sourcePath),\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n        length: value.length\n      });\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\n      );\n      if (!baseUrl)\n        return value;\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\n      return (0,_stegaClean_js__WEBPACK_IMPORTED_MODULE_0__.C)(\n        value,\n        {\n          origin: \"sanity.io\",\n          href: createEditUrl({\n            baseUrl,\n            workspace,\n            tool,\n            id,\n            type,\n            path: sourcePath,\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\n          })\n        },\n        // We use custom logic to determine if we should skip encoding\n        !1\n      );\n    }\n  );\n  if (logger) {\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\n    if ((isSkipping || isEncoding) && ((_d = (logger == null ? void 0 : logger.groupCollapsed) || logger.log) == null || _d(\"[@sanity/client]: Encoding source map into result\"), (_e = logger.log) == null || _e.call(\n      logger,\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\n    )), report.encoded.length > 0 && ((_f = logger == null ? void 0 : logger.log) == null || _f.call(logger, \"[@sanity/client]: Table of encoded paths\"), (_g = (logger == null ? void 0 : logger.table) || logger.log) == null || _g(report.encoded)), report.skipped.length > 0) {\n      const skipped = /* @__PURE__ */ new Set();\n      for (const { path } of report.skipped)\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\n      (_h = logger == null ? void 0 : logger.log) == null || _h.call(logger, \"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\n    }\n    (isSkipping || isEncoding) && ((_i = logger == null ? void 0 : logger.groupEnd) == null || _i.call(logger));\n  }\n  return resultWithStega;\n}\nfunction prettyPathForLogging(path) {\n  return toString(jsonPathToStudioPath(path));\n}\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  stegaEncodeSourceMap\n});\n\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@sanity/client/dist/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* binding */ BasePatch),\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction),\n/* harmony export */   ClientError: () => (/* binding */ ClientError),\n/* harmony export */   ObservablePatch: () => (/* binding */ ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* binding */ ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* binding */ ObservableTransaction),\n/* harmony export */   Patch: () => (/* binding */ Patch),\n/* harmony export */   SanityClient: () => (/* binding */ SanityClient),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ deprecatedCreateClient),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   unstable__adapter: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_7__.adapter),\n/* harmony export */   unstable__environment: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.environment)\n/* harmony export */ });\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-it */ \"(ssr)/./node_modules/get-it/dist/index.js\");\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! get-it */ \"(ssr)/./node_modules/get-it/dist/_chunks-es/node-request.js\");\n/* harmony import */ var get_it_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it/middleware */ \"(ssr)/./node_modules/get-it/dist/middleware.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n/* harmony import */ var _chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_chunks-es/stegaClean.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n\n\n\n\n\n\nvar __defProp$3 = Object.defineProperty, __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$3 = (obj, key, value) => (__defNormalProp$3(obj, typeof key != \"symbol\" ? key + \"\" : key, value), value);\nclass ClientError extends Error {\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), __publicField$3(this, \"response\"), __publicField$3(this, \"statusCode\", 400), __publicField$3(this, \"responseBody\"), __publicField$3(this, \"details\"), Object.assign(this, props);\n  }\n}\nclass ServerError extends Error {\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), __publicField$3(this, \"response\"), __publicField$3(this, \"statusCode\", 500), __publicField$3(this, \"responseBody\"), __publicField$3(this, \"details\"), Object.assign(this, props);\n  }\n}\nfunction extractErrorProps(res) {\n  const body = res.body, props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: \"\",\n    details: void 0\n  };\n  if (body.error && body.message)\n    return props.message = `${body.error} - ${body.message}`, props;\n  if (isMutationError(body) || isActionError(body)) {\n    const allItems = body.error.items || [], items = allItems.slice(0, 5).map((item) => {\n      var _a;\n      return (_a = item.error) == null ? void 0 : _a.description;\n    }).filter(Boolean);\n    let itemsStr = items.length ? `:\n- ${items.join(`\n- `)}` : \"\";\n    return allItems.length > 5 && (itemsStr += `\n...and ${allItems.length - 5} more`), props.message = `${body.error.description}${itemsStr}`, props.details = body.error, props;\n  }\n  return body.error && body.error.description ? (props.message = body.error.description, props.details = body.error, props) : (props.message = body.error || body.message || httpErrorMessage(res), props);\n}\nfunction isMutationError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"mutationError\" && typeof body.error.description == \"string\";\n}\nfunction isActionError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"actionError\" && typeof body.error.description == \"string\";\n}\nfunction isPlainObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction httpErrorMessage(res) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : \"\";\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`;\n}\nfunction stringifyBody(body, res) {\n  return (res.headers[\"content-type\"] || \"\").toLowerCase().indexOf(\"application/json\") !== -1 ? JSON.stringify(body, null, 2) : body;\n}\nconst httpError = {\n  onResponse: (res) => {\n    if (res.statusCode >= 500)\n      throw new ServerError(res);\n    if (res.statusCode >= 400)\n      throw new ClientError(res);\n    return res;\n  }\n}, printWarnings = {\n  onResponse: (res) => {\n    const warn = res.headers[\"x-sanity-warning\"];\n    return (Array.isArray(warn) ? warn : [warn]).filter(Boolean).forEach((msg) => console.warn(msg)), res;\n  }\n};\nfunction defineHttpRequest(envMiddleware) {\n  return (0,get_it__WEBPACK_IMPORTED_MODULE_0__.getIt)([\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry)({ shouldRetry }),\n    ...envMiddleware,\n    printWarnings,\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonRequest)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonResponse)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.progress)(),\n    httpError,\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.observable)({ implementation: rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable })\n  ]);\n}\nfunction shouldRetry(err, attempt, options) {\n  if (options.maxRetries === 0)\n    return !1;\n  const isSafe = options.method === \"GET\" || options.method === \"HEAD\", isQuery = (options.uri || options.url).startsWith(\"/data/query\"), isRetriableResponse = err.response && (err.response.statusCode === 429 || err.response.statusCode === 502 || err.response.statusCode === 503);\n  return (isSafe || isQuery) && isRetriableResponse ? !0 : get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry.shouldRetry(err, attempt, options);\n}\nfunction getSelection(sel) {\n  if (typeof sel == \"string\")\n    return { id: sel };\n  if (Array.isArray(sel))\n    return { query: \"*[_id in $ids]\", params: { ids: sel } };\n  if (typeof sel == \"object\" && sel !== null && \"query\" in sel && typeof sel.query == \"string\")\n    return \"params\" in sel && typeof sel.params == \"object\" && sel.params !== null ? { query: sel.query, params: sel.params } : { query: sel.query };\n  const selectionOpts = [\n    \"* Document ID (<docId>)\",\n    \"* Array of document IDs\",\n    \"* Object containing `query`\"\n  ].join(`\n`);\n  throw new Error(`Unknown selection - must be one of:\n\n${selectionOpts}`);\n}\nconst VALID_ASSET_TYPES = [\"image\", \"file\"], VALID_INSERT_LOCATIONS = [\"before\", \"after\", \"replace\"], dataset = (name2) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name2))\n    throw new Error(\n      \"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\"\n    );\n}, projectId = (id) => {\n  if (!/^[-a-z0-9]+$/i.test(id))\n    throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n}, validateAssetType = (type) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1)\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(\", \")}`);\n}, validateObject = (op, val) => {\n  if (val === null || typeof val != \"object\" || Array.isArray(val))\n    throw new Error(`${op}() takes an object of properties`);\n}, validateDocumentId = (op, id) => {\n  if (typeof id != \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\"))\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`);\n}, requireDocumentId = (op, doc) => {\n  if (!doc._id)\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`);\n  validateDocumentId(op, doc._id);\n}, validateInsert = (at, selector, items) => {\n  const signature = \"insert(at, selector, items)\";\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(\", \");\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`);\n  }\n  if (typeof selector != \"string\")\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`);\n  if (!Array.isArray(items))\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`);\n}, hasDataset = (config) => {\n  if (!config.dataset)\n    throw new Error(\"`dataset` must be provided to perform queries\");\n  return config.dataset || \"\";\n}, requestTag = (tag) => {\n  if (typeof tag != \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag))\n    throw new Error(\n      \"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\"\n    );\n  return tag;\n};\nvar __defProp$2 = Object.defineProperty, __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$2 = (obj, key, value) => (__defNormalProp$2(obj, typeof key != \"symbol\" ? key + \"\" : key, value), value), __accessCheck$7 = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n}, __privateGet$7 = (obj, member, getter) => (__accessCheck$7(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj)), __privateAdd$7 = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n}, __privateSet$7 = (obj, member, value, setter) => (__accessCheck$7(obj, member, \"write to private field\"), member.set(obj, value), value);\nclass BasePatch {\n  constructor(selection, operations = {}) {\n    __publicField$2(this, \"selection\"), __publicField$2(this, \"operations\"), this.selection = selection, this.operations = operations;\n  }\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs) {\n    return this._assign(\"set\", attrs);\n  }\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs) {\n    return this._assign(\"setIfMissing\", attrs);\n  }\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs) {\n    return validateObject(\"diffMatchPatch\", attrs), this._assign(\"diffMatchPatch\", attrs);\n  }\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs) {\n    if (!Array.isArray(attrs))\n      throw new Error(\"unset(attrs) takes an array of attributes to unset, non-array given\");\n    return this.operations = Object.assign({}, this.operations, { unset: attrs }), this;\n  }\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs) {\n    return this._assign(\"inc\", attrs);\n  }\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs) {\n    return this._assign(\"dec\", attrs);\n  }\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at, selector, items) {\n    return validateInsert(at, selector, items), this._assign(\"insert\", { [at]: selector, items });\n  }\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector, items) {\n    return this.insert(\"after\", `${selector}[-1]`, items);\n  }\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector, items) {\n    return this.insert(\"before\", `${selector}[0]`, items);\n  }\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector, start, deleteCount, items) {\n    const delAll = typeof deleteCount > \"u\" || deleteCount === -1, startIndex = start < 0 ? start - 1 : start, delCount = delAll ? -1 : Math.max(0, start + deleteCount), delRange = startIndex < 0 && delCount >= 0 ? \"\" : delCount, rangeSelector = `${selector}[${startIndex}:${delRange}]`;\n    return this.insert(\"replace\", rangeSelector, items || []);\n  }\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev) {\n    return this.operations.ifRevisionID = rev, this;\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize() {\n    return { ...getSelection(this.selection), ...this.operations };\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the patch of all operations\n   */\n  reset() {\n    return this.operations = {}, this;\n  }\n  _assign(op, props, merge = !0) {\n    return validateObject(op, props), this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, merge && this.operations[op] || {}, props)\n    }), this;\n  }\n  _set(op, props) {\n    return this._assign(op, props, !1);\n  }\n}\nvar _client$6;\nconst _ObservablePatch = class _ObservablePatch2 extends BasePatch {\n  constructor(selection, operations, client) {\n    super(selection, operations), __privateAdd$7(this, _client$6, void 0), __privateSet$7(this, _client$6, client);\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new _ObservablePatch2(this.selection, { ...this.operations }, __privateGet$7(this, _client$6));\n  }\n  commit(options) {\n    if (!__privateGet$7(this, _client$6))\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return __privateGet$7(this, _client$6).mutate({ patch: this.serialize() }, opts);\n  }\n};\n_client$6 = /* @__PURE__ */ new WeakMap();\nlet ObservablePatch = _ObservablePatch;\nvar _client2$5;\nconst _Patch = class _Patch2 extends BasePatch {\n  constructor(selection, operations, client) {\n    super(selection, operations), __privateAdd$7(this, _client2$5, void 0), __privateSet$7(this, _client2$5, client);\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new _Patch2(this.selection, { ...this.operations }, __privateGet$7(this, _client2$5));\n  }\n  commit(options) {\n    if (!__privateGet$7(this, _client2$5))\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return __privateGet$7(this, _client2$5).mutate({ patch: this.serialize() }, opts);\n  }\n};\n_client2$5 = /* @__PURE__ */ new WeakMap();\nlet Patch = _Patch;\nvar __defProp$1 = Object.defineProperty, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$1 = (obj, key, value) => (__defNormalProp$1(obj, typeof key != \"symbol\" ? key + \"\" : key, value), value), __accessCheck$6 = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n}, __privateGet$6 = (obj, member, getter) => (__accessCheck$6(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj)), __privateAdd$6 = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n}, __privateSet$6 = (obj, member, value, setter) => (__accessCheck$6(obj, member, \"write to private field\"), member.set(obj, value), value);\nconst defaultMutateOptions = { returnDocuments: !1 };\nclass BaseTransaction {\n  constructor(operations = [], transactionId) {\n    __publicField$1(this, \"operations\"), __publicField$1(this, \"trxId\"), this.operations = operations, this.trxId = transactionId;\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create(doc) {\n    return validateObject(\"create\", doc), this._add({ create: doc });\n  }\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists(doc) {\n    const op = \"createIfNotExists\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace(doc) {\n    const op = \"createOrReplace\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId) {\n    return validateDocumentId(\"delete\", documentId), this._add({ delete: { id: documentId } });\n  }\n  transactionId(id) {\n    return id ? (this.trxId = id, this) : this.trxId;\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize() {\n    return [...this.operations];\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the transaction of all operations\n   */\n  reset() {\n    return this.operations = [], this;\n  }\n  _add(mut) {\n    return this.operations.push(mut), this;\n  }\n}\nvar _client$5;\nconst _Transaction = class _Transaction2 extends BaseTransaction {\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), __privateAdd$6(this, _client$5, void 0), __privateSet$6(this, _client$5, client);\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new _Transaction2([...this.operations], __privateGet$6(this, _client$5), this.trxId);\n  }\n  commit(options) {\n    if (!__privateGet$6(this, _client$5))\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return __privateGet$6(this, _client$5).mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\";\n    if (typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof Patch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, __privateGet$6(this, _client$5)));\n      if (!(patch instanceof Patch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n};\n_client$5 = /* @__PURE__ */ new WeakMap();\nlet Transaction = _Transaction;\nvar _client2$4;\nconst _ObservableTransaction = class _ObservableTransaction2 extends BaseTransaction {\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), __privateAdd$6(this, _client2$4, void 0), __privateSet$6(this, _client2$4, client);\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new _ObservableTransaction2([...this.operations], __privateGet$6(this, _client2$4), this.trxId);\n  }\n  commit(options) {\n    if (!__privateGet$6(this, _client2$4))\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return __privateGet$6(this, _client2$4).mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\";\n    if (typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof ObservablePatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, __privateGet$6(this, _client2$4)));\n      if (!(patch instanceof ObservablePatch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n};\n_client2$4 = /* @__PURE__ */ new WeakMap();\nlet ObservableTransaction = _ObservableTransaction;\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nfunction once(fn) {\n  let didCall = !1, returnValue;\n  return (...args) => (didCall || (returnValue = fn(...args), didCall = !0), returnValue);\n}\nconst createWarningPrinter = (message) => (\n  // eslint-disable-next-line no-console\n  once((...args) => console.warn(message.join(\" \"), ...args))\n), printCdnAndWithCredentialsWarning = createWarningPrinter([\n  \"Because you set `withCredentials` to true, we will override your `useCdn`\",\n  \"setting to be false since (cookie-based) credentials are never set on the CDN\"\n]), printCdnWarning = createWarningPrinter([\n  \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n  \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n  \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]), printCdnPreviewDraftsWarning = createWarningPrinter([\n  \"The Sanity client is configured with the `perspective` set to `previewDrafts`, which doesn't support the API-CDN.\",\n  \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]), printBrowserTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n  `See ${generateHelpUrl(\n    \"js-client-browser-token\"\n  )} for more information and how to hide this warning.`\n]), printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  \"Using the Sanity client without specifying an API version is deprecated.\",\n  `See ${generateHelpUrl(\"js-client-api-version\")}`\n]), printNoDefaultExport = createWarningPrinter([\n  \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]), defaultCdnHost = \"apicdn.sanity.io\", defaultConfig = {\n  apiHost: \"https://api.sanity.io\",\n  apiVersion: \"1\",\n  useProjectHostname: !0,\n  stega: { enabled: !1 }\n}, LOCALHOSTS = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"], isLocal = (host) => LOCALHOSTS.indexOf(host) !== -1;\nfunction validateApiVersion(apiVersion) {\n  if (apiVersion === \"1\" || apiVersion === \"X\")\n    return;\n  const apiDate = new Date(apiVersion);\n  if (!(/^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0))\n    throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n}\nconst validateApiPerspective = function(perspective) {\n  switch (perspective) {\n    case \"previewDrafts\":\n    case \"published\":\n    case \"raw\":\n      return;\n    default:\n      throw new TypeError(\n        \"Invalid API perspective string, expected `published`, `previewDrafts` or `raw`\"\n      );\n  }\n}, initConfig = (config, prevConfig) => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...typeof prevConfig.stega == \"boolean\" ? { enabled: prevConfig.stega } : prevConfig.stega || defaultConfig.stega,\n      ...typeof config.stega == \"boolean\" ? { enabled: config.stega } : config.stega || {}\n    }\n  };\n  specifiedConfig.apiVersion || printNoApiVersionSpecifiedWarning();\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig\n  }, projectBased = newConfig.useProjectHostname;\n  if (typeof Promise > \"u\") {\n    const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`);\n  }\n  if (projectBased && !newConfig.projectId)\n    throw new Error(\"Configuration must contain `projectId`\");\n  if (typeof newConfig.perspective == \"string\" && validateApiPerspective(newConfig.perspective), \"encodeSourceMap\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?\"\n    );\n  if (\"encodeSourceMapAtPath\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?\"\n    );\n  if (typeof newConfig.stega.enabled != \"boolean\")\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`);\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === void 0)\n    throw new Error(\"stega.studioUrl must be defined when stega.enabled is true\");\n  if (newConfig.stega.enabled && typeof newConfig.stega.studioUrl != \"string\" && typeof newConfig.stega.studioUrl != \"function\")\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`\n    );\n  const isBrowser = typeof window < \"u\" && window.location && window.location.hostname, isLocalhost = isBrowser && isLocal(window.location.hostname);\n  isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== !0 ? printBrowserTokenWarning() : typeof newConfig.useCdn > \"u\" && printCdnWarning(), projectBased && projectId(newConfig.projectId), newConfig.dataset && dataset(newConfig.dataset), \"requestTagPrefix\" in newConfig && (newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0), newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, \"\"), newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost, newConfig.useCdn === !0 && newConfig.withCredentials && printCdnAndWithCredentialsWarning(), newConfig.useCdn = newConfig.useCdn !== !1 && !newConfig.withCredentials, validateApiVersion(newConfig.apiVersion);\n  const hostParts = newConfig.apiHost.split(\"://\", 2), protocol = hostParts[0], host = hostParts[1], cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n  return newConfig.useProjectHostname ? (newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`, newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`) : (newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`, newConfig.cdnUrl = newConfig.url), newConfig;\n}, projectHeader = \"X-Sanity-Project-ID\";\nfunction requestOptions(config, overrides = {}) {\n  const headers2 = {}, token = overrides.token || config.token;\n  token && (headers2.Authorization = `Bearer ${token}`), !overrides.useGlobalApi && !config.useProjectHostname && config.projectId && (headers2[projectHeader] = config.projectId);\n  const withCredentials = !!(typeof overrides.withCredentials > \"u\" ? config.token || config.withCredentials : overrides.withCredentials), timeout = typeof overrides.timeout > \"u\" ? config.timeout : overrides.timeout;\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers2, overrides.headers || {}),\n    timeout: typeof timeout > \"u\" ? 5 * 60 * 1e3 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: !0,\n    withCredentials,\n    fetch: typeof overrides.fetch == \"object\" && typeof config.fetch == \"object\" ? { ...config.fetch, ...overrides.fetch } : overrides.fetch || config.fetch\n  });\n}\nconst encodeQueryString = ({\n  query,\n  params = {},\n  options = {}\n}) => {\n  const searchParams = new URLSearchParams(), { tag, returnQuery, ...opts } = options;\n  tag && searchParams.append(\"tag\", tag), searchParams.append(\"query\", query);\n  for (const [key, value] of Object.entries(params))\n    searchParams.append(`$${key}`, JSON.stringify(value));\n  for (const [key, value] of Object.entries(opts))\n    value && searchParams.append(key, `${value}`);\n  return returnQuery === !1 && searchParams.append(\"returnQuery\", \"false\"), `?${searchParams}`;\n}, excludeFalsey = (param, defValue) => param === !1 ? void 0 : typeof param > \"u\" ? defValue : param, getMutationQuery = (options = {}) => ({\n  dryRun: options.dryRun,\n  returnIds: !0,\n  returnDocuments: excludeFalsey(options.returnDocuments, !0),\n  visibility: options.visibility || \"sync\",\n  autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n  skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation\n}), isResponse = (event) => event.type === \"response\", getBody = (event) => event.body, indexBy = (docs, attr) => docs.reduce((indexed, doc) => (indexed[attr(doc)] = doc, indexed), /* @__PURE__ */ Object.create(null)), getQuerySizeLimit = 11264;\nfunction _fetch(client, httpRequest, _stega, query, _params = {}, options = {}) {\n  const stega = \"stega\" in options ? {\n    ..._stega || {},\n    ...typeof options.stega == \"boolean\" ? { enabled: options.stega } : options.stega || {}\n  } : _stega, params = stega.enabled ? (0,_chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_3__.stegaClean)(_params) : _params, mapResponse = options.filterResponse === !1 ? (res) => res : (res) => res.result, { cache, next, ...opts } = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal < \"u\",\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? \"withKeyArraySelector\" : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === !1 && options.returnQuery !== !1\n  }, reqOpts = typeof cache < \"u\" || typeof next < \"u\" ? { ...opts, fetch: { cache, next } } : opts, $request = _dataRequest(client, httpRequest, \"query\", { query, params }, reqOpts);\n  return stega.enabled ? $request.pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.combineLatestWith)(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.from)(\n        __webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ./_chunks-es/stegaEncodeSourceMap.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\")).then(function(n) {\n          return n.stegaEncodeSourceMap$1;\n        }).then(\n          ({ stegaEncodeSourceMap }) => stegaEncodeSourceMap\n        )\n      )\n    ),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(\n      ([res, stegaEncodeSourceMap]) => {\n        const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega);\n        return mapResponse({ ...res, result });\n      }\n    )\n  ) : $request.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(mapResponse));\n}\nfunction _getDocument(client, httpRequest, id, opts = {}) {\n  const options = { uri: _getDataUrl(client, \"doc\", id), json: !0, tag: opts.tag };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((event) => event.body.documents && event.body.documents[0])\n  );\n}\nfunction _getDocuments(client, httpRequest, ids, opts = {}) {\n  const options = { uri: _getDataUrl(client, \"doc\", ids.join(\",\")), json: !0, tag: opts.tag };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((event) => {\n      const indexed = indexBy(event.body.documents || [], (doc) => doc._id);\n      return ids.map((id) => indexed[id] || null);\n    })\n  );\n}\nfunction _createIfNotExists(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createIfNotExists\", doc), _create(client, httpRequest, doc, \"createIfNotExists\", options);\n}\nfunction _createOrReplace(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createOrReplace\", doc), _create(client, httpRequest, doc, \"createOrReplace\", options);\n}\nfunction _delete(client, httpRequest, selection, options) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"mutate\",\n    { mutations: [{ delete: getSelection(selection) }] },\n    options\n  );\n}\nfunction _mutate(client, httpRequest, mutations, options) {\n  let mut;\n  mutations instanceof Patch || mutations instanceof ObservablePatch ? mut = { patch: mutations.serialize() } : mutations instanceof Transaction || mutations instanceof ObservableTransaction ? mut = mutations.serialize() : mut = mutations;\n  const muts = Array.isArray(mut) ? mut : [mut], transactionId = options && options.transactionId || void 0;\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: muts, transactionId }, options);\n}\nfunction _action(client, httpRequest, actions, options) {\n  const acts = Array.isArray(actions) ? actions : [actions], transactionId = options && options.transactionId || void 0, skipCrossDatasetReferenceValidation = options && options.skipCrossDatasetReferenceValidation || void 0, dryRun = options && options.dryRun || void 0;\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"actions\",\n    { actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun },\n    options\n  );\n}\nfunction _dataRequest(client, httpRequest, endpoint, body, options = {}) {\n  const isMutation = endpoint === \"mutate\", isAction = endpoint === \"actions\", isQuery = endpoint === \"query\", strQuery = isMutation || isAction ? \"\" : encodeQueryString(body), useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit, stringQuery = useGet ? strQuery : \"\", returnFirst = options.returnFirst, { timeout, token, tag, headers: headers2, returnQuery, lastLiveEventId } = options, uri = _getDataUrl(client, endpoint, stringQuery), reqOptions = {\n    method: useGet ? \"GET\" : \"POST\",\n    uri,\n    json: !0,\n    body: useGet ? void 0 : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers: headers2,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    canUseCdn: isQuery,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn\n  };\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(getBody),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((res) => {\n      if (!isMutation)\n        return res;\n      const results = res.results || [];\n      if (options.returnDocuments)\n        return returnFirst ? results[0] && results[0].document : results.map((mut) => mut.document);\n      const key = returnFirst ? \"documentId\" : \"documentIds\", ids = returnFirst ? results[0] && results[0].id : results.map((mut) => mut.id);\n      return {\n        transactionId: res.transactionId,\n        results,\n        [key]: ids\n      };\n    })\n  );\n}\nfunction _create(client, httpRequest, doc, op, options = {}) {\n  const mutation = { [op]: doc }, opts = Object.assign({ returnFirst: !0, returnDocuments: !0 }, options);\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: [mutation] }, opts);\n}\nfunction _requestObservable(client, httpRequest, options) {\n  var _a, _b;\n  const uri = options.url || options.uri, config = client.config(), canUseCdn = typeof options.canUseCdn > \"u\" ? [\"GET\", \"HEAD\"].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/\") === 0 : options.canUseCdn;\n  let useCdn = ((_a = options.useCdn) != null ? _a : config.useCdn) && canUseCdn;\n  const tag = options.tag && config.requestTagPrefix ? [config.requestTagPrefix, options.tag].join(\".\") : options.tag || config.requestTagPrefix;\n  if (tag && options.tag !== null && (options.query = { tag: requestTag(tag), ...options.query }), [\"GET\", \"HEAD\", \"POST\"].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/query/\") === 0) {\n    const resultSourceMap = (_b = options.resultSourceMap) != null ? _b : config.resultSourceMap;\n    resultSourceMap !== void 0 && resultSourceMap !== !1 && (options.query = { resultSourceMap, ...options.query });\n    const perspective = options.perspective || config.perspective;\n    typeof perspective == \"string\" && perspective !== \"raw\" && (validateApiPerspective(perspective), options.query = { perspective, ...options.query }, perspective === \"previewDrafts\" && useCdn && (useCdn = !1, printCdnPreviewDraftsWarning())), options.lastLiveEventId && (options.query = { ...options.query, lastLiveEventId: options.lastLiveEventId }), options.returnQuery === !1 && (options.query = { returnQuery: \"false\", ...options.query });\n  }\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn)\n    })\n  ), request = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable(\n    (subscriber) => httpRequest(reqOptions, config.requester).subscribe(subscriber)\n  );\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request;\n}\nfunction _request(client, httpRequest, options) {\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)((event) => event.type === \"response\"),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((event) => event.body)\n  );\n}\nfunction _getDataUrl(client, operation, path) {\n  const config = client.config(), catalog = hasDataset(config), baseUri = `/${operation}/${catalog}`;\n  return `/data${path ? `${baseUri}/${path}` : baseUri}`.replace(/\\/($|\\?)/, \"$1\");\n}\nfunction _getUrl(client, uri, canUseCdn = !1) {\n  const { url, cdnUrl } = client.config();\n  return `${canUseCdn ? cdnUrl : url}/${uri.replace(/^\\//, \"\")}`;\n}\nfunction _withAbortSignal(signal) {\n  return (input) => new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const abort = () => observer.error(_createAbortError(signal));\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n    const subscription = input.subscribe(observer);\n    return signal.addEventListener(\"abort\", abort), () => {\n      signal.removeEventListener(\"abort\", abort), subscription.unsubscribe();\n    };\n  });\n}\nconst isDomExceptionSupported = !!globalThis.DOMException;\nfunction _createAbortError(signal) {\n  var _a, _b;\n  if (isDomExceptionSupported)\n    return new DOMException((_a = signal == null ? void 0 : signal.reason) != null ? _a : \"The operation was aborted.\", \"AbortError\");\n  const error = new Error((_b = signal == null ? void 0 : signal.reason) != null ? _b : \"The operation was aborted.\");\n  return error.name = \"AbortError\", error;\n}\nvar __accessCheck$5 = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n}, __privateGet$5 = (obj, member, getter) => (__accessCheck$5(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj)), __privateAdd$5 = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n}, __privateSet$5 = (obj, member, value, setter) => (__accessCheck$5(obj, member, \"write to private field\"), member.set(obj, value), value), _client$4, _httpRequest$4;\nclass ObservableAssetsClient {\n  constructor(client, httpRequest) {\n    __privateAdd$5(this, _client$4, void 0), __privateAdd$5(this, _httpRequest$4, void 0), __privateSet$5(this, _client$4, client), __privateSet$5(this, _httpRequest$4, httpRequest);\n  }\n  upload(assetType, body, options) {\n    return _upload(__privateGet$5(this, _client$4), __privateGet$5(this, _httpRequest$4), assetType, body, options);\n  }\n}\n_client$4 = /* @__PURE__ */ new WeakMap(), _httpRequest$4 = /* @__PURE__ */ new WeakMap();\nvar _client2$3, _httpRequest2$4;\nclass AssetsClient {\n  constructor(client, httpRequest) {\n    __privateAdd$5(this, _client2$3, void 0), __privateAdd$5(this, _httpRequest2$4, void 0), __privateSet$5(this, _client2$3, client), __privateSet$5(this, _httpRequest2$4, httpRequest);\n  }\n  upload(assetType, body, options) {\n    const observable2 = _upload(__privateGet$5(this, _client2$3), __privateGet$5(this, _httpRequest2$4), assetType, body, options);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      observable2.pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)((event) => event.type === \"response\"),\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(\n          (event) => event.body.document\n        )\n      )\n    );\n  }\n}\n_client2$3 = /* @__PURE__ */ new WeakMap(), _httpRequest2$4 = /* @__PURE__ */ new WeakMap();\nfunction _upload(client, httpRequest, assetType, body, opts = {}) {\n  validateAssetType(assetType);\n  let meta = opts.extract || void 0;\n  meta && !meta.length && (meta = [\"none\"]);\n  const dataset2 = hasDataset(client.config()), assetEndpoint = assetType === \"image\" ? \"images\" : \"files\", options = optionsFromFile(opts, body), { tag, label, title, description, creditLine, filename, source } = options, query = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine\n  };\n  return source && (query.sourceId = source.id, query.sourceName = source.name, query.sourceUrl = source.url), _requestObservable(client, httpRequest, {\n    tag,\n    method: \"POST\",\n    timeout: options.timeout || 0,\n    uri: `/assets/${assetEndpoint}/${dataset2}`,\n    headers: options.contentType ? { \"Content-Type\": options.contentType } : {},\n    query,\n    body\n  });\n}\nfunction optionsFromFile(opts, file) {\n  return typeof File > \"u\" || !(file instanceof File) ? opts : Object.assign(\n    {\n      filename: opts.preserveFilename === !1 ? void 0 : file.name,\n      contentType: file.type\n    },\n    opts\n  );\n}\nvar defaults = (obj, defaults2) => Object.keys(defaults2).concat(Object.keys(obj)).reduce((target, prop) => (target[prop] = typeof obj[prop] > \"u\" ? defaults2[prop] : obj[prop], target), {});\nconst pick = (obj, props) => props.reduce((selection, prop) => (typeof obj[prop] > \"u\" || (selection[prop] = obj[prop]), selection), {}), MAX_URL_LENGTH = 14800, possibleOptions = [\n  \"includePreviousRevision\",\n  \"includeResult\",\n  \"visibility\",\n  \"effectFormat\",\n  \"tag\"\n], defaultOptions = {\n  includeResult: !0\n};\nfunction _listen(query, params, opts = {}) {\n  const { url, token, withCredentials, requestTagPrefix } = this.config(), tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join(\".\") : opts.tag, options = { ...defaults(opts, defaultOptions), tag }, listenOpts = pick(options, possibleOptions), qs = encodeQueryString({ query, params, options: { tag, ...listenOpts } }), uri = `${url}${_getDataUrl(this, \"listen\", qs)}`;\n  if (uri.length > MAX_URL_LENGTH)\n    return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => observer.error(new Error(\"Query too large for listener\")));\n  const listenFor = options.events ? options.events : [\"mutation\"], shouldEmitReconnect = listenFor.indexOf(\"reconnect\") !== -1, esOptions = {};\n  return (token || withCredentials) && (esOptions.withCredentials = !0), token && (esOptions.headers = {\n    Authorization: `Bearer ${token}`\n  }), new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    let es, reconnectTimer, stopped = !1, unsubscribed = !1;\n    open();\n    function onError() {\n      stopped || (emitReconnect(), !stopped && es.readyState === es.CLOSED && (unsubscribe(), clearTimeout(reconnectTimer), reconnectTimer = setTimeout(open, 100)));\n    }\n    function onChannelError(err) {\n      observer.error(cooerceError(err));\n    }\n    function onMessage(evt) {\n      const event = parseEvent$1(evt);\n      return event instanceof Error ? observer.error(event) : observer.next(event);\n    }\n    function onDisconnect() {\n      stopped = !0, unsubscribe(), observer.complete();\n    }\n    function unsubscribe() {\n      es && (es.removeEventListener(\"error\", onError), es.removeEventListener(\"channelError\", onChannelError), es.removeEventListener(\"disconnect\", onDisconnect), listenFor.forEach((type) => es.removeEventListener(type, onMessage)), es.close());\n    }\n    function emitReconnect() {\n      shouldEmitReconnect && observer.next({ type: \"reconnect\" });\n    }\n    async function getEventSource() {\n      const { default: EventSource2 } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(ssr)/./node_modules/@sanity/eventsource/node.js\", 19));\n      if (unsubscribed)\n        return;\n      const evs = new EventSource2(uri, esOptions);\n      return evs.addEventListener(\"error\", onError), evs.addEventListener(\"channelError\", onChannelError), evs.addEventListener(\"disconnect\", onDisconnect), listenFor.forEach((type) => evs.addEventListener(type, onMessage)), evs;\n    }\n    function open() {\n      getEventSource().then((eventSource) => {\n        eventSource && (es = eventSource, unsubscribed && unsubscribe());\n      }).catch((reason) => {\n        observer.error(reason), stop();\n      });\n    }\n    function stop() {\n      stopped = !0, unsubscribe(), unsubscribed = !0;\n    }\n    return stop;\n  });\n}\nfunction parseEvent$1(event) {\n  try {\n    const data = event.data && JSON.parse(event.data) || {};\n    return Object.assign({ type: event.type }, data);\n  } catch (err) {\n    return err;\n  }\n}\nfunction cooerceError(err) {\n  if (err instanceof Error)\n    return err;\n  const evt = parseEvent$1(err);\n  return evt instanceof Error ? evt : new Error(extractErrorMessage(evt));\n}\nfunction extractErrorMessage(err) {\n  return err.error ? err.error.description ? err.error.description : typeof err.error == \"string\" ? err.error : JSON.stringify(err.error, null, 2) : err.message || \"Unknown listener error\";\n}\nvar __accessCheck$4 = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n}, __privateGet$4 = (obj, member, getter) => (__accessCheck$4(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj)), __privateAdd$4 = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n}, __privateSet$4 = (obj, member, value, setter) => (__accessCheck$4(obj, member, \"write to private field\"), member.set(obj, value), value);\nconst requiredApiVersion = \"2021-03-26\";\nvar _client$3;\nclass LiveClient {\n  constructor(client) {\n    __privateAdd$4(this, _client$3, void 0), __privateSet$4(this, _client$3, client);\n  }\n  /**\n   * Requires `apiVersion` to be `2021-03-26` or later.\n   */\n  events() {\n    const apiVersion = __privateGet$4(this, _client$3).config().apiVersion.replace(/^v/, \"\");\n    if (apiVersion !== \"X\" && apiVersion < requiredApiVersion)\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. The current API version is ${apiVersion}. Please update your API version to use this feature.`\n      );\n    const path = _getDataUrl(__privateGet$4(this, _client$3), \"live/events\"), url = new URL(__privateGet$4(this, _client$3).getUrl(path, !1)), listenFor = [\"restart\", \"message\"];\n    return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n      let es, reconnectTimer, stopped = !1, unsubscribed = !1;\n      open();\n      function onError(evt) {\n        if (!stopped) {\n          if (\"data\" in evt) {\n            const event = parseEvent(evt);\n            observer.error(new Error(event.message, { cause: event }));\n          }\n          es.readyState === es.CLOSED && (unsubscribe(), clearTimeout(reconnectTimer), reconnectTimer = setTimeout(open, 100));\n        }\n      }\n      function onMessage(evt) {\n        const event = parseEvent(evt);\n        return event instanceof Error ? observer.error(event) : observer.next(event);\n      }\n      function unsubscribe() {\n        if (es) {\n          es.removeEventListener(\"error\", onError);\n          for (const type of listenFor)\n            es.removeEventListener(type, onMessage);\n          es.close();\n        }\n      }\n      async function getEventSource() {\n        const EventSourceImplementation = typeof EventSource > \"u\" ? (await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(ssr)/./node_modules/@sanity/eventsource/node.js\", 19))).default : EventSource;\n        if (unsubscribed)\n          return;\n        const evs = new EventSourceImplementation(url.toString());\n        evs.addEventListener(\"error\", onError);\n        for (const type of listenFor)\n          evs.addEventListener(type, onMessage);\n        return evs;\n      }\n      function open() {\n        getEventSource().then((eventSource) => {\n          eventSource && (es = eventSource, unsubscribed && unsubscribe());\n        }).catch((reason) => {\n          observer.error(reason), stop();\n        });\n      }\n      function stop() {\n        stopped = !0, unsubscribe(), unsubscribed = !0;\n      }\n      return stop;\n    });\n  }\n}\n_client$3 = /* @__PURE__ */ new WeakMap();\nfunction parseEvent(event) {\n  try {\n    const data = event.data && JSON.parse(event.data) || {};\n    return { type: event.type, id: event.lastEventId, ...data };\n  } catch (err) {\n    return err;\n  }\n}\nvar __accessCheck$3 = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n}, __privateGet$3 = (obj, member, getter) => (__accessCheck$3(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj)), __privateAdd$3 = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n}, __privateSet$3 = (obj, member, value, setter) => (__accessCheck$3(obj, member, \"write to private field\"), member.set(obj, value), value), _client$2, _httpRequest$3;\nclass ObservableDatasetsClient {\n  constructor(client, httpRequest) {\n    __privateAdd$3(this, _client$2, void 0), __privateAdd$3(this, _httpRequest$3, void 0), __privateSet$3(this, _client$2, client), __privateSet$3(this, _httpRequest$3, httpRequest);\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name2, options) {\n    return _modify(__privateGet$3(this, _client$2), __privateGet$3(this, _httpRequest$3), \"PUT\", name2, options);\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name2, options) {\n    return _modify(__privateGet$3(this, _client$2), __privateGet$3(this, _httpRequest$3), \"PATCH\", name2, options);\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name2) {\n    return _modify(__privateGet$3(this, _client$2), __privateGet$3(this, _httpRequest$3), \"DELETE\", name2);\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return _request(__privateGet$3(this, _client$2), __privateGet$3(this, _httpRequest$3), {\n      uri: \"/datasets\",\n      tag: null\n    });\n  }\n}\n_client$2 = /* @__PURE__ */ new WeakMap(), _httpRequest$3 = /* @__PURE__ */ new WeakMap();\nvar _client2$2, _httpRequest2$3;\nclass DatasetsClient {\n  constructor(client, httpRequest) {\n    __privateAdd$3(this, _client2$2, void 0), __privateAdd$3(this, _httpRequest2$3, void 0), __privateSet$3(this, _client2$2, client), __privateSet$3(this, _httpRequest2$3, httpRequest);\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name2, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _modify(__privateGet$3(this, _client2$2), __privateGet$3(this, _httpRequest2$3), \"PUT\", name2, options)\n    );\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name2, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _modify(__privateGet$3(this, _client2$2), __privateGet$3(this, _httpRequest2$3), \"PATCH\", name2, options)\n    );\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name2) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_modify(__privateGet$3(this, _client2$2), __privateGet$3(this, _httpRequest2$3), \"DELETE\", name2));\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _request(__privateGet$3(this, _client2$2), __privateGet$3(this, _httpRequest2$3), { uri: \"/datasets\", tag: null })\n    );\n  }\n}\n_client2$2 = /* @__PURE__ */ new WeakMap(), _httpRequest2$3 = /* @__PURE__ */ new WeakMap();\nfunction _modify(client, httpRequest, method, name2, options) {\n  return dataset(name2), _request(client, httpRequest, {\n    method,\n    uri: `/datasets/${name2}`,\n    body: options,\n    tag: null\n  });\n}\nvar __accessCheck$2 = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n}, __privateGet$2 = (obj, member, getter) => (__accessCheck$2(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj)), __privateAdd$2 = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n}, __privateSet$2 = (obj, member, value, setter) => (__accessCheck$2(obj, member, \"write to private field\"), member.set(obj, value), value), _client$1, _httpRequest$2;\nclass ObservableProjectsClient {\n  constructor(client, httpRequest) {\n    __privateAdd$2(this, _client$1, void 0), __privateAdd$2(this, _httpRequest$2, void 0), __privateSet$2(this, _client$1, client), __privateSet$2(this, _httpRequest$2, httpRequest);\n  }\n  list(options) {\n    const uri = (options == null ? void 0 : options.includeMembers) === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return _request(__privateGet$2(this, _client$1), __privateGet$2(this, _httpRequest$2), { uri });\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return _request(__privateGet$2(this, _client$1), __privateGet$2(this, _httpRequest$2), { uri: `/projects/${projectId2}` });\n  }\n}\n_client$1 = /* @__PURE__ */ new WeakMap(), _httpRequest$2 = /* @__PURE__ */ new WeakMap();\nvar _client2$1, _httpRequest2$2;\nclass ProjectsClient {\n  constructor(client, httpRequest) {\n    __privateAdd$2(this, _client2$1, void 0), __privateAdd$2(this, _httpRequest2$2, void 0), __privateSet$2(this, _client2$1, client), __privateSet$2(this, _httpRequest2$2, httpRequest);\n  }\n  list(options) {\n    const uri = (options == null ? void 0 : options.includeMembers) === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_request(__privateGet$2(this, _client2$1), __privateGet$2(this, _httpRequest2$2), { uri }));\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _request(__privateGet$2(this, _client2$1), __privateGet$2(this, _httpRequest2$2), { uri: `/projects/${projectId2}` })\n    );\n  }\n}\n_client2$1 = /* @__PURE__ */ new WeakMap(), _httpRequest2$2 = /* @__PURE__ */ new WeakMap();\nvar __accessCheck$1 = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n}, __privateGet$1 = (obj, member, getter) => (__accessCheck$1(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj)), __privateAdd$1 = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n}, __privateSet$1 = (obj, member, value, setter) => (__accessCheck$1(obj, member, \"write to private field\"), member.set(obj, value), value), _client, _httpRequest$1;\nclass ObservableUsersClient {\n  constructor(client, httpRequest) {\n    __privateAdd$1(this, _client, void 0), __privateAdd$1(this, _httpRequest$1, void 0), __privateSet$1(this, _client, client), __privateSet$1(this, _httpRequest$1, httpRequest);\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return _request(\n      __privateGet$1(this, _client),\n      __privateGet$1(this, _httpRequest$1),\n      { uri: `/users/${id}` }\n    );\n  }\n}\n_client = /* @__PURE__ */ new WeakMap(), _httpRequest$1 = /* @__PURE__ */ new WeakMap();\nvar _client2, _httpRequest2$1;\nclass UsersClient {\n  constructor(client, httpRequest) {\n    __privateAdd$1(this, _client2, void 0), __privateAdd$1(this, _httpRequest2$1, void 0), __privateSet$1(this, _client2, client), __privateSet$1(this, _httpRequest2$1, httpRequest);\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _request(__privateGet$1(this, _client2), __privateGet$1(this, _httpRequest2$1), {\n        uri: `/users/${id}`\n      })\n    );\n  }\n}\n_client2 = /* @__PURE__ */ new WeakMap(), _httpRequest2$1 = /* @__PURE__ */ new WeakMap();\nvar __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => (__defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value), value), __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n}, __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj)), __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n}, __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), member.set(obj, value), value), _clientConfig, _httpRequest;\nconst _ObservableSanityClient = class _ObservableSanityClient2 {\n  constructor(httpRequest, config = defaultConfig) {\n    __publicField(this, \"assets\"), __publicField(this, \"datasets\"), __publicField(this, \"live\"), __publicField(this, \"projects\"), __publicField(this, \"users\"), __privateAdd(this, _clientConfig, void 0), __privateAdd(this, _httpRequest, void 0), __publicField(this, \"listen\", _listen), this.config(config), __privateSet(this, _httpRequest, httpRequest), this.assets = new ObservableAssetsClient(this, __privateGet(this, _httpRequest)), this.datasets = new ObservableDatasetsClient(this, __privateGet(this, _httpRequest)), this.live = new LiveClient(this), this.projects = new ObservableProjectsClient(this, __privateGet(this, _httpRequest)), this.users = new ObservableUsersClient(this, __privateGet(this, _httpRequest));\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new _ObservableSanityClient2(__privateGet(this, _httpRequest), this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...__privateGet(this, _clientConfig) };\n    if (__privateGet(this, _clientConfig) && __privateGet(this, _clientConfig).allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return __privateSet(this, _clientConfig, initConfig(newConfig, __privateGet(this, _clientConfig) || {})), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new _ObservableSanityClient2(__privateGet(this, _httpRequest), {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof (newConfig == null ? void 0 : newConfig.stega) == \"boolean\" ? { enabled: newConfig.stega } : (newConfig == null ? void 0 : newConfig.stega) || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return _fetch(\n      this,\n      __privateGet(this, _httpRequest),\n      __privateGet(this, _clientConfig).stega,\n      query,\n      params,\n      options\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return _getDocument(this, __privateGet(this, _httpRequest), id, options);\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return _getDocuments(this, __privateGet(this, _httpRequest), ids, options);\n  }\n  create(document, options) {\n    return _create(this, __privateGet(this, _httpRequest), document, \"create\", options);\n  }\n  createIfNotExists(document, options) {\n    return _createIfNotExists(this, __privateGet(this, _httpRequest), document, options);\n  }\n  createOrReplace(document, options) {\n    return _createOrReplace(this, __privateGet(this, _httpRequest), document, options);\n  }\n  delete(selection, options) {\n    return _delete(this, __privateGet(this, _httpRequest), selection, options);\n  }\n  mutate(operations, options) {\n    return _mutate(this, __privateGet(this, _httpRequest), operations, options);\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection, operations) {\n    return new ObservablePatch(selection, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new ObservableTransaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return _action(this, __privateGet(this, _httpRequest), operations, options);\n  }\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request(options) {\n    return _request(this, __privateGet(this, _httpRequest), options);\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n};\n_clientConfig = /* @__PURE__ */ new WeakMap(), _httpRequest = /* @__PURE__ */ new WeakMap();\nlet ObservableSanityClient = _ObservableSanityClient;\nvar _clientConfig2, _httpRequest2;\nconst _SanityClient = class _SanityClient2 {\n  constructor(httpRequest, config = defaultConfig) {\n    __publicField(this, \"assets\"), __publicField(this, \"datasets\"), __publicField(this, \"live\"), __publicField(this, \"projects\"), __publicField(this, \"users\"), __publicField(this, \"observable\"), __privateAdd(this, _clientConfig2, void 0), __privateAdd(this, _httpRequest2, void 0), __publicField(this, \"listen\", _listen), this.config(config), __privateSet(this, _httpRequest2, httpRequest), this.assets = new AssetsClient(this, __privateGet(this, _httpRequest2)), this.datasets = new DatasetsClient(this, __privateGet(this, _httpRequest2)), this.live = new LiveClient(this), this.projects = new ProjectsClient(this, __privateGet(this, _httpRequest2)), this.users = new UsersClient(this, __privateGet(this, _httpRequest2)), this.observable = new ObservableSanityClient(httpRequest, config);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new _SanityClient2(__privateGet(this, _httpRequest2), this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...__privateGet(this, _clientConfig2) };\n    if (__privateGet(this, _clientConfig2) && __privateGet(this, _clientConfig2).allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.observable && this.observable.config(newConfig), __privateSet(this, _clientConfig2, initConfig(newConfig, __privateGet(this, _clientConfig2) || {})), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new _SanityClient2(__privateGet(this, _httpRequest2), {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof (newConfig == null ? void 0 : newConfig.stega) == \"boolean\" ? { enabled: newConfig.stega } : (newConfig == null ? void 0 : newConfig.stega) || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _fetch(\n        this,\n        __privateGet(this, _httpRequest2),\n        __privateGet(this, _clientConfig2).stega,\n        query,\n        params,\n        options\n      )\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_getDocument(this, __privateGet(this, _httpRequest2), id, options));\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_getDocuments(this, __privateGet(this, _httpRequest2), ids, options));\n  }\n  create(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _create(this, __privateGet(this, _httpRequest2), document, \"create\", options)\n    );\n  }\n  createIfNotExists(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _createIfNotExists(this, __privateGet(this, _httpRequest2), document, options)\n    );\n  }\n  createOrReplace(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(\n      _createOrReplace(this, __privateGet(this, _httpRequest2), document, options)\n    );\n  }\n  delete(selection, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_delete(this, __privateGet(this, _httpRequest2), selection, options));\n  }\n  mutate(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_mutate(this, __privateGet(this, _httpRequest2), operations, options));\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId, operations) {\n    return new Patch(documentId, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new Transaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_action(this, __privateGet(this, _httpRequest2), operations, options));\n  }\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request(options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_request(this, __privateGet(this, _httpRequest2), options));\n  }\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint, body, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.lastValueFrom)(_dataRequest(this, __privateGet(this, _httpRequest2), endpoint, body, options));\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n};\n_clientConfig2 = /* @__PURE__ */ new WeakMap(), _httpRequest2 = /* @__PURE__ */ new WeakMap();\nlet SanityClient = _SanityClient;\nfunction defineCreateClientExports(envMiddleware, ClassConstructor) {\n  const defaultRequester = defineHttpRequest(envMiddleware);\n  return { requester: defaultRequester, createClient: (config) => new ClassConstructor(\n    (options, requester2) => (requester2 || defaultRequester)({\n      maxRedirects: 0,\n      maxRetries: config.maxRetries,\n      retryDelay: config.retryDelay,\n      ...options\n    }),\n    config\n  ) };\n}\nfunction defineDeprecatedCreateClient(createClient2) {\n  return function(config) {\n    return printNoDefaultExport(), createClient2(config);\n  };\n}\nvar name = \"@sanity/client\", version = \"6.20.1\";\nconst middleware = [\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.debug)({ verbose: !0, namespace: \"sanity:client\" }),\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.headers)({ \"User-Agent\": `${name} ${version}` }),\n  // Enable keep-alive, and in addition limit the number of sockets that can be opened.\n  // This avoids opening too many connections to the server if someone tries to execute\n  // a bunch of requests in parallel. It's recommended to have a concurrency limit\n  // at a \"higher limit\" (i.e. you shouldn't actually execute hundreds of requests in parallel),\n  // and this is mainly to minimize the impact for the network and server.\n  //\n  // We're currently matching the same defaults as browsers:\n  // https://stackoverflow.com/questions/26003756/is-there-a-limit-practical-or-otherwise-to-the-number-of-web-sockets-a-page-op\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.agent)({\n    keepAlive: !0,\n    maxSockets: 30,\n    maxTotalSockets: 256\n  })\n], exp = defineCreateClientExports(middleware, SanityClient), requester = exp.requester, createClient = exp.createClient, deprecatedCreateClient = defineDeprecatedCreateClient(createClient);\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/color/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/color/dist/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COLOR_HUES: () => (/* binding */ COLOR_HUES),\n/* harmony export */   COLOR_TINTS: () => (/* binding */ COLOR_TINTS),\n/* harmony export */   black: () => (/* binding */ black),\n/* harmony export */   blue: () => (/* binding */ blue),\n/* harmony export */   buildTints: () => (/* binding */ buildTints),\n/* harmony export */   color: () => (/* binding */ color),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   cyan: () => (/* binding */ cyan),\n/* harmony export */   darken: () => (/* binding */ darken),\n/* harmony export */   gray: () => (/* binding */ gray),\n/* harmony export */   green: () => (/* binding */ green),\n/* harmony export */   hexToRgb: () => (/* binding */ hexToRgb),\n/* harmony export */   hslToRgb: () => (/* binding */ hslToRgb),\n/* harmony export */   hues: () => (/* binding */ hues),\n/* harmony export */   limit: () => (/* binding */ limit),\n/* harmony export */   magenta: () => (/* binding */ magenta),\n/* harmony export */   orange: () => (/* binding */ orange),\n/* harmony export */   purple: () => (/* binding */ purple),\n/* harmony export */   red: () => (/* binding */ red),\n/* harmony export */   rgbToHex: () => (/* binding */ rgbToHex),\n/* harmony export */   rgbToHsl: () => (/* binding */ rgbToHsl),\n/* harmony export */   screen: () => (/* binding */ screen),\n/* harmony export */   white: () => (/* binding */ white),\n/* harmony export */   yellow: () => (/* binding */ yellow)\n/* harmony export */ });\nconst COLOR_HUES = [\n  \"gray\",\n  \"blue\",\n  \"purple\",\n  \"magenta\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"cyan\"\n], COLOR_TINTS = [\n  \"50\",\n  \"100\",\n  \"200\",\n  \"300\",\n  \"400\",\n  \"500\",\n  \"600\",\n  \"700\",\n  \"800\",\n  \"900\",\n  \"950\"\n];\nfunction hslToRgb(hsl) {\n  const h = hsl[0], s = hsl[1] / 100, l = hsl[2] / 100, k = (n) => (n + h / 30) % 12, a = s * Math.min(l, 1 - l), f = (n) => l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n  return [255 * f(0), 255 * f(8), 255 * f(4)];\n}\nfunction rgbToHex([r, g, b]) {\n  const _r = Math.round(r), _g = Math.round(g), _b = Math.round(b);\n  return \"#\" + ((1 << 24) + (_r << 16) + (_g << 8) + _b).toString(16).slice(1);\n}\nfunction buildTints(options) {\n  const { hueKey, color: color2 } = options;\n  return COLOR_TINTS.reduce((acc, tintKey) => {\n    const tint = Number(tintKey), rgb = hslToRgb(color2.tints[tintKey].hsl), hex = rgbToHex([Math.round(rgb[0]), Math.round(rgb[1]), Math.round(rgb[2])]);\n    return acc[tintKey] = {\n      title: `${hueKey.slice(0, 1).toUpperCase()}${hueKey.slice(1)} ${tint}`,\n      hex\n    }, acc;\n  }, {});\n}\nconst black = {\n  title: \"Black\",\n  hex: \"#0d0e12\"\n}, white = {\n  title: \"White\",\n  hex: \"#ffffff\"\n}, gray = {\n  50: {\n    title: \"Gray 50\",\n    hex: \"#f6f6f8\"\n  },\n  100: {\n    title: \"Gray 100\",\n    hex: \"#eeeef1\"\n  },\n  200: {\n    title: \"Gray 200\",\n    hex: \"#e3e4e8\"\n  },\n  300: {\n    title: \"Gray 300\",\n    hex: \"#bbbdc9\"\n  },\n  400: {\n    title: \"Gray 400\",\n    hex: \"#9499ad\"\n  },\n  500: {\n    title: \"Gray 500\",\n    hex: \"#727892\"\n  },\n  600: {\n    title: \"Gray 600\",\n    hex: \"#515870\"\n  },\n  700: {\n    title: \"Gray 700\",\n    hex: \"#383d51\"\n  },\n  800: {\n    title: \"Gray 800\",\n    hex: \"#252837\"\n  },\n  900: {\n    title: \"Gray 900\",\n    hex: \"#1b1d27\"\n  },\n  950: {\n    title: \"Gray 950\",\n    hex: \"#13141b\"\n  }\n}, blue = {\n  50: {\n    title: \"Blue 50\",\n    hex: \"#f5f8ff\"\n  },\n  100: {\n    title: \"Blue 100\",\n    hex: \"#e5edff\"\n  },\n  200: {\n    title: \"Blue 200\",\n    hex: \"#dbe5ff\"\n  },\n  300: {\n    title: \"Blue 300\",\n    hex: \"#a8bfff\"\n  },\n  400: {\n    title: \"Blue 400\",\n    hex: \"#7595ff\"\n  },\n  500: {\n    title: \"Blue 500\",\n    hex: \"#556bfc\"\n  },\n  600: {\n    title: \"Blue 600\",\n    hex: \"#4043e7\"\n  },\n  700: {\n    title: \"Blue 700\",\n    hex: \"#2927aa\"\n  },\n  800: {\n    title: \"Blue 800\",\n    hex: \"#192457\"\n  },\n  900: {\n    title: \"Blue 900\",\n    hex: \"#161a41\"\n  },\n  950: {\n    title: \"Blue 950\",\n    hex: \"#101228\"\n  }\n}, purple = {\n  50: {\n    title: \"Purple 50\",\n    hex: \"#f8f5ff\"\n  },\n  100: {\n    title: \"Purple 100\",\n    hex: \"#f1ebff\"\n  },\n  200: {\n    title: \"Purple 200\",\n    hex: \"#ece1fe\"\n  },\n  300: {\n    title: \"Purple 300\",\n    hex: \"#ccb1fc\"\n  },\n  400: {\n    title: \"Purple 400\",\n    hex: \"#b087f7\"\n  },\n  500: {\n    title: \"Purple 500\",\n    hex: \"#8f57ef\"\n  },\n  600: {\n    title: \"Purple 600\",\n    hex: \"#721fe5\"\n  },\n  700: {\n    title: \"Purple 700\",\n    hex: \"#4c1a9e\"\n  },\n  800: {\n    title: \"Purple 800\",\n    hex: \"#2f1862\"\n  },\n  900: {\n    title: \"Purple 900\",\n    hex: \"#23173f\"\n  },\n  950: {\n    title: \"Purple 950\",\n    hex: \"#181128\"\n  }\n}, magenta = {\n  50: {\n    title: \"Magenta 50\",\n    hex: \"#fef6f9\"\n  },\n  100: {\n    title: \"Magenta 100\",\n    hex: \"#fde8ef\"\n  },\n  200: {\n    title: \"Magenta 200\",\n    hex: \"#fcdee9\"\n  },\n  300: {\n    title: \"Magenta 300\",\n    hex: \"#f7abc5\"\n  },\n  400: {\n    title: \"Magenta 400\",\n    hex: \"#f0709b\"\n  },\n  500: {\n    title: \"Magenta 500\",\n    hex: \"#e72767\"\n  },\n  600: {\n    title: \"Magenta 600\",\n    hex: \"#b11651\"\n  },\n  700: {\n    title: \"Magenta 700\",\n    hex: \"#7c1342\"\n  },\n  800: {\n    title: \"Magenta 800\",\n    hex: \"#4b1130\"\n  },\n  900: {\n    title: \"Magenta 900\",\n    hex: \"#341325\"\n  },\n  950: {\n    title: \"Magenta 950\",\n    hex: \"#1f0f14\"\n  }\n}, red = {\n  50: {\n    title: \"Red 50\",\n    hex: \"#fff6f5\"\n  },\n  100: {\n    title: \"Red 100\",\n    hex: \"#ffe7e5\"\n  },\n  200: {\n    title: \"Red 200\",\n    hex: \"#ffdedc\"\n  },\n  300: {\n    title: \"Red 300\",\n    hex: \"#fdada5\"\n  },\n  400: {\n    title: \"Red 400\",\n    hex: \"#f77769\"\n  },\n  500: {\n    title: \"Red 500\",\n    hex: \"#ef4434\"\n  },\n  600: {\n    title: \"Red 600\",\n    hex: \"#cc2819\"\n  },\n  700: {\n    title: \"Red 700\",\n    hex: \"#8b2018\"\n  },\n  800: {\n    title: \"Red 800\",\n    hex: \"#4d1714\"\n  },\n  900: {\n    title: \"Red 900\",\n    hex: \"#321615\"\n  },\n  950: {\n    title: \"Red 950\",\n    hex: \"#1e1011\"\n  }\n}, orange = {\n  50: {\n    title: \"Orange 50\",\n    hex: \"#fff7f0\"\n  },\n  100: {\n    title: \"Orange 100\",\n    hex: \"#ffeadb\"\n  },\n  200: {\n    title: \"Orange 200\",\n    hex: \"#ffddc7\"\n  },\n  300: {\n    title: \"Orange 300\",\n    hex: \"#ffb685\"\n  },\n  400: {\n    title: \"Orange 400\",\n    hex: \"#ff8e42\"\n  },\n  500: {\n    title: \"Orange 500\",\n    hex: \"#fa6400\"\n  },\n  600: {\n    title: \"Orange 600\",\n    hex: \"#b14802\"\n  },\n  700: {\n    title: \"Orange 700\",\n    hex: \"#7c3404\"\n  },\n  800: {\n    title: \"Orange 800\",\n    hex: \"#461e07\"\n  },\n  900: {\n    title: \"Orange 900\",\n    hex: \"#32160b\"\n  },\n  950: {\n    title: \"Orange 950\",\n    hex: \"#21120d\"\n  }\n}, yellow = {\n  50: {\n    title: \"Yellow 50\",\n    hex: \"#fefae1\"\n  },\n  100: {\n    title: \"Yellow 100\",\n    hex: \"#fcf3bb\"\n  },\n  200: {\n    title: \"Yellow 200\",\n    hex: \"#f9e994\"\n  },\n  300: {\n    title: \"Yellow 300\",\n    hex: \"#f7d455\"\n  },\n  400: {\n    title: \"Yellow 400\",\n    hex: \"#f9bc15\"\n  },\n  500: {\n    title: \"Yellow 500\",\n    hex: \"#d28a04\"\n  },\n  600: {\n    title: \"Yellow 600\",\n    hex: \"#965908\"\n  },\n  700: {\n    title: \"Yellow 700\",\n    hex: \"#653a0b\"\n  },\n  800: {\n    title: \"Yellow 800\",\n    hex: \"#3b220c\"\n  },\n  900: {\n    title: \"Yellow 900\",\n    hex: \"#271a11\"\n  },\n  950: {\n    title: \"Yellow 950\",\n    hex: \"#181410\"\n  }\n}, green = {\n  50: {\n    title: \"Green 50\",\n    hex: \"#e7fef5\"\n  },\n  100: {\n    title: \"Green 100\",\n    hex: \"#c5fce8\"\n  },\n  200: {\n    title: \"Green 200\",\n    hex: \"#a9f9dc\"\n  },\n  300: {\n    title: \"Green 300\",\n    hex: \"#59f3ba\"\n  },\n  400: {\n    title: \"Green 400\",\n    hex: \"#0ff0a1\"\n  },\n  500: {\n    title: \"Green 500\",\n    hex: \"#04b97a\"\n  },\n  600: {\n    title: \"Green 600\",\n    hex: \"#01794f\"\n  },\n  700: {\n    title: \"Green 700\",\n    hex: \"#015133\"\n  },\n  800: {\n    title: \"Green 800\",\n    hex: \"#023120\"\n  },\n  900: {\n    title: \"Green 900\",\n    hex: \"#06231a\"\n  },\n  950: {\n    title: \"Green 950\",\n    hex: \"#071715\"\n  }\n}, cyan = {\n  50: {\n    title: \"Cyan 50\",\n    hex: \"#e7fefe\"\n  },\n  100: {\n    title: \"Cyan 100\",\n    hex: \"#c5fcfc\"\n  },\n  200: {\n    title: \"Cyan 200\",\n    hex: \"#96f8f8\"\n  },\n  300: {\n    title: \"Cyan 300\",\n    hex: \"#62efef\"\n  },\n  400: {\n    title: \"Cyan 400\",\n    hex: \"#18e2e2\"\n  },\n  500: {\n    title: \"Cyan 500\",\n    hex: \"#04b8be\"\n  },\n  600: {\n    title: \"Cyan 600\",\n    hex: \"#037782\"\n  },\n  700: {\n    title: \"Cyan 700\",\n    hex: \"#024950\"\n  },\n  800: {\n    title: \"Cyan 800\",\n    hex: \"#042f34\"\n  },\n  900: {\n    title: \"Cyan 900\",\n    hex: \"#072227\"\n  },\n  950: {\n    title: \"Cyan 950\",\n    hex: \"#0d181c\"\n  }\n}, hues = { gray, blue, purple, magenta, red, orange, yellow, green, cyan }, color = { black, white, ...hues }, config = {\n  black: {\n    title: \"Black\",\n    hsl: [225, 16, 6]\n  },\n  white: {\n    title: \"White\",\n    hsl: [0, 0, 100]\n  },\n  gray: {\n    title: \"Gray\",\n    tints: {\n      50: {\n        title: \"Gray 50\",\n        hsl: [240, 12, 97]\n      },\n      100: {\n        title: \"Gray 100\",\n        hsl: [240, 10, 94]\n      },\n      200: {\n        title: \"Gray 200\",\n        hsl: [231, 10, 90]\n      },\n      300: {\n        title: \"Gray 300\",\n        hsl: [232, 11, 76]\n      },\n      400: {\n        title: \"Gray 400\",\n        hsl: [228, 13, 63]\n      },\n      500: {\n        title: \"Gray 500\",\n        hsl: [229, 13, 51]\n      },\n      600: {\n        title: \"Gray 600\",\n        hsl: [228, 16, 38]\n      },\n      700: {\n        title: \"Gray 700\",\n        hsl: [229, 18, 27]\n      },\n      800: {\n        title: \"Gray 800\",\n        hsl: [229, 19, 18]\n      },\n      900: {\n        title: \"Gray 900\",\n        hsl: [228, 19, 13]\n      },\n      950: {\n        title: \"Gray 950\",\n        hsl: [233, 17, 9]\n      }\n    }\n  },\n  blue: {\n    title: \"Blue\",\n    tints: {\n      50: {\n        title: \"Blue 50\",\n        hsl: [222, 100, 98]\n      },\n      100: {\n        title: \"Blue 100\",\n        hsl: [222, 100, 95]\n      },\n      200: {\n        title: \"Blue 200\",\n        hsl: [223, 100, 93]\n      },\n      300: {\n        title: \"Blue 300\",\n        hsl: [224, 100, 83]\n      },\n      400: {\n        title: \"Blue 400\",\n        hsl: [226, 100, 73]\n      },\n      500: {\n        title: \"Blue 500\",\n        hsl: [232, 96, 66]\n      },\n      600: {\n        title: \"Blue 600\",\n        hsl: [239, 78, 58]\n      },\n      700: {\n        title: \"Blue 700\",\n        hsl: [241, 63, 41]\n      },\n      800: {\n        title: \"Blue 800\",\n        hsl: [230, 55, 22]\n      },\n      900: {\n        title: \"Blue 900\",\n        hsl: [234, 49, 17]\n      },\n      950: {\n        title: \"Blue 950\",\n        hsl: [235, 43, 11]\n      }\n    }\n  },\n  purple: {\n    title: \"Purple\",\n    tints: {\n      50: {\n        title: \"Purple 50\",\n        hsl: [260, 95, 98]\n      },\n      100: {\n        title: \"Purple 100\",\n        hsl: [260, 98, 96]\n      },\n      200: {\n        title: \"Purple 200\",\n        hsl: [263, 96, 94]\n      },\n      300: {\n        title: \"Purple 300\",\n        hsl: [262, 92, 84]\n      },\n      400: {\n        title: \"Purple 400\",\n        hsl: [262, 88, 75]\n      },\n      500: {\n        title: \"Purple 500\",\n        hsl: [262, 83, 64]\n      },\n      600: {\n        title: \"Purple 600\",\n        hsl: [265, 79, 51]\n      },\n      700: {\n        title: \"Purple 700\",\n        hsl: [263, 72, 36]\n      },\n      800: {\n        title: \"Purple 800\",\n        hsl: [258, 60, 24]\n      },\n      900: {\n        title: \"Purple 900\",\n        hsl: [257, 46, 17]\n      },\n      950: {\n        title: \"Purple 950\",\n        hsl: [260, 41, 11]\n      }\n    }\n  },\n  magenta: {\n    title: \"Magenta\",\n    tints: {\n      50: {\n        title: \"Magenta 50\",\n        hsl: [340, 82, 98]\n      },\n      100: {\n        title: \"Magenta 100\",\n        hsl: [339, 83, 95]\n      },\n      200: {\n        title: \"Magenta 200\",\n        hsl: [339, 83, 93]\n      },\n      300: {\n        title: \"Magenta 300\",\n        hsl: [340, 82, 82]\n      },\n      400: {\n        title: \"Magenta 400\",\n        hsl: [340, 81, 69]\n      },\n      500: {\n        title: \"Magenta 500\",\n        hsl: [340, 80, 53]\n      },\n      600: {\n        title: \"Magenta 600\",\n        hsl: [337, 78, 39]\n      },\n      700: {\n        title: \"Magenta 700\",\n        hsl: [333, 73, 28]\n      },\n      800: {\n        title: \"Magenta 800\",\n        hsl: [328, 63, 18]\n      },\n      900: {\n        title: \"Magenta 900\",\n        hsl: [327, 46, 14]\n      },\n      950: {\n        title: \"Magenta 950\",\n        hsl: [341, 35, 9]\n      }\n    }\n  },\n  red: {\n    title: \"Red\",\n    tints: {\n      50: {\n        title: \"Red 50\",\n        hsl: [5, 100, 98]\n      },\n      100: {\n        title: \"Red 100\",\n        hsl: [4, 100, 95]\n      },\n      200: {\n        title: \"Red 200\",\n        hsl: [4, 98, 93]\n      },\n      300: {\n        title: \"Red 300\",\n        hsl: [5, 95, 82]\n      },\n      400: {\n        title: \"Red 400\",\n        hsl: [6, 90, 69]\n      },\n      500: {\n        title: \"Red 500\",\n        hsl: [5, 85, 57]\n      },\n      600: {\n        title: \"Red 600\",\n        hsl: [5, 78, 45]\n      },\n      700: {\n        title: \"Red 700\",\n        hsl: [4, 70, 32]\n      },\n      800: {\n        title: \"Red 800\",\n        hsl: [3, 58, 19]\n      },\n      900: {\n        title: \"Red 900\",\n        hsl: [2, 41, 14]\n      },\n      950: {\n        title: \"Red 950\",\n        hsl: [356, 30, 9]\n      }\n    }\n  },\n  orange: {\n    title: \"Orange\",\n    tints: {\n      50: {\n        title: \"Orange 50\",\n        hsl: [28, 100, 97]\n      },\n      100: {\n        title: \"Orange 100\",\n        hsl: [25, 100, 93]\n      },\n      200: {\n        title: \"Orange 200\",\n        hsl: [24, 100, 89]\n      },\n      300: {\n        title: \"Orange 300\",\n        hsl: [24, 100, 76]\n      },\n      400: {\n        title: \"Orange 400\",\n        hsl: [24, 100, 63]\n      },\n      500: {\n        title: \"Orange 500\",\n        hsl: [24, 100, 49]\n      },\n      600: {\n        title: \"Orange 600\",\n        hsl: [24, 98, 35]\n      },\n      700: {\n        title: \"Orange 700\",\n        hsl: [24, 94, 25]\n      },\n      800: {\n        title: \"Orange 800\",\n        hsl: [22, 82, 15]\n      },\n      900: {\n        title: \"Orange 900\",\n        hsl: [17, 65, 12]\n      },\n      950: {\n        title: \"Orange 950\",\n        hsl: [14, 43, 9]\n      }\n    }\n  },\n  yellow: {\n    title: \"Yellow\",\n    tints: {\n      50: {\n        title: \"Yellow 50\",\n        hsl: [51, 94, 94]\n      },\n      100: {\n        title: \"Yellow 100\",\n        hsl: [52, 91, 86]\n      },\n      200: {\n        title: \"Yellow 200\",\n        hsl: [50, 90, 78]\n      },\n      300: {\n        title: \"Yellow 300\",\n        hsl: [47, 91, 65]\n      },\n      400: {\n        title: \"Yellow 400\",\n        hsl: [44, 95, 53]\n      },\n      500: {\n        title: \"Yellow 500\",\n        hsl: [39, 96, 42]\n      },\n      600: {\n        title: \"Yellow 600\",\n        hsl: [34, 90, 31]\n      },\n      700: {\n        title: \"Yellow 700\",\n        hsl: [31, 80, 22]\n      },\n      800: {\n        title: \"Yellow 800\",\n        hsl: [28, 66, 14]\n      },\n      900: {\n        title: \"Yellow 900\",\n        hsl: [24, 40, 11]\n      },\n      950: {\n        title: \"Yellow 950\",\n        hsl: [24, 20, 8]\n      }\n    }\n  },\n  green: {\n    title: \"Green\",\n    tints: {\n      50: {\n        title: \"Green 50\",\n        hsl: [157, 89, 95]\n      },\n      100: {\n        title: \"Green 100\",\n        hsl: [158, 89, 88]\n      },\n      200: {\n        title: \"Green 200\",\n        hsl: [158, 87, 82]\n      },\n      300: {\n        title: \"Green 300\",\n        hsl: [158, 86, 65]\n      },\n      400: {\n        title: \"Green 400\",\n        hsl: [159, 88, 50]\n      },\n      500: {\n        title: \"Green 500\",\n        hsl: [159, 96, 37]\n      },\n      600: {\n        title: \"Green 600\",\n        hsl: [159, 98, 24]\n      },\n      700: {\n        title: \"Green 700\",\n        hsl: [158, 98, 16]\n      },\n      800: {\n        title: \"Green 800\",\n        hsl: [158, 91, 10]\n      },\n      900: {\n        title: \"Green 900\",\n        hsl: [162, 72, 8]\n      },\n      950: {\n        title: \"Green 950\",\n        hsl: [172, 51, 6]\n      }\n    }\n  },\n  cyan: {\n    title: \"Cyan\",\n    tints: {\n      50: {\n        title: \"Cyan 50\",\n        hsl: [180, 92, 95]\n      },\n      100: {\n        title: \"Cyan 100\",\n        hsl: [180, 91, 88]\n      },\n      200: {\n        title: \"Cyan 200\",\n        hsl: [180, 87, 78]\n      },\n      300: {\n        title: \"Cyan 300\",\n        hsl: [180, 81, 66]\n      },\n      400: {\n        title: \"Cyan 400\",\n        hsl: [180, 81, 49]\n      },\n      500: {\n        title: \"Cyan 500\",\n        hsl: [182, 96, 38]\n      },\n      600: {\n        title: \"Cyan 600\",\n        hsl: [185, 96, 26]\n      },\n      700: {\n        title: \"Cyan 700\",\n        hsl: [185, 95, 16]\n      },\n      800: {\n        title: \"Cyan 800\",\n        hsl: [187, 86, 11]\n      },\n      900: {\n        title: \"Cyan 900\",\n        hsl: [188, 68, 9]\n      },\n      950: {\n        title: \"Cyan 950\",\n        hsl: [196, 37, 8]\n      }\n    }\n  }\n};\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result)\n    throw new Error(\"input is not valid hex\");\n  return [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n}\nfunction rgbToHsl([r, g, b]) {\n  r /= 255, g /= 255, b /= 255;\n  const cmin = Math.min(r, g, b), cmax = Math.max(r, g, b), delta = cmax - cmin;\n  let h = 0, s = 0, l = 0;\n  return delta == 0 ? h = 0 : cmax == r ? h = (g - b) / delta % 6 : cmax == g ? h = (b - r) / delta + 2 : h = (r - g) / delta + 4, h = Math.round(h * 60), h < 0 && (h += 360), l = (cmax + cmin) / 2, s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1)), s = +(s * 100).toFixed(0), l = +(l * 100).toFixed(0), [h, s, l];\n}\nfunction clamp(num) {\n  return Math.max(Math.min(num, 255), 0);\n}\nfunction darkenChannel(backdrop, source) {\n  return Math.min(backdrop, source);\n}\nfunction darken(b, s) {\n  return [\n    Math.round(clamp(darkenChannel(b[0] / 255, s[0] / 255) * 255)),\n    Math.round(clamp(darkenChannel(b[1] / 255, s[1] / 255) * 255)),\n    Math.round(clamp(darkenChannel(b[2] / 255, s[2] / 255) * 255))\n  ];\n}\nfunction interpolate(min, max, val) {\n  const size = max - min;\n  return min + size * val;\n}\nfunction limit(darkest, lightest, source) {\n  const r = Math.round(interpolate(darkest[0], lightest[0], source[0] / 255)), g = Math.round(interpolate(darkest[1], lightest[1], source[1] / 255)), b = Math.round(interpolate(darkest[2], lightest[2], source[2] / 255));\n  return [r, g, b];\n}\nfunction screenChannel(backdrop, source) {\n  return backdrop + source - backdrop * source;\n}\nfunction screen(b, s) {\n  return [\n    Math.round(clamp(screenChannel(b[0] / 255, s[0] / 255) * 255)),\n    Math.round(clamp(screenChannel(b[1] / 255, s[1] / 255) * 255)),\n    Math.round(clamp(screenChannel(b[2] / 255, s[2] / 255) * 255))\n  ];\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/color/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sanity/diff-match-patch/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DIFF_DELETE: () => (/* binding */ DIFF_DELETE),\n/* harmony export */   DIFF_EQUAL: () => (/* binding */ DIFF_EQUAL),\n/* harmony export */   DIFF_INSERT: () => (/* binding */ DIFF_INSERT),\n/* harmony export */   adjustIndiciesToUcs2: () => (/* binding */ adjustIndiciesToUcs2),\n/* harmony export */   applyPatches: () => (/* binding */ apply),\n/* harmony export */   cleanupEfficiency: () => (/* binding */ cleanupEfficiency),\n/* harmony export */   cleanupSemantic: () => (/* binding */ cleanupSemantic),\n/* harmony export */   makeDiff: () => (/* binding */ diff),\n/* harmony export */   makePatches: () => (/* binding */ make),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   parsePatch: () => (/* binding */ parse),\n/* harmony export */   stringifyPatch: () => (/* binding */ stringifyPatch),\n/* harmony export */   stringifyPatches: () => (/* binding */ stringify)\n/* harmony export */ });\nfunction isHighSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 55296 && charCode <= 56319;\n}\nfunction isLowSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 56320 && charCode <= 57343;\n}\nfunction cloneDiff(diff) {\n  const [type, patch] = diff;\n  return [type, patch];\n}\nfunction getCommonOverlap(textA, textB) {\n  let text1 = textA;\n  let text2 = textB;\n  const text1Length = text1.length;\n  const text2Length = text2.length;\n  if (text1Length === 0 || text2Length === 0) {\n    return 0;\n  }\n  if (text1Length > text2Length) {\n    text1 = text1.substring(text1Length - text2Length);\n  } else if (text1Length < text2Length) {\n    text2 = text2.substring(0, text1Length);\n  }\n  const textLength = Math.min(text1Length, text2Length);\n  if (text1 === text2) {\n    return textLength;\n  }\n  let best = 0;\n  let length = 1;\n  for (let found = 0; found !== -1;) {\n    const pattern = text1.substring(textLength - length);\n    found = text2.indexOf(pattern);\n    if (found === -1) {\n      return best;\n    }\n    length += found;\n    if (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n  return best;\n}\nfunction getCommonPrefix(text1, text2) {\n  if (!text1 || !text2 || text1[0] !== text2[0]) {\n    return 0;\n  }\n  let pointerMin = 0;\n  let pointerMax = Math.min(text1.length, text2.length);\n  let pointerMid = pointerMax;\n  let pointerStart = 0;\n  while (pointerMin < pointerMid) {\n    if (text1.substring(pointerStart, pointerMid) === text2.substring(pointerStart, pointerMid)) {\n      pointerMin = pointerMid;\n      pointerStart = pointerMin;\n    } else {\n      pointerMax = pointerMid;\n    }\n    pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  }\n  return pointerMid;\n}\nfunction getCommonSuffix(text1, text2) {\n  if (!text1 || !text2 || text1[text1.length - 1] !== text2[text2.length - 1]) {\n    return 0;\n  }\n  let pointerMin = 0;\n  let pointerMax = Math.min(text1.length, text2.length);\n  let pointerMid = pointerMax;\n  let pointerEnd = 0;\n  while (pointerMin < pointerMid) {\n    if (text1.substring(text1.length - pointerMid, text1.length - pointerEnd) === text2.substring(text2.length - pointerMid, text2.length - pointerEnd)) {\n      pointerMin = pointerMid;\n      pointerEnd = pointerMin;\n    } else {\n      pointerMax = pointerMid;\n    }\n    pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  }\n  return pointerMid;\n}\nfunction cleanupSemantic(rawDiffs) {\n  let diffs = rawDiffs.map(diff => cloneDiff(diff));\n  let hasChanges = false;\n  const equalities = [];\n  let equalitiesLength = 0;\n  let lastEquality = null;\n  let pointer = 0;\n  let lengthInsertions1 = 0;\n  let lengthDeletions1 = 0;\n  let lengthInsertions2 = 0;\n  let lengthDeletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] === DIFF_EQUAL) {\n      equalities[equalitiesLength++] = pointer;\n      lengthInsertions1 = lengthInsertions2;\n      lengthDeletions1 = lengthDeletions2;\n      lengthInsertions2 = 0;\n      lengthDeletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {\n      if (diffs[pointer][0] === DIFF_INSERT) {\n        lengthInsertions2 += diffs[pointer][1].length;\n      } else {\n        lengthDeletions2 += diffs[pointer][1].length;\n      }\n      if (lastEquality && lastEquality.length <= Math.max(lengthInsertions1, lengthDeletions1) && lastEquality.length <= Math.max(lengthInsertions2, lengthDeletions2)) {\n        diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]);\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        lengthInsertions1 = 0;\n        lengthDeletions1 = 0;\n        lengthInsertions2 = 0;\n        lengthDeletions2 = 0;\n        lastEquality = null;\n        hasChanges = true;\n      }\n    }\n    pointer++;\n  }\n  if (hasChanges) {\n    diffs = cleanupMerge(diffs);\n  }\n  diffs = cleanupSemanticLossless(diffs);\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n      const deletion = diffs[pointer - 1][1];\n      const insertion = diffs[pointer][1];\n      const overlapLength1 = getCommonOverlap(deletion, insertion);\n      const overlapLength2 = getCommonOverlap(insertion, deletion);\n      if (overlapLength1 >= overlapLength2) {\n        if (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) {\n          diffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlapLength1)]);\n          diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1);\n          diffs[pointer + 1][1] = insertion.substring(overlapLength1);\n          pointer++;\n        }\n      } else if (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) {\n        diffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlapLength2)]);\n        diffs[pointer - 1][0] = DIFF_INSERT;\n        diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2);\n        diffs[pointer + 1][0] = DIFF_DELETE;\n        diffs[pointer + 1][1] = deletion.substring(overlapLength2);\n        pointer++;\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n  return diffs;\n}\nconst nonAlphaNumericRegex = /[^a-zA-Z0-9]/;\nconst whitespaceRegex = /\\s/;\nconst linebreakRegex = /[\\r\\n]/;\nconst blanklineEndRegex = /\\n\\r?\\n$/;\nconst blanklineStartRegex = /^\\r?\\n\\r?\\n/;\nfunction cleanupSemanticLossless(rawDiffs) {\n  const diffs = rawDiffs.map(diff => cloneDiff(diff));\n  function diffCleanupSemanticScore(one, two) {\n    if (!one || !two) {\n      return 6;\n    }\n    const char1 = one.charAt(one.length - 1);\n    const char2 = two.charAt(0);\n    const nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex);\n    const nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex);\n    const whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex);\n    const whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex);\n    const lineBreak1 = whitespace1 && char1.match(linebreakRegex);\n    const lineBreak2 = whitespace2 && char2.match(linebreakRegex);\n    const blankLine1 = lineBreak1 && one.match(blanklineEndRegex);\n    const blankLine2 = lineBreak2 && two.match(blanklineStartRegex);\n    if (blankLine1 || blankLine2) {\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      return 1;\n    }\n    return 0;\n  }\n  let pointer = 1;\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      let equality1 = diffs[pointer - 1][1];\n      let edit = diffs[pointer][1];\n      let equality2 = diffs[pointer + 1][1];\n      const commonOffset = getCommonSuffix(equality1, edit);\n      if (commonOffset) {\n        const commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n      let bestEquality1 = equality1;\n      let bestEdit = edit;\n      let bestEquality2 = equality2;\n      let bestScore = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        const score = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n      if (diffs[pointer - 1][1] !== bestEquality1) {\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n  return diffs;\n}\nfunction cleanupMerge(rawDiffs) {\n  let diffs = rawDiffs.map(diff => cloneDiff(diff));\n  diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0;\n  let countDelete = 0;\n  let countInsert = 0;\n  let textDelete = \"\";\n  let textInsert = \"\";\n  let commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++;\n        textInsert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        countDelete++;\n        textDelete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        if (countDelete + countInsert > 1) {\n          if (countDelete !== 0 && countInsert !== 0) {\n            commonlength = getCommonPrefix(textInsert, textDelete);\n            if (commonlength !== 0) {\n              if (pointer - countDelete - countInsert > 0 && diffs[pointer - countDelete - countInsert - 1][0] === DIFF_EQUAL) {\n                diffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, textInsert.substring(0, commonlength)]);\n                pointer++;\n              }\n              textInsert = textInsert.substring(commonlength);\n              textDelete = textDelete.substring(commonlength);\n            }\n            commonlength = getCommonSuffix(textInsert, textDelete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1];\n              textInsert = textInsert.substring(0, textInsert.length - commonlength);\n              textDelete = textDelete.substring(0, textDelete.length - commonlength);\n            }\n          }\n          pointer -= countDelete + countInsert;\n          diffs.splice(pointer, countDelete + countInsert);\n          if (textDelete.length) {\n            diffs.splice(pointer, 0, [DIFF_DELETE, textDelete]);\n            pointer++;\n          }\n          if (textInsert.length) {\n            diffs.splice(pointer, 0, [DIFF_INSERT, textInsert]);\n            pointer++;\n          }\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        countInsert = 0;\n        countDelete = 0;\n        textDelete = \"\";\n        textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation\");\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop();\n  }\n  let hasChanges = false;\n  pointer = 1;\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        hasChanges = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]) {\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        hasChanges = true;\n      }\n    }\n    pointer++;\n  }\n  if (hasChanges) {\n    diffs = cleanupMerge(diffs);\n  }\n  return diffs;\n}\nfunction trueCount() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return args.reduce((n, bool) => n + (bool ? 1 : 0), 0);\n}\nfunction cleanupEfficiency(rawDiffs) {\n  let editCost = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  let diffs = rawDiffs.map(diff => cloneDiff(diff));\n  let hasChanges = false;\n  const equalities = [];\n  let equalitiesLength = 0;\n  let lastEquality = null;\n  let pointer = 0;\n  let preIns = false;\n  let preDel = false;\n  let postIns = false;\n  let postDel = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] === DIFF_EQUAL) {\n      if (diffs[pointer][1].length < editCost && (postIns || postDel)) {\n        equalities[equalitiesLength++] = pointer;\n        preIns = postIns;\n        preDel = postDel;\n        lastEquality = diffs[pointer][1];\n      } else {\n        equalitiesLength = 0;\n        lastEquality = null;\n      }\n      postIns = false;\n      postDel = false;\n    } else {\n      if (diffs[pointer][0] === DIFF_DELETE) {\n        postDel = true;\n      } else {\n        postIns = true;\n      }\n      if (lastEquality && (preIns && preDel && postIns && postDel || lastEquality.length < editCost / 2 && trueCount(preIns, preDel, postIns, postDel) === 3)) {\n        diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]);\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;\n        lastEquality = null;\n        if (preIns && preDel) {\n          postIns = true;\n          postDel = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;\n          pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n          postIns = false;\n          postDel = false;\n        }\n        hasChanges = true;\n      }\n    }\n    pointer++;\n  }\n  if (hasChanges) {\n    diffs = cleanupMerge(diffs);\n  }\n  return diffs;\n}\nfunction bisect(text1, text2, deadline) {\n  const text1Length = text1.length;\n  const text2Length = text2.length;\n  const maxD = Math.ceil((text1Length + text2Length) / 2);\n  const vOffset = maxD;\n  const vLength = 2 * maxD;\n  const v1 = new Array(vLength);\n  const v2 = new Array(vLength);\n  for (let x = 0; x < vLength; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[vOffset + 1] = 0;\n  v2[vOffset + 1] = 0;\n  const delta = text1Length - text2Length;\n  const front = delta % 2 !== 0;\n  let k1start = 0;\n  let k1end = 0;\n  let k2start = 0;\n  let k2end = 0;\n  for (let d = 0; d < maxD; d++) {\n    if (Date.now() > deadline) {\n      break;\n    }\n    for (let k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      const k1Offset = vOffset + k1;\n      let x1;\n      if (k1 === -d || k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1]) {\n        x1 = v1[k1Offset + 1];\n      } else {\n        x1 = v1[k1Offset - 1] + 1;\n      }\n      let y1 = x1 - k1;\n      while (x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1Offset] = x1;\n      if (x1 > text1Length) {\n        k1end += 2;\n      } else if (y1 > text2Length) {\n        k1start += 2;\n      } else if (front) {\n        const k2Offset = vOffset + delta - k1;\n        if (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\n          const x2 = text1Length - v2[k2Offset];\n          if (x1 >= x2) {\n            return bisectSplit(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n    for (let k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      const k2Offset = vOffset + k2;\n      let x2;\n      if (k2 === -d || k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1]) {\n        x2 = v2[k2Offset + 1];\n      } else {\n        x2 = v2[k2Offset - 1] + 1;\n      }\n      let y2 = x2 - k2;\n      while (x2 < text1Length && y2 < text2Length && text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2Offset] = x2;\n      if (x2 > text1Length) {\n        k2end += 2;\n      } else if (y2 > text2Length) {\n        k2start += 2;\n      } else if (!front) {\n        const k1Offset = vOffset + delta - k2;\n        if (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\n          const x1 = v1[k1Offset];\n          const y1 = vOffset + x1 - k1Offset;\n          x2 = text1Length - x2;\n          if (x1 >= x2) {\n            return bisectSplit(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n}\nfunction bisectSplit(text1, text2, x, y, deadline) {\n  const text1a = text1.substring(0, x);\n  const text2a = text2.substring(0, y);\n  const text1b = text1.substring(x);\n  const text2b = text2.substring(y);\n  const diffs = doDiff(text1a, text2a, {\n    checkLines: false,\n    deadline\n  });\n  const diffsb = doDiff(text1b, text2b, {\n    checkLines: false,\n    deadline\n  });\n  return diffs.concat(diffsb);\n}\nfunction findHalfMatch(text1, text2) {\n  let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  if (timeout <= 0) {\n    return null;\n  }\n  const longText = text1.length > text2.length ? text1 : text2;\n  const shortText = text1.length > text2.length ? text2 : text1;\n  if (longText.length < 4 || shortText.length * 2 < longText.length) {\n    return null;\n  }\n  const halfMatch1 = halfMatchI(longText, shortText, Math.ceil(longText.length / 4));\n  const halfMatch2 = halfMatchI(longText, shortText, Math.ceil(longText.length / 2));\n  let halfMatch;\n  if (halfMatch1 && halfMatch2) {\n    halfMatch = halfMatch1[4].length > halfMatch2[4].length ? halfMatch1 : halfMatch2;\n  } else if (!halfMatch1 && !halfMatch2) {\n    return null;\n  } else if (!halfMatch2) {\n    halfMatch = halfMatch1;\n  } else if (!halfMatch1) {\n    halfMatch = halfMatch2;\n  }\n  if (!halfMatch) {\n    throw new Error(\"Unable to find a half match.\");\n  }\n  let text1A;\n  let text1B;\n  let text2A;\n  let text2B;\n  if (text1.length > text2.length) {\n    text1A = halfMatch[0];\n    text1B = halfMatch[1];\n    text2A = halfMatch[2];\n    text2B = halfMatch[3];\n  } else {\n    text2A = halfMatch[0];\n    text2B = halfMatch[1];\n    text1A = halfMatch[2];\n    text1B = halfMatch[3];\n  }\n  const midCommon = halfMatch[4];\n  return [text1A, text1B, text2A, text2B, midCommon];\n}\nfunction halfMatchI(longText, shortText, i) {\n  const seed = longText.slice(i, i + Math.floor(longText.length / 4));\n  let j = -1;\n  let bestCommon = \"\";\n  let bestLongTextA;\n  let bestLongTextB;\n  let bestShortTextA;\n  let bestShortTextB;\n  while ((j = shortText.indexOf(seed, j + 1)) !== -1) {\n    const prefixLength = getCommonPrefix(longText.slice(i), shortText.slice(j));\n    const suffixLength = getCommonSuffix(longText.slice(0, i), shortText.slice(0, j));\n    if (bestCommon.length < suffixLength + prefixLength) {\n      bestCommon = shortText.slice(j - suffixLength, j) + shortText.slice(j, j + prefixLength);\n      bestLongTextA = longText.slice(0, i - suffixLength);\n      bestLongTextB = longText.slice(i + prefixLength);\n      bestShortTextA = shortText.slice(0, j - suffixLength);\n      bestShortTextB = shortText.slice(j + prefixLength);\n    }\n  }\n  if (bestCommon.length * 2 >= longText.length) {\n    return [bestLongTextA || \"\", bestLongTextB || \"\", bestShortTextA || \"\", bestShortTextB || \"\", bestCommon || \"\"];\n  }\n  return null;\n}\nfunction charsToLines(diffs, lineArray) {\n  for (let x = 0; x < diffs.length; x++) {\n    const chars = diffs[x][1];\n    const text = [];\n    for (let y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join(\"\");\n  }\n}\nfunction linesToChars(textA, textB) {\n  const lineArray = [];\n  const lineHash = {};\n  lineArray[0] = \"\";\n  function diffLinesToMunge(text) {\n    let chars = \"\";\n    let lineStart = 0;\n    let lineEnd = -1;\n    let lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf(\"\\n\", lineStart);\n      if (lineEnd === -1) {\n        lineEnd = text.length - 1;\n      }\n      let line = text.slice(lineStart, lineEnd + 1);\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== void 0) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength === maxLines) {\n          line = text.slice(lineStart);\n          lineEnd = text.length;\n        }\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n      lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  let maxLines = 4e4;\n  const chars1 = diffLinesToMunge(textA);\n  maxLines = 65535;\n  const chars2 = diffLinesToMunge(textB);\n  return {\n    chars1,\n    chars2,\n    lineArray\n  };\n}\nfunction doLineModeDiff(textA, textB, opts) {\n  let text1 = textA;\n  let text2 = textB;\n  const a = linesToChars(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  const linearray = a.lineArray;\n  let diffs = doDiff(text1, text2, {\n    checkLines: false,\n    deadline: opts.deadline\n  });\n  charsToLines(diffs, linearray);\n  diffs = cleanupSemantic(diffs);\n  diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0;\n  let countDelete = 0;\n  let countInsert = 0;\n  let textDelete = \"\";\n  let textInsert = \"\";\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++;\n        textInsert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        countDelete++;\n        textDelete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        if (countDelete >= 1 && countInsert >= 1) {\n          diffs.splice(pointer - countDelete - countInsert, countDelete + countInsert);\n          pointer = pointer - countDelete - countInsert;\n          const aa = doDiff(textDelete, textInsert, {\n            checkLines: false,\n            deadline: opts.deadline\n          });\n          for (let j = aa.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, aa[j]);\n          }\n          pointer += aa.length;\n        }\n        countInsert = 0;\n        countDelete = 0;\n        textDelete = \"\";\n        textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n    pointer++;\n  }\n  diffs.pop();\n  return diffs;\n}\nfunction computeDiff(text1, text2, opts) {\n  let diffs;\n  if (!text1) {\n    return [[DIFF_INSERT, text2]];\n  }\n  if (!text2) {\n    return [[DIFF_DELETE, text1]];\n  }\n  const longtext = text1.length > text2.length ? text1 : text2;\n  const shorttext = text1.length > text2.length ? text2 : text1;\n  const i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    if (text1.length > text2.length) {\n      diffs[0][0] = DIFF_DELETE;\n      diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n  if (shorttext.length === 1) {\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n  const halfMatch = findHalfMatch(text1, text2);\n  if (halfMatch) {\n    const text1A = halfMatch[0];\n    const text1B = halfMatch[1];\n    const text2A = halfMatch[2];\n    const text2B = halfMatch[3];\n    const midCommon = halfMatch[4];\n    const diffsA = doDiff(text1A, text2A, opts);\n    const diffsB = doDiff(text1B, text2B, opts);\n    return diffsA.concat([[DIFF_EQUAL, midCommon]], diffsB);\n  }\n  if (opts.checkLines && text1.length > 100 && text2.length > 100) {\n    return doLineModeDiff(text1, text2, opts);\n  }\n  return bisect(text1, text2, opts.deadline);\n}\nconst DIFF_DELETE = -1;\nconst DIFF_INSERT = 1;\nconst DIFF_EQUAL = 0;\nfunction diff(textA, textB, opts) {\n  if (textA === null || textB === null) {\n    throw new Error(\"Null input. (diff)\");\n  }\n  const diffs = doDiff(textA, textB, createInternalOpts(opts || {}));\n  adjustDiffForSurrogatePairs(diffs);\n  return diffs;\n}\nfunction doDiff(textA, textB, options) {\n  let text1 = textA;\n  let text2 = textB;\n  if (text1 === text2) {\n    return text1 ? [[DIFF_EQUAL, text1]] : [];\n  }\n  let commonlength = getCommonPrefix(text1, text2);\n  const commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n  commonlength = getCommonSuffix(text1, text2);\n  const commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n  let diffs = computeDiff(text1, text2, options);\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diffs = cleanupMerge(diffs);\n  return diffs;\n}\nfunction createDeadLine(timeout) {\n  let t = 1;\n  if (typeof timeout !== \"undefined\") {\n    t = timeout <= 0 ? Number.MAX_VALUE : timeout;\n  }\n  return Date.now() + t * 1e3;\n}\nfunction createInternalOpts(opts) {\n  return {\n    checkLines: true,\n    deadline: createDeadLine(opts.timeout || 1),\n    ...opts\n  };\n}\nfunction combineChar(data, char, dir) {\n  return dir === 1 ? data + char : char + data;\n}\nfunction splitChar(data, dir) {\n  return dir === 1 ? [data.substring(0, data.length - 1), data[data.length - 1]] : [data.substring(1), data[0]];\n}\nfunction hasSharedChar(diffs, i, j, dir) {\n  return dir === 1 ? diffs[i][1][diffs[i][1].length - 1] === diffs[j][1][diffs[j][1].length - 1] : diffs[i][1][0] === diffs[j][1][0];\n}\nfunction deisolateChar(diffs, i, dir) {\n  const inv = dir === 1 ? -1 : 1;\n  let insertIdx = null;\n  let deleteIdx = null;\n  let j = i + dir;\n  for (; j >= 0 && j < diffs.length && (insertIdx === null || deleteIdx === null); j += dir) {\n    const [op, text2] = diffs[j];\n    if (text2.length === 0) {\n      continue;\n    }\n    if (op === DIFF_INSERT) {\n      if (insertIdx === null) {\n        insertIdx = j;\n      }\n      continue;\n    } else if (op === DIFF_DELETE) {\n      if (deleteIdx === null) {\n        deleteIdx = j;\n      }\n      continue;\n    } else if (op === DIFF_EQUAL) {\n      if (insertIdx === null && deleteIdx === null) {\n        const [rest, char2] = splitChar(diffs[i][1], dir);\n        diffs[i][1] = rest;\n        diffs[j][1] = combineChar(diffs[j][1], char2, inv);\n        return;\n      }\n      break;\n    }\n  }\n  if (insertIdx !== null && deleteIdx !== null && hasSharedChar(diffs, insertIdx, deleteIdx, dir)) {\n    const [insertText, insertChar] = splitChar(diffs[insertIdx][1], inv);\n    const [deleteText] = splitChar(diffs[deleteIdx][1], inv);\n    diffs[insertIdx][1] = insertText;\n    diffs[deleteIdx][1] = deleteText;\n    diffs[i][1] = combineChar(diffs[i][1], insertChar, dir);\n    return;\n  }\n  const [text, char] = splitChar(diffs[i][1], dir);\n  diffs[i][1] = text;\n  if (insertIdx === null) {\n    diffs.splice(j, 0, [DIFF_INSERT, char]);\n    if (deleteIdx !== null && deleteIdx >= j) deleteIdx++;\n  } else {\n    diffs[insertIdx][1] = combineChar(diffs[insertIdx][1], char, inv);\n  }\n  if (deleteIdx === null) {\n    diffs.splice(j, 0, [DIFF_DELETE, char]);\n  } else {\n    diffs[deleteIdx][1] = combineChar(diffs[deleteIdx][1], char, inv);\n  }\n}\nfunction adjustDiffForSurrogatePairs(diffs) {\n  for (let i = 0; i < diffs.length; i++) {\n    const [diffType, diffText] = diffs[i];\n    if (diffText.length === 0) continue;\n    const firstChar = diffText[0];\n    const lastChar = diffText[diffText.length - 1];\n    if (isHighSurrogate(lastChar) && diffType === DIFF_EQUAL) {\n      deisolateChar(diffs, i, 1);\n    }\n    if (isLowSurrogate(firstChar) && diffType === DIFF_EQUAL) {\n      deisolateChar(diffs, i, -1);\n    }\n  }\n  for (let i = 0; i < diffs.length; i++) {\n    if (diffs[i][1].length === 0) {\n      diffs.splice(i, 1);\n    }\n  }\n}\nconst DEFAULT_OPTIONS = {\n  /**\n   * At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n   */\n  threshold: 0.5,\n  /**\n   * How far to search for a match (0 = exact location, 1000+ = broad match).\n   * A match this many characters away from the expected location will add\n   * 1.0 to the score (0.0 is a perfect match).\n   */\n  distance: 1e3\n};\nfunction applyDefaults(options) {\n  return {\n    ...DEFAULT_OPTIONS,\n    ...options\n  };\n}\nconst MAX_BITS$1 = 32;\nfunction bitap(text, pattern, loc) {\n  let opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  if (pattern.length > MAX_BITS$1) {\n    throw new Error(\"Pattern too long for this browser.\");\n  }\n  const options = applyDefaults(opts);\n  const s = getAlphabetFromPattern(pattern);\n  function getBitapScore(e, x) {\n    const accuracy = e / pattern.length;\n    const proximity = Math.abs(loc - x);\n    if (!options.distance) {\n      return proximity ? 1 : accuracy;\n    }\n    return accuracy + proximity / options.distance;\n  }\n  let scoreThreshold = options.threshold;\n  let bestLoc = text.indexOf(pattern, loc);\n  if (bestLoc !== -1) {\n    scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold);\n    bestLoc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (bestLoc !== -1) {\n      scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold);\n    }\n  }\n  const matchmask = 1 << pattern.length - 1;\n  bestLoc = -1;\n  let binMin;\n  let binMid;\n  let binMax = pattern.length + text.length;\n  let lastRd = [];\n  for (let d = 0; d < pattern.length; d++) {\n    binMin = 0;\n    binMid = binMax;\n    while (binMin < binMid) {\n      if (getBitapScore(d, loc + binMid) <= scoreThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n    binMax = binMid;\n    let start = Math.max(1, loc - binMid + 1);\n    const finish = Math.min(loc + binMid, text.length) + pattern.length;\n    const rd = new Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (let j = finish; j >= start; j--) {\n      const charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {\n        rd[j] = (rd[j + 1] << 1 | 1) & charMatch;\n      } else {\n        rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((lastRd[j + 1] | lastRd[j]) << 1 | 1) | lastRd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        const score = getBitapScore(d, j - 1);\n        if (score <= scoreThreshold) {\n          scoreThreshold = score;\n          bestLoc = j - 1;\n          if (bestLoc > loc) {\n            start = Math.max(1, 2 * loc - bestLoc);\n          } else {\n            break;\n          }\n        }\n      }\n    }\n    if (getBitapScore(d + 1, loc) > scoreThreshold) {\n      break;\n    }\n    lastRd = rd;\n  }\n  return bestLoc;\n}\nfunction getAlphabetFromPattern(pattern) {\n  const s = {};\n  for (let i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (let i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << pattern.length - i - 1;\n  }\n  return s;\n}\nfunction match(text, pattern, searchLocation) {\n  if (text === null || pattern === null || searchLocation === null) {\n    throw new Error(\"Null input. (match())\");\n  }\n  const loc = Math.max(0, Math.min(searchLocation, text.length));\n  if (text === pattern) {\n    return 0;\n  } else if (!text.length) {\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) === pattern) {\n    return loc;\n  }\n  return bitap(text, pattern, loc);\n}\nfunction createPatchObject(start1, start2) {\n  return {\n    diffs: [],\n    start1,\n    start2,\n    utf8Start1: start1,\n    utf8Start2: start2,\n    length1: 0,\n    length2: 0,\n    utf8Length1: 0,\n    utf8Length2: 0\n  };\n}\nfunction diffText1(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join(\"\");\n}\nfunction diffText2(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join(\"\");\n}\nfunction countUtf8Bytes(str) {\n  let bytes = 0;\n  for (let i = 0; i < str.length; i++) {\n    const codePoint = str.codePointAt(i);\n    if (typeof codePoint === \"undefined\") {\n      throw new Error(\"Failed to get codepoint\");\n    }\n    bytes += utf8len(codePoint);\n  }\n  return bytes;\n}\nfunction adjustIndiciesToUcs2(patches, base) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let byteOffset = 0;\n  let idx = 0;\n  function advanceTo(target) {\n    for (; byteOffset < target;) {\n      const codePoint = base.codePointAt(idx);\n      if (typeof codePoint === \"undefined\") {\n        return idx;\n      }\n      byteOffset += utf8len(codePoint);\n      if (codePoint > 65535) {\n        idx += 2;\n      } else {\n        idx += 1;\n      }\n    }\n    if (!options.allowExceedingIndices && byteOffset !== target) {\n      throw new Error(\"Failed to determine byte offset\");\n    }\n    return idx;\n  }\n  const adjusted = [];\n  for (const patch of patches) {\n    adjusted.push({\n      diffs: patch.diffs.map(diff => cloneDiff(diff)),\n      start1: advanceTo(patch.start1),\n      start2: advanceTo(patch.start2),\n      utf8Start1: patch.utf8Start1,\n      utf8Start2: patch.utf8Start2,\n      length1: patch.length1,\n      length2: patch.length2,\n      utf8Length1: patch.utf8Length1,\n      utf8Length2: patch.utf8Length2\n    });\n  }\n  return adjusted;\n}\nfunction utf8len(codePoint) {\n  if (codePoint <= 127) return 1;\n  if (codePoint <= 2047) return 2;\n  if (codePoint <= 65535) return 3;\n  return 4;\n}\nconst MAX_BITS = 32;\nconst DEFAULT_MARGIN = 4;\nconst DEFAULT_OPTS = {\n  margin: 4\n};\nfunction getDefaultOpts() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    ...DEFAULT_OPTS,\n    ...opts\n  };\n}\nfunction make(a, b, options) {\n  if (typeof a === \"string\" && typeof b === \"string\") {\n    let diffs = diff(a, b, {\n      checkLines: true\n    });\n    if (diffs.length > 2) {\n      diffs = cleanupSemantic(diffs);\n      diffs = cleanupEfficiency(diffs);\n    }\n    return _make(a, diffs, getDefaultOpts(options));\n  }\n  if (a && Array.isArray(a) && typeof b === \"undefined\") {\n    return _make(diffText1(a), a, getDefaultOpts(options));\n  }\n  if (typeof a === \"string\" && b && Array.isArray(b)) {\n    return _make(a, b, getDefaultOpts(options));\n  }\n  throw new Error(\"Unknown call format to make()\");\n}\nfunction _make(textA, diffs, options) {\n  if (diffs.length === 0) {\n    return [];\n  }\n  const patches = [];\n  let patch = createPatchObject(0, 0);\n  let patchDiffLength = 0;\n  let charCount1 = 0;\n  let charCount2 = 0;\n  let utf8Count1 = 0;\n  let utf8Count2 = 0;\n  let prepatchText = textA;\n  let postpatchText = textA;\n  for (let x = 0; x < diffs.length; x++) {\n    const currentDiff = diffs[x];\n    const [diffType, diffText] = currentDiff;\n    const diffTextLength = diffText.length;\n    const diffByteLength = countUtf8Bytes(diffText);\n    if (!patchDiffLength && diffType !== DIFF_EQUAL) {\n      patch.start1 = charCount1;\n      patch.start2 = charCount2;\n      patch.utf8Start1 = utf8Count1;\n      patch.utf8Start2 = utf8Count2;\n    }\n    switch (diffType) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = currentDiff;\n        patch.length2 += diffTextLength;\n        patch.utf8Length2 += diffByteLength;\n        postpatchText = postpatchText.substring(0, charCount2) + diffText + postpatchText.substring(charCount2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diffTextLength;\n        patch.utf8Length1 += diffByteLength;\n        patch.diffs[patchDiffLength++] = currentDiff;\n        postpatchText = postpatchText.substring(0, charCount2) + postpatchText.substring(charCount2 + diffTextLength);\n        break;\n      case DIFF_EQUAL:\n        if (diffTextLength <= 2 * options.margin && patchDiffLength && diffs.length !== x + 1) {\n          patch.diffs[patchDiffLength++] = currentDiff;\n          patch.length1 += diffTextLength;\n          patch.length2 += diffTextLength;\n          patch.utf8Length1 += diffByteLength;\n          patch.utf8Length2 += diffByteLength;\n        } else if (diffTextLength >= 2 * options.margin) {\n          if (patchDiffLength) {\n            addContext(patch, prepatchText, options);\n            patches.push(patch);\n            patch = createPatchObject(-1, -1);\n            patchDiffLength = 0;\n            prepatchText = postpatchText;\n            charCount1 = charCount2;\n            utf8Count1 = utf8Count2;\n          }\n        }\n        break;\n      default:\n        throw new Error(\"Unknown diff type\");\n    }\n    if (diffType !== DIFF_INSERT) {\n      charCount1 += diffTextLength;\n      utf8Count1 += diffByteLength;\n    }\n    if (diffType !== DIFF_DELETE) {\n      charCount2 += diffTextLength;\n      utf8Count2 += diffByteLength;\n    }\n  }\n  if (patchDiffLength) {\n    addContext(patch, prepatchText, options);\n    patches.push(patch);\n  }\n  return patches;\n}\nfunction addContext(patch, text, opts) {\n  if (text.length === 0) {\n    return;\n  }\n  let pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  let padding = 0;\n  while (text.indexOf(pattern) !== text.lastIndexOf(pattern) && pattern.length < MAX_BITS - opts.margin - opts.margin) {\n    padding += opts.margin;\n    pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding);\n  }\n  padding += opts.margin;\n  let prefixStart = patch.start2 - padding;\n  if (prefixStart >= 1 && isLowSurrogate(text[prefixStart])) {\n    prefixStart--;\n  }\n  const prefix = text.substring(prefixStart, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  const prefixLength = prefix.length;\n  const prefixUtf8Length = countUtf8Bytes(prefix);\n  let suffixEnd = patch.start2 + patch.length1 + padding;\n  if (suffixEnd < text.length && isLowSurrogate(text[suffixEnd])) {\n    suffixEnd++;\n  }\n  const suffix = text.substring(patch.start2 + patch.length1, suffixEnd);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n  const suffixLength = suffix.length;\n  const suffixUtf8Length = countUtf8Bytes(suffix);\n  patch.start1 -= prefixLength;\n  patch.start2 -= prefixLength;\n  patch.utf8Start1 -= prefixUtf8Length;\n  patch.utf8Start2 -= prefixUtf8Length;\n  patch.length1 += prefixLength + suffixLength;\n  patch.length2 += prefixLength + suffixLength;\n  patch.utf8Length1 += prefixUtf8Length + suffixUtf8Length;\n  patch.utf8Length2 += prefixUtf8Length + suffixUtf8Length;\n}\nfunction levenshtein(diffs) {\n  let leven = 0;\n  let insertions = 0;\n  let deletions = 0;\n  for (let x = 0; x < diffs.length; x++) {\n    const op = diffs[x][0];\n    const data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        leven += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n  }\n  leven += Math.max(insertions, deletions);\n  return leven;\n}\nfunction xIndex(diffs, loc) {\n  let chars1 = 0;\n  let chars2 = 0;\n  let lastChars1 = 0;\n  let lastChars2 = 0;\n  let x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {\n      break;\n    }\n    lastChars1 = chars1;\n    lastChars2 = chars2;\n  }\n  if (diffs.length !== x && diffs[x][0] === DIFF_DELETE) {\n    return lastChars2;\n  }\n  return lastChars2 + (loc - lastChars1);\n}\nfunction addPadding(patches) {\n  let margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_MARGIN;\n  const paddingLength = margin;\n  let nullPadding = \"\";\n  for (let x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n  for (const p of patches) {\n    p.start1 += paddingLength;\n    p.start2 += paddingLength;\n    p.utf8Start1 += paddingLength;\n    p.utf8Start2 += paddingLength;\n  }\n  let patch = patches[0];\n  let diffs = patch.diffs;\n  if (diffs.length === 0 || diffs[0][0] !== DIFF_EQUAL) {\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;\n    patch.start2 -= paddingLength;\n    patch.utf8Start1 -= paddingLength;\n    patch.utf8Start2 -= paddingLength;\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n    patch.utf8Length1 += paddingLength;\n    patch.utf8Length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    const firstDiffLength = diffs[0][1].length;\n    const extraLength = paddingLength - firstDiffLength;\n    diffs[0][1] = nullPadding.substring(firstDiffLength) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.utf8Start1 -= extraLength;\n    patch.utf8Start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n    patch.utf8Length1 += extraLength;\n    patch.utf8Length2 += extraLength;\n  }\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length === 0 || diffs[diffs.length - 1][0] !== DIFF_EQUAL) {\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n    patch.utf8Length1 += paddingLength;\n    patch.utf8Length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    const extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n    patch.utf8Length1 += extraLength;\n    patch.utf8Length2 += extraLength;\n  }\n  return nullPadding;\n}\nfunction splitMax(patches) {\n  let margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_MARGIN;\n  const patchSize = MAX_BITS;\n  for (let x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patchSize) {\n      continue;\n    }\n    const bigpatch = patches[x];\n    patches.splice(x--, 1);\n    let start1 = bigpatch.start1;\n    let start2 = bigpatch.start2;\n    let preContext = \"\";\n    while (bigpatch.diffs.length !== 0) {\n      const patch = createPatchObject(start1 - preContext.length, start2 - preContext.length);\n      let empty = true;\n      if (preContext !== \"\") {\n        const precontextByteCount = countUtf8Bytes(preContext);\n        patch.length1 = preContext.length;\n        patch.utf8Length1 = precontextByteCount;\n        patch.length2 = preContext.length;\n        patch.utf8Length2 = precontextByteCount;\n        patch.diffs.push([DIFF_EQUAL, preContext]);\n      }\n      while (bigpatch.diffs.length !== 0 && patch.length1 < patchSize - margin) {\n        const diffType = bigpatch.diffs[0][0];\n        let diffText = bigpatch.diffs[0][1];\n        let diffTextByteCount = countUtf8Bytes(diffText);\n        if (diffType === DIFF_INSERT) {\n          patch.length2 += diffText.length;\n          patch.utf8Length2 += diffTextByteCount;\n          start2 += diffText.length;\n          const diff = bigpatch.diffs.shift();\n          if (diff) {\n            patch.diffs.push(diff);\n          }\n          empty = false;\n        } else if (diffType === DIFF_DELETE && patch.diffs.length === 1 && patch.diffs[0][0] === DIFF_EQUAL && diffText.length > 2 * patchSize) {\n          patch.length1 += diffText.length;\n          patch.utf8Length1 += diffTextByteCount;\n          start1 += diffText.length;\n          empty = false;\n          patch.diffs.push([diffType, diffText]);\n          bigpatch.diffs.shift();\n        } else {\n          diffText = diffText.substring(0, patchSize - patch.length1 - margin);\n          diffTextByteCount = countUtf8Bytes(diffText);\n          patch.length1 += diffText.length;\n          patch.utf8Length1 += diffTextByteCount;\n          start1 += diffText.length;\n          if (diffType === DIFF_EQUAL) {\n            patch.length2 += diffText.length;\n            patch.utf8Length2 += diffTextByteCount;\n            start2 += diffText.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push([diffType, diffText]);\n          if (diffText === bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diffText.length);\n          }\n        }\n      }\n      preContext = diffText2(patch.diffs);\n      preContext = preContext.substring(preContext.length - margin);\n      const postContext = diffText1(bigpatch.diffs).substring(0, margin);\n      const postContextByteCount = countUtf8Bytes(postContext);\n      if (postContext !== \"\") {\n        patch.length1 += postContext.length;\n        patch.length2 += postContext.length;\n        patch.utf8Length1 += postContextByteCount;\n        patch.utf8Length2 += postContextByteCount;\n        if (patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postContext;\n        } else {\n          patch.diffs.push([DIFF_EQUAL, postContext]);\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n}\nfunction apply(patches, originalText) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof patches === \"string\") {\n    throw new Error(\"Patches must be an array - pass the patch to `parsePatch()` first\");\n  }\n  let text = originalText;\n  if (patches.length === 0) {\n    return [text, []];\n  }\n  const parsed = adjustIndiciesToUcs2(patches, text, {\n    allowExceedingIndices: opts.allowExceedingIndices\n  });\n  const margin = opts.margin || DEFAULT_MARGIN;\n  const deleteThreshold = opts.deleteThreshold || 0.4;\n  const nullPadding = addPadding(parsed, margin);\n  text = nullPadding + text + nullPadding;\n  splitMax(parsed, margin);\n  let delta = 0;\n  const results = [];\n  for (let x = 0; x < parsed.length; x++) {\n    const expectedLoc = parsed[x].start2 + delta;\n    const text1 = diffText1(parsed[x].diffs);\n    let startLoc;\n    let endLoc = -1;\n    if (text1.length > MAX_BITS) {\n      startLoc = match(text, text1.substring(0, MAX_BITS), expectedLoc);\n      if (startLoc !== -1) {\n        endLoc = match(text, text1.substring(text1.length - MAX_BITS), expectedLoc + text1.length - MAX_BITS);\n        if (endLoc === -1 || startLoc >= endLoc) {\n          startLoc = -1;\n        }\n      }\n    } else {\n      startLoc = match(text, text1, expectedLoc);\n    }\n    if (startLoc === -1) {\n      results[x] = false;\n      delta -= parsed[x].length2 - parsed[x].length1;\n    } else {\n      results[x] = true;\n      delta = startLoc - expectedLoc;\n      let text2;\n      if (endLoc === -1) {\n        text2 = text.substring(startLoc, startLoc + text1.length);\n      } else {\n        text2 = text.substring(startLoc, endLoc + MAX_BITS);\n      }\n      if (text1 === text2) {\n        text = text.substring(0, startLoc) + diffText2(parsed[x].diffs) + text.substring(startLoc + text1.length);\n      } else {\n        let diffs = diff(text1, text2, {\n          checkLines: false\n        });\n        if (text1.length > MAX_BITS && levenshtein(diffs) / text1.length > deleteThreshold) {\n          results[x] = false;\n        } else {\n          diffs = cleanupSemanticLossless(diffs);\n          let index1 = 0;\n          let index2 = 0;\n          for (let y = 0; y < parsed[x].diffs.length; y++) {\n            const mod = parsed[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {\n              text = text.substring(0, startLoc + index2) + mod[1] + text.substring(startLoc + index2);\n            } else if (mod[0] === DIFF_DELETE) {\n              text = text.substring(0, startLoc + index2) + text.substring(startLoc + xIndex(diffs, index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n}\nfunction stringify(patches) {\n  return patches.map(stringifyPatch).join(\"\");\n}\nfunction stringifyPatch(patch) {\n  const {\n    utf8Length1,\n    utf8Length2,\n    utf8Start1,\n    utf8Start2,\n    diffs\n  } = patch;\n  let coords1;\n  if (utf8Length1 === 0) {\n    coords1 = \"\".concat(utf8Start1, \",0\");\n  } else if (utf8Length1 === 1) {\n    coords1 = \"\".concat(utf8Start1 + 1);\n  } else {\n    coords1 = \"\".concat(utf8Start1 + 1, \",\").concat(utf8Length1);\n  }\n  let coords2;\n  if (utf8Length2 === 0) {\n    coords2 = \"\".concat(utf8Start2, \",0\");\n  } else if (utf8Length2 === 1) {\n    coords2 = \"\".concat(utf8Start2 + 1);\n  } else {\n    coords2 = \"\".concat(utf8Start2 + 1, \",\").concat(utf8Length2);\n  }\n  const text = [\"@@ -\".concat(coords1, \" +\").concat(coords2, \" @@\\n\")];\n  let op;\n  for (let x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        op = \"+\";\n        break;\n      case DIFF_DELETE:\n        op = \"-\";\n        break;\n      case DIFF_EQUAL:\n        op = \" \";\n        break;\n      default:\n        throw new Error(\"Unknown patch operation.\");\n    }\n    text[x + 1] = \"\".concat(op + encodeURI(diffs[x][1]), \"\\n\");\n  }\n  return text.join(\"\").replace(/%20/g, \" \");\n}\nconst patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\nfunction parse(textline) {\n  if (!textline) {\n    return [];\n  }\n  const patches = [];\n  const lines = textline.split(\"\\n\");\n  let textPointer = 0;\n  while (textPointer < lines.length) {\n    const m = lines[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error(\"Invalid patch string: \".concat(lines[textPointer]));\n    }\n    const patch = createPatchObject(toInt(m[1]), toInt(m[3]));\n    patches.push(patch);\n    if (m[2] === \"\") {\n      patch.start1--;\n      patch.utf8Start1--;\n      patch.length1 = 1;\n      patch.utf8Length1 = 1;\n    } else if (m[2] === \"0\") {\n      patch.length1 = 0;\n      patch.utf8Length1 = 0;\n    } else {\n      patch.start1--;\n      patch.utf8Start1--;\n      patch.utf8Length1 = toInt(m[2]);\n      patch.length1 = patch.utf8Length1;\n    }\n    if (m[4] === \"\") {\n      patch.start2--;\n      patch.utf8Start2--;\n      patch.length2 = 1;\n      patch.utf8Length2 = 1;\n    } else if (m[4] === \"0\") {\n      patch.length2 = 0;\n      patch.utf8Length2 = 0;\n    } else {\n      patch.start2--;\n      patch.utf8Start2--;\n      patch.utf8Length2 = toInt(m[4]);\n      patch.length2 = patch.utf8Length2;\n    }\n    textPointer++;\n    while (textPointer < lines.length) {\n      const currentLine = lines[textPointer];\n      const sign = currentLine.charAt(0);\n      if (sign === \"@\") {\n        break;\n      }\n      if (sign === \"\") {\n        textPointer++;\n        continue;\n      }\n      let line;\n      try {\n        line = decodeURI(currentLine.slice(1));\n      } catch (ex) {\n        throw new Error(\"Illegal escape in parse: \".concat(currentLine));\n      }\n      const utf8Diff = countUtf8Bytes(line) - line.length;\n      if (sign === \"-\") {\n        patch.diffs.push([DIFF_DELETE, line]);\n        patch.length1 -= utf8Diff;\n      } else if (sign === \"+\") {\n        patch.diffs.push([DIFF_INSERT, line]);\n        patch.length2 -= utf8Diff;\n      } else if (sign === \" \") {\n        patch.diffs.push([DIFF_EQUAL, line]);\n        patch.length1 -= utf8Diff;\n        patch.length2 -= utf8Diff;\n      } else {\n        throw new Error(\"Invalid patch mode \\\"\".concat(sign, \"\\\" in: \").concat(line));\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n}\nfunction toInt(num) {\n  return parseInt(num, 10);\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/diff/lib/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/@sanity/diff/lib/index.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   diffInput: () => (/* binding */ diffInput),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n/* harmony import */ var _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/diff-match-patch */ \"(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\");\n\nfunction replaceProperty(parent, prop, value) {\n  return delete parent[prop], parent[prop] = value, value;\n}\nfunction getLongestCommonSubsequence(previous, next) {\n  const matrix = getLengthMatrix(previous, next);\n  return backtrack(matrix, previous, next);\n}\nfunction getLengthMatrix(previous, next) {\n  const len1 = previous.length, len2 = next.length;\n  let x = 0, y = 0;\n  const matrix = new Array(len1 + 1);\n  for (x = 0; x < len1 + 1; x++)\n    for (matrix[x] = [len2 + 1], y = 0; y < len2 + 1; y++)\n      matrix[x][y] = 0;\n  for (x = 1; x < len1 + 1; x++)\n    for (y = 1; y < len2 + 1; y++)\n      previous[x - 1] === next[y - 1] ? matrix[x][y] = matrix[x - 1][y - 1] + 1 : matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n  return matrix;\n}\nfunction backtrack(matrix, previous, next) {\n  let prevIndex = previous.length, nextIndex = next.length;\n  const subsequence = {\n    sequence: [],\n    prevIndices: [],\n    nextIndices: []\n  };\n  for (; prevIndex !== 0 && nextIndex !== 0; )\n    if (previous[prevIndex - 1] === next[nextIndex - 1])\n      subsequence.sequence.unshift(previous[prevIndex - 1]), subsequence.prevIndices.unshift(prevIndex - 1), subsequence.nextIndices.unshift(nextIndex - 1), --prevIndex, --nextIndex;\n    else {\n      const valueAtMatrixAbove = matrix[prevIndex][nextIndex - 1], valueAtMatrixLeft = matrix[prevIndex - 1][nextIndex];\n      valueAtMatrixAbove > valueAtMatrixLeft ? --nextIndex : --prevIndex;\n    }\n  return subsequence;\n}\nfunction diffArray(fromInput, toInput, options) {\n  if (fromInput === toInput) {\n    const fromValue = fromInput.value, toValue = toInput.value;\n    return {\n      type: \"array\",\n      action: \"unchanged\",\n      isChanged: !1,\n      fromValue,\n      toValue,\n      get items() {\n        const items2 = diffExactByPosition(fromInput, toInput, options);\n        if (!items2) throw new Error(\"invariant broken: equivalent input, but diff detected\");\n        return replaceProperty(this, \"items\", items2);\n      }\n    };\n  }\n  const keyedA = indexByKey(fromInput), keyedB = indexByKey(toInput);\n  if (keyedA && keyedB)\n    return diffArrayByKey(fromInput, keyedA, toInput, keyedB);\n  const items = diffExactByPosition(fromInput, toInput, options);\n  return items ? buildArrayDiff(fromInput, toInput, items, !1) : diffArrayByReinsert(fromInput, toInput);\n}\nfunction buildArrayDiff(fromInput, toInput, items, isChanged) {\n  const fromValue = fromInput.value, toValue = toInput.value;\n  return isChanged ? {\n    type: \"array\",\n    action: \"changed\",\n    isChanged: !0,\n    fromValue,\n    toValue,\n    items,\n    annotation: toInput.annotation\n  } : {\n    type: \"array\",\n    action: \"unchanged\",\n    isChanged: !1,\n    fromValue,\n    toValue,\n    items\n  };\n}\nfunction diffExactByPosition(fromInput, toInput, options) {\n  if (fromInput.length !== toInput.length)\n    return;\n  const items = [];\n  for (let idx = 0; idx < fromInput.length; idx++) {\n    const diff = diffInput(fromInput.at(idx), toInput.at(idx), options);\n    if (diff.isChanged)\n      return;\n    items.push({\n      fromIndex: idx,\n      toIndex: idx,\n      hasMoved: !1,\n      diff,\n      annotation: toInput.annotationAt(idx)\n    });\n  }\n  return items;\n}\nfunction diffArrayByReinsert(fromInput, toInput, options) {\n  const items = [];\n  for (let idx = 0; idx < toInput.length; idx++) {\n    const input = toInput.at(idx);\n    items.push({\n      fromIndex: void 0,\n      toIndex: idx,\n      hasMoved: !1,\n      diff: addedInput(input, void 0),\n      annotation: input.annotation\n    });\n  }\n  for (let idx = 0; idx < fromInput.length; idx++) {\n    const input = fromInput.at(idx);\n    items.push({\n      fromIndex: idx,\n      toIndex: void 0,\n      hasMoved: !1,\n      diff: removedInput(input, void 0),\n      annotation: input.annotation\n    });\n  }\n  return buildArrayDiff(fromInput, toInput, items, !0);\n}\nfunction diffArrayByKey(fromArray, fromKeyIndex, toArray, toKeyIndex, options) {\n  const items = [];\n  let isChanged = !1;\n  function diffCommon(key, fromIndex, toIndex, hasMoved) {\n    deletePositionInIndex(fromKeyIndex.index, key, fromIndex), deletePositionInIndex(toKeyIndex.index, key, toIndex);\n    const fromInput = fromArray.at(fromIndex), toInput = toArray.at(toIndex), diff = diffInput(fromInput, toInput);\n    items.push({\n      fromIndex,\n      toIndex,\n      hasMoved,\n      diff,\n      annotation: toArray.annotationAt(toIndex)\n    }), (diff.isChanged || fromIndex !== toIndex) && (isChanged = !0);\n  }\n  const lcs = getLongestCommonSubsequence(fromKeyIndex.keys, toKeyIndex.keys);\n  for (let fromIndex = 0; fromIndex < fromKeyIndex.keys.length; fromIndex++) {\n    const key = fromKeyIndex.keys[fromIndex], subsequenceIdx = lcs.prevIndices.indexOf(fromIndex);\n    if (subsequenceIdx !== -1) {\n      diffCommon(key, fromIndex, lcs.nextIndices[subsequenceIdx], !1);\n      continue;\n    }\n    const toIndexes = toKeyIndex.index.get(key), toIndex = toIndexes && toIndexes.find((idx) => !lcs.nextIndices.includes(idx));\n    if (toIndex !== void 0) {\n      diffCommon(key, fromIndex, toIndex, !0);\n      continue;\n    }\n    const input = fromArray.at(fromIndex);\n    items.push({\n      fromIndex,\n      toIndex: void 0,\n      hasMoved: !1,\n      diff: removedInput(input, void 0),\n      annotation: fromArray.annotationAt(fromIndex)\n    }), isChanged = !0;\n  }\n  for (const positions of toKeyIndex.index.values()) {\n    for (const toIndex of positions) {\n      const input = toArray.at(toIndex);\n      items.push({\n        fromIndex: void 0,\n        toIndex,\n        hasMoved: !1,\n        diff: addedInput(input, void 0),\n        annotation: toArray.annotationAt(toIndex)\n      });\n    }\n    isChanged = !0;\n  }\n  return items.sort(compareItemDiff), buildArrayDiff(fromArray, toArray, items, isChanged);\n}\nfunction compareItemDiff(a, b) {\n  if (a.toIndex !== void 0 && b.toIndex !== void 0)\n    return a.toIndex - b.toIndex;\n  if (a.fromIndex !== void 0 && b.fromIndex !== void 0)\n    return a.fromIndex - b.fromIndex;\n  if (a.fromIndex !== void 0 && b.toIndex !== void 0)\n    return -1;\n  if (a.toIndex !== void 0 && b.fromIndex !== void 0)\n    return 1;\n  throw new Error(\"invalid item diff comparison\");\n}\nfunction deletePositionInIndex(index, key, pos) {\n  const positions = index.get(key);\n  deleteArrayValue(positions, pos), positions.length === 0 && index.delete(key);\n}\nfunction deleteArrayValue(arr, value) {\n  const idx = arr.indexOf(value);\n  if (idx === -1) throw new Error(\"value not found\");\n  arr.splice(idx, 1);\n}\nfunction indexByKey(arr) {\n  const index = /* @__PURE__ */ new Map(), keys = [], length = arr.length;\n  for (let i = 0; i < length; i++) {\n    const item = arr.at(i);\n    let key = null;\n    switch (item.type) {\n      case \"string\":\n        key = `s${item.value}`;\n        break;\n      case \"number\":\n        key = item.value;\n        break;\n      case \"boolean\":\n        key = item.value;\n        break;\n      case \"null\":\n        key = \"n\";\n        break;\n      case \"object\":\n        {\n          const keyField = item.get(\"_key\");\n          if (keyField && keyField.type === \"string\" && (key = `k${keyField.value}`, index.has(key)))\n            return;\n        }\n        break;\n    }\n    if (key === null) return;\n    keys.push(key);\n    let positions = index.get(key);\n    positions || (positions = [], index.set(key, positions)), positions.push(i);\n  }\n  return { keys, index };\n}\nfunction removedArray(input, toValue, options) {\n  return {\n    type: \"array\",\n    action: \"removed\",\n    isChanged: !0,\n    fromValue: input.value,\n    toValue,\n    annotation: input.annotation,\n    get items() {\n      const items = [];\n      for (let i = 0; i < input.length; i++) {\n        const item = input.at(i);\n        items.push({\n          fromIndex: i,\n          toIndex: void 0,\n          hasMoved: !1,\n          diff: removedInput(item, void 0),\n          annotation: input.annotationAt(i)\n        });\n      }\n      return replaceProperty(this, \"items\", items);\n    }\n  };\n}\nfunction addedArray(input, fromValue, options) {\n  return {\n    type: \"array\",\n    action: \"added\",\n    isChanged: !0,\n    fromValue,\n    toValue: input.value,\n    annotation: input.annotation,\n    get items() {\n      const items = [];\n      for (let i = 0; i < input.length; i++) {\n        const item = input.at(i);\n        items.push({\n          fromIndex: void 0,\n          toIndex: i,\n          hasMoved: !1,\n          diff: addedInput(item, void 0),\n          annotation: input.annotationAt(i)\n        });\n      }\n      return replaceProperty(this, \"items\", items);\n    }\n  };\n}\nconst ignoredFields = /* @__PURE__ */ new Set([\"_id\", \"_type\", \"_createdAt\", \"_updatedAt\", \"_rev\", \"_weak\"]);\nfunction diffObject(fromInput, toInput, options) {\n  const fields = {};\n  let isChanged = !1;\n  for (const key of fromInput.keys) {\n    if (ignoredFields.has(key)) continue;\n    const fromField = fromInput.get(key), toField = toInput.get(key);\n    if (toField) {\n      const fieldDiff = diffInput(fromField, toField, options);\n      fields[key] = fieldDiff, fieldDiff.isChanged && (isChanged = !0);\n    } else\n      fields[key] = removedInput(fromField, void 0), isChanged = !0;\n  }\n  for (const key of toInput.keys) {\n    if (ignoredFields.has(key) || fromInput.get(key)) continue;\n    const toField = toInput.get(key);\n    fields[key] = addedInput(toField, void 0), isChanged = !0;\n  }\n  const fromValue = fromInput.value, toValue = toInput.value;\n  return isChanged ? {\n    type: \"object\",\n    action: \"changed\",\n    isChanged: !0,\n    fromValue,\n    toValue,\n    fields,\n    annotation: toInput.annotation\n  } : {\n    type: \"object\",\n    action: \"unchanged\",\n    isChanged: !1,\n    fromValue,\n    toValue,\n    fields\n  };\n}\nfunction removedObject(input, toValue, options) {\n  return {\n    type: \"object\",\n    action: \"removed\",\n    isChanged: !0,\n    fromValue: input.value,\n    toValue,\n    annotation: input.annotation,\n    get fields() {\n      const fields = {};\n      for (const key of input.keys) {\n        const value = input.get(key);\n        fields[key] = removedInput(value, void 0);\n      }\n      return replaceProperty(this, \"fields\", fields);\n    }\n  };\n}\nfunction addedObject(input, fromValue, options) {\n  return {\n    type: \"object\",\n    action: \"added\",\n    isChanged: !0,\n    fromValue,\n    toValue: input.value,\n    annotation: input.annotation,\n    get fields() {\n      const fields = {};\n      for (const key of input.keys) {\n        const value = input.get(key);\n        fields[key] = addedInput(value, void 0);\n      }\n      return replaceProperty(this, \"fields\", fields);\n    }\n  };\n}\nfunction diffNumber(fromInput, toInput, options) {\n  const fromValue = fromInput.value, toValue = toInput.value, type = fromInput.type;\n  return fromValue === toValue ? {\n    type,\n    action: \"unchanged\",\n    fromValue,\n    toValue,\n    isChanged: !1\n  } : {\n    type: fromInput.type,\n    action: \"changed\",\n    isChanged: !0,\n    fromValue,\n    toValue,\n    annotation: toInput.annotation\n  };\n}\nfunction diffBoolean(fromInput, toInput, options) {\n  const fromValue = fromInput.value, toValue = toInput.value, type = fromInput.type;\n  return fromValue === toValue ? {\n    type,\n    action: \"unchanged\",\n    fromValue,\n    toValue,\n    isChanged: !1\n  } : {\n    type: fromInput.type,\n    action: \"changed\",\n    isChanged: !0,\n    fromValue,\n    toValue,\n    annotation: toInput.annotation\n  };\n}\nfunction diffString(fromInput, toInput, options) {\n  const fromValue = fromInput.value, toValue = toInput.value;\n  return fromValue === toValue ? {\n    type: \"string\",\n    action: \"unchanged\",\n    isChanged: !1,\n    fromValue,\n    toValue,\n    segments: [{ type: \"stringSegment\", action: \"unchanged\", text: fromValue }]\n  } : {\n    type: \"string\",\n    action: \"changed\",\n    isChanged: !0,\n    fromValue,\n    toValue,\n    annotation: toInput.annotation,\n    // Compute and memoize string segments only when accessed\n    get segments() {\n      const segments = buildSegments(fromInput, toInput);\n      return replaceProperty(this, \"segments\", segments);\n    }\n  };\n}\nfunction buildSegments(fromInput, toInput) {\n  const segments = [], dmpDiffs = (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_0__.cleanupSemantic)((0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_0__.makeDiff)(fromInput.value, toInput.value));\n  let fromIdx = 0, toIdx = 0;\n  for (const [op, text] of dmpDiffs)\n    switch (op) {\n      case _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_0__.DIFF_EQUAL:\n        segments.push({ type: \"stringSegment\", action: \"unchanged\", text }), fromIdx += text.length, toIdx += text.length;\n        break;\n      case _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_0__.DIFF_DELETE:\n        for (const segment of fromInput.sliceAnnotation(fromIdx, fromIdx + text.length))\n          segments.push({\n            type: \"stringSegment\",\n            action: \"removed\",\n            text: segment.text,\n            annotation: segment.annotation\n          });\n        fromIdx += text.length;\n        break;\n      case _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_0__.DIFF_INSERT:\n        for (const segment of toInput.sliceAnnotation(toIdx, toIdx + text.length))\n          segments.push({\n            type: \"stringSegment\",\n            action: \"added\",\n            text: segment.text,\n            annotation: segment.annotation\n          });\n        toIdx += text.length;\n        break;\n      default:\n        throw new Error(`Unhandled diff-match-patch operation \"${op}\"`);\n    }\n  return segments;\n}\nfunction removedString(input, toValue, options) {\n  return {\n    type: \"string\",\n    action: \"removed\",\n    isChanged: !0,\n    fromValue: input.value,\n    toValue,\n    annotation: input.annotation,\n    get segments() {\n      const segments = input.sliceAnnotation(0, input.value.length).map((segment) => ({ type: \"stringSegment\", action: \"removed\", ...segment }));\n      return replaceProperty(this, \"segments\", segments);\n    }\n  };\n}\nfunction addedString(input, fromValue, options) {\n  return {\n    type: \"string\",\n    action: \"added\",\n    isChanged: !0,\n    fromValue,\n    toValue: input.value,\n    annotation: input.annotation,\n    get segments() {\n      const segments = input.sliceAnnotation(0, input.value.length).map((segment) => ({ type: \"stringSegment\", action: \"added\", ...segment }));\n      return replaceProperty(this, \"segments\", segments);\n    }\n  };\n}\nfunction diffTypeChange(fromInput, toInput, options) {\n  return {\n    type: \"typeChange\",\n    action: \"changed\",\n    isChanged: !0,\n    fromType: fromInput.type,\n    fromValue: fromInput.value,\n    fromDiff: removedInput(fromInput, void 0),\n    toType: toInput.type,\n    toValue: toInput.value,\n    toDiff: addedInput(toInput, void 0),\n    annotation: toInput.annotation\n  };\n}\nfunction diffInput(fromInput, toInput, options = {}) {\n  return fromInput.type !== toInput.type ? fromInput.type === \"null\" ? addedInput(toInput, null) : toInput.type === \"null\" ? removedInput(fromInput, null) : diffTypeChange(fromInput, toInput) : diffWithType(fromInput.type, fromInput, toInput, options);\n}\nfunction diffWithType(type, fromInput, toInput, options) {\n  switch (type) {\n    case \"null\":\n      return {\n        type: \"null\",\n        action: \"unchanged\",\n        isChanged: !1,\n        toValue: null,\n        fromValue: null\n      };\n    case \"boolean\":\n      return diffBoolean(fromInput, toInput);\n    case \"number\":\n      return diffNumber(fromInput, toInput);\n    case \"string\":\n      return diffString(fromInput, toInput);\n    case \"array\":\n      return diffArray(fromInput, toInput, options);\n    case \"object\":\n      return diffObject(fromInput, toInput, options);\n    default:\n      throw new Error(`Unhandled diff type \"${type}\"`);\n  }\n}\nfunction removedInput(input, toValue, options) {\n  switch (input.type) {\n    case \"null\":\n      return {\n        type: \"null\",\n        action: \"removed\",\n        isChanged: !0,\n        fromValue: null,\n        toValue,\n        annotation: input.annotation\n      };\n    case \"boolean\":\n      return {\n        type: \"boolean\",\n        action: \"removed\",\n        isChanged: !0,\n        fromValue: input.value,\n        toValue,\n        annotation: input.annotation\n      };\n    case \"number\":\n      return {\n        type: \"number\",\n        action: \"removed\",\n        isChanged: !0,\n        fromValue: input.value,\n        toValue,\n        annotation: input.annotation\n      };\n    case \"string\":\n      return removedString(input, toValue);\n    case \"array\":\n      return removedArray(input, toValue);\n    case \"object\":\n      return removedObject(input, toValue);\n    default:\n      throw new Error(\"Unhandled diff type\");\n  }\n}\nfunction addedInput(input, fromValue, options) {\n  switch (input.type) {\n    case \"null\":\n      return {\n        type: \"null\",\n        action: \"added\",\n        isChanged: !0,\n        fromValue,\n        toValue: null,\n        annotation: input.annotation\n      };\n    case \"boolean\":\n      return {\n        type: \"boolean\",\n        action: \"added\",\n        isChanged: !0,\n        fromValue,\n        toValue: input.value,\n        annotation: input.annotation\n      };\n    case \"number\":\n      return {\n        type: \"number\",\n        action: \"added\",\n        isChanged: !0,\n        fromValue,\n        toValue: input.value,\n        annotation: input.annotation\n      };\n    case \"string\":\n      return addedString(input, fromValue);\n    case \"array\":\n      return addedArray(input, fromValue);\n    case \"object\":\n      return addedObject(input, fromValue);\n    default:\n      throw new Error(\"Unhandled diff type\");\n  }\n}\nvar __defProp$3 = Object.defineProperty, __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$3 = (obj, key, value) => __defNormalProp$3(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass ArrayWrapper {\n  constructor(value, annotation) {\n    __publicField$3(this, \"type\", \"array\"), __publicField$3(this, \"length\"), __publicField$3(this, \"value\"), __publicField$3(this, \"annotation\"), __publicField$3(this, \"elements\", []), this.annotation = annotation, this.value = value, this.length = value.length;\n  }\n  at(idx) {\n    if (idx >= this.length) throw new Error(\"out of bounds\");\n    return this.elements[idx] || (this.elements[idx] = wrap(this.value[idx], this.annotation));\n  }\n  annotationAt() {\n    return this.annotation;\n  }\n}\nvar __defProp$2 = Object.defineProperty, __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$2 = (obj, key, value) => __defNormalProp$2(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass BasicWrapper {\n  constructor(type, value, annotation) {\n    __publicField$2(this, \"type\"), __publicField$2(this, \"value\"), __publicField$2(this, \"annotation\"), this.type = type, this.value = value, this.annotation = annotation;\n  }\n}\nvar __defProp$1 = Object.defineProperty, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$1 = (obj, key, value) => __defNormalProp$1(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass ObjectWrapper {\n  constructor(value, annotation) {\n    __publicField$1(this, \"type\", \"object\"), __publicField$1(this, \"value\"), __publicField$1(this, \"keys\"), __publicField$1(this, \"annotation\"), __publicField$1(this, \"fields\", {}), this.value = value, this.annotation = annotation, this.keys = Object.keys(value);\n  }\n  get(key) {\n    const input = this.fields[key];\n    if (input)\n      return input;\n    if (!this.value.hasOwnProperty(key))\n      return;\n    const raw = this.value[key];\n    return this.fields[key] = wrap(raw, this.annotation);\n  }\n}\nvar __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass StringWrapper {\n  constructor(value, annotation) {\n    __publicField(this, \"type\", \"string\"), __publicField(this, \"value\"), __publicField(this, \"annotation\"), this.value = value, this.annotation = annotation;\n  }\n  sliceAnnotation(start, end) {\n    return [{ text: this.value.slice(start, end), annotation: this.annotation }];\n  }\n}\nfunction wrap(input, annotation) {\n  if (Array.isArray(input))\n    return new ArrayWrapper(input, annotation);\n  if (input === null)\n    return new BasicWrapper(\"null\", input, annotation);\n  const type = typeof input;\n  switch (type) {\n    case \"number\":\n      return new BasicWrapper(type, input, annotation);\n    case \"boolean\":\n      return new BasicWrapper(type, input, annotation);\n    case \"object\":\n      return new ObjectWrapper(input, annotation);\n    case \"string\":\n      return new StringWrapper(input, annotation);\n    default:\n      throw new Error(`cannot wrap value of type: ${type}`);\n  }\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/diff/lib/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/icons/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/icons/dist/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessDeniedIcon: () => (/* binding */ AccessDeniedIcon),\n/* harmony export */   ActivityIcon: () => (/* binding */ ActivityIcon),\n/* harmony export */   AddCircleIcon: () => (/* binding */ AddCircleIcon),\n/* harmony export */   AddCommentIcon: () => (/* binding */ AddCommentIcon),\n/* harmony export */   AddDocumentIcon: () => (/* binding */ AddDocumentIcon),\n/* harmony export */   AddIcon: () => (/* binding */ AddIcon),\n/* harmony export */   ApiIcon: () => (/* binding */ ApiIcon),\n/* harmony export */   ArchiveIcon: () => (/* binding */ ArchiveIcon),\n/* harmony export */   ArrowDownIcon: () => (/* binding */ ArrowDownIcon),\n/* harmony export */   ArrowLeftIcon: () => (/* binding */ ArrowLeftIcon),\n/* harmony export */   ArrowRightIcon: () => (/* binding */ ArrowRightIcon),\n/* harmony export */   ArrowTopRightIcon: () => (/* binding */ ArrowTopRightIcon),\n/* harmony export */   ArrowUpIcon: () => (/* binding */ ArrowUpIcon),\n/* harmony export */   AsteriskIcon: () => (/* binding */ AsteriskIcon),\n/* harmony export */   BarChartIcon: () => (/* binding */ BarChartIcon),\n/* harmony export */   BasketIcon: () => (/* binding */ BasketIcon),\n/* harmony export */   BellIcon: () => (/* binding */ BellIcon),\n/* harmony export */   BillIcon: () => (/* binding */ BillIcon),\n/* harmony export */   BinaryDocumentIcon: () => (/* binding */ BinaryDocumentIcon),\n/* harmony export */   BlockContentIcon: () => (/* binding */ BlockContentIcon),\n/* harmony export */   BlockElementIcon: () => (/* binding */ BlockElementIcon),\n/* harmony export */   BlockquoteIcon: () => (/* binding */ BlockquoteIcon),\n/* harmony export */   BoldIcon: () => (/* binding */ BoldIcon),\n/* harmony export */   BoltIcon: () => (/* binding */ BoltIcon),\n/* harmony export */   BookIcon: () => (/* binding */ BookIcon),\n/* harmony export */   BottleIcon: () => (/* binding */ BottleIcon),\n/* harmony export */   BulbFilledIcon: () => (/* binding */ BulbFilledIcon),\n/* harmony export */   BulbOutlineIcon: () => (/* binding */ BulbOutlineIcon),\n/* harmony export */   CalendarIcon: () => (/* binding */ CalendarIcon),\n/* harmony export */   CaseIcon: () => (/* binding */ CaseIcon),\n/* harmony export */   ChartUpwardIcon: () => (/* binding */ ChartUpwardIcon),\n/* harmony export */   CheckmarkCircleIcon: () => (/* binding */ CheckmarkCircleIcon),\n/* harmony export */   CheckmarkIcon: () => (/* binding */ CheckmarkIcon),\n/* harmony export */   ChevronDownIcon: () => (/* binding */ ChevronDownIcon),\n/* harmony export */   ChevronLeftIcon: () => (/* binding */ ChevronLeftIcon),\n/* harmony export */   ChevronRightIcon: () => (/* binding */ ChevronRightIcon),\n/* harmony export */   ChevronUpIcon: () => (/* binding */ ChevronUpIcon),\n/* harmony export */   CircleIcon: () => (/* binding */ CircleIcon),\n/* harmony export */   ClipboardIcon: () => (/* binding */ ClipboardIcon),\n/* harmony export */   ClipboardImageIcon: () => (/* binding */ ClipboardImageIcon),\n/* harmony export */   ClockIcon: () => (/* binding */ ClockIcon),\n/* harmony export */   CloseCircleIcon: () => (/* binding */ CloseCircleIcon),\n/* harmony export */   CloseIcon: () => (/* binding */ CloseIcon),\n/* harmony export */   CodeBlockIcon: () => (/* binding */ CodeBlockIcon),\n/* harmony export */   CodeIcon: () => (/* binding */ CodeIcon),\n/* harmony export */   CogIcon: () => (/* binding */ CogIcon),\n/* harmony export */   CollapseIcon: () => (/* binding */ CollapseIcon),\n/* harmony export */   ColorWheelIcon: () => (/* binding */ ColorWheelIcon),\n/* harmony export */   CommentIcon: () => (/* binding */ CommentIcon),\n/* harmony export */   ComponentIcon: () => (/* binding */ ComponentIcon),\n/* harmony export */   ComposeIcon: () => (/* binding */ ComposeIcon),\n/* harmony export */   ConfettiIcon: () => (/* binding */ ConfettiIcon),\n/* harmony export */   ControlsIcon: () => (/* binding */ ControlsIcon),\n/* harmony export */   CopyIcon: () => (/* binding */ CopyIcon),\n/* harmony export */   CreditCardIcon: () => (/* binding */ CreditCardIcon),\n/* harmony export */   CropIcon: () => (/* binding */ CropIcon),\n/* harmony export */   CubeIcon: () => (/* binding */ CubeIcon),\n/* harmony export */   DashboardIcon: () => (/* binding */ DashboardIcon),\n/* harmony export */   DatabaseIcon: () => (/* binding */ DatabaseIcon),\n/* harmony export */   DesktopIcon: () => (/* binding */ DesktopIcon),\n/* harmony export */   DiamondIcon: () => (/* binding */ DiamondIcon),\n/* harmony export */   DocumentIcon: () => (/* binding */ DocumentIcon),\n/* harmony export */   DocumentPdfIcon: () => (/* binding */ DocumentPdfIcon),\n/* harmony export */   DocumentRemoveIcon: () => (/* binding */ DocumentRemoveIcon),\n/* harmony export */   DocumentSheetIcon: () => (/* binding */ DocumentSheetIcon),\n/* harmony export */   DocumentTextIcon: () => (/* binding */ DocumentTextIcon),\n/* harmony export */   DocumentVideoIcon: () => (/* binding */ DocumentVideoIcon),\n/* harmony export */   DocumentWordIcon: () => (/* binding */ DocumentWordIcon),\n/* harmony export */   DocumentZipIcon: () => (/* binding */ DocumentZipIcon),\n/* harmony export */   DocumentsIcon: () => (/* binding */ DocumentsIcon),\n/* harmony export */   DotIcon: () => (/* binding */ DotIcon),\n/* harmony export */   DoubleChevronDownIcon: () => (/* binding */ DoubleChevronDownIcon),\n/* harmony export */   DoubleChevronLeftIcon: () => (/* binding */ DoubleChevronLeftIcon),\n/* harmony export */   DoubleChevronRightIcon: () => (/* binding */ DoubleChevronRightIcon),\n/* harmony export */   DoubleChevronUpIcon: () => (/* binding */ DoubleChevronUpIcon),\n/* harmony export */   DownloadIcon: () => (/* binding */ DownloadIcon),\n/* harmony export */   DragHandleIcon: () => (/* binding */ DragHandleIcon),\n/* harmony export */   DropIcon: () => (/* binding */ DropIcon),\n/* harmony export */   EarthAmericasIcon: () => (/* binding */ EarthAmericasIcon),\n/* harmony export */   EarthGlobeIcon: () => (/* binding */ EarthGlobeIcon),\n/* harmony export */   EditIcon: () => (/* binding */ EditIcon),\n/* harmony export */   EllipsisHorizontalIcon: () => (/* binding */ EllipsisHorizontalIcon),\n/* harmony export */   EllipsisVerticalIcon: () => (/* binding */ EllipsisVerticalIcon),\n/* harmony export */   EnterIcon: () => (/* binding */ EnterIcon),\n/* harmony export */   EnterRightIcon: () => (/* binding */ EnterRightIcon),\n/* harmony export */   EnvelopeIcon: () => (/* binding */ EnvelopeIcon),\n/* harmony export */   EqualIcon: () => (/* binding */ EqualIcon),\n/* harmony export */   ErrorFilledIcon: () => (/* binding */ ErrorFilledIcon),\n/* harmony export */   ErrorOutlineIcon: () => (/* binding */ ErrorOutlineIcon),\n/* harmony export */   ExpandIcon: () => (/* binding */ ExpandIcon),\n/* harmony export */   EyeClosedIcon: () => (/* binding */ EyeClosedIcon),\n/* harmony export */   EyeOpenIcon: () => (/* binding */ EyeOpenIcon),\n/* harmony export */   FilterIcon: () => (/* binding */ FilterIcon),\n/* harmony export */   FolderIcon: () => (/* binding */ FolderIcon),\n/* harmony export */   GenerateIcon: () => (/* binding */ GenerateIcon),\n/* harmony export */   GroqIcon: () => (/* binding */ GroqIcon),\n/* harmony export */   HashIcon: () => (/* binding */ HashIcon),\n/* harmony export */   HeartFilledIcon: () => (/* binding */ HeartFilledIcon),\n/* harmony export */   HeartIcon: () => (/* binding */ HeartIcon),\n/* harmony export */   HelpCircleIcon: () => (/* binding */ HelpCircleIcon),\n/* harmony export */   HighlightIcon: () => (/* binding */ HighlightIcon),\n/* harmony export */   HomeIcon: () => (/* binding */ HomeIcon),\n/* harmony export */   IceCreamIcon: () => (/* binding */ IceCreamIcon),\n/* harmony export */   Icon: () => (/* binding */ Icon),\n/* harmony export */   ImageIcon: () => (/* binding */ ImageIcon),\n/* harmony export */   ImageRemoveIcon: () => (/* binding */ ImageRemoveIcon),\n/* harmony export */   ImagesIcon: () => (/* binding */ ImagesIcon),\n/* harmony export */   InfoFilledIcon: () => (/* binding */ InfoFilledIcon),\n/* harmony export */   InfoOutlineIcon: () => (/* binding */ InfoOutlineIcon),\n/* harmony export */   InlineElementIcon: () => (/* binding */ InlineElementIcon),\n/* harmony export */   InlineIcon: () => (/* binding */ InlineIcon),\n/* harmony export */   InsertAboveIcon: () => (/* binding */ InsertAboveIcon),\n/* harmony export */   InsertBelowIcon: () => (/* binding */ InsertBelowIcon),\n/* harmony export */   ItalicIcon: () => (/* binding */ ItalicIcon),\n/* harmony export */   JoystickIcon: () => (/* binding */ JoystickIcon),\n/* harmony export */   JsonIcon: () => (/* binding */ JsonIcon),\n/* harmony export */   LaunchIcon: () => (/* binding */ LaunchIcon),\n/* harmony export */   LeaveIcon: () => (/* binding */ LeaveIcon),\n/* harmony export */   LemonIcon: () => (/* binding */ LemonIcon),\n/* harmony export */   LinkIcon: () => (/* binding */ LinkIcon),\n/* harmony export */   LinkRemovedIcon: () => (/* binding */ LinkRemovedIcon),\n/* harmony export */   LockIcon: () => (/* binding */ LockIcon),\n/* harmony export */   LogoJsIcon: () => (/* binding */ LogoJsIcon),\n/* harmony export */   LogoTsIcon: () => (/* binding */ LogoTsIcon),\n/* harmony export */   MasterDetailIcon: () => (/* binding */ MasterDetailIcon),\n/* harmony export */   MenuIcon: () => (/* binding */ MenuIcon),\n/* harmony export */   MobileDeviceIcon: () => (/* binding */ MobileDeviceIcon),\n/* harmony export */   MoonIcon: () => (/* binding */ MoonIcon),\n/* harmony export */   NumberIcon: () => (/* binding */ NumberIcon),\n/* harmony export */   OkHandIcon: () => (/* binding */ OkHandIcon),\n/* harmony export */   OlistIcon: () => (/* binding */ OlistIcon),\n/* harmony export */   OverageIcon: () => (/* binding */ OverageIcon),\n/* harmony export */   PackageIcon: () => (/* binding */ PackageIcon),\n/* harmony export */   PanelLeftIcon: () => (/* binding */ PanelLeftIcon),\n/* harmony export */   PanelRightIcon: () => (/* binding */ PanelRightIcon),\n/* harmony export */   PauseIcon: () => (/* binding */ PauseIcon),\n/* harmony export */   PinIcon: () => (/* binding */ PinIcon),\n/* harmony export */   PinRemovedIcon: () => (/* binding */ PinRemovedIcon),\n/* harmony export */   PlayIcon: () => (/* binding */ PlayIcon),\n/* harmony export */   PlugIcon: () => (/* binding */ PlugIcon),\n/* harmony export */   PresentationIcon: () => (/* binding */ PresentationIcon),\n/* harmony export */   ProjectsIcon: () => (/* binding */ ProjectsIcon),\n/* harmony export */   PublishIcon: () => (/* binding */ PublishIcon),\n/* harmony export */   ReadOnlyIcon: () => (/* binding */ ReadOnlyIcon),\n/* harmony export */   RedoIcon: () => (/* binding */ RedoIcon),\n/* harmony export */   RefreshIcon: () => (/* binding */ RefreshIcon),\n/* harmony export */   RemoveCircleIcon: () => (/* binding */ RemoveCircleIcon),\n/* harmony export */   RemoveIcon: () => (/* binding */ RemoveIcon),\n/* harmony export */   ResetIcon: () => (/* binding */ ResetIcon),\n/* harmony export */   RestoreIcon: () => (/* binding */ RestoreIcon),\n/* harmony export */   RetrieveIcon: () => (/* binding */ RetrieveIcon),\n/* harmony export */   RetryIcon: () => (/* binding */ RetryIcon),\n/* harmony export */   RevertIcon: () => (/* binding */ RevertIcon),\n/* harmony export */   RobotIcon: () => (/* binding */ RobotIcon),\n/* harmony export */   RocketIcon: () => (/* binding */ RocketIcon),\n/* harmony export */   SchemaIcon: () => (/* binding */ SchemaIcon),\n/* harmony export */   SearchIcon: () => (/* binding */ SearchIcon),\n/* harmony export */   SelectIcon: () => (/* binding */ SelectIcon),\n/* harmony export */   ShareIcon: () => (/* binding */ ShareIcon),\n/* harmony export */   SortIcon: () => (/* binding */ SortIcon),\n/* harmony export */   SparkleIcon: () => (/* binding */ SparkleIcon),\n/* harmony export */   SparklesIcon: () => (/* binding */ SparklesIcon),\n/* harmony export */   SpinnerIcon: () => (/* binding */ SpinnerIcon),\n/* harmony export */   SplitHorizontalIcon: () => (/* binding */ SplitHorizontalIcon),\n/* harmony export */   SplitVerticalIcon: () => (/* binding */ SplitVerticalIcon),\n/* harmony export */   SquareIcon: () => (/* binding */ SquareIcon),\n/* harmony export */   StackCompactIcon: () => (/* binding */ StackCompactIcon),\n/* harmony export */   StackIcon: () => (/* binding */ StackIcon),\n/* harmony export */   StarIcon: () => (/* binding */ StarIcon),\n/* harmony export */   StopIcon: () => (/* binding */ StopIcon),\n/* harmony export */   StrikethroughIcon: () => (/* binding */ StrikethroughIcon),\n/* harmony export */   StringIcon: () => (/* binding */ StringIcon),\n/* harmony export */   SunIcon: () => (/* binding */ SunIcon),\n/* harmony export */   SyncIcon: () => (/* binding */ SyncIcon),\n/* harmony export */   TabletDeviceIcon: () => (/* binding */ TabletDeviceIcon),\n/* harmony export */   TagIcon: () => (/* binding */ TagIcon),\n/* harmony export */   TagsIcon: () => (/* binding */ TagsIcon),\n/* harmony export */   TaskIcon: () => (/* binding */ TaskIcon),\n/* harmony export */   TerminalIcon: () => (/* binding */ TerminalIcon),\n/* harmony export */   TextIcon: () => (/* binding */ TextIcon),\n/* harmony export */   ThLargeIcon: () => (/* binding */ ThLargeIcon),\n/* harmony export */   ThListIcon: () => (/* binding */ ThListIcon),\n/* harmony export */   TiersIcon: () => (/* binding */ TiersIcon),\n/* harmony export */   ToggleArrowRightIcon: () => (/* binding */ ToggleArrowRightIcon),\n/* harmony export */   TokenIcon: () => (/* binding */ TokenIcon),\n/* harmony export */   TransferIcon: () => (/* binding */ TransferIcon),\n/* harmony export */   TranslateIcon: () => (/* binding */ TranslateIcon),\n/* harmony export */   TrashIcon: () => (/* binding */ TrashIcon),\n/* harmony export */   TrendUpwardIcon: () => (/* binding */ TrendUpwardIcon),\n/* harmony export */   TriangleOutlineIcon: () => (/* binding */ TriangleOutlineIcon),\n/* harmony export */   TrolleyIcon: () => (/* binding */ TrolleyIcon),\n/* harmony export */   TruncateIcon: () => (/* binding */ TruncateIcon),\n/* harmony export */   TwitterIcon: () => (/* binding */ TwitterIcon),\n/* harmony export */   UlistIcon: () => (/* binding */ UlistIcon),\n/* harmony export */   UnderlineIcon: () => (/* binding */ UnderlineIcon),\n/* harmony export */   UndoIcon: () => (/* binding */ UndoIcon),\n/* harmony export */   UnknownIcon: () => (/* binding */ UnknownIcon),\n/* harmony export */   UnlinkIcon: () => (/* binding */ UnlinkIcon),\n/* harmony export */   UnlockIcon: () => (/* binding */ UnlockIcon),\n/* harmony export */   UnpublishIcon: () => (/* binding */ UnpublishIcon),\n/* harmony export */   UploadIcon: () => (/* binding */ UploadIcon),\n/* harmony export */   UserIcon: () => (/* binding */ UserIcon),\n/* harmony export */   UsersIcon: () => (/* binding */ UsersIcon),\n/* harmony export */   WarningFilledIcon: () => (/* binding */ WarningFilledIcon),\n/* harmony export */   WarningOutlineIcon: () => (/* binding */ WarningOutlineIcon),\n/* harmony export */   WrenchIcon: () => (/* binding */ WrenchIcon),\n/* harmony export */   icons: () => (/* binding */ icons)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nconst AccessDeniedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"access-denied\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.1568 6.84315C21.281 9.96734 21.281 15.0327 18.1568 18.1569C15.0326 21.281 9.96733 21.281 6.84313 18.1569C3.71894 15.0327 3.71894 9.96734 6.84313 6.84315C9.96733 3.71895 15.0326 3.71895 18.1568 6.84315ZM18.1568 6.84315L6.844 18.156\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ActivityIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"activity\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M21 15H19L15.5 7L11 18L8 12L6 15H4\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), AddCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 12.4H17M12.5 8V17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), AddCommentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add-comment\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M13 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5H9.5V20.5L13.5 16.5H16.5C17.6046 16.5 18.5 15.6046 18.5 14.5V12M15 6.5H22M18.5 10V3\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), AddDocumentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add-document\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V12M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5M6.5 9.5V19.5H11M20 17.5H16.5M16.5 17.5H13M16.5 17.5V14M16.5 17.5V21\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), AddIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 5V20M5 12.5H20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ApiIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"api\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5.93047 13.2107L6.66782 10.3728H6.73089L7.45854 13.2107H5.93047ZM8.17164 16H9.66089L7.56041 9H5.93047L3.82999 16H5.20767L5.65396 14.2876H7.73505L8.17164 16Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10.5389 9V16H11.9166V13.7782H13.0323C14.541 13.7782 15.5015 12.8517 15.5015 11.3964C15.5015 9.92654 14.5701 9 13.1003 9H10.5389ZM11.9166 10.1303H12.751C13.6533 10.1303 14.1044 10.5475 14.1044 11.3867C14.1044 12.2308 13.6533 12.6431 12.751 12.6431H11.9166V10.1303Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M21.1675 16V14.8164H19.717V10.1836H21.1675V9H16.8889V10.1836H18.3393V14.8164H16.8889V16H21.1675Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), ArchiveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"archive\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 10.5V17M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.5 7.5H20.5M16 14L12.5 17.5L9 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), ArrowDownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-down\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12.5 19.5V5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18 14L12.5 19.5L7 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), ArrowLeftIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-left\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M5.5 12.5H20\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11 18L5.5 12.5L11 7\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), ArrowRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M19.5 12.5H5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 7L19.5 12.5L14 18\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), ArrowTopRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-top-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M16.5 8.5L7 18\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M9 8.5H16.5V16\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n}), ArrowUpIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-up\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 11L12.5 5.5L18 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12.5 5.5V20\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n}), AsteriskIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"asterisk\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 4V21M16.75 5.13879L8.25 19.8612M19.8612 8.25L5.13878 16.75M4.00002 12.5H21M5.13881 8.25L19.8612 16.75M8.25002 5.13879L16.75 19.8612\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BarChartIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bar-chart\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 5V19.5H20M8.5 18V13M11.5 18V9M14.5 18V11M17.5 18V7\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BasketIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"basket\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 10.5H5L6.5 19.5H18.5L20 10.5H16.5M8.5 10.5L10.2721 5.18377C10.4082 4.77543 10.7903 4.5 11.2208 4.5H13.7792C14.2097 4.5 14.5918 4.77543 14.7279 5.18377L16.5 10.5M8.5 10.5H16.5M8.5 10.5L9.5 19.5M16.5 10.5L15.5 19.5M12.5 10.5V19.5M19.5 13.5H5.5M19 16.5H6\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BellIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bell\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 17.5V18.5C10.5 20 11.5 20.5 12.5 20.5C13.5 20.5 14.5 20 14.5 18.5V17.5M5.5 17.5C6.5 16 6.5 15 6.5 12C6.5 8 8.5 5.5 12.5 5.5C16.5 5.5 18.5 8 18.5 12C18.5 15 18.5 16 19.5 17.5H5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BillIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bill\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6.50001 5.5C8.50003 5.5 8.50003 8 8.50003 8V9.5M6.50001 5.5C4.5 5.5 4.5 8 4.5 8L4.50001 9.5H8.50003M6.50001 5.5C6.50001 5.5 15.8333 5.5 17.6667 5.5C19.5 5.5 19.5 8.5 19.5 8.5V20L17.6667 19L15.8333 20L14 19L12.1667 20L10.3334 19L8.50003 20V9.5M11 12.5H15M11 9.5H16M11 15.5H16\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BinaryDocumentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"binary-document\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.5 12.5V17.5M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM12.5 12.5V17.5H15.5V12.5H12.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinecap: \"square\",\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), BlockContentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"block-content\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21 7.60002L11 7.60003V6.40003L21 6.40002V7.60002Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21 11.2667L12.4833 11.2667V10.0667L21 10.0667V11.2667Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21 14.9334H13.9254V13.7334L21 13.7334V14.9334Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21 18.6002H4V17.4002H21V18.6002Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.86438 15.6H11.2L8.27623 7.60003H6.92377L4 15.6H5.29072L6.0371 13.4767H9.12362L9.86438 15.6ZM7.53546 9.05255H7.63086L8.80374 12.4344H6.35698L7.53546 9.05255Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), BlockElementIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"block-element\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5 19.5H20M5 5.5H20M6.5 8.5H18.5V16.5H6.5V8.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BlockquoteIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"blockquote\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10 17.5H19M6 7.5H19M10 12.5H17M6.5 12V18\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BoldIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bold\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M13.2087 18C15.5322 18 16.9731 16.793 16.9731 14.8844C16.9731 13.4812 15.9245 12.3949 14.4836 12.2892V12.1534C15.6001 11.9875 16.4526 10.9841 16.4526 9.82991C16.4526 8.14761 15.1927 7.11409 13.0804 7.11409H8.32019V18H13.2087ZM10.5985 8.85674H12.4995C13.5859 8.85674 14.212 9.37727 14.212 10.2448C14.212 11.1199 13.5406 11.6254 12.3109 11.6254H10.5985V8.85674ZM10.5985 16.2574V13.1643H12.575C13.9178 13.1643 14.6496 13.6924 14.6496 14.6882C14.6496 15.7066 13.9404 16.2574 12.6278 16.2574H10.5985Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), BoltIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bolt\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18 11.5L9 21L11 13.5H7L16 4L14 11.5H18Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BookIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"book\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M20.5 17.5V5.5L12.5 6.5M20.5 17.5L12.5 18.5M20.5 17.5V18.5M4.5 17.5V5.5L12.5 6.5M4.5 17.5L12.5 18.5M4.5 17.5V18.5M12.5 18.5L4.5 19.5V18.5M12.5 18.5L20.5 19.5V18.5M12.5 18.5V6.5M12.5 18.5H4.5M12.5 18.5H20.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BottleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bottle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 17.5L17.5 17.5M17.5 13C17.5 12.087 17.5 11.3518 17.5 11C17.5 8.5 14.5 9 14.5 7.37494L14.5 5.5M17.5 13C17.5 15.1229 17.5 18.7543 17.5 20.5022C17.5 21.0545 17.0523 21.5 16.5 21.5L8.5 21.5C7.94772 21.5 7.5 21.0547 7.5 20.5024C7.5 18.8157 7.5 15.3546 7.5 13M17.5 13L7.5 13M7.5 13C7.5 12.2538 7.5 11.5648 7.5 11C7.5 8.5 10.5 9 10.5 7.37494L10.5 5.5M10.5 5.5L10.5 3.99999C10.5 3.72385 10.7239 3.49999 11 3.49999L14 3.49999C14.2761 3.49999 14.5 3.72385 14.5 3.99999L14.5 5.5M10.5 5.5L14.5 5.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), BulbFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bulb-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H14V20.5C14 21.0523 13.5523 21.5 13 21.5H12C11.4477 21.5 11 21.0523 11 20.5V19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10C18 11.94 17.3978 12.9767 16.4272 14.3368Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.4272 14.3368L15.9388 13.9883L16.4272 14.3368ZM14 19.5V18.9H13.4V19.5H14ZM11 19.5H11.6V18.9H11V19.5ZM8.57284 14.3368L9.06122 13.9883H9.06122L8.57284 14.3368ZM16.1 17.212C16.1 16.3069 16.3868 15.4261 16.9155 14.6853L15.9388 13.9883C15.2678 14.9284 14.9 16.0519 14.9 17.212H16.1ZM16.1 18.5V17.212H14.9V18.5H16.1ZM14.5 20.1C15.3837 20.1 16.1 19.3837 16.1 18.5H14.9C14.9 18.7209 14.7209 18.9 14.5 18.9V20.1ZM14 20.1H14.5V18.9H14V20.1ZM13.4 19.5V20.5H14.6V19.5H13.4ZM13.4 20.5C13.4 20.7209 13.2209 20.9 13 20.9V22.1C13.8837 22.1 14.6 21.3837 14.6 20.5H13.4ZM13 20.9H12V22.1H13V20.9ZM12 20.9C11.7791 20.9 11.6 20.7209 11.6 20.5H10.4C10.4 21.3837 11.1163 22.1 12 22.1V20.9ZM11.6 20.5V19.5H10.4V20.5H11.6ZM10.5 20.1H11V18.9H10.5V20.1ZM8.9 18.5C8.9 19.3837 9.61634 20.1 10.5 20.1V18.9C10.2791 18.9 10.1 18.7209 10.1 18.5H8.9ZM8.9 17.212V18.5H10.1V17.212H8.9ZM8.08446 14.6853C8.61315 15.4261 8.9 16.3069 8.9 17.212H10.1C10.1 16.0519 9.73217 14.9284 9.06122 13.9883L8.08446 14.6853ZM6.4 10C6.4 11.0377 6.56208 11.8595 6.86624 12.611C7.16624 13.3521 7.59495 13.9995 8.08446 14.6853L9.06122 13.9883C8.58004 13.314 8.22233 12.7629 7.97858 12.1607C7.739 11.5688 7.6 10.9023 7.6 10H6.4ZM12.5 3.9C9.16863 3.9 6.4 6.66863 6.4 10H7.6C7.6 7.33137 9.83137 5.1 12.5 5.1V3.9ZM18.6 10C18.6 6.66863 15.8314 3.9 12.5 3.9V5.1C15.1686 5.1 17.4 7.33137 17.4 10H18.6ZM16.9155 14.6853C17.4051 13.9995 17.8338 13.3521 18.1338 12.611C18.4379 11.8595 18.6 11.0377 18.6 10H17.4C17.4 10.9023 17.261 11.5688 17.0214 12.1607C16.7777 12.7629 16.42 13.314 15.9388 13.9883L16.9155 14.6853Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), BulbOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bulb-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 16.5H15.5M11 20V20.5C11 21.0523 11.4477 21.5 12 21.5H13C13.5523 21.5 14 21.0523 14 20.5V20M18 10C18 11.94 17.3978 12.9767 16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2\n        }\n      )\n    }\n  );\n}), CalendarIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"calendar\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M4.5 10.5V19.5H20.5V10.5M4.5 10.5V5.5H20.5V10.5M4.5 10.5H12.5H20.5M20.5 13.5H16.5M16.5 13.5H12.5M16.5 13.5V10.5M16.5 13.5V16.5M12.5 13.5H8.5M12.5 13.5V16.5M12.5 13.5V10.5M8.5 13.5H4.5M8.5 13.5V10.5M8.5 13.5V16.5M20.5 16.5H16.5M16.5 16.5H12.5M16.5 16.5V19.5M12.5 16.5H8.5M12.5 16.5V19.5M8.5 16.5H4.5M8.5 16.5V19.5M17.5 8V3M7.5 8V3\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CaseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"case\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9 8.5122V6C9 5.44772 9.44772 5 10 5H15C15.5523 5 16 5.44772 16 6V8.5122M4.5 12V18.5C4.5 19.0523 4.94772 19.5 5.5 19.5H19.5C20.0523 19.5 20.5 19.0523 20.5 18.5V12M4.5 12V9.5122C4.5 8.95991 4.94772 8.5122 5.5 8.5122H19.5C20.0523 8.5122 20.5 8.95991 20.5 9.5122V12M4.5 12L11.7978 14.7367C12.2505 14.9064 12.7495 14.9064 13.2022 14.7367L20.5 12\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ChartUpwardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chart-upward\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 5V19.5H20M7.5 16L11.5 11.5L15.5 14L19.5 8.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CheckmarkCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"checkmark-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 12.1316L11.7414 14.5L16 10M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CheckmarkIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"checkmark\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 11.5L10.5 16.5L19.5 7.60001\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ChevronDownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chevron-down\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 10.5L12.5 15L8 10.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ChevronLeftIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chevron-left\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M14.5 17L10 12.5L14.5 8\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ChevronRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chevron-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 8L15 12.5L10.5 17\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ChevronUpIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chevron-up\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 14.5L12.5 10L17 14.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"circle\",\n        {\n          cx: 12.5,\n          cy: 12.5,\n          r: 8,\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ClipboardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"clipboard\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 5.5H6.5V19.5H18.5V5.5H17M12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ClipboardImageIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"clipboard-image\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 5.5H6.5V19.5H10.5M17 5.5H18.5V11.5M10.5 18.5L12.73 15.8983C13.1327 15.4285 13.8613 15.4335 14.2575 15.909L15.299 17.1588C15.6754 17.6105 16.3585 17.6415 16.7743 17.2257L16.9903 17.0097C17.2947 16.7053 17.7597 16.6298 18.1447 16.8223L20.5 18M10.5 11.5H20.5V21.5H10.5V11.5ZM12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ClockIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"clock\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 8V12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CloseCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"close-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 15.5L12.5 12.5M12.5 12.5L15.5 9.5M12.5 12.5L9.5 9.5M12.5 12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CloseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"close\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18 7L7 18M7 7L18 18\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CodeBlockIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"code-block\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 15L8.5 12.5L11 10M14 10L16.5 12.5L14 15M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CodeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"code\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 16L7.5 12.5L11 9M14 9L17.5 12.5L14 16\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CogIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"cog\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14.2624 5.40607L13.8714 4.42848C13.6471 3.86771 13.104 3.5 12.5 3.5C11.896 3.5 11.3529 3.86771 11.1286 4.42848L10.7376 5.40607C10.5857 5.78585 10.2869 6.08826 9.90901 6.2448C9.53111 6.40133 9.10603 6.39874 8.73006 6.23761L7.76229 5.82285C7.20716 5.58494 6.56311 5.70897 6.13604 6.13604C5.70897 6.56311 5.58494 7.20716 5.82285 7.76229L6.23761 8.73006C6.39874 9.10602 6.40133 9.53111 6.2448 9.90901C6.08826 10.2869 5.78585 10.5857 5.40607 10.7376L4.42848 11.1286C3.86771 11.3529 3.5 11.896 3.5 12.5C3.5 13.104 3.86771 13.6471 4.42848 13.8714L5.40607 14.2624C5.78585 14.4143 6.08826 14.7131 6.2448 15.091C6.40133 15.4689 6.39874 15.894 6.23761 16.2699L5.82285 17.2377C5.58494 17.7928 5.70897 18.4369 6.13604 18.864C6.56311 19.291 7.20716 19.4151 7.76229 19.1772L8.73006 18.7624C9.10603 18.6013 9.53111 18.5987 9.90901 18.7552C10.2869 18.9117 10.5857 19.2141 10.7376 19.5939L11.1286 20.5715C11.3529 21.1323 11.896 21.5 12.5 21.5C13.104 21.5 13.6471 21.1323 13.8714 20.5715L14.2624 19.5939C14.4143 19.2141 14.7131 18.9117 15.091 18.7552C15.4689 18.5987 15.894 18.6013 16.2699 18.7624L17.2377 19.1771C17.7928 19.4151 18.4369 19.291 18.864 18.864C19.291 18.4369 19.4151 17.7928 19.1771 17.2377L18.7624 16.2699C18.6013 15.894 18.5987 15.4689 18.7552 15.091C18.9117 14.7131 19.2141 14.4143 19.5939 14.2624L20.5715 13.8714C21.1323 13.6471 21.5 13.104 21.5 12.5C21.5 11.896 21.1323 11.3529 20.5715 11.1286L19.5939 10.7376C19.2141 10.5857 18.9117 10.2869 18.7552 9.90901C18.5987 9.53111 18.6013 9.10602 18.7624 8.73006L19.1772 7.76229C19.4151 7.20716 19.291 6.56311 18.864 6.13604C18.4369 5.70897 17.7928 5.58494 17.2377 5.82285L16.2699 6.23761C15.894 6.39874 15.4689 6.40133 15.091 6.2448C14.7131 6.08826 14.4143 5.78585 14.2624 5.40607Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.5 12.5C16.5 14.7091 14.7091 16.5 12.5 16.5C10.2909 16.5 8.5 14.7091 8.5 12.5C8.5 10.2909 10.2909 8.5 12.5 8.5C14.7091 8.5 16.5 10.2909 16.5 12.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), CollapseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"collapse\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6 14.5L10.5 14.5V19M19 10.5H14.5L14.5 6\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10.5 14.5L6 19M14.5 10.5L19 6\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), ColorWheelIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"color-wheel\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.43853 5.10896L11.1606 9.26642M13.8394 15.7336L15.5615 19.891M15.7336 11.1606L19.891 9.43853M9.26642 13.8394L5.10896 15.5615M5.3139 9.52342L9.23359 11.147M15.7664 13.853L19.6861 15.4766M13.853 9.23359L15.4766 5.3139M9.52342 19.6861L11.147 15.7664M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5ZM16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CommentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"comment\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 16.5H9.5V20.5L13.5 16.5H17.5C18.6046 16.5 19.5 15.6046 19.5 14.5V8.5C19.5 7.39543 18.6046 6.5 17.5 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ComponentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"component\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 8.5L12.5 12.5M12.5 12.5L16.5 16.5M12.5 12.5L16.5 8.5M12.5 12.5L8.5 16.5M12.5 4L21 12.5L12.5 21L4 12.5L12.5 4Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ComposeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"compose\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 6L19 8M14 5.5H5.5V19.5H19.5V11M9 16L9.5 13.5L19 4L21 6L11.5 15.5L9 16Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ConfettiIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"confetti\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M16.5 6.25C16.9142 6.25 17.25 5.91421 17.25 5.5C17.25 5.08579 16.9142 4.75 16.5 4.75C16.0858 4.75 15.75 5.08579 15.75 5.5C15.75 5.91421 16.0858 6.25 16.5 6.25ZM19.5 16.25C19.9142 16.25 20.25 15.9142 20.25 15.5C20.25 15.0858 19.9142 14.75 19.5 14.75C19.0858 14.75 18.75 15.0858 18.75 15.5C18.75 15.9142 19.0858 16.25 19.5 16.25Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13 4C11 6 14.5 5.5 12.5 7.5M21 12C19 14 19.5 10.5 17.5 12.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.99288 20.296L7.21541 20.8532L6.99288 20.296ZM15.3657 16.952L15.1432 16.3948L15.3657 16.952ZM4.48221 17.7853L5.03942 18.0078L4.48221 17.7853ZM7.82614 9.41242L8.38334 9.63495L8.38334 9.63495L7.82614 9.41242ZM4.9038 19.8744L4.47954 20.2986L4.9038 19.8744ZM20.6 5C20.6 4.66863 20.3314 4.4 20 4.4C19.6686 4.4 19.4 4.66863 19.4 5L20.6 5ZM15.6417 16.0661C15.6727 16.0352 15.6429 16.1034 15.3784 16.0633C15.1285 16.0255 14.78 15.9035 14.3486 15.6771C13.4924 15.2279 12.4323 14.4325 11.389 13.3892L10.5405 14.2377C11.645 15.3423 12.8008 16.2201 13.791 16.7397C14.2827 16.9977 14.7649 17.1841 15.1987 17.2498C15.6178 17.3133 16.1246 17.2803 16.4903 16.9146L15.6417 16.0661ZM11.389 13.3892C10.3457 12.3459 9.55032 11.2858 9.10105 10.4296C8.87467 9.99821 8.75268 9.64963 8.71484 9.39979C8.67477 9.13524 8.74302 9.10551 8.71208 9.13645L7.86355 8.28792C7.49788 8.65359 7.46489 9.1604 7.52837 9.5795C7.59408 10.0133 7.78043 10.4955 8.03847 10.9872C8.55805 11.9774 9.4359 13.1332 10.5405 14.2377L11.389 13.3892ZM8.71208 9.13645C8.68114 9.16739 8.71088 9.09913 8.97542 9.1392C9.22526 9.17705 9.57384 9.29904 10.0052 9.52542C10.8614 9.97469 11.9215 10.77 12.9648 11.8134L13.8134 10.9648C12.7088 9.86026 11.553 8.98242 10.5628 8.46283C10.0711 8.20479 9.58894 8.01844 9.15513 7.95274C8.73603 7.88926 8.22923 7.92224 7.86355 8.28792L8.71208 9.13645ZM12.9648 11.8134C14.0081 12.8567 14.8035 13.9168 15.2528 14.7729C15.4791 15.2043 15.6011 15.5529 15.639 15.8028C15.679 16.0673 15.6108 16.097 15.6417 16.0661L16.4903 16.9146C16.8559 16.5489 16.8889 16.0421 16.8254 15.623C16.7597 15.1892 16.5734 14.7071 16.3153 14.2153C15.7958 13.2252 14.9179 12.0694 13.8134 10.9648L12.9648 11.8134ZM7.21541 20.8532L15.5883 17.5092L15.1432 16.3948L6.77034 19.7387L7.21541 20.8532ZM5.03942 18.0078L8.38334 9.63495L7.26893 9.18988L3.92501 17.5628L5.03942 18.0078ZM7.86355 8.28792C7.60626 8.54522 7.40381 8.85216 7.26893 9.18988L8.38334 9.63495C8.45773 9.44869 8.5696 9.27894 8.71208 9.13644L7.86355 8.28792ZM3.92501 17.5628C3.54833 18.5059 3.76251 19.5816 4.47954 20.2986L5.32807 19.4501C4.95514 19.0772 4.83814 18.5118 5.03942 18.0078L3.92501 17.5628ZM15.6417 16.0661C15.4993 16.2086 15.3295 16.3204 15.1432 16.3948L15.5883 17.5092C15.926 17.3744 16.2329 17.1719 16.4903 16.9146L15.6417 16.0661ZM6.77034 19.7387C6.26637 19.94 5.70099 19.823 5.32807 19.4501L4.47954 20.2986C5.19657 21.0157 6.27225 21.2298 7.21541 20.8532L6.77034 19.7387ZM19.4 5C19.4 7.17816 18.8838 8.08287 18.3136 8.50727C17.6938 8.96864 16.8379 9.02116 15.7269 9.06388C14.7129 9.10288 13.4438 9.13208 12.4699 9.857C11.4463 10.6189 10.9 12.005 10.9 14.3269H12.1C12.1 12.1487 12.6162 11.244 13.1864 10.8196C13.8062 10.3582 14.6621 10.3057 15.7731 10.263C16.7871 10.224 18.0562 10.1948 19.0301 9.46988C20.0537 8.70799 20.6 7.32184 20.6 5L19.4 5Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), ControlsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"controls\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6.5 5V7.5M6.5 7.5C5.39543 7.5 4.5 8.39543 4.5 9.5C4.5 10.6046 5.39543 11.5 6.5 11.5M6.5 7.5C7.60457 7.5 8.5 8.39543 8.5 9.5C8.5 10.6046 7.60457 11.5 6.5 11.5M6.5 11.5V20M12.5 5V13.5M12.5 13.5C11.3954 13.5 10.5 14.3954 10.5 15.5C10.5 16.6046 11.3954 17.5 12.5 17.5M12.5 13.5C13.6046 13.5 14.5 14.3954 14.5 15.5C14.5 16.6046 13.6046 17.5 12.5 17.5M12.5 17.5V20M18.5 5V7.5M18.5 7.5C17.3954 7.5 16.5 8.39543 16.5 9.5C16.5 10.6046 17.3954 11.5 18.5 11.5M18.5 7.5C19.6046 7.5 20.5 8.39543 20.5 9.5C20.5 10.6046 19.6046 11.5 18.5 11.5M18.5 11.5V20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CopyIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"copy\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 8.5H5.5V20.5H16.5V16.5M19.5 4.5H8.5V16.5H19.5V4.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CreditCardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"credit-card\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 9.5H4.5V11.5H20.5V9.5Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 15.5H14M5.5 18.5H19.5C20.0523 18.5 20.5 18.0523 20.5 17.5V7.5C20.5 6.94772 20.0523 6.5 19.5 6.5H5.5C4.94772 6.5 4.5 6.94772 4.5 7.5V17.5C4.5 18.0523 4.94772 18.5 5.5 18.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), CropIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"crop\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 5V15.5H20M5 9.5H15.5V20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), CubeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"cube\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 22V13M12.5 13L4.5 8M12.5 13L20.5 8\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DashboardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"dashboard\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M14.5 19.5V12.5M10.5 12.5V5.5M5.5 12.5H19.5M5.5 19.5H19.5V5.5H5.5V19.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), DatabaseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"database\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.5 7V17.5C18.5 19.0594 16.0504 20.5 12.5 20.5C8.9496 20.5 6.5 19.0594 6.5 17.5V7M18.5 7C18.5 8.45543 15.8137 9.5 12.5 9.5C9.18629 9.5 6.5 8.45543 6.5 7C6.5 5.54457 9.18629 4.5 12.5 4.5C15.8137 4.5 18.5 5.54457 18.5 7Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), DesktopIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"desktop\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M4.5 13.5V15.5C4.5 16.0523 4.94772 16.5 5.5 16.5H12.5M4.5 13.5V6.5C4.5 5.94772 4.94772 5.5 5.5 5.5H19.5C20.0523 5.5 20.5 5.94772 20.5 6.5V13.5M4.5 13.5H20.5M20.5 13.5V15.5C20.5 16.0523 20.0523 16.5 19.5 16.5H12.5M12.5 16.5V19.5M12.5 19.5H8M12.5 19.5H17\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), DiamondIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"diamond\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M21 10.5L12.5 21M21 10.5L18 5.5H11M21 10.5H16M12.5 21L4 10.5M12.5 21L9 10.5M12.5 21L16 10.5M4 10.5L7 5.5H11M4 10.5H9M9 10.5H12.5H16M9 10.5L11 5.5M16 10.5L14.5 5.5H11\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), DocumentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V20.5H6.5L6.5 9.5M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DocumentPdfIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-pdf\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.7127 13.8012L12.7193 13.77C12.8488 13.2366 13.0117 12.5716 12.8845 11.969C12.7997 11.4937 12.4493 11.3084 12.1503 11.295C11.7977 11.2794 11.483 11.4803 11.4049 11.7726C11.2576 12.3082 11.3893 13.0402 11.6303 13.973C11.3268 14.6961 10.8425 15.7472 10.4877 16.3721C9.8271 16.7135 8.94113 17.2402 8.80946 17.9053C8.78268 18.028 8.81392 18.1842 8.88757 18.3248C8.97014 18.481 9.10181 18.6015 9.25579 18.6596C9.32274 18.6841 9.40308 18.7042 9.49681 18.7042C9.88959 18.7042 10.5256 18.3873 11.3736 16.9322C11.5031 16.8898 11.637 16.8452 11.7664 16.8006C12.3734 16.5953 13.0028 16.381 13.5718 16.2851C14.2012 16.622 14.9175 16.8385 15.404 16.8385C15.8861 16.8385 16.0758 16.5529 16.1472 16.381C16.2722 16.0797 16.2119 15.7004 16.0088 15.4973C15.7143 15.2072 14.9979 15.1313 13.882 15.2696C13.3331 14.9349 12.9738 14.4796 12.7127 13.8012ZM10.2645 17.1911C9.95431 17.6419 9.71998 17.8673 9.59278 17.9655C9.7423 17.691 10.0346 17.4009 10.2645 17.1911ZM12.2195 11.9355C12.3355 12.1341 12.3199 12.7345 12.2306 13.038C12.1213 12.5939 12.1056 11.9645 12.1704 11.8909L12.2195 11.9355ZM12.1837 14.6247C12.4225 15.0376 12.7238 15.3924 13.0563 15.6557C12.5743 15.7651 12.1346 15.9458 11.7419 16.1065C11.6481 16.1445 11.5566 16.1824 11.4674 16.2181C11.7642 15.6803 12.0119 15.071 12.1837 14.6247ZM15.6562 16.0864L15.6428 16.1065C15.6428 16.1065 15.4375 16.2315 14.6497 15.9213C15.5558 15.8789 15.6562 16.0864 15.6562 16.0864Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DocumentRemoveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-remove\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.5 14V20.5H18.5V14M6.5 11V9.5L11.5 4.5H18.5V11M3 12.5H22\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DocumentSheetIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-sheet\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10.4 19V16.4M10.4 16.4L10.4 13.4M10.4 16.4H8M10.4 16.4H14.4M10.4 13.4V11M10.4 13.4H8M10.4 13.4H14.4M14.4 19V16.4M14.4 16.4V13.4M14.4 16.4H17M14.4 13.4V11M14.4 13.4H17M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DocumentTextIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-text\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 13H9M14 16H9M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DocumentVideoIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-video\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 16.5V13.5L14 15L11.5 16.5Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DocumentWordIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-word\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.4699 13.4588H12.5263L13.6328 17H14.5435L16 12H14.9952L14.0656 15.7214H14.0129L12.929 12H12.0672L10.9984 15.7214H10.9419L10.0124 12H9L10.4565 17H11.371L12.4699 13.4588Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DocumentZipIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-zip\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 4.5L13.5 5L15.5 6L13.5 7L15.5 8L13.5 9L15.5 10L13.5 11L14.5 11.5V13M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM13.5 13H15.5L16 17H13L13.5 13Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DocumentsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"documents\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M10.5 4.5V9.5H5.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.5 7.5H19.5V21.5H8.5V18.5M10.5 4.5H16.5V18.5H5.5V9.5L10.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DotIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"dot\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"circle\",\n        {\n          cx: 12.5,\n          cy: 12.5,\n          r: 2.5,\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2\n        }\n      )\n    }\n  );\n}), DoubleChevronDownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"double-chevron-down\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 8L12.5 12.5L8 8M17 13L12.5 17.5L8 13\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), DoubleChevronLeftIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"double-chevron-left\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12 17L7.5 12.5L12 8M17 17L12.5 12.5L17 8\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), DoubleChevronRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"double-chevron-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M13 8L17.5 12.5L13 17M8 8L12.5 12.5L8 17\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), DoubleChevronUpIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"double-chevron-up\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 12L12.5 7.5L17 12M8 17L12.5 12.5L17 17\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), DownloadIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"download\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19.5 17V19.5H5.5V17M12.5 16L12.5 5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17.5 11L12.5 16L7.5 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), DragHandleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"drag-handle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.5 8C10.3284 8 11 7.32843 11 6.5C11 5.67157 10.3284 5 9.5 5C8.67157 5 8 5.67157 8 6.5C8 7.32843 8.67157 8 9.5 8Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.5 14C10.3284 14 11 13.3284 11 12.5C11 11.6716 10.3284 11 9.5 11C8.67157 11 8 11.6716 8 12.5C8 13.3284 8.67157 14 9.5 14Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11 18.5C11 19.3284 10.3284 20 9.5 20C8.67157 20 8 19.3284 8 18.5C8 17.6716 8.67157 17 9.5 17C10.3284 17 11 17.6716 11 18.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15.5 8C16.3284 8 17 7.32843 17 6.5C17 5.67157 16.3284 5 15.5 5C14.6716 5 14 5.67157 14 6.5C14 7.32843 14.6716 8 15.5 8Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17 12.5C17 13.3284 16.3284 14 15.5 14C14.6716 14 14 13.3284 14 12.5C14 11.6716 14.6716 11 15.5 11C16.3284 11 17 11.6716 17 12.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15.5 20C16.3284 20 17 19.3284 17 18.5C17 17.6716 16.3284 17 15.5 17C14.6716 17 14 17.6716 14 18.5C14 19.3284 14.6716 20 15.5 20Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), DropIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"drop\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.5 14.5C18.5 18 16 20.5 12.5 20.5C9 20.5 6.5 18 6.5 14.5C6.5 11 9.5 7.50001 12.5 4.5C15.5 7.5 18.5 11 18.5 14.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), EarthAmericasIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"earth-americas\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 13L5.5 9L10 5H15V10L14 9H11L9.5 11L10.5 12H12V13L13 14.5H15.5L18.5 17L15.5 19.5L10.5 20V17L12.5 15L9 13L7 10.5V13Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"circle\",\n          {\n            cx: 12.5,\n            cy: 12.5,\n            r: 8,\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), EarthGlobeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"earth-globe\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 16.5H19.5M5.5 8.5H19.5M4.5 12.5H20.5M12.5 20.5C12.5 20.5 8 18.5 8 12.5C8 6.5 12.5 4.5 12.5 4.5M12.5 4.5C12.5 4.5 17 6.5 17 12.5C17 18.5 12.5 20.5 12.5 20.5M12.5 4.5V20.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), EditIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"edit\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), EllipsisHorizontalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ellipsis-horizontal\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.5 11C7.32843 11 8 11.6716 8 12.5C8 13.3284 7.32843 14 6.5 14C5.67157 14 5 13.3284 5 12.5C5 11.6716 5.67157 11 6.5 11Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 11C13.3284 11 14 11.6716 14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18.5 11C19.3284 11 20 11.6716 20 12.5C20 13.3284 19.3284 14 18.5 14C17.6716 14 17 13.3284 17 12.5C17 11.6716 17.6716 11 18.5 11Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), EllipsisVerticalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ellipsis-vertical\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 6.5C14 7.32843 13.3284 8 12.5 8C11.6716 8 11 7.32843 11 6.5C11 5.67157 11.6716 5 12.5 5C13.3284 5 14 5.67157 14 6.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11C13.3284 11 14 11.6716 14 12.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 18.5C14 19.3284 13.3284 20 12.5 20C11.6716 20 11 19.3284 11 18.5C11 17.6716 11.6716 17 12.5 17C13.3284 17 14 17.6716 14 18.5Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), EnterIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"enter\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M6 14.5H19.5V7\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 18.5L6 14.5L10 10.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), EnterRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"enter-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M19 14.5H5.5V7\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 18.5L19 14.5L15 10.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), EnvelopeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"envelope\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 18.5H4.5V6.5H20.5V18.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 18.5L17.75 15.5L15 12.5M4.5 18.5L10 12.5M20.5 6.5L12.5 15L4.5 6.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), EqualIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"equal\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M7.5 4.5H3.5V20.5H7.5\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M17.5 20.5L21.5 20.5L21.5 4.5L17.5 4.5\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M9 10.5H16\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M9 14.5H16\", stroke: \"currentColor\", strokeWidth: 1.2 })\n      ]\n    }\n  );\n}), ErrorFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"error-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5ZM13 14.5V16H12V14.5H13ZM12 9V13H13V9H12Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), ErrorOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"error-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 16V14.5M12.5 9V13M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ExpandIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"expand\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 6.5H18.5V11M11 18.5H6.5V14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18.5 6.5L14 11M6.5 18.5L11 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), EyeClosedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"eye-closed\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7 15.5L5.5 17.5M20.5 12.5C19.8612 13.5647 19.041 14.6294 18.0008 15.501M18.0008 15.501C16.5985 16.676 14.7965 17.5 12.5 17.5M18.0008 15.501L18 15.5M18.0008 15.501L19.5 17.5M12.5 17.5C8.5 17.5 6 15 4.5 12.5M12.5 17.5V20M15.5 17L16.5 19.5M9.5 17L8.5 19.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), EyeOpenIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"eye-open\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M9.39999 12.5C9.39999 10.7879 10.7879 9.39999 12.5 9.39999C14.2121 9.39999 15.6 10.7879 15.6 12.5C15.6 14.2121 14.2121 15.6 12.5 15.6C10.7879 15.6 9.39999 14.2121 9.39999 12.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 7.5C8.5 7.5 6 10 4.5 12.5C6 15 8.5 17.5 12.5 17.5C16.5 17.5 19 15 20.5 12.5C19 10 16.5 7.5 12.5 7.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), FilterIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"filter\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 12L6 7V6L19 6L19 7L14 12V17L11 19V12Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"square\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), FolderIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"folder\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11.5 8.5H19.5V18.5H5.5V5.5H10.5L11.5 8.5ZM11.5 8.5H5.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), GenerateIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"generate\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9 5.30423C6.33576 6.60253 4.5 9.33688 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5V14.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 11L12.5 14.5L9 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), GroqIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"groq\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M13 13H21L13 21L13 13Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12 12V4L4 12H12Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12 13H4L12 21V13Z\", fill: \"currentColor\" })\n      ]\n    }\n  );\n}), HashIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"hash\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.33894 16.1002H5.44615L5.63077 14.9002H8.52356L9.26202 10.1002H6.36923L6.55384 8.90018H9.44663L9.89281 6H11.1069L10.6608 8.90018H15.4466L15.8928 6H17.1069L16.6608 8.90018H19.5539L19.3693 10.1002H16.4761L15.7377 14.9002H18.6308L18.4462 16.1002H15.5531L15.1069 19H13.8928L14.3389 16.1002H9.55306L9.10693 19H7.89281L8.33894 16.1002ZM10.4761 10.1002L9.73767 14.9002H14.5236L15.262 10.1002H10.4761Z\",\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), HeartFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"heart-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), HeartIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"heart\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), HelpCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"help-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), HighlightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"highlight\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"m20.25 9.005-2.719 4.71M10.75 3.504l-2.725 4.72m9.506 5.49-9.506-5.49m9.506 5.49L16.5 15.5l-3.268.634L12 18l-.586-.352m-3.39-9.423L7 10l1 3-1 2 .586.351m0 0L4.902 20h5.155l1.357-2.352m-3.828-2.297 3.828 2.297M13 20h7\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), HomeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"home\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6.5 8.75V18.5H18.5V8.75M4.5 10L12.5 5L20.5 10M14.5 18.5V11.5H10.5V18.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), IceCreamIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ice-cream\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 13.5L12.5 20.5L15.5 13.5M12.5 8.26389C11.9692 7.78885 11.2684 7.5 10.5 7.5C8.84315 7.5 7.5 8.84315 7.5 10.5C7.5 12.1569 8.84315 13.5 10.5 13.5C11.2684 13.5 11.9692 13.2111 12.5 12.7361M9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5M17.5 10.5C17.5 12.1569 16.1569 13.5 14.5 13.5C12.8431 13.5 11.5 12.1569 11.5 10.5C11.5 8.84315 12.8431 7.5 14.5 7.5C16.1569 7.5 17.5 8.84315 17.5 10.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ImageIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"image\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 15.5L8.79289 12.2071C9.18342 11.8166 9.81658 11.8166 10.2071 12.2071L12.8867 14.8867C13.2386 15.2386 13.7957 15.2782 14.1938 14.9796L15.1192 14.2856C15.3601 14.1049 15.6696 14.0424 15.9618 14.1154L19.5 15M5.5 6.5H19.5V18.5H5.5V6.5ZM15.5 10.5C15.5 11.0523 15.0523 11.5 14.5 11.5C13.9477 11.5 13.5 11.0523 13.5 10.5C13.5 9.94772 13.9477 9.5 14.5 9.5C15.0523 9.5 15.5 9.94772 15.5 10.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ImageRemoveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"image-remove\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 11V6.5H19.5V11M5.5 14V18.5H19.5V14M3 12.5H22\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ImagesIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"images\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.5 7.5H20.5V19.5H6.5V17.5M4.5 14.5L7.79289 11.2071C8.18342 10.8166 8.81658 10.8166 9.20711 11.2071L11.8867 13.8867C12.2386 14.2386 12.7957 14.2782 13.1938 13.9796L14.1192 13.2856C14.3601 13.1049 14.6696 13.0424 14.9618 13.1154L18.5 14M4.5 5.5H18.5V17.5H4.5V5.5ZM14.5 9.5C14.5 10.0523 14.0523 10.5 13.5 10.5C12.9477 10.5 12.5 10.0523 12.5 9.5C12.5 8.94772 12.9477 8.5 13.5 8.5C14.0523 8.5 14.5 8.94772 14.5 9.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), InfoFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"info-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5ZM12 10.5V9H13V10.5H12ZM13 16V12H12V16H13Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), InfoOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"info-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 10.5V9M12.5 12V16M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), InlineElementIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"inline-element\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 5V20M19.5 5V20M8.5 6.5H16.5V18.5H8.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), InlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"inline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 6.5H19.5V18.5H12.5M12.5 6.5H5.5V18.5H12.5M12.5 6.5V18.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), InsertAboveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"insert-above\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M14.5 10.5556L10.5 10.5556M12.5 12.5L12.5 8.5M18.5 5.5L6.5 5.5M18.5 19.5L6.5 19.5L6.5 15.5L18.5 15.5L18.5 19.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"square\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), InsertBelowIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"insert-below\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 14.5H14.5M12.5 12.5V16.5M6.5 19.5H18.5M6.5 5.5H18.5V9.5H6.5V5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"square\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ItalicIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"italic\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.43 18H11.7276L13.4551 9.86763H12.1576L10.43 18ZM13.3043 8.29849C13.8022 8.29849 14.2095 7.89112 14.2095 7.39322C14.2095 6.89532 13.8022 6.48795 13.3043 6.48795C12.8064 6.48795 12.399 6.89532 12.399 7.39322C12.399 7.89112 12.8064 8.29849 13.3043 8.29849Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), JoystickIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"joystick\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 16V14.5H15.5V16M13.5 10.5V14.5M11.5 10.5V14.5M15.5 7.5C15.5 9.15685 14.1569 10.5 12.5 10.5C10.8431 10.5 9.5 9.15685 9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5ZM18.5 19.5H6.5C5.94772 19.5 5.5 19.0523 5.5 18.5V17.5C5.5 16.9477 5.94772 16.5 6.5 16.5H18.5C19.0523 16.5 19.5 16.9477 19.5 17.5V18.5C19.5 19.0523 19.0523 19.5 18.5 19.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), JsonIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"json\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 5.5H9.5C8.39543 5.5 7.5 6.39543 7.5 7.5V12.5M7.5 12.5H4M7.5 12.5V17.5C7.5 18.6046 8.39543 19.5 9.5 19.5H11M14 5.5H15.5C16.6046 5.5 17.5 6.39543 17.5 7.5V12.5M17.5 12.5H21M17.5 12.5V17.5C17.5 18.6046 16.6046 19.5 15.5 19.5H14\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), LaunchIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"launch\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12 7.5H6.5V18.5H17.5V13M19.5 5.5L10.5 14.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M14 5.5H19.5V11\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n}), LeaveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"leave\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14.5 15V18.5H5.5V6.5H14.5V10M9 12.5H21.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18 9L21.5 12.5L18 16\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), LemonIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"lemon\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.6569 10.3431L6.41422 14.5858C7.58579 15.7574 9.12132 16.3431 10.6569 16.3431M10.6569 10.3431L14.8995 6.1005C16.0711 7.27208 16.6569 8.80761 16.6569 10.3431M10.6569 10.3431L10.6569 16.3431M10.6569 10.3431L16.6569 10.3431M10.6569 10.3431L14.8995 14.5858M14.8995 14.5858C13.7279 15.7574 12.1924 16.3431 10.6569 16.3431M14.8995 14.5858C16.0711 13.4142 16.6569 11.8787 16.6569 10.3431M16.3137 4.68629C19.4379 7.81049 19.4379 12.8758 16.3137 16C13.1895 19.1242 8.12419 19.1242 5 16L16.3137 4.68629Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), LinkIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"link\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 12.5L12.5 14C13.281 14.781 14.719 14.781 15.5 14L18.5 11C19.281 10.219 19.281 8.78105 18.5 8L18 7.5C17.2189 6.71895 15.781 6.71895 15 7.5L13 9.5M12 15.5L10 17.5C9.21895 18.281 7.78105 18.281 7 17.5L6.5 17C5.71895 16.219 5.71896 14.781 6.5 14L9.50001 11C10.2811 10.219 11.719 10.2189 12.5 11L14 12.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), LinkRemovedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"link-removed\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.5 11C19.281 10.219 19.281 8.78108 18.5 8.00003L18 7.50003C17.2189 6.71898 15.781 6.71898 15 7.50003L13 9.50003M15.5 14C14.7189 14.7811 13.281 14.7811 12.5 14M6.5 14C5.71895 14.7811 5.71894 16.219 6.49999 17L6.99999 17.5C7.78104 18.2811 9.21894 18.2811 9.99999 17.5L12 15.5M12.5 11C11.719 10.219 10.281 10.219 9.5 11M3 12.5H22\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), LockIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"lock\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15.5 11.5V8.5C15.5 6.5 14 5.5 12.5 5.5C11 5.5 9.5 6.5 9.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), LogoJsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"logo-js\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M20 5H5V20H20V5ZM12.5254 16.1572C12.5254 17.4189 11.7742 18.1536 10.4792 18.1536C9.24243 18.1536 8.49121 17.4189 8.45801 16.2942V16.261H9.67407V16.2859C9.69897 16.7466 9.9729 17.0703 10.4626 17.0703C10.9939 17.0703 11.272 16.7507 11.272 16.1489V12.011H12.5254V16.1572ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), LogoTsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"logo-ts\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M20 5H5V20H20V5ZM11.0769 18H9.82349V13.0444H8.02637V12.011H12.874V13.0444H11.0769V18ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), MasterDetailIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"master-detail\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7 9.5H10M11.5 6.5V18.5M7 12.5H10M13 9.5H18M7 15.5H10M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), MenuIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"menu\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6 7.5H19M6 17.5H19M6 12.5H19\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), MobileDeviceIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"mobile-device\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.5 6.5C7.5 5.39543 8.39543 4.5 9.5 4.5H15.5C16.6046 4.5 17.5 5.39543 17.5 6.5V18.5C17.5 19.6046 16.6046 20.5 15.5 20.5H9.5C8.39543 20.5 7.5 19.6046 7.5 18.5V6.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13.5 17.5C13.5 18.0523 13.0523 18.5 12.5 18.5C11.9477 18.5 11.5 18.0523 11.5 17.5C11.5 16.9477 11.9477 16.5 12.5 16.5C13.0523 16.5 13.5 16.9477 13.5 17.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), MoonIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"moon\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M19.6065 16.1775C18.9417 16.387 18.234 16.5 17.5 16.5C13.634 16.5 10.5 13.366 10.5 9.5C10.5 7.54163 11.3042 5.77109 12.6004 4.50062C12.567 4.50021 12.5335 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C15.5924 20.5 18.275 18.7454 19.6065 16.1775Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), NumberIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"number\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21.0165 17.6336H3.83636V16.4336H21.0165V17.6336Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.09808 13.3967V7.508H5.74066L3.83636 8.78241V10.091L5.65277 8.88495H5.74066V13.3967H3.84125V14.5539H8.89984V13.3967H7.09808Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.81781 9.63202V9.66132H11.1069V9.62714C11.1069 8.95331 11.5756 8.49432 12.2739 8.49432C12.9575 8.49432 13.4018 8.89471 13.4018 9.50507C13.4018 9.9787 13.1528 10.3498 12.1909 11.3117L9.89594 13.5822V14.5539H14.8618V13.3869H11.7807V13.299L13.1577 11.9855C14.3491 10.843 14.7543 10.1838 14.7543 9.41229C14.7543 8.19159 13.7729 7.36639 12.3178 7.36639C10.8383 7.36639 9.81781 8.28436 9.81781 9.63202Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17.6694 11.4631H18.5092C19.3198 11.4631 19.8422 11.8683 19.8422 12.4982C19.8422 13.1183 19.3295 13.5139 18.5239 13.5139C17.767 13.5139 17.2592 13.133 17.2104 12.5324H15.9262C15.9897 13.8508 17.0248 14.6955 18.5629 14.6955C20.1401 14.6955 21.2192 13.841 21.2192 12.591C21.2192 11.6584 20.6528 11.0334 19.7006 10.9211V10.8332C20.4721 10.6769 20.9457 10.0666 20.9457 9.23651C20.9457 8.12323 19.9741 7.36639 18.5434 7.36639C17.0541 7.36639 16.1118 8.17694 16.0629 9.50018H17.2983C17.3422 8.88007 17.8061 8.48456 18.4995 8.48456C19.2075 8.48456 19.6567 8.85565 19.6567 9.44159C19.6567 10.0324 19.1977 10.4182 18.4946 10.4182H17.6694V11.4631Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), OkHandIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ok-hand\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15.9957 11.5C14.8197 10.912 11.9957 9 10.4957 9C8.9957 9 5.17825 11.7674 6 13C7 14.5 9.15134 11.7256 10.4957 12C11.8401 12.2744 13 13.5 13 14.5C13 15.5 11.8401 16.939 10.4957 16.5C9.15134 16.061 8.58665 14.3415 7.4957 14C6.21272 13.5984 5.05843 14.6168 5.5 15.5C5.94157 16.3832 7.10688 17.6006 8.4957 19C9.74229 20.2561 11.9957 21.5 14.9957 20C17.9957 18.5 18.5 16.2498 18.5 13C18.5 11.5 13.7332 5.36875 11.9957 4.5C10.9957 4 10 5 10.9957 6.5C11.614 7.43149 13.5 9.27705 14 10.3751M15.5 8C15.5 8 15.3707 7.5 14.9957 6C14.4957 4 15.9957 3.5 16.4957 4.5C17.1281 5.76491 18.2872 10.9147 18.4957 13\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), OlistIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"olist\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10 7.5H19M10 12.5H19M10 17.5H19M5 18.5H7.5L7 17.5L7.5 16.5H5M5 6.5H6.5V8.5M5 8.5H6.5M6.5 8.5H8M8 13.5H6L7 11.5H5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), OverageIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"overage\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M18.5 11V6.5H14\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.5 18.5L9 16L12 13L18.5 6.5M3 13.5H22\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), PackageIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"package\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 13V22M12.5 13L4.5 8M12.5 13L20.5 8M8.5 5.5L16.5 10.5M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), PanelLeftIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"panel-left\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 6.5H19.5V18.5H10.5M10.5 6.5H5.5V18.5H10.5M10.5 6.5V18.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), PanelRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"panel-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M14.5 6.5H19.5V18.5H14.5M14.5 6.5H5.5V18.5H14.5M14.5 6.5V18.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), PauseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"pause\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M10.5 7.5H8.5V17.5H10.5V7.5Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M16.5 7.5H14.5V17.5H16.5V7.5Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M10.5 7.5H8.5V17.5H10.5V7.5Z\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M16.5 7.5H14.5V17.5H16.5V7.5Z\", stroke: \"currentColor\", strokeWidth: 1.2 })\n      ]\n    }\n  );\n}), PinIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"pin\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 14 15.5 17.5 12.5 20.5C9.5 17.5 6.5 14 6.5 10.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 10.5C14 11.3284 13.3284 12 12.5 12C11.6716 12 11 11.3284 11 10.5C11 9.67157 11.6716 9 12.5 9C13.3284 9 14 9.67157 14 10.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), PinRemovedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"pin-removed\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.39787 14C8.51075 16.2897 10.5054 18.5054 12.5 20.5C14.4946 18.5054 16.4892 16.2897 17.6021 14M6.52009 11C6.50681 10.8334 6.5 10.6667 6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 10.6667 18.4932 10.8334 18.4799 11M3 12.5H22\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), PlayIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"play\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 18.5V6.5L17.5 12.5L7.5 18.5Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), PlugIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"plug\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M13.25 8.5L16.75 5M16.25 11.5L19.75 8M9.25 15.5L5.25 19.5M7.75 14L9.75 12C8.25 10 8.75 9 9.75 8C10.15 7.6 11.25 6.5 11.25 6.5L18.25 13.5C18.25 13.5 17.3825 14.3675 16.75 15C15.75 16 14.75 16.5 12.75 15L10.75 17L7.75 14Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), PresentationIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"presentation\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 18H5.5V8.5H19.5V18H14.5M10.5 18L9 22M10.5 18H14.5M14.5 18L16 22M4.5 8.5H20.5V6.5H4.5V8.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ProjectsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"projects\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M21 17.5H14M17.5 14V21M4.5 14.5H10.5V20.5H4.5V14.5ZM14.5 4.5H20.5V10.5H14.5V4.5ZM4.5 4.5H10.5V10.5H4.5V4.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), PublishIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"publish\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.99997 5.50006H20M12.5 9.00005V20\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.5 14L12.5 9.00006L17.5 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), ReadOnlyIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"read-only\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15 7L18 10M10 12L7 15L6 19L10 18L13 15M12 10L17 5L20 8L15 13M19 19L5 5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), RedoIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"redo\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 13.5L19 9.5L15 5.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), RefreshIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"refresh\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19.5 13.5C19.5 17.366 16.366 20.5 12.5 20.5C8.63401 20.5 5.5 17.366 5.5 13.5C5.5 9.63401 8.63401 6.5 12.5 6.5H15.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 10.5L15.5 6.5L11.5 2.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), RemoveCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"remove-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 12.4H17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), RemoveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"remove\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M5 12.5H20\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n    }\n  );\n}), ResetIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"reset\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M4.56189 13.5L4.14285 13.9294C4.25676 14.0406 4.41017 14.1019 4.56932 14.1C4.72847 14.098 4.88032 14.0329 4.99144 13.9189L4.56189 13.5ZM9.92427 15.9243L15.9243 9.92427L15.0757 9.07574L9.07574 15.0757L9.92427 15.9243ZM9.07574 9.92426L15.0757 15.9243L15.9243 15.0757L9.92426 9.07574L9.07574 9.92426ZM19.9 12.5C19.9 16.5869 16.5869 19.9 12.5 19.9V21.1C17.2496 21.1 21.1 17.2496 21.1 12.5H19.9ZM5.1 12.5C5.1 8.41309 8.41309 5.1 12.5 5.1V3.9C7.75035 3.9 3.9 7.75035 3.9 12.5H5.1ZM12.5 5.1C16.5869 5.1 19.9 8.41309 19.9 12.5H21.1C21.1 7.75035 17.2496 3.9 12.5 3.9V5.1ZM5.15728 13.4258C5.1195 13.1227 5.1 12.8138 5.1 12.5H3.9C3.9 12.8635 3.92259 13.2221 3.9665 13.5742L5.15728 13.4258ZM12.5 19.9C9.9571 19.9 7.71347 18.6179 6.38048 16.6621L5.38888 17.3379C6.93584 19.6076 9.54355 21.1 12.5 21.1V19.9ZM4.99144 13.9189L7.42955 11.4189L6.57045 10.5811L4.13235 13.0811L4.99144 13.9189ZM4.98094 13.0706L2.41905 10.5706L1.58095 11.4294L4.14285 13.9294L4.98094 13.0706Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), RestoreIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"restore\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5.88468 17C7.32466 19.1128 9.75033 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5V13.5M12.5 8V12.5L15.5 15.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 11L4.5 13.5L2 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), RetrieveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"retrieve\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 14L12.5 10.5L9 14M5.5 7.5H19.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 10.5L12.5 17.5M19.5 7.5V19.5H5.5V7.5L7.5 5.5H17.5L19.5 7.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), RetryIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"retry\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 13.5L19 9.5L15 5.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), RevertIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"revert\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 13.5L6 9.5L10 5.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), RobotIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"robot\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 15.5V17.5M12.5 8.5V6.5M12.5 6.5C13.3284 6.5 14 5.82843 14 5C14 4.17157 13.3284 3.5 12.5 3.5C11.6716 3.5 11 4.17157 11 5C11 5.82843 11.6716 6.5 12.5 6.5ZM20.5 20.5V19.5C20.5 18.3954 19.6046 17.5 18.5 17.5H6.5C5.39543 17.5 4.5 18.3954 4.5 19.5V20.5H20.5ZM11.5 12C11.5 12.5523 11.0523 13 10.5 13C9.94772 13 9.5 12.5523 9.5 12C9.5 11.4477 9.94772 11 10.5 11C11.0523 11 11.5 11.4477 11.5 12ZM15.5 12C15.5 12.5523 15.0523 13 14.5 13C13.9477 13 13.5 12.5523 13.5 12C13.5 11.4477 13.9477 11 14.5 11C15.0523 11 15.5 11.4477 15.5 12ZM8.5 15.5H16.5C17.6046 15.5 18.5 14.6046 18.5 13.5V10.5C18.5 9.39543 17.6046 8.5 16.5 8.5H8.5C7.39543 8.5 6.5 9.39543 6.5 10.5V13.5C6.5 14.6046 7.39543 15.5 8.5 15.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), RocketIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"rocket\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 20.5L15.5 14M11 9.49999L4.5 12.5M9 14C9 14 7.54688 14.9531 6.5 16C5.5 17 4.5 20.5 4.5 20.5C4.5 20.5 8 19.5 9 18.5C10 17.5 11 16 11 16M9 14C9 14 10.1 9.9 12.5 7.5C15.5 4.5 20.5 4.5 20.5 4.5C20.5 4.5 20.5 9.5 17.5 12.5C15.7492 14.2508 11 16 11 16L9 14ZM16.5 9.99999C16.5 10.8284 15.8284 11.5 15 11.5C14.1716 11.5 13.5 10.8284 13.5 9.99999C13.5 9.17157 14.1716 8.49999 15 8.49999C15.8284 8.49999 16.5 9.17157 16.5 9.99999Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SchemaIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"schema\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 9.5V12.5M12.5 12.5H8.5V15.5M12.5 12.5H16.5V15.5M10.5 5.5H14.5V9.5H10.5V5.5ZM6.5 15.5H10.5V19.5H6.5V15.5ZM14.5 15.5H18.5V19.5H14.5V15.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SearchIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"search\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15.0355 15.0355L20 20M16.5 11.5C16.5 14.2614 14.2614 16.5 11.5 16.5C8.73858 16.5 6.5 14.2614 6.5 11.5C6.5 8.73858 8.73858 6.5 11.5 6.5C14.2614 6.5 16.5 8.73858 16.5 11.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SelectIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"select\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M16.5 15.5L12.5 19.5L8.5 15.5M8.5 9.5L12.5 5.5L16.5 9.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ShareIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"share\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 10.5H18.5V19.5H6.5L6.5 10.5H10M12.5 16V3.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M9 7L12.5 3.5L16 7\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n}), SortIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sort\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 18.5V6M16.5 19V6.5M12 15L8.5 18.5L5 15M13 10L16.5 6.5L20 10\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SparkleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sparkle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 10.5C8.5 12.5 5 12.5 5 12.5C5 12.5 8.5 12.5 10.5 14.5C12.5 16.5 12.5 20 12.5 20C12.5 20 12.5 16.5 14.5 14.5C16.5 12.5 20 12.5 20 12.5C20 12.5 16.5 12.5 14.5 10.5C12.5 8.5 12.5 5 12.5 5C12.5 5 12.5 8.5 10.5 10.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SparklesIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sparkles\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 3.5V5M11 5V6.5M11 5H12.5M11 5H9.5M9.5 15C9.5 15 12.2308 14.7692 13.5 13.5C14.7692 12.2308 15 9.5 15 9.5C15 9.5 15.2308 12.2308 16.5 13.5C17.7692 14.7692 20.5 15 20.5 15C20.5 15 17.7692 15.2308 16.5 16.5C15.2308 17.7692 15 20.5 15 20.5C15 20.5 14.7692 17.7692 13.5 16.5C12.2308 15.2308 9.5 15 9.5 15ZM4.5 10C4.5 10 5.72308 9.87692 6.3 9.3C6.87692 8.72308 7 7.5 7 7.5C7 7.5 7.12308 8.72308 7.7 9.3C8.27692 9.87692 9.5 10 9.5 10C9.5 10 8.27692 10.1231 7.7 10.7C7.12308 11.2769 7 12.5 7 12.5C7 12.5 6.87692 11.2769 6.3 10.7C5.72308 10.1231 4.5 10 4.5 10Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SpinnerIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"spinner\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SplitHorizontalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"split-horizontal\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M19.5 10.5V20.5H5.5V10.5M19.5 10.5H5.5M19.5 10.5V4.5H5.5V10.5M12.5 13V15.5M12.5 18V15.5M12.5 15.5H15M12.5 15.5H10\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SplitVerticalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"split-vertical\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 5.5V19.5M13 12.5H15.5M18 12.5H15.5M15.5 12.5V15M15.5 12.5V10M4.5 5.5H20.5V19.5H4.5V5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SquareIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"square\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"rect\",\n        {\n          x: 5.5,\n          y: 5.5,\n          width: 14,\n          height: 14,\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), StackCompactIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"stack-compact\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 15.5V18.5H19.5V15.5M5.5 15.5H19.5M5.5 15.5V9.5M19.5 15.5V9.5M5.5 9.5V6.5H19.5V9.5M5.5 9.5H19.5M5.5 12.5H19.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), StackIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"stack\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 12.5H19.5M5.5 18.5H19.5V6.5H5.5V18.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), StarIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"star\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M13 4L15.2747 9.8691L21.5595 10.2188L16.6806 14.1959L18.2901 20.2812L13 16.87L7.70993 20.2812L9.31941 14.1959L4.44049 10.2188L10.7253 9.8691L13 4Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), StopIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"stop\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"rect\",\n        {\n          x: 7.5,\n          y: 7.5,\n          width: 10,\n          height: 10,\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), StrikethroughIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"strikethrough\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5656 7.73438C11.0656 7.73438 10.0734 8.48438 10.0734 9.625C10.0734 10.2317 10.3649 10.6613 11.0519 11H8.90358C8.71703 10.6199 8.62813 10.1801 8.62813 9.67188C8.62813 7.75781 10.2297 6.46094 12.6125 6.46094C14.7922 6.46094 16.4172 7.75781 16.5344 9.57812H15.1203C14.925 8.42188 13.9719 7.73438 12.5656 7.73438Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.4875 18.2656C10.0969 18.2656 8.44844 17 8.3 15.0547H9.72188C9.89375 16.2344 11.0188 16.9844 12.6203 16.9844C14.1359 16.9844 15.2531 16.1641 15.2531 15.0469C15.2531 14.6375 15.1255 14.292 14.8589 14H16.5912C16.6638 14.266 16.6984 14.5566 16.6984 14.875C16.6984 16.9453 15.0656 18.2656 12.4875 18.2656Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M7 13.1H18V11.9H7V13.1Z\", fill: \"currentColor\" })\n      ]\n    }\n  );\n}), StringIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"string\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.6748 15.5227H13.1855L9.87842 6.36304H8.34863L5.0415 15.5227H6.50146L7.3457 13.0916H10.8369L11.6748 15.5227ZM9.04053 8.02612H9.14844L10.4751 11.8982H7.70752L9.04053 8.02612Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.8101 14.488C16.0674 14.488 15.5278 14.1262 15.5278 13.5042C15.5278 12.8948 15.9595 12.571 16.9116 12.5076L18.6001 12.3997V12.9773C18.6001 13.8342 17.8384 14.488 16.8101 14.488ZM16.4609 15.637C17.3687 15.637 18.124 15.2434 18.5366 14.5515H18.6445V15.5227H19.9585V10.8C19.9585 9.34009 18.981 8.47681 17.248 8.47681C15.6802 8.47681 14.563 9.23853 14.4233 10.4255H15.7437C15.896 9.93677 16.4229 9.65747 17.1846 9.65747C18.1177 9.65747 18.6001 10.0701 18.6001 10.8V11.3967L16.7275 11.5046C15.0835 11.6062 14.1567 12.3235 14.1567 13.5676C14.1567 14.8308 15.1279 15.637 16.4609 15.637Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M19.9585 18.637L5.0415 18.637V17.437L19.9585 17.437V18.637Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}), SunIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sun\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M19 12.5H22M3 12.5H6M12.5 6V3M12.5 22V19M17.3891 7.61091L19.5104 5.48959M5.48959 19.5104L7.61091 17.3891M7.61091 7.61091L5.48959 5.48959M19.5104 19.5104L17.3891 17.3891M16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), SyncIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sync\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13.5 4.5H12.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 15.6631 6.33576 18.3975 9 19.6958M11.5 20.5H12.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 9.33688 18.6642 6.60253 16 5.30423\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), TabletDeviceIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"tablet-device\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5.5 5.5C5.5 4.94772 5.94772 4.5 6.5 4.5H18.5C19.0523 4.5 19.5 4.94772 19.5 5.5V19.5C19.5 20.0523 19.0523 20.5 18.5 20.5H6.5C5.94772 20.5 5.5 20.0523 5.5 19.5V5.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13 18C13 18.2761 12.7761 18.5 12.5 18.5C12.2239 18.5 12 18.2761 12 18C12 17.7239 12.2239 17.5 12.5 17.5C12.7761 17.5 13 17.7239 13 18Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), TagIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"tag\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 20L5 20L5 12.5L12.5 5L20 12.5L12.5 20Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11 15.5C11 16.3284 10.3284 17 9.5 17C8.67157 17 8 16.3284 8 15.5C8 14.6716 8.67157 14 9.5 14C10.3284 14 11 14.6716 11 15.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), TagsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"tags\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.1562 7.93179L13.9717 6.11633L20.3553 12.5L13.9717 18.8836L10.6855 18.8836M11.0283 18.8836L17.4119 12.5L11.0283 6.11633L4.64462 12.5L4.64462 18.8836L11.0283 18.8836ZM9.75153 15.0534C9.75153 15.7585 9.17992 16.3302 8.47481 16.3302C7.76969 16.3302 7.19808 15.7585 7.19808 15.0534C7.19808 14.3483 7.76969 13.7767 8.47481 13.7767C9.17992 13.7767 9.75153 14.3483 9.75153 15.0534Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TaskIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"task\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.88281 10.75V19.75H20.8828V10.75M4.88281 10.75V5.75H20.8828V10.75M4.88281 10.75H12.8828H20.8828M17.8828 8.25V3.25M7.88281 8.25V3.25\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10.083 14.7358L12.083 16.7358L15.683 13.1758\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), TerminalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"terminal\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 9.5L11.5 12.5L8.5 15.5M13 15.5H17M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TextIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"text\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 9V6.5H17.5V9M12.5 18.5V6.5M10 18.5H15\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ThLargeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"th-large\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 6.5V12.5M12.5 12.5V18.5M12.5 12.5H20.5M12.5 12.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ThListIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"th-list\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 6.5V10.5M9.5 10.5V14.5M9.5 10.5H20.5M9.5 10.5H4.5M9.5 14.5V18.5M9.5 14.5H20.5M9.5 14.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TiersIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"tiers\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M16.5 14.5L20.5 16.5L12.5 20.5L4.5 16.5L8.5 14.5M16.5 10.5L20.5 12.5L12.5 16.5L4.5 12.5L8.5 10.5M12.5 12.5L20.5 8.5L12.5 4.5L4.5 8.5L12.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), ToggleArrowRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"toggle-arrow-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10 16.5V8.5L16 12.5L10 16.5Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TokenIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"token\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17.5711 12.5C17.5711 15.2614 15.3325 17.5 12.5711 17.5M7.57107 12.5C7.57107 9.73858 9.80964 7.5 12.5711 7.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TransferIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"transfer\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19.5 16.5H6M5.5 8.5L19 8.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 13L19.5 16.5L16 20M9 12L5.5 8.5L9 5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), TranslateIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"translate\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M9.4 5.4H4V6.6H13.2189C13.1612 6.78478 13.0895 6.99578 13.0025 7.22211C12.7032 8.00031 12.2402 8.91125 11.5757 9.57574L10 11.1515L9.42426 10.5757C8.72102 9.8725 8.25297 9.16987 7.96199 8.64611C7.81668 8.38455 7.71617 8.16874 7.65305 8.02146C7.62151 7.94787 7.59937 7.89154 7.5857 7.85534C7.57886 7.83725 7.57415 7.8242 7.57144 7.81657L7.56886 7.80922C7.56886 7.80922 7.56921 7.81026 7 8C6.43079 8.18974 6.43091 8.19009 6.43091 8.19009L6.43133 8.19135L6.43206 8.19351L6.4341 8.19948L6.44052 8.21786C6.44587 8.23292 6.45336 8.25357 6.46313 8.27942C6.48266 8.33112 6.5113 8.40369 6.55008 8.49416C6.62758 8.67501 6.74582 8.92795 6.91301 9.22889C7.24703 9.83013 7.77898 10.6275 8.57574 11.4243L9.15147 12L4.57964 16.5718L4.57655 16.5749L4.57577 16.5757L5.4243 17.4242L5.42688 17.4216L10.0368 12.8117L12.6159 14.9609L13.3841 14.0391L10.8888 11.9597L12.4243 10.4243C13.2598 9.58875 13.7968 8.49969 14.1225 7.65289C14.2818 7.23863 14.395 6.87072 14.4696 6.6H16V5.4H10.6V4H9.4V5.4ZM17.4405 10L21.553 19.7672H20.2509L19.1279 17.1H14.8721L13.7491 19.7672H12.447L16.5595 10H17.4405ZM15.3773 15.9H18.6227L17 12.0462L15.3773 15.9Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), TrashIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"trash\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5 6.5H20M10 6.5V4.5C10 3.94772 10.4477 3.5 11 3.5H14C14.5523 3.5 15 3.94772 15 4.5V6.5M12.5 9V17M15.5 9L15 17M9.5 9L10 17M18.5 6.5L17.571 18.5767C17.5309 19.0977 17.0965 19.5 16.574 19.5H8.42603C7.90349 19.5 7.46905 19.0977 7.42898 18.5767L6.5 6.5H18.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TrendUpwardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"trend-upward\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.5 18.5L11.5 10.5L13.5 14.5L20.5 6.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M20.5 11V6.5H16\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n}), TriangleOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"triangle-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M20.5 18.5H4.5L12.5 5.5L20.5 18.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TrolleyIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"trolley\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 17.5L5.81763 6.26772C5.71013 5.81757 5.30779 5.5 4.84498 5.5H3M8 17.5H17M8 17.5C8.82843 17.5 9.5 18.1716 9.5 19C9.5 19.8284 8.82843 20.5 8 20.5C7.17157 20.5 6.5 19.8284 6.5 19C6.5 18.1716 7.17157 17.5 8 17.5ZM17 17.5C17.8284 17.5 18.5 18.1716 18.5 19C18.5 19.8284 17.8284 20.5 17 20.5C16.1716 20.5 15.5 19.8284 15.5 19C15.5 18.1716 16.1716 17.5 17 17.5ZM7.78357 14.5H17.5L19 7.5H6\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TruncateIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"truncate\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5 12.5H20M8.5 19.5L12.5 15.5L16.5 19.5M16.5 5.5L12.5 9.5L8.5 5.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), TwitterIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"twitter\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.8738 6.65751C18.1994 5.9447 17.2445 5.5 16.1857 5.5C14.1423 5.5 12.4857 7.15655 12.4857 9.2C12.4857 9.55263 12.535 9.89374 12.6272 10.2168C7.0826 9.56422 4.55703 6.02857 4.55703 6.02857C4.55703 6.02857 4.02846 9.2 6.14274 11.3143C5.08571 11.3143 4.55703 10.7857 4.55703 10.7857C4.55703 10.7857 4.55703 13.4286 7.19989 14.4857C6.67143 15.0143 5.61417 14.4857 5.61417 14.4857C5.97533 15.9303 7.45606 16.8562 8.82133 17.1358C6.67298 19.1676 3.5 18.7143 3.5 18.7143C5.14562 19.771 7.21334 20.3 9.31429 20.3C16.1214 20.3 19.8162 15.6315 19.8848 9.37762C20.8722 8.58943 22 7.08571 22 7.08571C22 7.08571 21.277 7.45458 19.6913 7.98315C21.277 6.92601 21.4714 5.5 21.4714 5.5C21.4714 5.5 20.4135 6.55789 18.8738 6.65751Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), UlistIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ulist\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.10153 17.5001C7.10153 17.8323 6.83221 18.1016 6.5 18.1016C6.16778 18.1016 5.89847 17.8323 5.89847 17.5001C5.89847 17.1678 6.16778 16.8985 6.5 16.8985C6.83221 16.8985 7.10153 17.1678 7.10153 17.5001Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.10153 7.5C7.10153 7.83221 6.83221 8.10153 6.5 8.10153C6.16778 8.10153 5.89847 7.83221 5.89847 7.5C5.89847 7.16778 6.16778 6.89847 6.5 6.89847C6.83221 6.89847 7.10153 7.16778 7.10153 7.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.10153 12.5C7.10153 12.8322 6.83221 13.1015 6.5 13.1015C6.16778 13.1015 5.89847 12.8322 5.89847 12.5C5.89847 12.1678 6.16778 11.8985 6.5 11.8985C6.83221 11.8985 7.10153 12.1678 7.10153 12.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 7.5H19M10 17.5H19M10 12.5H19\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), UnderlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"underline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.52791 7.11407H8.17V14.2582C8.17 16.5817 9.79195 18.2565 12.4927 18.2565C15.1934 18.2565 16.8154 16.5817 16.8154 14.2582V7.11407H15.4574V14.1677C15.4574 15.8122 14.3787 17.0042 12.4927 17.0042C10.6067 17.0042 9.52791 15.8122 9.52791 14.1677V7.11407Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M7 20.5H18\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n}), UndoIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"undo\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 13.5L6 9.5L10 5.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), UnknownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unknown\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M5.5 5.5H19.5V19.5H5.5V5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), UnlinkIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unlink\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15 13.5L17.5 11C18.281 10.219 18.281 8.78105 17.5 8L17 7.5C16.2189 6.71895 14.781 6.71895 14 7.5L11.5 10M10 11.5L7.5 14C6.71896 14.781 6.71895 16.219 7.5 17L8 17.5C8.78105 18.281 10.2189 18.281 11 17.5L13.5 15M9.5 8V5M8 9.5H5M17 15.5H20M15.5 17V20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), UnlockIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unlock\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 11.5V8.5C9.5 6.5 8 5.5 6.5 5.5C5 5.5 3.5 6.5 3.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), UnpublishIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unpublish\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5 19.5H20M12.5 16V5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17.5 11L12.5 16L7.5 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), UploadIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"upload\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 6.00003V15.5M5.5 15.5H19.5V19.5H5.5V15.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.5 11L12.5 6.00003L17.5 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}), UserIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"user\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 14.5C7 15 5.5 16 5.5 19.5H19.5C19.5 16 18.3416 15.1708 17 14.5C16 14 14 14 14 12.5C14 11 15 10.25 15 8.25C15 6.25 14 5.25 12.5 5.25C11 5.25 10 6.25 10 8.25C10 10.25 11 11 11 12.5C11 14 9 14 8 14.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), UsersIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"users\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17.5 18.5H21.5C21.5 15 20.8416 14.1708 19.5 13.5C18.5 13 16.5 12.5 16.5 11C16.5 9.5 17.5 9 17.5 7C17.5 5 16.5 4 15 4C13.6628 4 12.723 4.79472 12.5347 6.38415M4.5 20.5C4.5 17 5.5 16 6.5 15.5C7.5 15 9.5 14.5 9.5 13C9.5 11.5 8.5 11 8.5 9C8.5 7 9.5 6 11 6C12.5 6 13.5 7 13.5 9C13.5 11 12.5 11.5 12.5 13C12.5 14.5 14.5 15 15.5 15.5C16.8416 16.1708 17.5 17 17.5 20.5H4.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), WarningFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"warning-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M14.741 5.12637C13.7357 3.41737 11.2643 3.41737 10.259 5.12637L3.7558 16.1818C2.73624 17.915 3.98595 20.1 5.99683 20.1H19.0032C21.014 20.1 22.2637 17.915 21.2442 16.1818L14.741 5.12637ZM11.9 9V13H13.1V9H11.9ZM13.1 16V14.5H11.9V16H13.1Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), WarningOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"warning-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 9V13M12.5 16V14.5M14.2239 5.43058L20.727 16.486C21.5113 17.8192 20.55 19.5 19.0032 19.5H5.99683C4.45 19.5 3.48869 17.8192 4.27297 16.486L10.7761 5.43058C11.5494 4.11596 13.4506 4.11596 14.2239 5.43058Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}), WrenchIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"wrench\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17.0407 5.14624L17.4649 5.57051C17.6166 5.41887 17.6757 5.19783 17.6202 4.99071C17.5646 4.78359 17.4027 4.62189 17.1955 4.56656L17.0407 5.14624ZM14.4013 7.7856L13.977 7.36134C13.8288 7.50959 13.7687 7.72447 13.8185 7.92813L14.4013 7.7856ZM12.8778 6.26211L12.4535 5.83784V5.83784L12.8778 6.26211ZM11.8309 10.6568L12.2552 11.0811C12.4152 10.9211 12.4716 10.6847 12.401 10.4697L11.8309 10.6568ZM5.63925 16.8485L5.21498 16.4242H5.21498L5.63925 16.8485ZM5.63925 19.935L6.06351 19.5108H6.06351L5.63925 19.935ZM8.72581 19.935L9.15007 20.3593L8.72581 19.935ZM15.1184 13.5425L15.2301 12.953C15.0351 12.916 14.8344 12.9779 14.6941 13.1182L15.1184 13.5425ZM18.9718 12.3561L19.3961 12.7804L18.9718 12.3561ZM20.0877 8.19324L20.6674 8.03843C20.612 7.83125 20.4503 7.66934 20.2432 7.61375C20.0361 7.55816 19.815 7.61734 19.6634 7.76898L20.0877 8.19324ZM17.4483 10.8326L17.3058 11.4154C17.5094 11.4652 17.7243 11.4051 17.8726 11.2569L17.4483 10.8326ZM15 10.2339L14.4172 10.3764C14.4704 10.5938 14.6401 10.7635 14.8575 10.8167L15 10.2339ZM16.6164 4.72198L13.977 7.36134L14.8256 8.20986L17.4649 5.57051L16.6164 4.72198ZM13.3021 6.68637C14.2723 5.71612 15.6467 5.39501 16.8859 5.72593L17.1955 4.56656C15.5595 4.12966 13.7389 4.55245 12.4535 5.83784L13.3021 6.68637ZM12.401 10.4697C11.9779 9.18109 12.2794 7.70907 13.3021 6.68637L12.4535 5.83784C11.0985 7.19284 10.7021 9.14218 11.2608 10.844L12.401 10.4697ZM11.4066 10.2326L5.21498 16.4242L6.06351 17.2727L12.2552 11.0811L11.4066 10.2326ZM5.21498 16.4242C4.12834 17.5109 4.12834 19.2727 5.21498 20.3593L6.06351 19.5108C5.4455 18.8928 5.4455 17.8908 6.06351 17.2727L5.21498 16.4242ZM5.21498 20.3593C6.30163 21.446 8.06343 21.446 9.15007 20.3593L8.30155 19.5108C7.68353 20.1288 6.68153 20.1288 6.06351 19.5108L5.21498 20.3593ZM9.15007 20.3593L15.5426 13.9668L14.6941 13.1182L8.30155 19.5108L9.15007 20.3593ZM18.5475 11.9318C17.6463 12.8331 16.3968 13.1742 15.2301 12.953L15.0066 14.132C16.5466 14.4239 18.2023 13.9741 19.3961 12.7804L18.5475 11.9318ZM19.508 8.34804C19.8389 9.58721 19.5178 10.9616 18.5475 11.9318L19.3961 12.7804C20.6815 11.495 21.1043 9.67445 20.6674 8.03843L19.508 8.34804ZM17.8726 11.2569L20.5119 8.6175L19.6634 7.76898L17.024 10.4083L17.8726 11.2569ZM14.8575 10.8167L17.3058 11.4154L17.5908 10.2498L15.1426 9.65106L14.8575 10.8167ZM13.8185 7.92813L14.4172 10.3764L15.5829 10.0914L14.9841 7.64307L13.8185 7.92813Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}), icons = {\n  \"access-denied\": AccessDeniedIcon,\n  activity: ActivityIcon,\n  \"add-circle\": AddCircleIcon,\n  \"add-comment\": AddCommentIcon,\n  \"add-document\": AddDocumentIcon,\n  add: AddIcon,\n  api: ApiIcon,\n  archive: ArchiveIcon,\n  \"arrow-down\": ArrowDownIcon,\n  \"arrow-left\": ArrowLeftIcon,\n  \"arrow-right\": ArrowRightIcon,\n  \"arrow-top-right\": ArrowTopRightIcon,\n  \"arrow-up\": ArrowUpIcon,\n  asterisk: AsteriskIcon,\n  \"bar-chart\": BarChartIcon,\n  basket: BasketIcon,\n  bell: BellIcon,\n  bill: BillIcon,\n  \"binary-document\": BinaryDocumentIcon,\n  \"block-content\": BlockContentIcon,\n  \"block-element\": BlockElementIcon,\n  blockquote: BlockquoteIcon,\n  bold: BoldIcon,\n  bolt: BoltIcon,\n  book: BookIcon,\n  bottle: BottleIcon,\n  \"bulb-filled\": BulbFilledIcon,\n  \"bulb-outline\": BulbOutlineIcon,\n  calendar: CalendarIcon,\n  case: CaseIcon,\n  \"chart-upward\": ChartUpwardIcon,\n  \"checkmark-circle\": CheckmarkCircleIcon,\n  checkmark: CheckmarkIcon,\n  \"chevron-down\": ChevronDownIcon,\n  \"chevron-left\": ChevronLeftIcon,\n  \"chevron-right\": ChevronRightIcon,\n  \"chevron-up\": ChevronUpIcon,\n  circle: CircleIcon,\n  clipboard: ClipboardIcon,\n  \"clipboard-image\": ClipboardImageIcon,\n  clock: ClockIcon,\n  \"close-circle\": CloseCircleIcon,\n  close: CloseIcon,\n  \"code-block\": CodeBlockIcon,\n  code: CodeIcon,\n  cog: CogIcon,\n  collapse: CollapseIcon,\n  \"color-wheel\": ColorWheelIcon,\n  comment: CommentIcon,\n  component: ComponentIcon,\n  compose: ComposeIcon,\n  confetti: ConfettiIcon,\n  controls: ControlsIcon,\n  copy: CopyIcon,\n  \"credit-card\": CreditCardIcon,\n  crop: CropIcon,\n  cube: CubeIcon,\n  dashboard: DashboardIcon,\n  database: DatabaseIcon,\n  desktop: DesktopIcon,\n  diamond: DiamondIcon,\n  document: DocumentIcon,\n  \"document-pdf\": DocumentPdfIcon,\n  \"document-remove\": DocumentRemoveIcon,\n  \"document-sheet\": DocumentSheetIcon,\n  \"document-text\": DocumentTextIcon,\n  \"document-video\": DocumentVideoIcon,\n  \"document-word\": DocumentWordIcon,\n  \"document-zip\": DocumentZipIcon,\n  documents: DocumentsIcon,\n  dot: DotIcon,\n  \"double-chevron-down\": DoubleChevronDownIcon,\n  \"double-chevron-left\": DoubleChevronLeftIcon,\n  \"double-chevron-right\": DoubleChevronRightIcon,\n  \"double-chevron-up\": DoubleChevronUpIcon,\n  download: DownloadIcon,\n  \"drag-handle\": DragHandleIcon,\n  drop: DropIcon,\n  \"earth-americas\": EarthAmericasIcon,\n  \"earth-globe\": EarthGlobeIcon,\n  edit: EditIcon,\n  \"ellipsis-horizontal\": EllipsisHorizontalIcon,\n  \"ellipsis-vertical\": EllipsisVerticalIcon,\n  enter: EnterIcon,\n  \"enter-right\": EnterRightIcon,\n  envelope: EnvelopeIcon,\n  equal: EqualIcon,\n  \"error-filled\": ErrorFilledIcon,\n  \"error-outline\": ErrorOutlineIcon,\n  expand: ExpandIcon,\n  \"eye-closed\": EyeClosedIcon,\n  \"eye-open\": EyeOpenIcon,\n  filter: FilterIcon,\n  folder: FolderIcon,\n  generate: GenerateIcon,\n  groq: GroqIcon,\n  hash: HashIcon,\n  \"heart-filled\": HeartFilledIcon,\n  heart: HeartIcon,\n  \"help-circle\": HelpCircleIcon,\n  highlight: HighlightIcon,\n  home: HomeIcon,\n  \"ice-cream\": IceCreamIcon,\n  image: ImageIcon,\n  \"image-remove\": ImageRemoveIcon,\n  images: ImagesIcon,\n  \"info-filled\": InfoFilledIcon,\n  \"info-outline\": InfoOutlineIcon,\n  \"inline-element\": InlineElementIcon,\n  inline: InlineIcon,\n  \"insert-above\": InsertAboveIcon,\n  \"insert-below\": InsertBelowIcon,\n  italic: ItalicIcon,\n  joystick: JoystickIcon,\n  json: JsonIcon,\n  launch: LaunchIcon,\n  leave: LeaveIcon,\n  lemon: LemonIcon,\n  link: LinkIcon,\n  \"link-removed\": LinkRemovedIcon,\n  lock: LockIcon,\n  \"logo-js\": LogoJsIcon,\n  \"logo-ts\": LogoTsIcon,\n  \"master-detail\": MasterDetailIcon,\n  menu: MenuIcon,\n  \"mobile-device\": MobileDeviceIcon,\n  moon: MoonIcon,\n  number: NumberIcon,\n  \"ok-hand\": OkHandIcon,\n  olist: OlistIcon,\n  overage: OverageIcon,\n  package: PackageIcon,\n  \"panel-left\": PanelLeftIcon,\n  \"panel-right\": PanelRightIcon,\n  pause: PauseIcon,\n  pin: PinIcon,\n  \"pin-removed\": PinRemovedIcon,\n  play: PlayIcon,\n  plug: PlugIcon,\n  presentation: PresentationIcon,\n  projects: ProjectsIcon,\n  publish: PublishIcon,\n  \"read-only\": ReadOnlyIcon,\n  redo: RedoIcon,\n  refresh: RefreshIcon,\n  \"remove-circle\": RemoveCircleIcon,\n  remove: RemoveIcon,\n  reset: ResetIcon,\n  restore: RestoreIcon,\n  retrieve: RetrieveIcon,\n  retry: RetryIcon,\n  revert: RevertIcon,\n  robot: RobotIcon,\n  rocket: RocketIcon,\n  schema: SchemaIcon,\n  search: SearchIcon,\n  select: SelectIcon,\n  share: ShareIcon,\n  sort: SortIcon,\n  sparkle: SparkleIcon,\n  sparkles: SparklesIcon,\n  spinner: SpinnerIcon,\n  \"split-horizontal\": SplitHorizontalIcon,\n  \"split-vertical\": SplitVerticalIcon,\n  square: SquareIcon,\n  \"stack-compact\": StackCompactIcon,\n  stack: StackIcon,\n  star: StarIcon,\n  stop: StopIcon,\n  strikethrough: StrikethroughIcon,\n  string: StringIcon,\n  sun: SunIcon,\n  sync: SyncIcon,\n  \"tablet-device\": TabletDeviceIcon,\n  tag: TagIcon,\n  tags: TagsIcon,\n  task: TaskIcon,\n  terminal: TerminalIcon,\n  text: TextIcon,\n  \"th-large\": ThLargeIcon,\n  \"th-list\": ThListIcon,\n  tiers: TiersIcon,\n  \"toggle-arrow-right\": ToggleArrowRightIcon,\n  token: TokenIcon,\n  transfer: TransferIcon,\n  translate: TranslateIcon,\n  trash: TrashIcon,\n  \"trend-upward\": TrendUpwardIcon,\n  \"triangle-outline\": TriangleOutlineIcon,\n  trolley: TrolleyIcon,\n  truncate: TruncateIcon,\n  twitter: TwitterIcon,\n  ulist: UlistIcon,\n  underline: UnderlineIcon,\n  undo: UndoIcon,\n  unknown: UnknownIcon,\n  unlink: UnlinkIcon,\n  unlock: UnlockIcon,\n  unpublish: UnpublishIcon,\n  upload: UploadIcon,\n  user: UserIcon,\n  users: UsersIcon,\n  \"warning-filled\": WarningFilledIcon,\n  \"warning-outline\": WarningOutlineIcon,\n  wrench: WrenchIcon\n}, Icon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { symbol, ...restProps } = props, IconComponent = icons[symbol];\n  return IconComponent ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, { ...restProps, ref }) : null;\n});\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/icons/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/insert-menu/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@sanity/insert-menu/dist/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InsertMenu: () => (/* binding */ InsertMenu)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/icons */ \"(ssr)/./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var _sanity_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/ui */ \"(ssr)/./node_modules/@sanity/ui/dist/index.mjs\");\n/* harmony import */ var lodash_startcase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.startcase */ \"(ssr)/./node_modules/lodash.startcase/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-is */ \"(ssr)/./node_modules/react-is/index.js\");\n\n\n\n\n\n\nfunction getSchemaTypeIcon(schemaType) {\n  var _a, _b, _c, _d;\n  const referenceIcon = isReferenceSchemaType(schemaType) && ((_a = schemaType.to) != null ? _a : []).length === 1 ? schemaType.to[0].icon : void 0;\n  return (_d = (_c = schemaType.icon) != null ? _c : (_b = schemaType.type) == null ? void 0 : _b.icon) != null ? _d : referenceIcon;\n}\nfunction isReferenceSchemaType(type) {\n  return isRecord(type) && (type.name === \"reference\" || isReferenceSchemaType(type.type));\n}\nfunction isRecord(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction fullInsertMenuReducer(state, event) {\n  return {\n    query: event.type === \"change query\" ? event.query : state.query,\n    groups: event.type === \"select group\" ? state.groups.map((group) => ({ ...group, selected: event.name === group.name })) : state.groups,\n    views: event.type === \"toggle view\" ? state.views.map((view) => ({ ...view, selected: event.name === view.name })) : state.views\n  };\n}\nconst ALL_ITEMS_GROUP_NAME = \"all-items\", gridStyle = {\n  gridTemplateColumns: \"repeat(auto-fill, minmax(118px, 1fr))\"\n};\nfunction InsertMenu(props) {\n  var _a;\n  const showIcons = props.showIcons === void 0 ? !0 : props.showIcons, showFilter = props.filter === void 0 || props.filter === \"auto\" ? props.schemaTypes.length > 5 : props.filter, [state, send] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useReducer)(fullInsertMenuReducer, {\n    query: \"\",\n    groups: props.groups ? [\n      {\n        name: ALL_ITEMS_GROUP_NAME,\n        title: props.labels[\"insert-menu.filter.all-items\"],\n        selected: !0\n      },\n      ...props.groups.map((group) => ({ ...group, selected: !1 }))\n    ] : [],\n    views: ((_a = props.views) != null ? _a : [{ name: \"list\" }]).map((view, index) => ({\n      ...view,\n      selected: index === 0\n    }))\n  }), filteredSchemaTypes = filterSchemaTypes(props.schemaTypes, state.query, state.groups), selectedView = state.views.find((view) => view.selected), showingFilterOrViews = showFilter || state.views.length > 1, showingTabs = state.groups && state.groups.length > 0;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Menu, { padding: 0, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Flex, { direction: \"column\", height: \"fill\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      _sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Box,\n      {\n        ...showingFilterOrViews || showingTabs ? {\n          style: { borderBottom: \"1px solid var(--card-border-color)\" },\n          paddingBottom: 1\n        } : {},\n        children: [\n          showingFilterOrViews ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Flex, { flex: \"none\", align: \"center\", paddingTop: 1, paddingX: 1, gap: 1, children: [\n            showFilter ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n              _sanity_ui__WEBPACK_IMPORTED_MODULE_4__.TextInput,\n              {\n                autoFocus: !0,\n                border: !1,\n                fontSize: 1,\n                icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_5__.SearchIcon,\n                onChange: (event) => {\n                  send({ type: \"change query\", query: event.target.value });\n                },\n                placeholder: props.labels[\"insert-menu.search.placeholder\"],\n                value: state.query\n              }\n            ) }) : null,\n            state.views.length > 1 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Box, { flex: \"none\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n              ViewToggle,\n              {\n                views: state.views,\n                onToggle: (name) => {\n                  send({ type: \"toggle view\", name });\n                },\n                labels: props.labels\n              }\n            ) }) : null\n          ] }) : null,\n          showingTabs ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Box, { paddingTop: 1, paddingX: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.TabList, { space: 1, children: state.groups.map((group) => {\n            var _a2;\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n              _sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Tab,\n              {\n                id: `${group.name}-tab`,\n                \"aria-controls\": `${group.name}-panel`,\n                label: (_a2 = group.title) != null ? _a2 : lodash_startcase__WEBPACK_IMPORTED_MODULE_1__(group.name),\n                selected: group.selected,\n                onClick: () => {\n                  send({ type: \"select group\", name: group.name });\n                }\n              },\n              group.name\n            );\n          }) }) }) : null\n        ]\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Box, { padding: 1, children: filteredSchemaTypes.length === 0 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Box, { padding: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Text, { muted: !0, size: 1, children: props.labels[\"insert-menu.search.no-results\"] }) }) : selectedView ? selectedView.name === \"grid\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Grid, { autoRows: \"auto\", flex: 1, gap: 1, style: gridStyle, children: filteredSchemaTypes.map((schemaType) => {\n      var _a2;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        GridMenuItem,\n        {\n          icon: showIcons ? getSchemaTypeIcon(schemaType) : void 0,\n          onClick: () => {\n            props.onSelect(schemaType);\n          },\n          previewImageUrl: (_a2 = selectedView.previewImageUrl) == null ? void 0 : _a2.call(selectedView, schemaType.name),\n          schemaType\n        },\n        schemaType.name\n      );\n    }) }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Stack, { flex: 1, space: 1, children: filteredSchemaTypes.map((schemaType) => {\n      var _a2;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_4__.MenuItem,\n        {\n          icon: showIcons ? getSchemaTypeIcon(schemaType) : void 0,\n          onClick: () => {\n            props.onSelect(schemaType);\n          },\n          text: (_a2 = schemaType.title) != null ? _a2 : lodash_startcase__WEBPACK_IMPORTED_MODULE_1__(schemaType.name)\n        },\n        schemaType.name\n      );\n    }) }) : null })\n  ] }) });\n}\nconst viewToggleIcon = {\n  grid: _sanity_icons__WEBPACK_IMPORTED_MODULE_5__.ThLargeIcon,\n  list: _sanity_icons__WEBPACK_IMPORTED_MODULE_5__.UlistIcon\n}, viewToggleTooltip = {\n  grid: \"insert-menu.toggle-grid-view.tooltip\",\n  list: \"insert-menu.toggle-list-view.tooltip\"\n};\nfunction ViewToggle(props) {\n  var _a;\n  const viewIndex = props.views.findIndex((view) => view.selected), nextView = (_a = props.views[viewIndex + 1]) != null ? _a : props.views[0];\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    _sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Tooltip,\n    {\n      content: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Text, { size: 1, children: props.labels[viewToggleTooltip[nextView.name]] }),\n      placeholder: \"top\",\n      portal: !0,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Button,\n        {\n          mode: \"bleed\",\n          icon: viewToggleIcon[nextView.name],\n          onClick: () => {\n            props.onToggle(nextView.name);\n          }\n        }\n      )\n    }\n  );\n}\nfunction GridMenuItem(props) {\n  var _a;\n  const [failedToLoad, setFailedToLoad] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.MenuItem, { padding: 0, radius: 2, onClick: props.onClick, style: { overflow: \"hidden\" }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Flex, { direction: \"column\", gap: 1, padding: 1, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      _sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Box,\n      {\n        flex: \"none\",\n        style: {\n          backgroundColor: \"var(--card-muted-bg-color)\",\n          paddingBottom: \"66.6%\",\n          position: \"relative\"\n        },\n        children: [\n          (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(props.icon) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            _sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Flex,\n            {\n              align: \"center\",\n              justify: \"center\",\n              style: {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\"\n              },\n              children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Text, { size: 1, children: (0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(props.icon) })\n            }\n          ) : null,\n          !props.previewImageUrl || failedToLoad ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            \"img\",\n            {\n              src: props.previewImageUrl,\n              style: {\n                objectFit: \"contain\",\n                width: \"100%\",\n                height: \"100%\",\n                position: \"absolute\",\n                inset: 0\n              },\n              onError: () => {\n                setFailedToLoad(!0);\n              }\n            }\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            \"div\",\n            {\n              style: {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\",\n                boxShadow: \"inset 0 0 0 0.5px var(--card-fg-color)\",\n                opacity: 0.1\n              }\n            }\n          )\n        ]\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Box, { flex: 1, padding: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_4__.Text, { size: 1, weight: \"medium\", children: (_a = props.schemaType.title) != null ? _a : props.schemaType.name }) })\n  ] }) });\n}\nfunction filterSchemaTypes(schemaTypes, query, groups) {\n  return schemaTypes.filter(\n    (schemaType) => passesGroupFilter(schemaType, groups) && passesQueryFilter(schemaType, query)\n  );\n}\nfunction passesQueryFilter(schemaType, query) {\n  var _a;\n  const sanitizedQuery = query.trim().toLowerCase();\n  return schemaType.title ? (_a = schemaType.title) == null ? void 0 : _a.toLowerCase().includes(sanitizedQuery) : schemaType.name.includes(sanitizedQuery);\n}\nfunction passesGroupFilter(schemaType, groups) {\n  var _a;\n  const selectedGroup = groups.find((group) => group.selected);\n  return selectedGroup ? selectedGroup.name === ALL_ITEMS_GROUP_NAME ? !0 : (_a = selectedGroup.of) == null ? void 0 : _a.includes(schemaType.name) : !0;\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/insert-menu/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/logos/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/logos/dist/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroqLogo: () => (/* binding */ GroqLogo),\n/* harmony export */   GroqMonogram: () => (/* binding */ GroqMonogram),\n/* harmony export */   SanityLogo: () => (/* binding */ SanityLogo),\n/* harmony export */   SanityMonogram: () => (/* binding */ SanityMonogram)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _sanity_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sanity/color */ \"(ssr)/./node_modules/@sanity/color/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\n\nconst GroqLogo = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"groq-logo\",\n      height: \"1em\",\n      viewBox: \"0 0 304 64\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ...props,\n      ref,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M32 0L0 32H32V0Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.magenta[400].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M32 32H0L32 64V32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.green[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M64 32H32V64L64 32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.purple[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M112 0L80 32H112V0Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.green[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M112 0H80V32L112 0Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.purple[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M112 32H80L112 64V32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.yellow[200].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M144 64L112 32V64H144Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.blue[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M80 32V64H112L80 32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.orange[400].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M112 0V32H144L112 0Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.magenta[400].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M192 0L160 32H192V0Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.yellow[200].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M192 32H160L192 64V32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.orange[400].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M224 32H192V64L224 32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.green[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M192 0V32H224L192 0Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.blue[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M272 0L240 32H272V0Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.purple[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M304 32L272 64H304V32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.magenta[400].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M272 32H240L272 64V32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.blue[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M304 32H272V64L304 32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.yellow[200].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M272 0V32H304L272 0Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.green[300].hex })\n      ]\n    }\n  );\n}), GroqMonogram = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"groq-monogram\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 128 128\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ...props,\n      ref,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\", { width: \"128\", height: \"128\", rx: \"8\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.green[950].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\", { y: \"32\", width: \"64\", height: \"64\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.green[800].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M64 32L32 64H64V32Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.magenta[400].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M64 64H32L64 96V64Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.green[300].hex }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M96 64H64V96L96 64Z\", fill: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.purple[300].hex })\n      ]\n    }\n  );\n}), schemes = {\n  light: [_sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.red[200].hex, _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.red[300].hex, _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.red[500].hex],\n  dark: [_sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.gray[500].hex, _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.gray[300].hex, _sanity_color__WEBPACK_IMPORTED_MODULE_2__.white.hex]\n}, SanityLogo = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { dark, ...svgProps } = props, scheme = schemes[dark ? \"dark\" : \"light\"];\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sanity-logo\",\n      height: \"1em\",\n      viewBox: \"0 0 352 100\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ...svgProps,\n      ref,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M311.14 57.234V80.0016H298.499V57.234\", fill: scheme[1] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M298.499 57.2341L319.889 20.0017H333.316L311.14 57.2341H298.499Z\", fill: scheme[2] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M298.499 57.2341L276.515 20.0017H290.345L305.239 45.5161L298.499 57.2341Z\",\n            fill: scheme[1]\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M253.839 40.9625V80.0017H241.007V47.6275L253.839 40.9625Z\", fill: scheme[1] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M241.007 47.5944L273.538 30.9469L268.042 21.6519L241.007 34.8633V47.5944Z\",\n            fill: scheme[0]\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M241.007 30.9469H221.404V20.0017H267.064L273.538 30.9469H253.839H241.007Z\",\n            fill: scheme[2]\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M214.047 20.0017H201.311V80.0121H214.047V20.0017Z\", fill: scheme[2] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M149.39 37.8712V80.0017H137.153V20.0017L149.39 37.8712Z\", fill: scheme[1] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M151.282 20.0017L178.231 60.9939V80.0017L137.153 20.0017H151.282Z\",\n            fill: scheme[2]\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M178.231 57.9129V20.0017H190.467V80.0017H178.231V57.9129Z\", fill: scheme[1] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M82.1168 80.9834L112.102 65.3053L108.405 55.7303L88.6644 64.9362L82.1168 80.9834Z\",\n            fill: scheme[0]\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M100.657 35.5422L82.1167 80.9834L72.5807 72.7745L94.6719 20.0017L100.657 35.5422Z\",\n            fill: scheme[1]\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M94.672 20.0017H107.312L130.69 80.0017H117.752L94.672 20.0017Z\", fill: scheme[2] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M25.1347 26.926C25.1347 35.2811 30.3864 40.2524 40.9004 42.8738L52.0417 45.4117C61.9923 47.6571 68.0519 53.2341 68.0519 62.3203C68.1293 66.2787 66.8194 70.1429 64.3417 73.2654C64.3417 64.2002 59.5684 59.302 48.0551 56.3568L37.1158 53.913C28.3559 51.9495 21.5946 47.3647 21.5946 37.4952C21.5485 33.6839 22.7939 29.9658 25.1347 26.926\",\n            fill: scheme[2]\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M57.4954 60.0957C62.2475 63.0827 64.3311 67.2602 64.3311 73.255C60.3977 78.2054 53.4875 80.9834 45.3655 80.9834C31.6941 80.9834 22.1262 74.3725 20 62.8842H33.1292C34.8196 68.1584 39.2952 70.6022 45.2698 70.6022C52.5626 70.6022 57.4104 66.7798 57.506 60.0748\",\n            fill: scheme[1]\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M31.9598 39.3124C29.7898 38.0455 28.0095 36.225 26.8079 34.0442C25.6062 31.8634 25.028 29.4036 25.1347 26.926C28.93 22.0174 35.5318 19.02 43.5794 19.02C57.506 19.02 65.5643 26.2472 67.5523 36.4195H54.9227C53.53 32.409 50.0431 29.2863 43.6858 29.2863C36.8926 29.2863 32.2575 33.1715 31.9917 39.3124\",\n            fill: scheme[1]\n          }\n        )\n      ]\n    }\n  );\n}), SANITY_MONOGRAM_COLOR = {\n  bg1: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.red[500].hex,\n  bg2: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.hues.red[200].hex,\n  fg: _sanity_color__WEBPACK_IMPORTED_MODULE_2__.white.hex\n}, SanityMonogram = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { color = SANITY_MONOGRAM_COLOR, ...restProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sanity-monogram\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 128 128\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ...restProps,\n      ref,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\", { width: \"128\", height: \"128\", rx: \"8\", fill: color.bg1 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M39.423 33.163C39.423 44.1615 46.3363 50.7056 60.1768 54.1564L74.843 57.4972C87.9418 60.453 95.9186 67.7945 95.9186 79.7554C96.0205 84.9662 94.2961 90.0531 91.0345 94.1635C91.0345 82.2301 84.751 75.7822 69.595 71.9052L55.1948 68.6882C43.6633 66.1035 34.7629 60.0681 34.7629 47.0761C34.7022 42.0589 36.3416 37.1644 39.423 33.163\",\n            fill: color.fg\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M82.0221 76.827C88.2776 80.759 91.0206 86.2582 91.0206 94.1497C85.8426 100.666 76.7462 104.323 66.0545 104.323C48.0576 104.323 35.4626 95.6207 32.6637 80.4977H49.9468C52.172 87.4406 58.0636 90.6576 65.9285 90.6576C75.5287 90.6576 81.9102 85.6258 82.0361 76.7995\",\n            fill: color.bg2\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M48.4075 49.4682C45.551 47.8004 43.2074 45.404 41.6256 42.5332C40.0437 39.6624 39.2826 36.4244 39.4231 33.1629C44.4191 26.7013 53.1096 22.7556 63.7034 22.7556C82.0362 22.7556 92.6439 32.2693 95.2609 45.66H78.6355C76.8022 40.3807 72.2121 36.27 63.8434 36.27C54.9009 36.27 48.7993 41.3843 48.4495 49.4682\",\n            fill: color.bg2\n          }\n        )\n      ]\n    }\n  );\n});\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/logos/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/mutator/lib/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@sanity/mutator/lib/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BufferedDocument: () => (/* binding */ BufferedDocument),\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   arrayToJSONMatchPath: () => (/* binding */ arrayToJSONMatchPath),\n/* harmony export */   extract: () => (/* binding */ extract),\n/* harmony export */   extractWithPath: () => (/* binding */ extractWithPath)\n/* harmony export */ });\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEqual.js */ \"(ssr)/./node_modules/lodash/isEqual.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/debug/src/index.js\");\n/* harmony import */ var lodash_flatten_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/flatten.js */ \"(ssr)/./node_modules/lodash/flatten.js\");\n/* harmony import */ var _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/diff-match-patch */ \"(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\");\n/* harmony import */ var lodash_max_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/max.js */ \"(ssr)/./node_modules/lodash/max.js\");\n/* harmony import */ var lodash_min_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/min.js */ \"(ssr)/./node_modules/lodash/min.js\");\n/* harmony import */ var _sanity_uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sanity/uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var lodash_compact_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/compact.js */ \"(ssr)/./node_modules/lodash/compact.js\");\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__(\"mutator-document\");\nvar __defProp$h = Object.defineProperty, __defNormalProp$h = (obj, key, value) => key in obj ? __defProp$h(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$h = (obj, key, value) => __defNormalProp$h(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass ImmutableAccessor {\n  constructor(value, path) {\n    __publicField$h(this, \"_value\"), __publicField$h(this, \"path\"), this._value = value, this.path = path || [];\n  }\n  containerType() {\n    return Array.isArray(this._value) ? \"array\" : this._value !== null && typeof this._value == \"object\" ? \"object\" : \"primitive\";\n  }\n  // Common reader, supported by all containers\n  get() {\n    return this._value;\n  }\n  // Array reader\n  length() {\n    if (!Array.isArray(this._value))\n      throw new Error(\"Won't return length of non-indexable _value\");\n    return this._value.length;\n  }\n  getIndex(i) {\n    return Array.isArray(this._value) ? i >= this.length() ? null : new ImmutableAccessor(this._value[i], this.path.concat(i)) : !1;\n  }\n  // Object reader\n  hasAttribute(key) {\n    return isRecord$1(this._value) ? this._value.hasOwnProperty(key) : !1;\n  }\n  attributeKeys() {\n    return isRecord$1(this._value) ? Object.keys(this._value) : [];\n  }\n  getAttribute(key) {\n    if (!isRecord$1(this._value))\n      throw new Error(\"getAttribute only applies to plain objects\");\n    return this.hasAttribute(key) ? new ImmutableAccessor(this._value[key], this.path.concat(key)) : null;\n  }\n  // Common writer, supported by all containers\n  set(value) {\n    return value === this._value ? this : new ImmutableAccessor(value, this.path);\n  }\n  // array writer interface\n  setIndex(i, value) {\n    if (!Array.isArray(this._value))\n      throw new Error(\"setIndex only applies to arrays\");\n    if (Object.is(value, this._value[i]))\n      return this;\n    const nextValue = this._value.slice();\n    return nextValue[i] = value, new ImmutableAccessor(nextValue, this.path);\n  }\n  setIndexAccessor(i, accessor) {\n    return this.setIndex(i, accessor.get());\n  }\n  unsetIndices(indices) {\n    if (!Array.isArray(this._value))\n      throw new Error(\"unsetIndices only applies to arrays\");\n    const length = this._value.length, nextValue = [];\n    for (let i = 0; i < length; i++)\n      indices.indexOf(i) === -1 && nextValue.push(this._value[i]);\n    return new ImmutableAccessor(nextValue, this.path);\n  }\n  insertItemsAt(pos, items) {\n    if (!Array.isArray(this._value))\n      throw new Error(\"insertItemsAt only applies to arrays\");\n    let nextValue;\n    return this._value.length === 0 && pos === 0 ? nextValue = items : nextValue = this._value.slice(0, pos).concat(items).concat(this._value.slice(pos)), new ImmutableAccessor(nextValue, this.path);\n  }\n  // Object writer interface\n  setAttribute(key, value) {\n    if (!isRecord$1(this._value))\n      throw new Error(\"Unable to set attribute of non-object container\");\n    if (Object.is(value, this._value[key]))\n      return this;\n    const nextValue = Object.assign({}, this._value, { [key]: value });\n    return new ImmutableAccessor(nextValue, this.path);\n  }\n  setAttributeAccessor(key, accessor) {\n    return this.setAttribute(key, accessor.get());\n  }\n  unsetAttribute(key) {\n    if (!isRecord$1(this._value))\n      throw new Error(\"Unable to unset attribute of non-object container\");\n    const nextValue = Object.assign({}, this._value);\n    return delete nextValue[key], new ImmutableAccessor(nextValue, this.path);\n  }\n}\nfunction isRecord$1(value) {\n  return value !== null && typeof value == \"object\";\n}\nfunction isRecord(value) {\n  return value !== null && typeof value == \"object\";\n}\nconst IS_DOTTABLE = /^[a-z_$]+/;\nfunction arrayToJSONMatchPath(pathArray) {\n  let path = \"\";\n  return pathArray.forEach((segment, index) => {\n    path += stringifySegment(segment, index === 0);\n  }), path;\n}\nfunction stringifySegment(segment, hasLeading) {\n  if (typeof segment == \"number\")\n    return `[${segment}]`;\n  if (isRecord(segment)) {\n    const seg = segment;\n    return Object.keys(segment).map((key) => isPrimitiveValue(seg[key]) ? `[${key}==\"${seg[key]}\"]` : \"\").join(\"\");\n  }\n  return typeof segment == \"string\" && IS_DOTTABLE.test(segment) ? hasLeading ? segment : `.${segment}` : `['${segment}']`;\n}\nfunction isPrimitiveValue(val) {\n  switch (typeof val) {\n    case \"number\":\n    case \"string\":\n    case \"boolean\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction descend$1(tail) {\n  const [head, newTail] = splitIfPath(tail);\n  if (!head)\n    throw new Error(\"Head cannot be null\");\n  return spreadIfUnionHead(head, newTail);\n}\nfunction splitIfPath(tail) {\n  if (tail.type !== \"path\")\n    return [tail, null];\n  const nodes = tail.nodes;\n  return nodes.length === 0 ? [null, null] : nodes.length === 1 ? [nodes[0], null] : [nodes[0], { type: \"path\", nodes: nodes.slice(1) }];\n}\nfunction concatPaths(path1, path2) {\n  if (!path1 && !path2)\n    return null;\n  const nodes1 = path1 ? path1.nodes : [], nodes2 = path2 ? path2.nodes : [];\n  return {\n    type: \"path\",\n    nodes: nodes1.concat(nodes2)\n  };\n}\nfunction spreadIfUnionHead(head, tail) {\n  return head.type !== \"union\" ? [[head, tail]] : head.nodes.map((node) => {\n    if (node.type === \"path\") {\n      const [subHead, subTail] = splitIfPath(node);\n      return [subHead, concatPaths(subTail, tail)];\n    }\n    return [node, tail];\n  });\n}\nvar __defProp$g = Object.defineProperty, __defNormalProp$g = (obj, key, value) => key in obj ? __defProp$g(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$g = (obj, key, value) => __defNormalProp$g(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nconst digitChar = /[0-9]/, attributeCharMatcher = /^[a-zA-Z0-9_]$/, attributeFirstCharMatcher = /^[a-zA-Z_]$/, symbols = {\n  // NOTE: These are compared against in order of definition,\n  // thus '==' must come before '=', '>=' before '>', etc.\n  operator: [\"..\", \".\", \",\", \":\", \"?\"],\n  comparator: [\">=\", \"<=\", \"<\", \">\", \"==\", \"!=\"],\n  keyword: [\"$\", \"@\"],\n  boolean: [\"true\", \"false\"],\n  paren: [\"[\", \"]\"]\n}, symbolClasses = Object.keys(symbols);\nclass Tokenizer {\n  constructor(path) {\n    __publicField$g(this, \"source\"), __publicField$g(this, \"i\"), __publicField$g(this, \"length\"), __publicField$g(this, \"tokenizers\"), this.source = path, this.length = path.length, this.i = 0, this.tokenizers = [\n      this.tokenizeSymbol,\n      this.tokenizeIdentifier,\n      this.tokenizeNumber,\n      this.tokenizeQuoted\n    ].map((fn) => fn.bind(this));\n  }\n  tokenize() {\n    const result = [];\n    for (; !this.EOF(); ) {\n      this.chompWhitespace();\n      let token = null;\n      if (!this.tokenizers.some((tokenizer) => (token = tokenizer(), !!token)) || !token)\n        throw new Error(`Invalid tokens in jsonpath '${this.source}' @ ${this.i}`);\n      result.push(token);\n    }\n    return result;\n  }\n  takeWhile(fn) {\n    const start = this.i;\n    let result = \"\";\n    for (; !this.EOF(); ) {\n      const nextChar = fn(this.source[this.i]);\n      if (nextChar === null)\n        break;\n      result += nextChar, this.i++;\n    }\n    return this.i === start ? null : result;\n  }\n  EOF() {\n    return this.i >= this.length;\n  }\n  peek() {\n    return this.EOF() ? null : this.source[this.i];\n  }\n  consume(str) {\n    if (this.i + str.length > this.length)\n      throw new Error(`Expected ${str} at end of jsonpath`);\n    if (str === this.source.slice(this.i, this.i + str.length))\n      this.i += str.length;\n    else\n      throw new Error(`Expected \"${str}\", but source contained \"${this.source.slice()}`);\n  }\n  // Tries to match the upcoming bit of string with the provided string. If it matches, returns\n  // the string, then advances the read pointer to the next bit. If not, returns null and nothing\n  // happens.\n  tryConsume(str) {\n    if (this.i + str.length > this.length)\n      return null;\n    if (str === this.source.slice(this.i, this.i + str.length)) {\n      if (str[0].match(attributeCharMatcher) && this.length > this.i + str.length) {\n        const nextChar = this.source[this.i + str.length];\n        if (nextChar && nextChar.match(attributeCharMatcher))\n          return null;\n      }\n      return this.i += str.length, str;\n    }\n    return null;\n  }\n  chompWhitespace() {\n    this.takeWhile((char) => char === \" \" ? \"\" : null);\n  }\n  tokenizeQuoted() {\n    const quote = this.peek();\n    if (quote === \"'\" || quote === '\"') {\n      this.consume(quote);\n      let escape = !1;\n      const inner = this.takeWhile((char) => escape ? (escape = !1, char) : char === \"\\\\\" ? (escape = !0, \"\") : char != quote ? char : null);\n      return this.consume(quote), {\n        type: \"quoted\",\n        value: inner,\n        quote: quote === '\"' ? \"double\" : \"single\"\n      };\n    }\n    return null;\n  }\n  tokenizeIdentifier() {\n    let first = !0;\n    const identifier = this.takeWhile((char) => first ? (first = !1, char.match(attributeFirstCharMatcher) ? char : null) : char.match(attributeCharMatcher) ? char : null);\n    return identifier !== null ? {\n      type: \"identifier\",\n      name: identifier\n    } : null;\n  }\n  tokenizeNumber() {\n    const start = this.i;\n    let dotSeen = !1, digitSeen = !1, negative = !1;\n    this.peek() === \"-\" && (negative = !0, this.consume(\"-\"));\n    const number = this.takeWhile((char) => char === \".\" && !dotSeen && digitSeen ? (dotSeen = !0, char) : (digitSeen = !0, char.match(digitChar) ? char : null));\n    return number !== null ? {\n      type: \"number\",\n      value: negative ? -number : +number,\n      raw: negative ? `-${number}` : number\n    } : (this.i = start, null);\n  }\n  tokenizeSymbol() {\n    for (const symbolClass of symbolClasses) {\n      const symbol = symbols[symbolClass].find((pattern) => this.tryConsume(pattern));\n      if (symbol)\n        return {\n          type: symbolClass,\n          symbol\n        };\n    }\n    return null;\n  }\n}\nfunction tokenize(jsonpath) {\n  return new Tokenizer(jsonpath).tokenize();\n}\nvar __defProp$f = Object.defineProperty, __defNormalProp$f = (obj, key, value) => key in obj ? __defProp$f(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$f = (obj, key, value) => __defNormalProp$f(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass Parser {\n  constructor(path) {\n    __publicField$f(this, \"tokens\"), __publicField$f(this, \"length\"), __publicField$f(this, \"i\"), this.tokens = tokenize(path), this.length = this.tokens.length, this.i = 0;\n  }\n  parse() {\n    return this.parsePath();\n  }\n  EOF() {\n    return this.i >= this.length;\n  }\n  // Look at upcoming token\n  peek() {\n    return this.EOF() ? null : this.tokens[this.i];\n  }\n  consume() {\n    const result = this.peek();\n    return this.i += 1, result;\n  }\n  // Return next token if it matches the pattern\n  probe(pattern) {\n    const token = this.peek();\n    if (!token)\n      return null;\n    const record = token;\n    return Object.keys(pattern).every((key) => key in token && pattern[key] === record[key]) ? token : null;\n  }\n  // Return and consume next token if it matches the pattern\n  match(pattern) {\n    return this.probe(pattern) ? this.consume() : null;\n  }\n  parseAttribute() {\n    const token = this.match({ type: \"identifier\" });\n    if (token && token.type === \"identifier\")\n      return {\n        type: \"attribute\",\n        name: token.name\n      };\n    const quoted = this.match({ type: \"quoted\", quote: \"single\" });\n    return quoted && quoted.type === \"quoted\" ? {\n      type: \"attribute\",\n      name: quoted.value || \"\"\n    } : null;\n  }\n  parseAlias() {\n    return this.match({ type: \"keyword\", symbol: \"@\" }) || this.match({ type: \"keyword\", symbol: \"$\" }) ? {\n      type: \"alias\",\n      target: \"self\"\n    } : null;\n  }\n  parseNumber() {\n    const token = this.match({ type: \"number\" });\n    return token && token.type === \"number\" ? {\n      type: \"number\",\n      value: token.value\n    } : null;\n  }\n  parseNumberValue() {\n    const expr = this.parseNumber();\n    return expr ? expr.value : null;\n  }\n  parseSliceSelector() {\n    const start = this.i, rangeStart = this.parseNumberValue();\n    if (!this.match({ type: \"operator\", symbol: \":\" }))\n      return rangeStart === null ? (this.i = start, null) : { type: \"index\", value: rangeStart };\n    const result = {\n      type: \"range\",\n      start: rangeStart,\n      end: this.parseNumberValue()\n    };\n    return this.match({ type: \"operator\", symbol: \":\" }) && (result.step = this.parseNumberValue()), result.start === null && result.end === null ? (this.i = start, null) : result;\n  }\n  parseValueReference() {\n    return this.parseAttribute() || this.parseSliceSelector();\n  }\n  parseLiteralValue() {\n    const literalString = this.match({ type: \"quoted\", quote: \"double\" });\n    if (literalString && literalString.type === \"quoted\")\n      return {\n        type: \"string\",\n        value: literalString.value || \"\"\n      };\n    const literalBoolean = this.match({ type: \"boolean\" });\n    return literalBoolean && literalBoolean.type === \"boolean\" ? {\n      type: \"boolean\",\n      value: literalBoolean.symbol === \"true\"\n    } : this.parseNumber();\n  }\n  // TODO: Reorder constraints so that literal value is always on rhs, and variable is always\n  // on lhs.\n  parseFilterExpression() {\n    const start = this.i, expr = this.parseAttribute() || this.parseAlias();\n    if (!expr)\n      return null;\n    if (this.match({ type: \"operator\", symbol: \"?\" }))\n      return {\n        type: \"constraint\",\n        operator: \"?\",\n        lhs: expr\n      };\n    const binOp = this.match({ type: \"comparator\" });\n    if (!binOp || binOp.type !== \"comparator\")\n      return this.i = start, null;\n    const lhs = expr, rhs = this.parseLiteralValue();\n    if (!rhs)\n      throw new Error(`Operator ${binOp.symbol} needs a literal value at the right hand side`);\n    return {\n      type: \"constraint\",\n      operator: binOp.symbol,\n      lhs,\n      rhs\n    };\n  }\n  parseExpression() {\n    return this.parseFilterExpression() || this.parseValueReference();\n  }\n  parseUnion() {\n    if (!this.match({ type: \"paren\", symbol: \"[\" }))\n      return null;\n    const terms = [];\n    let expr = this.parseFilterExpression() || this.parsePath() || this.parseValueReference();\n    for (; expr && (terms.push(expr), !this.match({ type: \"paren\", symbol: \"]\" })); ) {\n      if (!this.match({ type: \"operator\", symbol: \",\" }))\n        throw new Error(\"Expected ]\");\n      if (expr = this.parseFilterExpression() || this.parsePath() || this.parseValueReference(), !expr)\n        throw new Error(\"Expected expression following ','\");\n    }\n    return {\n      type: \"union\",\n      nodes: terms\n    };\n  }\n  parseRecursive() {\n    if (!this.match({ type: \"operator\", symbol: \"..\" }))\n      return null;\n    const subpath = this.parsePath();\n    if (!subpath)\n      throw new Error(\"Expected path following '..' operator\");\n    return {\n      type: \"recursive\",\n      term: subpath\n    };\n  }\n  parsePath() {\n    const nodes = [], expr = this.parseAttribute() || this.parseUnion() || this.parseRecursive();\n    if (!expr)\n      return null;\n    for (nodes.push(expr); !this.EOF(); )\n      if (this.match({ type: \"operator\", symbol: \".\" })) {\n        const attr = this.parseAttribute();\n        if (!attr)\n          throw new Error(\"Expected attribute name following '.\");\n        nodes.push(attr);\n        continue;\n      } else if (this.probe({ type: \"paren\", symbol: \"[\" })) {\n        const union = this.parseUnion();\n        if (!union)\n          throw new Error(\"Expected union following '['\");\n        nodes.push(union);\n      } else {\n        const recursive = this.parseRecursive();\n        recursive && nodes.push(recursive);\n        break;\n      }\n    return nodes.length === 1 ? nodes[0] : {\n      type: \"path\",\n      nodes\n    };\n  }\n}\nfunction parseJsonPath(path) {\n  const parsed = new Parser(path).parse();\n  if (!parsed)\n    throw new Error(`Failed to parse JSON path \"${path}\"`);\n  return parsed;\n}\nfunction toPath(expr) {\n  return toPathInner(expr, !1);\n}\nfunction toPathInner(expr, inUnion) {\n  switch (expr.type) {\n    case \"attribute\":\n      return expr.name;\n    case \"alias\":\n      return expr.target === \"self\" ? \"@\" : \"$\";\n    case \"number\":\n      return `${expr.value}`;\n    case \"range\": {\n      const result = [];\n      return inUnion || result.push(\"[\"), expr.start && result.push(`${expr.start}`), result.push(\":\"), expr.end && result.push(`${expr.end}`), expr.step && result.push(`:${expr.step}`), inUnion || result.push(\"]\"), result.join(\"\");\n    }\n    case \"index\":\n      return inUnion ? `${expr.value}` : `[${expr.value}]`;\n    case \"constraint\": {\n      const rhs = expr.rhs ? ` ${toPathInner(expr.rhs, !1)}` : \"\", inner = `${toPathInner(expr.lhs, !1)} ${expr.operator}${rhs}`;\n      return inUnion ? inner : `[${inner}]`;\n    }\n    case \"string\":\n      return JSON.stringify(expr.value);\n    case \"path\": {\n      const result = [], nodes = expr.nodes.slice();\n      for (; nodes.length > 0; ) {\n        const node = nodes.shift();\n        node && result.push(toPath(node));\n        const upcoming = nodes[0];\n        upcoming && toPathInner(upcoming, !1)[0] !== \"[\" && result.push(\".\");\n      }\n      return result.join(\"\");\n    }\n    case \"union\":\n      return `[${expr.nodes.map((e) => toPathInner(e, !0)).join(\",\")}]`;\n    default:\n      throw new Error(`Unknown node type ${expr.type}`);\n    case \"recursive\":\n      return `..${toPathInner(expr.term, !1)}`;\n  }\n}\nvar __defProp$e = Object.defineProperty, __defNormalProp$e = (obj, key, value) => key in obj ? __defProp$e(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$e = (obj, key, value) => __defNormalProp$e(obj, key + \"\", value);\nclass Expression {\n  constructor(expr) {\n    if (__publicField$e(this, \"expr\"), !expr)\n      throw new Error(\"Attempted to create Expression from null-value\");\n    if (\"expr\" in expr ? this.expr = expr.expr : this.expr = expr, !(\"type\" in this.expr))\n      throw new Error(\"Attempt to create Expression for expression with no type\");\n  }\n  isPath() {\n    return this.expr.type === \"path\";\n  }\n  isUnion() {\n    return this.expr.type === \"union\";\n  }\n  isCollection() {\n    return this.isPath() || this.isUnion();\n  }\n  isConstraint() {\n    return this.expr.type === \"constraint\";\n  }\n  isRecursive() {\n    return this.expr.type === \"recursive\";\n  }\n  isExistenceConstraint() {\n    return this.expr.type === \"constraint\" && this.expr.operator === \"?\";\n  }\n  isIndex() {\n    return this.expr.type === \"index\";\n  }\n  isRange() {\n    return this.expr.type === \"range\";\n  }\n  expandRange(probe) {\n    const probeLength = () => {\n      if (!probe)\n        throw new Error(\"expandRange() required a probe that was not passed\");\n      return probe.length();\n    };\n    let start = \"start\" in this.expr && this.expr.start || 0;\n    start = interpretNegativeIndex(start, probe);\n    let end = \"end\" in this.expr && this.expr.end || probeLength();\n    end = interpretNegativeIndex(end, probe);\n    const step = \"step\" in this.expr && this.expr.step || 1;\n    return { start, end, step };\n  }\n  isAttributeReference() {\n    return this.expr.type === \"attribute\";\n  }\n  // Is a range or index -> something referencing indexes\n  isIndexReference() {\n    return this.isIndex() || this.isRange();\n  }\n  name() {\n    return \"name\" in this.expr ? this.expr.name : \"\";\n  }\n  isSelfReference() {\n    return this.expr.type === \"alias\" && this.expr.target === \"self\";\n  }\n  constraintTargetIsSelf() {\n    return this.expr.type === \"constraint\" && this.expr.lhs.type === \"alias\" && this.expr.lhs.target === \"self\";\n  }\n  constraintTargetIsAttribute() {\n    return this.expr.type === \"constraint\" && this.expr.lhs.type === \"attribute\";\n  }\n  testConstraint(probe) {\n    const expr = this.expr;\n    if (expr.type === \"constraint\" && expr.lhs.type === \"alias\" && expr.lhs.target === \"self\") {\n      if (probe.containerType() !== \"primitive\")\n        return !1;\n      if (expr.type === \"constraint\" && expr.operator === \"?\")\n        return !0;\n      const lhs2 = probe.get(), rhs2 = expr.rhs && \"value\" in expr.rhs ? expr.rhs.value : void 0;\n      return testBinaryOperator(lhs2, expr.operator, rhs2);\n    }\n    if (expr.type !== \"constraint\")\n      return !1;\n    const lhs = expr.lhs;\n    if (!lhs)\n      throw new Error(\"No LHS of expression\");\n    if (lhs.type !== \"attribute\")\n      throw new Error(`Constraint target ${lhs.type} not supported`);\n    if (probe.containerType() !== \"object\")\n      return !1;\n    const lhsValue = probe.getAttribute(lhs.name);\n    if (lhsValue == null || lhsValue.containerType() !== \"primitive\")\n      return !1;\n    if (this.isExistenceConstraint())\n      return !0;\n    const rhs = expr.rhs && \"value\" in expr.rhs ? expr.rhs.value : void 0;\n    return testBinaryOperator(lhsValue.get(), expr.operator, rhs);\n  }\n  pathNodes() {\n    return this.expr.type === \"path\" ? this.expr.nodes : [this.expr];\n  }\n  prepend(node) {\n    return node ? new Expression({\n      type: \"path\",\n      nodes: node.pathNodes().concat(this.pathNodes())\n    }) : this;\n  }\n  concat(other) {\n    return other ? other.prepend(this) : this;\n  }\n  descend() {\n    return descend$1(this.expr).map((headTail) => {\n      const [head, tail] = headTail;\n      return {\n        head: head ? new Expression(head) : null,\n        tail: tail ? new Expression(tail) : null\n      };\n    });\n  }\n  unwrapRecursive() {\n    if (this.expr.type !== \"recursive\")\n      throw new Error(`Attempt to unwrap recursive on type ${this.expr.type}`);\n    return new Expression(this.expr.term);\n  }\n  toIndicies(probe) {\n    if (this.expr.type !== \"index\" && this.expr.type !== \"range\")\n      throw new Error(\"Node cannot be converted to indexes\");\n    if (this.expr.type === \"index\")\n      return [interpretNegativeIndex(this.expr.value, probe)];\n    const result = [], range = this.expandRange(probe);\n    let { start, end } = range;\n    range.step < 0 && ([start, end] = [end, start]);\n    for (let i = start; i < end; i++)\n      result.push(i);\n    return result;\n  }\n  toFieldReferences() {\n    if (this.isIndexReference())\n      return this.toIndicies();\n    if (this.expr.type === \"attribute\")\n      return [this.expr.name];\n    throw new Error(`Can't convert ${this.expr.type} to field references`);\n  }\n  toString() {\n    return toPath(this.expr);\n  }\n  static fromPath(path) {\n    const parsed = parseJsonPath(path);\n    if (!parsed)\n      throw new Error(`Failed to parse path \"${path}\"`);\n    return new Expression(parsed);\n  }\n  static attributeReference(name) {\n    return new Expression({\n      type: \"attribute\",\n      name\n    });\n  }\n  static indexReference(i) {\n    return new Expression({\n      type: \"index\",\n      value: i\n    });\n  }\n}\nfunction testBinaryOperator(lhsValue, operator, rhsValue) {\n  switch (operator) {\n    case \">\":\n      return lhsValue > rhsValue;\n    case \">=\":\n      return lhsValue >= rhsValue;\n    case \"<\":\n      return lhsValue < rhsValue;\n    case \"<=\":\n      return lhsValue <= rhsValue;\n    case \"==\":\n      return lhsValue === rhsValue;\n    case \"!=\":\n      return lhsValue !== rhsValue;\n    default:\n      throw new Error(`Unsupported binary operator ${operator}`);\n  }\n}\nfunction interpretNegativeIndex(index, probe) {\n  if (index >= 0)\n    return index;\n  if (!probe)\n    throw new Error(\"interpretNegativeIndex() must have a probe when < 0\");\n  return index + probe.length();\n}\nvar __defProp$d = Object.defineProperty, __defNormalProp$d = (obj, key, value) => key in obj ? __defProp$d(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$d = (obj, key, value) => __defNormalProp$d(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass Descender {\n  constructor(head, tail) {\n    __publicField$d(this, \"head\"), __publicField$d(this, \"tail\"), this.head = head, this.tail = tail;\n  }\n  // Iterate this descender once processing any constraints that are\n  // resolvable on the current value. Returns an array of new descenders\n  // that are guaranteed to be without constraints in the head\n  iterate(probe) {\n    let result = [this];\n    if (this.head && this.head.isConstraint()) {\n      let anyConstraints = !0;\n      for (; anyConstraints; )\n        result = lodash_flatten_js__WEBPACK_IMPORTED_MODULE_2__(\n          result.map((descender) => descender.iterateConstraints(probe))\n        ), anyConstraints = result.some((descender) => descender.head && descender.head.isConstraint());\n    }\n    return result;\n  }\n  isRecursive() {\n    return !!(this.head && this.head.isRecursive());\n  }\n  hasArrived() {\n    return this.head === null && this.tail === null;\n  }\n  extractRecursives() {\n    if (this.head && this.head.isRecursive()) {\n      const term = this.head.unwrapRecursive();\n      return new Descender(null, term.concat(this.tail)).descend();\n    }\n    return [];\n  }\n  iterateConstraints(probe) {\n    const head = this.head;\n    if (head === null || !head.isConstraint())\n      return [this];\n    const result = [];\n    if (probe.containerType() === \"primitive\" && head.constraintTargetIsSelf())\n      return head.testConstraint(probe) && result.push(...this.descend()), result;\n    if (probe.containerType() === \"array\") {\n      const length = probe.length();\n      for (let i = 0; i < length; i++) {\n        const constraint = probe.getIndex(i);\n        constraint && head.testConstraint(constraint) && result.push(new Descender(new Expression({ type: \"index\", value: i }), this.tail));\n      }\n      return result;\n    }\n    return probe.containerType() === \"object\" ? head.constraintTargetIsSelf() ? [] : head.testConstraint(probe) ? this.descend() : result : result;\n  }\n  descend() {\n    return this.tail ? this.tail.descend().map((ht) => new Descender(ht.head, ht.tail)) : [new Descender(null, null)];\n  }\n  toString() {\n    const result = [\"<\"];\n    return this.head && result.push(this.head.toString()), result.push(\"|\"), this.tail && result.push(this.tail.toString()), result.push(\">\"), result.join(\"\");\n  }\n}\nvar __defProp$c = Object.defineProperty, __defNormalProp$c = (obj, key, value) => key in obj ? __defProp$c(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$c = (obj, key, value) => __defNormalProp$c(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass Matcher {\n  constructor(active, parent) {\n    __publicField$c(this, \"active\"), __publicField$c(this, \"recursives\"), __publicField$c(this, \"payload\"), this.active = active || [], parent ? (this.recursives = parent.recursives, this.payload = parent.payload) : this.recursives = [], this.extractRecursives();\n  }\n  setPayload(payload) {\n    return this.payload = payload, this;\n  }\n  // Moves any recursive descenders onto the recursive track, removing them from\n  // the active set\n  extractRecursives() {\n    this.active = this.active.filter((descender) => descender.isRecursive() ? (this.recursives.push(...descender.extractRecursives()), !1) : !0);\n  }\n  // Find recursives that are relevant now and should be considered part of the active set\n  activeRecursives(probe) {\n    return this.recursives.filter((descender) => {\n      const head = descender.head;\n      return head ? head.isConstraint() || probe.containerType() === \"array\" && head.isIndexReference() ? !0 : probe.containerType() === \"object\" ? head.isAttributeReference() && probe.hasAttribute(head.name()) : !1 : !1;\n    });\n  }\n  match(probe) {\n    return this.iterate(probe).extractMatches(probe);\n  }\n  iterate(probe) {\n    const newActiveSet = [];\n    return this.active.concat(this.activeRecursives(probe)).forEach((descender) => {\n      newActiveSet.push(...descender.iterate(probe));\n    }), new Matcher(newActiveSet, this);\n  }\n  // Returns true if any of the descenders in the active or recursive set\n  // consider the current state a final destination\n  isDestination() {\n    return this.active.some((descender) => descender.hasArrived());\n  }\n  hasRecursives() {\n    return this.recursives.length > 0;\n  }\n  // Returns any payload delivieries and leads that needs to be followed to complete\n  // the process.\n  extractMatches(probe) {\n    const leads = [], targets = [];\n    if (this.active.forEach((descender) => {\n      if (descender.hasArrived()) {\n        targets.push(\n          new Expression({\n            type: \"alias\",\n            target: \"self\"\n          })\n        );\n        return;\n      }\n      const descenderHead = descender.head;\n      if (descenderHead && !(probe.containerType() === \"array\" && !descenderHead.isIndexReference()) && !(probe.containerType() === \"object\" && !descenderHead.isAttributeReference()))\n        if (descender.tail) {\n          const matcher = new Matcher(descender.descend(), this);\n          descenderHead.toFieldReferences().forEach(() => {\n            leads.push({\n              target: descenderHead,\n              matcher\n            });\n          });\n        } else\n          targets.push(descenderHead);\n    }), this.hasRecursives()) {\n      const recursivesMatcher = new Matcher([], this);\n      if (probe.containerType() === \"array\") {\n        const length = probe.length();\n        for (let i = 0; i < length; i++)\n          leads.push({\n            target: Expression.indexReference(i),\n            matcher: recursivesMatcher\n          });\n      } else probe.containerType() === \"object\" && probe.attributeKeys().forEach((name) => {\n        leads.push({\n          target: Expression.attributeReference(name),\n          matcher: recursivesMatcher\n        });\n      });\n    }\n    return targets.length > 0 ? { leads, delivery: { targets, payload: this.payload } } : { leads };\n  }\n  static fromPath(jsonpath) {\n    const path = parseJsonPath(jsonpath);\n    if (!path)\n      throw new Error(`Failed to parse path from \"${jsonpath}\"`);\n    const descender = new Descender(null, new Expression(path));\n    return new Matcher(descender.descend());\n  }\n}\nvar __defProp$b = Object.defineProperty, __defNormalProp$b = (obj, key, value) => key in obj ? __defProp$b(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$b = (obj, key, value) => __defNormalProp$b(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass PlainProbe {\n  constructor(value, path) {\n    __publicField$b(this, \"_value\"), __publicField$b(this, \"path\"), this._value = value, this.path = path || [];\n  }\n  containerType() {\n    return Array.isArray(this._value) ? \"array\" : this._value !== null && typeof this._value == \"object\" ? \"object\" : \"primitive\";\n  }\n  length() {\n    if (!Array.isArray(this._value))\n      throw new Error(\"Won't return length of non-indexable _value\");\n    return this._value.length;\n  }\n  getIndex(i) {\n    return Array.isArray(this._value) ? i >= this.length() ? null : new PlainProbe(this._value[i], this.path.concat(i)) : !1;\n  }\n  hasAttribute(key) {\n    return isRecord(this._value) ? this._value.hasOwnProperty(key) : !1;\n  }\n  attributeKeys() {\n    return isRecord(this._value) ? Object.keys(this._value) : [];\n  }\n  getAttribute(key) {\n    if (!isRecord(this._value))\n      throw new Error(\"getAttribute only applies to plain objects\");\n    return this.hasAttribute(key) ? new PlainProbe(this._value[key], this.path.concat(key)) : null;\n  }\n  get() {\n    return this._value;\n  }\n}\nfunction extractAccessors(path, value) {\n  const result = [], matcher = Matcher.fromPath(path).setPayload(function(values) {\n    result.push(...values);\n  }), accessor = new PlainProbe(value);\n  return descend(matcher, accessor), result;\n}\nfunction descend(matcher, accessor) {\n  const { leads, delivery } = matcher.match(accessor);\n  leads.forEach((lead) => {\n    accessorsFromTarget(lead.target, accessor).forEach((childAccessor) => {\n      descend(lead.matcher, childAccessor);\n    });\n  }), delivery && delivery.targets.forEach((target) => {\n    typeof delivery.payload == \"function\" && delivery.payload(accessorsFromTarget(target, accessor));\n  });\n}\nfunction accessorsFromTarget(target, accessor) {\n  const result = [];\n  if (target.isIndexReference())\n    target.toIndicies(accessor).forEach((i) => {\n      result.push(accessor.getIndex(i));\n    });\n  else if (target.isAttributeReference())\n    result.push(accessor.getAttribute(target.name()));\n  else if (target.isSelfReference())\n    result.push(accessor);\n  else\n    throw new Error(`Unable to derive accessor for target ${target.toString()}`);\n  return lodash_compact_js__WEBPACK_IMPORTED_MODULE_5__(result);\n}\nfunction extract(path, value) {\n  return extractAccessors(path, value).map((acc) => acc.get());\n}\nfunction extractWithPath(path, value) {\n  return extractAccessors(path, value).map((acc) => ({ path: acc.path, value: acc.get() }));\n}\nvar __defProp$a = Object.defineProperty, __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$a = (obj, key, value) => __defNormalProp$a(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nfunction applyPatch(patch, oldValue) {\n  if (typeof oldValue != \"string\") return oldValue;\n  const [result] = (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_6__.applyPatches)(patch, oldValue, { allowExceedingIndices: !0 });\n  return result;\n}\nclass DiffMatchPatch {\n  constructor(id, path, dmpPatchSrc) {\n    __publicField$a(this, \"path\"), __publicField$a(this, \"dmpPatch\"), __publicField$a(this, \"id\"), this.id = id, this.path = path, this.dmpPatch = (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_6__.parsePatch)(dmpPatchSrc);\n  }\n  apply(targets, accessor) {\n    let result = accessor;\n    if (result.containerType() === \"primitive\")\n      return result;\n    for (const target of targets) {\n      if (target.isIndexReference()) {\n        for (const index of target.toIndicies(accessor)) {\n          const item = result.getIndex(index);\n          if (!item)\n            continue;\n          const oldValue = item.get(), nextValue = applyPatch(this.dmpPatch, oldValue);\n          result = result.setIndex(index, nextValue);\n        }\n        continue;\n      }\n      if (target.isAttributeReference() && result.hasAttribute(target.name())) {\n        const attribute = result.getAttribute(target.name());\n        if (!attribute)\n          continue;\n        const oldValue = attribute.get(), nextValue = applyPatch(this.dmpPatch, oldValue);\n        result = result.setAttribute(target.name(), nextValue);\n        continue;\n      }\n      throw new Error(`Unable to apply diffMatchPatch to target ${target.toString()}`);\n    }\n    return result;\n  }\n}\nvar __defProp$9 = Object.defineProperty, __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$9 = (obj, key, value) => __defNormalProp$9(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nfunction performIncrement(previousValue, delta) {\n  return typeof previousValue != \"number\" || !Number.isFinite(previousValue) ? previousValue : previousValue + delta;\n}\nclass IncPatch {\n  constructor(id, path, value) {\n    __publicField$9(this, \"path\"), __publicField$9(this, \"value\"), __publicField$9(this, \"id\"), this.path = path, this.value = value, this.id = id;\n  }\n  apply(targets, accessor) {\n    let result = accessor;\n    if (result.containerType() === \"primitive\")\n      return result;\n    for (const target of targets) {\n      if (target.isIndexReference()) {\n        for (const index of target.toIndicies(accessor)) {\n          const item = result.getIndex(index);\n          if (!item)\n            continue;\n          const previousValue = item.get();\n          result = result.setIndex(index, performIncrement(previousValue, this.value));\n        }\n        continue;\n      }\n      if (target.isAttributeReference()) {\n        const attribute = result.getAttribute(target.name());\n        if (!attribute)\n          continue;\n        const previousValue = attribute.get();\n        result = result.setAttribute(target.name(), performIncrement(previousValue, this.value));\n        continue;\n      }\n      throw new Error(`Unable to apply to target ${target.toString()}`);\n    }\n    return result;\n  }\n}\nfunction targetsToIndicies(targets, accessor) {\n  const result = [];\n  return targets.forEach((target) => {\n    target.isIndexReference() && result.push(...target.toIndicies(accessor));\n  }), result.sort();\n}\nvar __defProp$8 = Object.defineProperty, __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$8 = (obj, key, value) => __defNormalProp$8(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass InsertPatch {\n  constructor(id, location, path, items) {\n    __publicField$8(this, \"location\"), __publicField$8(this, \"path\"), __publicField$8(this, \"items\"), __publicField$8(this, \"id\"), this.id = id, this.location = location, this.path = path, this.items = items;\n  }\n  apply(targets, accessor) {\n    let result = accessor;\n    if (accessor.containerType() !== \"array\")\n      throw new Error(\"Attempt to apply insert patch to non-array value\");\n    switch (this.location) {\n      case \"before\": {\n        const pos = minIndex(targets, accessor);\n        result = result.insertItemsAt(pos, this.items);\n        break;\n      }\n      case \"after\": {\n        const pos = maxIndex(targets, accessor);\n        result = result.insertItemsAt(pos + 1, this.items);\n        break;\n      }\n      case \"replace\": {\n        const indicies = targetsToIndicies(targets, accessor);\n        result = result.unsetIndices(indicies), result = result.insertItemsAt(indicies[0], this.items);\n        break;\n      }\n      default:\n        throw new Error(`Unsupported location atm: ${this.location}`);\n    }\n    return result;\n  }\n}\nfunction minIndex(targets, accessor) {\n  let result = lodash_min_js__WEBPACK_IMPORTED_MODULE_4__(targetsToIndicies(targets, accessor)) || 0;\n  return targets.forEach((target) => {\n    if (target.isRange()) {\n      const { start } = target.expandRange();\n      start < result && (result = start);\n    }\n  }), result;\n}\nfunction maxIndex(targets, accessor) {\n  let result = lodash_max_js__WEBPACK_IMPORTED_MODULE_3__(targetsToIndicies(targets, accessor)) || 0;\n  return targets.forEach((target) => {\n    if (target.isRange()) {\n      const { end } = target.expandRange();\n      end > result && (result = end);\n    }\n  }), result;\n}\nvar __defProp$7 = Object.defineProperty, __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$7 = (obj, key, value) => __defNormalProp$7(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass SetIfMissingPatch {\n  constructor(id, path, value) {\n    __publicField$7(this, \"id\"), __publicField$7(this, \"path\"), __publicField$7(this, \"value\"), this.id = id, this.path = path, this.value = value;\n  }\n  apply(targets, accessor) {\n    let result = accessor;\n    return targets.forEach((target) => {\n      if (!target.isIndexReference())\n        if (target.isAttributeReference())\n          result.containerType() === \"primitive\" ? result = result.set({ [target.name()]: this.value }) : result.hasAttribute(target.name()) || (result = accessor.setAttribute(target.name(), this.value));\n        else\n          throw new Error(`Unable to apply to target ${target.toString()}`);\n    }), result;\n  }\n}\nvar __defProp$6 = Object.defineProperty, __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$6 = (obj, key, value) => __defNormalProp$6(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass SetPatch {\n  constructor(id, path, value) {\n    __publicField$6(this, \"id\"), __publicField$6(this, \"path\"), __publicField$6(this, \"value\"), this.id = id, this.path = path, this.value = value;\n  }\n  apply(targets, accessor) {\n    let result = accessor;\n    return targets.forEach((target) => {\n      if (target.isSelfReference())\n        result = result.set(this.value);\n      else if (target.isIndexReference())\n        target.toIndicies(accessor).forEach((i) => {\n          result = result.setIndex(i, this.value);\n        });\n      else if (target.isAttributeReference())\n        result.containerType() === \"primitive\" ? result = result.set({ [target.name()]: this.value }) : result = result.setAttribute(target.name(), this.value);\n      else\n        throw new Error(`Unable to apply to target ${target.toString()}`);\n    }), result;\n  }\n}\nvar __defProp$5 = Object.defineProperty, __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$5 = (obj, key, value) => __defNormalProp$5(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass UnsetPatch {\n  constructor(id, path) {\n    __publicField$5(this, \"id\"), __publicField$5(this, \"path\"), __publicField$5(this, \"value\"), this.id = id, this.path = path;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  apply(targets, accessor) {\n    let result = accessor;\n    switch (accessor.containerType()) {\n      case \"array\":\n        result = result.unsetIndices(targetsToIndicies(targets, accessor));\n        break;\n      case \"object\":\n        targets.forEach((target) => {\n          result = result.unsetAttribute(target.name());\n        });\n        break;\n      default:\n        throw new Error(\n          \"Target value is neither indexable or an object. This error should potentially just be silently ignored?\"\n        );\n    }\n    return result;\n  }\n}\nfunction parsePatch(patch) {\n  const result = [];\n  if (Array.isArray(patch))\n    return patch.reduce((r, p) => r.concat(parsePatch(p)), result);\n  const { set, setIfMissing, unset, diffMatchPatch, inc, dec, insert } = patch;\n  if (setIfMissing && Object.keys(setIfMissing).forEach((path) => {\n    result.push(new SetIfMissingPatch(patch.id, path, setIfMissing[path]));\n  }), set && Object.keys(set).forEach((path) => {\n    result.push(new SetPatch(patch.id, path, set[path]));\n  }), unset && unset.forEach((path) => {\n    result.push(new UnsetPatch(patch.id, path));\n  }), diffMatchPatch && Object.keys(diffMatchPatch).forEach((path) => {\n    result.push(new DiffMatchPatch(patch.id, path, diffMatchPatch[path]));\n  }), inc && Object.keys(inc).forEach((path) => {\n    result.push(new IncPatch(patch.id, path, inc[path]));\n  }), dec && Object.keys(dec).forEach((path) => {\n    result.push(new IncPatch(patch.id, path, -dec[path]));\n  }), insert) {\n    let location, path;\n    const spec = insert;\n    if (\"before\" in spec)\n      location = \"before\", path = spec.before;\n    else if (\"after\" in spec)\n      location = \"after\", path = spec.after;\n    else if (\"replace\" in spec)\n      location = \"replace\", path = spec.replace;\n    else\n      throw new Error(\"Invalid insert patch\");\n    result.push(new InsertPatch(patch.id, location, path, spec.items));\n  }\n  return result;\n}\nvar __defProp$4 = Object.defineProperty, __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$4 = (obj, key, value) => __defNormalProp$4(obj, key + \"\", value);\nclass Patcher {\n  constructor(patch) {\n    __publicField$4(this, \"patches\"), this.patches = parsePatch(patch);\n  }\n  apply(value) {\n    const accessor = new ImmutableAccessor(value);\n    return this.applyViaAccessor(accessor).get();\n  }\n  // If you want to use your own accessor implementation, you can use this method\n  // to invoke the patcher. Since all subsequent accessors for children of this accessor\n  // are obtained through the methods in the accessors, you retain full control of the\n  // implementation throguhgout the application. Have a look in ImmutableAccessor\n  // to see an example of how accessors are implemented.\n  applyViaAccessor(accessor) {\n    let result = accessor;\n    const idAccessor = accessor.getAttribute(\"_id\");\n    if (!idAccessor)\n      throw new Error(\"Cannot apply patch to document with no _id\");\n    const id = idAccessor.get();\n    for (const patch of this.patches) {\n      if (patch.id !== id)\n        continue;\n      const matcher = Matcher.fromPath(patch.path).setPayload(patch);\n      result = process(matcher, result);\n    }\n    return result;\n  }\n}\nfunction process(matcher, accessor) {\n  const isSetPatch = matcher.payload instanceof SetPatch || matcher.payload instanceof SetIfMissingPatch;\n  let result = accessor;\n  const { leads, delivery } = matcher.match(accessor);\n  return leads.forEach((lead) => {\n    if (lead.target.isIndexReference())\n      lead.target.toIndicies().forEach((i) => {\n        const item = result.getIndex(i);\n        if (!item)\n          throw new Error(\"Index out of bounds\");\n        result = result.setIndexAccessor(i, process(lead.matcher, item));\n      });\n    else if (lead.target.isAttributeReference()) {\n      isSetPatch && result.containerType() === \"primitive\" && (result = result.set({}));\n      let oldValueAccessor = result.getAttribute(lead.target.name());\n      if (!oldValueAccessor && isSetPatch && (result = result.setAttribute(lead.target.name(), {}), oldValueAccessor = result.getAttribute(lead.target.name())), !oldValueAccessor)\n        return;\n      const newValueAccessor = process(lead.matcher, oldValueAccessor);\n      oldValueAccessor !== newValueAccessor && (result = result.setAttributeAccessor(lead.target.name(), newValueAccessor));\n    } else\n      throw new Error(`Unable to handle target ${lead.target.toString()}`);\n  }), delivery && isPatcher(delivery.payload) && (result = delivery.payload.apply(delivery.targets, result)), result;\n}\nfunction isPatcher(payload) {\n  return !!(payload && typeof payload == \"object\" && payload !== null && \"apply\" in payload && typeof payload.apply == \"function\");\n}\nconst luid = _sanity_uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\nvar __defProp$3 = Object.defineProperty, __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$3 = (obj, key, value) => __defNormalProp$3(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass Mutation {\n  constructor(options) {\n    __publicField$3(this, \"params\"), __publicField$3(this, \"compiled\"), __publicField$3(this, \"_appliesToMissingDocument\"), this.params = options;\n  }\n  get transactionId() {\n    return this.params.transactionId;\n  }\n  get transition() {\n    return this.params.transition;\n  }\n  get identity() {\n    return this.params.identity;\n  }\n  get previousRev() {\n    return this.params.previousRev;\n  }\n  get resultRev() {\n    return this.params.resultRev;\n  }\n  get mutations() {\n    return this.params.mutations;\n  }\n  get timestamp() {\n    if (typeof this.params.timestamp == \"string\")\n      return new Date(this.params.timestamp);\n  }\n  get effects() {\n    return this.params.effects;\n  }\n  assignRandomTransactionId() {\n    this.params.transactionId = luid(), this.params.resultRev = this.params.transactionId;\n  }\n  appliesToMissingDocument() {\n    if (typeof this._appliesToMissingDocument < \"u\")\n      return this._appliesToMissingDocument;\n    const firstMut = this.mutations[0];\n    return firstMut ? this._appliesToMissingDocument = !!(firstMut.create || firstMut.createIfNotExists || firstMut.createOrReplace) : this._appliesToMissingDocument = !0, this._appliesToMissingDocument;\n  }\n  // Compiles all mutations into a handy function\n  compile() {\n    const operations = [];\n    this.mutations.forEach((mutation) => {\n      if (mutation.create) {\n        const create = mutation.create || {};\n        operations.push((doc) => doc || Object.assign(create, {\n          _createdAt: create._createdAt || this.params.timestamp\n        }));\n        return;\n      }\n      if (mutation.createIfNotExists) {\n        const createIfNotExists = mutation.createIfNotExists || {};\n        operations.push(\n          (doc) => doc === null ? Object.assign(createIfNotExists, {\n            _createdAt: createIfNotExists._createdAt || this.params.timestamp\n          }) : doc\n        );\n        return;\n      }\n      if (mutation.createOrReplace) {\n        const createOrReplace = mutation.createOrReplace || {};\n        operations.push(\n          () => Object.assign(createOrReplace, {\n            _createdAt: createOrReplace._createdAt || this.params.timestamp\n          })\n        );\n        return;\n      }\n      if (mutation.delete) {\n        operations.push(() => null);\n        return;\n      }\n      if (mutation.patch) {\n        if (\"query\" in mutation.patch)\n          return;\n        const patch = new Patcher(mutation.patch);\n        operations.push((doc) => patch.apply(doc));\n        return;\n      }\n      throw new Error(`Unsupported mutation ${JSON.stringify(mutation, null, 2)}`);\n    }), typeof this.params.timestamp == \"string\" && operations.push((doc) => doc ? Object.assign(doc, { _updatedAt: this.params.timestamp }) : null);\n    const prevRev = this.previousRev, rev = this.resultRev || this.transactionId;\n    this.compiled = (doc) => {\n      if (prevRev && doc && prevRev !== doc._rev)\n        throw new Error(\n          `Previous revision for this mutation was ${prevRev}, but the document revision is ${doc._rev}`\n        );\n      let result = doc;\n      for (const operation of operations)\n        result = operation(result);\n      return result && rev && (result === doc && (result = Object.assign({}, doc)), result._rev = rev), result;\n    };\n  }\n  apply(document) {\n    debug(\"Applying mutation %O to document %O\", this.mutations, document), this.compiled || this.compile();\n    const result = this.compiled(document);\n    return debug(\"  => %O\", result), result;\n  }\n  static applyAll(document, mutations) {\n    return mutations.reduce((doc, mutation) => mutation.apply(doc), document);\n  }\n  // Given a number of yet-to-be-committed mutation objects, collects them into one big mutation\n  // any metadata like transactionId is ignored and must be submitted by the client. It is assumed\n  // that all mutations are on the same document.\n  // TOOO: Optimize mutations, eliminating mutations that overwrite themselves!\n  static squash(document, mutations) {\n    const squashed = mutations.reduce(\n      (result, mutation) => result.concat(...mutation.mutations),\n      []\n    );\n    return new Mutation({ mutations: squashed });\n  }\n}\nvar __defProp$2 = Object.defineProperty, __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$2 = (obj, key, value) => __defNormalProp$2(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass Document {\n  constructor(doc) {\n    __publicField$2(this, \"incoming\", []), __publicField$2(this, \"submitted\", []), __publicField$2(this, \"pending\", []), __publicField$2(this, \"HEAD\"), __publicField$2(this, \"EDGE\"), __publicField$2(this, \"onRebase\"), __publicField$2(this, \"onMutation\"), __publicField$2(this, \"onConsistencyChanged\"), __publicField$2(this, \"onRemoteMutation\"), __publicField$2(this, \"inconsistentAt\", null), __publicField$2(this, \"lastStagedAt\", null), this.reset(doc), this.HEAD = doc, this.EDGE = doc;\n  }\n  // Reset the state of the Document, used to recover from unsavory states by reloading the document\n  reset(doc) {\n    this.incoming = [], this.submitted = [], this.pending = [], this.inconsistentAt = null, this.HEAD = doc, this.EDGE = doc, this.considerIncoming(), this.updateConsistencyFlag();\n  }\n  // Call when a mutation arrives from Sanity\n  arrive(mutation) {\n    this.incoming.push(mutation), this.considerIncoming(), this.updateConsistencyFlag();\n  }\n  // Call to signal that we are submitting a mutation. Returns a callback object with a\n  // success and failure handler that must be called according to the outcome of our\n  // submission.\n  stage(mutation, silent) {\n    if (!mutation.transactionId)\n      throw new Error(\"Mutations _must_ have transactionId when submitted\");\n    this.lastStagedAt = /* @__PURE__ */ new Date(), debug(\"Staging mutation %s (pushed to pending)\", mutation.transactionId), this.pending.push(mutation), this.EDGE = mutation.apply(this.EDGE), this.onMutation && !silent && this.onMutation({\n      mutation,\n      document: this.EDGE,\n      remote: !1\n    });\n    const txnId = mutation.transactionId;\n    return this.updateConsistencyFlag(), {\n      success: () => {\n        this.pendingSuccessfullySubmitted(txnId), this.updateConsistencyFlag();\n      },\n      failure: () => {\n        this.pendingFailed(txnId), this.updateConsistencyFlag();\n      }\n    };\n  }\n  // Call to check if everything is nice and quiet and there are no unresolved mutations.\n  // Means this model thinks both HEAD and EDGE is up to date with what the server sees.\n  isConsistent() {\n    return !this.inconsistentAt;\n  }\n  // Private\n  // Attempts to apply any resolvable incoming patches to HEAD. Will keep patching as long as there\n  // are applicable patches to be applied\n  considerIncoming() {\n    let mustRebase = !1, nextMut;\n    const rebaseMutations = [];\n    if (this.HEAD && this.HEAD._updatedAt) {\n      const updatedAt = new Date(this.HEAD._updatedAt);\n      this.incoming.find((mut) => mut.timestamp && mut.timestamp < updatedAt) && (this.incoming = this.incoming.filter((mut) => mut.timestamp && mut.timestamp < updatedAt));\n    }\n    let protect = 0;\n    do {\n      if (this.HEAD) {\n        const HEAD = this.HEAD;\n        nextMut = HEAD._rev ? this.incoming.find((mut) => mut.previousRev === HEAD._rev) : void 0;\n      } else\n        nextMut = this.incoming.find((mut) => mut.appliesToMissingDocument());\n      if (nextMut) {\n        const applied = this.applyIncoming(nextMut);\n        if (mustRebase = mustRebase || applied, mustRebase && rebaseMutations.push(nextMut), protect++ > 10)\n          throw new Error(\n            `Mutator stuck flushing incoming mutations. Probably stuck here: ${JSON.stringify(\n              nextMut\n            )}`\n          );\n      }\n    } while (nextMut);\n    this.incoming.length > 0 && debug.enabled && debug(\n      \"Unable to apply mutations %s\",\n      this.incoming.map((mut) => mut.transactionId).join(\", \")\n    ), mustRebase && this.rebase(rebaseMutations);\n  }\n  // check current consistency state, update flag and invoke callback if needed\n  updateConsistencyFlag() {\n    const wasConsistent = this.isConsistent(), isConsistent = this.pending.length === 0 && this.submitted.length === 0 && this.incoming.length === 0;\n    isConsistent ? this.inconsistentAt = null : this.inconsistentAt || (this.inconsistentAt = /* @__PURE__ */ new Date()), wasConsistent != isConsistent && this.onConsistencyChanged && (debug(isConsistent ? \"Buffered document is inconsistent\" : \"Buffered document is consistent\"), this.onConsistencyChanged(isConsistent));\n  }\n  // apply an incoming patch that has been prequalified as the next in line for this document\n  applyIncoming(mut) {\n    if (!mut)\n      return !1;\n    if (!mut.transactionId)\n      throw new Error(\"Received incoming mutation without a transaction ID\");\n    if (debug(\n      \"Applying mutation %s -> %s to rev %s\",\n      mut.previousRev,\n      mut.resultRev,\n      this.HEAD && this.HEAD._rev\n    ), this.HEAD = mut.apply(this.HEAD), this.onRemoteMutation && this.onRemoteMutation(mut), this.incoming = this.incoming.filter((m) => m.transactionId !== mut.transactionId), this.hasUnresolvedMutations()) {\n      const needRebase = this.consumeUnresolved(mut.transactionId);\n      return debug.enabled && (debug(\n        `Incoming mutation ${mut.transactionId} appeared while there were pending or submitted local mutations`\n      ), debug(`Submitted txnIds: ${this.submitted.map((m) => m.transactionId).join(\", \")}`), debug(`Pending txnIds: ${this.pending.map((m) => m.transactionId).join(\", \")}`), debug(\"needRebase === %s\", needRebase)), needRebase;\n    }\n    return debug(\n      \"Remote mutation %s arrived w/o any pending or submitted local mutations\",\n      mut.transactionId\n    ), this.EDGE = this.HEAD, this.onMutation && this.onMutation({\n      mutation: mut,\n      document: this.EDGE,\n      remote: !0\n    }), !1;\n  }\n  /**\n   * Returns true if there are unresolved mutations between HEAD and EDGE, meaning we have\n   * mutations that are still waiting to be either submitted, or to be confirmed by the server.\n   *\n   * @returns true if there are unresolved mutations between HEAD and EDGE, false otherwise\n   */\n  hasUnresolvedMutations() {\n    return this.submitted.length > 0 || this.pending.length > 0;\n  }\n  /**\n   * When an incoming mutation is applied to HEAD, this is called to remove the mutation from\n   * the unresolved state. If the newly applied patch is the next upcoming unresolved mutation,\n   * no rebase is needed, but we might have the wrong idea about the ordering of mutations, so in\n   * that case we are given the flag `needRebase` to tell us that this mutation arrived out of\n   * order in terms of our optimistic version, so a rebase is needed.\n   *\n   * @param txnId - Transaction ID of the remote mutation\n   * @returns true if rebase is needed, false otherwise\n   */\n  consumeUnresolved(txnId) {\n    if (this.submitted.length === 0 && this.pending.length === 0)\n      return !1;\n    if (this.submitted.length !== 0) {\n      if (this.submitted[0].transactionId === txnId)\n        return debug(\n          \"Remote mutation %s matches upcoming submitted mutation, consumed from 'submitted' buffer\",\n          txnId\n        ), this.submitted.shift(), !1;\n    } else if (this.pending.length > 0 && this.pending[0].transactionId === txnId)\n      return debug(\n        \"Remote mutation %s matches upcoming pending mutation, consumed from 'pending' buffer\",\n        txnId\n      ), this.pending.shift(), !1;\n    return debug(\n      \"The mutation was not the upcoming mutation, scrubbing. Pending: %d, Submitted: %d\",\n      this.pending.length,\n      this.submitted.length\n    ), this.submitted = this.submitted.filter((mut) => mut.transactionId !== txnId), this.pending = this.pending.filter((mut) => mut.transactionId !== txnId), debug(\"After scrubbing: Pending: %d, Submitted: %d\", this.pending.length, this.submitted.length), !0;\n  }\n  pendingSuccessfullySubmitted(pendingTxnId) {\n    if (this.pending.length === 0)\n      return;\n    const first = this.pending[0];\n    if (first.transactionId === pendingTxnId) {\n      this.pending.shift(), this.submitted.push(first);\n      return;\n    }\n    let justSubmitted;\n    const stillPending = [];\n    this.pending.forEach((mutation) => {\n      if (mutation.transactionId === pendingTxnId) {\n        justSubmitted = mutation;\n        return;\n      }\n      stillPending.push(mutation);\n    }), justSubmitted && this.submitted.push(justSubmitted), this.pending = stillPending, this.rebase([]);\n  }\n  pendingFailed(pendingTxnId) {\n    this.pending = this.pending.filter((mutation) => mutation.transactionId !== pendingTxnId), this.rebase([]);\n  }\n  rebase(incomingMutations) {\n    const oldEdge = this.EDGE;\n    this.EDGE = Mutation.applyAll(this.HEAD, this.submitted.concat(this.pending)), oldEdge !== null && this.EDGE !== null && (oldEdge._rev = this.EDGE._rev), !lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_0__(this.EDGE, oldEdge) && this.onRebase && this.onRebase(this.EDGE, incomingMutations, this.pending);\n  }\n}\nvar __defProp$1 = Object.defineProperty, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$1 = (obj, key, value) => __defNormalProp$1(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass SquashingBuffer {\n  constructor(doc) {\n    __publicField$1(this, \"BASIS\"), __publicField$1(this, \"PRESTAGE\"), __publicField$1(this, \"setOperations\"), __publicField$1(this, \"documentPresent\"), __publicField$1(this, \"out\", []), __publicField$1(this, \"staged\"), doc ? debug(\"Reset mutation buffer to rev %s\", doc._rev) : debug(\"Reset mutation buffer state to document being deleted\"), this.staged = [], this.setOperations = {}, this.documentPresent = !1, this.BASIS = doc, this.PRESTAGE = doc;\n  }\n  add(mut) {\n    mut.mutations.forEach((op) => this.addOperation(op));\n  }\n  hasChanges() {\n    return this.out.length > 0 || Object.keys(this.setOperations).length > 0;\n  }\n  /**\n   * Extracts the mutations in this buffer.\n   * After this is done, the buffer lifecycle is over and the client should\n   * create an new one with the new, updated BASIS.\n   *\n   * @param txnId - Transaction ID\n   * @returns A `Mutation` instance if we had outgoing mutations pending, null otherwise\n   */\n  purge(txnId) {\n    this.stashStagedOperations();\n    let result = null;\n    return this.out.length > 0 && (debug(\"Purged mutation buffer\"), result = new Mutation({\n      mutations: this.out,\n      resultRev: txnId,\n      transactionId: txnId\n    })), this.out = [], this.documentPresent = !1, result;\n  }\n  addOperation(op) {\n    var _a;\n    if (op.patch && op.patch.set && \"id\" in op.patch && op.patch.id === ((_a = this.PRESTAGE) == null ? void 0 : _a._id) && Object.keys(op.patch).length === 2) {\n      const setPatch = op.patch.set, unoptimizable = {};\n      for (const path of Object.keys(setPatch))\n        setPatch.hasOwnProperty(path) && (this.optimiseSetOperation(path, setPatch[path]) || (unoptimizable[path] = setPatch[path]));\n      Object.keys(unoptimizable).length > 0 && (debug(\"Unoptimizable set-operation detected, purging optimization buffer\"), this.staged.push({ patch: { id: this.PRESTAGE._id, set: unoptimizable } }), this.stashStagedOperations());\n      return;\n    }\n    if (op.createIfNotExists && this.PRESTAGE && op.createIfNotExists._id === this.PRESTAGE._id) {\n      this.documentPresent || (this.staged.push(op), this.documentPresent = !0, this.stashStagedOperations());\n      return;\n    }\n    debug(\"Unoptimizable mutation detected, purging optimization buffer\"), this.staged.push(op), this.stashStagedOperations();\n  }\n  /**\n     * Attempt to perform one single set operation in an optimised manner, return value\n     * reflects whether or not the operation could be performed.\n  \n     * @param path - The JSONPath to the set operation in question\n     * @param nextValue - The value to be set\n     * @returns True of optimized, false otherwise\n     */\n  optimiseSetOperation(path, nextValue) {\n    if (typeof nextValue == \"object\")\n      return !1;\n    const matches = extractWithPath(path, this.PRESTAGE);\n    if (matches.length !== 1)\n      return !1;\n    const match = matches[0];\n    if (typeof match.value == \"object\" || !this.PRESTAGE)\n      return !1;\n    let op = null;\n    if (match.value === nextValue)\n      op = null;\n    else if (typeof match.value == \"string\" && typeof nextValue == \"string\")\n      try {\n        const patch = (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_6__.stringifyPatches)((0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_6__.makePatches)(match.value, nextValue));\n        op = { patch: { id: this.PRESTAGE._id, diffMatchPatch: { [path]: patch } } };\n      } catch {\n        return !1;\n      }\n    else\n      op = { patch: { id: this.PRESTAGE._id, set: { [path]: nextValue } } };\n    const canonicalPath = arrayToJSONMatchPath(match.path);\n    return op ? this.setOperations[canonicalPath] = op : delete this.setOperations[canonicalPath], !0;\n  }\n  stashStagedOperations() {\n    const nextOps = [];\n    Object.keys(this.setOperations).forEach((key) => {\n      const op = this.setOperations[key];\n      op && nextOps.push(op);\n    }), nextOps.push(...this.staged), nextOps.length > 0 && (this.PRESTAGE = new Mutation({ mutations: nextOps }).apply(this.PRESTAGE), this.staged = [], this.setOperations = {}), this.out.push(...nextOps);\n  }\n  /**\n   * Rebases given the new base-document\n   *\n   * @param newBasis - New base document to rebase on\n   * @returns New \"edge\" document with buffered changes integrated\n   */\n  rebase(newBasis) {\n    return this.stashStagedOperations(), newBasis === null ? (this.out = [], this.BASIS = newBasis, this.PRESTAGE = newBasis, this.documentPresent = !1) : (this.BASIS = newBasis, this.out ? this.PRESTAGE = new Mutation({ mutations: this.out }).apply(this.BASIS) : this.PRESTAGE = this.BASIS), this.PRESTAGE;\n  }\n}\nvar __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nconst ONE_MINUTE = 1e3 * 60;\nclass Commit {\n  constructor(mutations, { resolve, reject }) {\n    __publicField(this, \"mutations\"), __publicField(this, \"tries\"), __publicField(this, \"resolve\"), __publicField(this, \"reject\"), this.mutations = mutations, this.tries = 0, this.resolve = resolve, this.reject = reject;\n  }\n  apply(doc) {\n    return Mutation.applyAll(doc, this.mutations);\n  }\n  squash(doc) {\n    const result = Mutation.squash(doc, this.mutations);\n    return result.assignRandomTransactionId(), result;\n  }\n}\nconst mutReducerFn = (acc, mut) => acc.concat(mut.mutations);\nclass BufferedDocument {\n  constructor(doc) {\n    __publicField(this, \"mutations\"), __publicField(this, \"document\"), __publicField(this, \"LOCAL\"), __publicField(this, \"commits\"), __publicField(this, \"buffer\"), __publicField(this, \"onMutation\"), __publicField(this, \"onRemoteMutation\"), __publicField(this, \"onRebase\"), __publicField(this, \"onDelete\"), __publicField(this, \"onConsistencyChanged\"), __publicField(this, \"commitHandler\"), __publicField(this, \"committerRunning\", !1), this.buffer = new SquashingBuffer(doc), this.document = new Document(doc), this.document.onMutation = (msg) => this.handleDocMutation(msg), this.document.onRemoteMutation = (mut) => this.onRemoteMutation && this.onRemoteMutation(mut), this.document.onRebase = (edge, remoteMutations, localMutations) => this.handleDocRebase(edge, remoteMutations, localMutations), this.document.onConsistencyChanged = (msg) => this.handleDocConsistencyChanged(msg), this.LOCAL = doc, this.mutations = [], this.commits = [];\n  }\n  // Used to reset the state of the local document model. If the model has been inconsistent\n  // for too long, it has probably missed a notification, and should reload the document from the server\n  reset(doc) {\n    doc ? debug(\"Document state reset to revision %s\", doc._rev) : debug(\"Document state reset to being deleted\"), this.document.reset(doc), this.rebase([], []), this.handleDocConsistencyChanged(this.document.isConsistent());\n  }\n  // Add a change to the buffer\n  add(mutation) {\n    this.onConsistencyChanged && this.onConsistencyChanged(!1), debug(\"Staged local mutation\"), this.buffer.add(mutation);\n    const oldLocal = this.LOCAL;\n    this.LOCAL = mutation.apply(this.LOCAL), this.onMutation && oldLocal !== this.LOCAL && (debug(\"onMutation fired\"), this.onMutation({\n      mutation,\n      document: this.LOCAL,\n      remote: !1\n    }), this.LOCAL === null && this.onDelete && this.onDelete(this.LOCAL));\n  }\n  // Call when a mutation arrives from Sanity\n  arrive(mutation) {\n    if (debug(\"Remote mutation arrived %s -> %s\", mutation.previousRev, mutation.resultRev), mutation.previousRev === mutation.resultRev)\n      throw new Error(\n        `Mutation ${mutation.transactionId} has previousRev === resultRev (${mutation.previousRev})`\n      );\n    return this.document.arrive(mutation);\n  }\n  // Submit all mutations in the buffer to be committed\n  commit() {\n    return new Promise((resolve, reject) => {\n      if (!this.buffer.hasChanges()) {\n        resolve();\n        return;\n      }\n      debug(\"Committing local changes\");\n      const pendingMutations = this.buffer.purge();\n      this.commits.push(new Commit(pendingMutations ? [pendingMutations] : [], { resolve, reject })), this.buffer = new SquashingBuffer(this.LOCAL), this.performCommits();\n    });\n  }\n  // Starts the committer that will try to committ all staged commits to the database\n  // by calling the commitHandler. Will keep running until all commits are successfully\n  // committed.\n  performCommits() {\n    if (!this.commitHandler)\n      throw new Error(\"No commitHandler configured for this BufferedDocument\");\n    this.committerRunning || this._cycleCommitter();\n  }\n  // TODO: Error handling, right now retries after every error\n  _cycleCommitter() {\n    const commit = this.commits.shift();\n    if (!commit) {\n      this.committerRunning = !1;\n      return;\n    }\n    this.committerRunning = !0;\n    const squashed = commit.squash(this.LOCAL), docResponder = this.document.stage(squashed, !0), responder = {\n      success: () => {\n        debug(\"Commit succeeded\"), docResponder.success(), commit.resolve(), this._cycleCommitter();\n      },\n      failure: () => {\n        debug(\"Commit failed\"), commit.tries += 1, this.LOCAL !== null && this.commits.unshift(commit), docResponder.failure(), commit.tries < 200 && setTimeout(() => this._cycleCommitter(), Math.min(commit.tries * 1e3, ONE_MINUTE));\n      },\n      cancel: (error) => {\n        this.commits.forEach((comm) => comm.reject(error)), this.commits = [], this.reset(this.document.HEAD), this.buffer = new SquashingBuffer(this.LOCAL), this.committerRunning = !1;\n      }\n    };\n    debug(\"Posting commit\"), this.commitHandler && this.commitHandler({\n      mutation: squashed,\n      success: responder.success,\n      failure: responder.failure,\n      cancel: responder.cancel\n    });\n  }\n  handleDocRebase(edge, remoteMutations, localMutations) {\n    this.rebase(remoteMutations, localMutations);\n  }\n  handleDocumentDeleted() {\n    debug(\"Document deleted\"), this.LOCAL !== null && this.onDelete && this.onDelete(this.LOCAL), this.commits = [], this.mutations = [];\n  }\n  handleDocMutation(msg) {\n    if (this.commits.length === 0 && !this.buffer.hasChanges()) {\n      debug(\"Document mutated from remote with no local changes\"), this.LOCAL = this.document.EDGE, this.buffer = new SquashingBuffer(this.LOCAL), this.onMutation && this.onMutation(msg);\n      return;\n    }\n    debug(\"Document mutated from remote with local changes\"), this.document.EDGE === null && this.handleDocumentDeleted(), this.rebase([msg.mutation], []);\n  }\n  rebase(remoteMutations, localMutations) {\n    debug(\"Rebasing document\"), this.document.EDGE === null && this.handleDocumentDeleted();\n    const oldLocal = this.LOCAL;\n    this.LOCAL = this.commits.reduce((doc, commit) => commit.apply(doc), this.document.EDGE), this.LOCAL = this.buffer.rebase(this.LOCAL), oldLocal !== null && this.LOCAL !== null && (oldLocal._rev = this.LOCAL._rev), !lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_0__(this.LOCAL, oldLocal) && this.onRebase && this.onRebase(\n      this.LOCAL,\n      remoteMutations.reduce(mutReducerFn, []),\n      localMutations.reduce(mutReducerFn, [])\n    );\n  }\n  handleDocConsistencyChanged(isConsistent) {\n    if (!this.onConsistencyChanged)\n      return;\n    const hasLocalChanges = this.commits.length > 0 || this.buffer.hasChanges();\n    isConsistent && !hasLocalChanges && this.onConsistencyChanged(!0), isConsistent || this.onConsistencyChanged(!1);\n  }\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdG9yL2xpYi9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNaO0FBQ1k7QUFDMkU7QUFDbkY7QUFDQTtBQUNJO0FBQ0k7QUFDeEMsY0FBYyxrQ0FBTztBQUNyQix1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGlCQUFpQixjQUFjO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBLDhFQUE4RSxJQUFJLEtBQUssU0FBUztBQUNoRztBQUNBLDhGQUE4RixRQUFRLFNBQVMsUUFBUTtBQUN2SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrR0FBa0cscUNBQXFDO0FBQ3ZJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSx1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsWUFBWSxNQUFNLE9BQU87QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLEtBQUs7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLElBQUksMkJBQTJCLG9CQUFvQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsT0FBTztBQUNqQyxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLG9CQUFvQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGlDQUFpQztBQUNqRTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLHdCQUF3Qiw4QkFBOEIsa0JBQWtCLDhCQUE4QjtBQUN0RztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSwrQkFBK0IsZ0JBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwrQkFBK0I7QUFDckQsOERBQThEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsK0JBQStCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsaUNBQWlDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsaUJBQWlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwrQkFBK0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixvQkFBb0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsY0FBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDRCQUE0QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlDQUF5Qyw0QkFBNEIsSUFBSTtBQUNwRix3QkFBd0IsK0JBQStCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGdDQUFnQztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixhQUFhO0FBQ3hDLHVCQUF1QiwrQkFBK0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0JBQXNCLDRCQUE0QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxLQUFLO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixXQUFXO0FBQzNCO0FBQ0E7QUFDQSx1RUFBdUUsV0FBVyxpREFBaUQsU0FBUyxpQ0FBaUMsVUFBVTtBQUN2TDtBQUNBO0FBQ0EsMEJBQTBCLFdBQVcsUUFBUSxXQUFXO0FBQ3hEO0FBQ0EsaUNBQWlDLDBCQUEwQixtQkFBbUIsMkJBQTJCLEVBQUUsY0FBYyxFQUFFLElBQUk7QUFDL0gsbUNBQW1DLE1BQU07QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0JBQWtCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsb0RBQW9EO0FBQ3JFO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQSxrQkFBa0IsMkJBQTJCO0FBQzdDO0FBQ0E7QUFDQSx1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGVBQWU7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsYUFBYTtBQUN2QjtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsZ0JBQWdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLEtBQUs7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxTQUFTO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVIQUF1SCx1REFBdUQ7QUFDOUs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0JBQWdCO0FBQzdCLGlCQUFpQiw4Q0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsWUFBWTtBQUNsQztBQUNBLG9HQUFvRyx5QkFBeUI7QUFDN0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWCxVQUFVO0FBQ1Y7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0Esa0NBQWtDLG1CQUFtQixtQ0FBbUMsSUFBSTtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxTQUFTO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUhBQXVILHVEQUF1RDtBQUM5SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsVUFBVSxrQkFBa0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxrQkFBa0I7QUFDOUUsU0FBUyw4Q0FBTztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGtDQUFrQztBQUN6RjtBQUNBLHVIQUF1SCx1REFBdUQ7QUFDOUs7QUFDQTtBQUNBLG1CQUFtQixzRUFBWSxvQkFBb0IsMkJBQTJCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUpBQW1KLG9FQUFZO0FBQy9KO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxrQkFBa0I7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxrQkFBa0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHVIQUF1SCx1REFBdUQ7QUFDOUs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsY0FBYztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQ0FBRztBQUNsQjtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGVBQWUsMENBQUc7QUFDbEI7QUFDQTtBQUNBLGNBQWMsTUFBTTtBQUNwQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsdUhBQXVILHVEQUF1RDtBQUM5SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsNkJBQTZCO0FBQ3RHO0FBQ0EsdURBQXVELGtCQUFrQjtBQUN6RSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHVIQUF1SCx1REFBdUQ7QUFDOUs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsdUVBQXVFLDZCQUE2QjtBQUNwRztBQUNBLHFEQUFxRCxrQkFBa0I7QUFDdkUsS0FBSztBQUNMO0FBQ0E7QUFDQSx1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDZEQUE2RDtBQUN2RTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxrQkFBa0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxxRkFBcUY7QUFDckY7QUFDQSxpR0FBaUc7QUFDakc7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLGlEQUFpRCx1QkFBdUI7QUFDeEUsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvREFBSTtBQUNqQix1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxrQ0FBa0M7QUFDaEYsS0FBSyxtR0FBbUcsbUNBQW1DO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFFBQVEsaUNBQWlDLFNBQVM7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRUFBMkU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscUJBQXFCO0FBQy9DO0FBQ0E7QUFDQSx1SEFBdUgsdURBQXVEO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0U7QUFDL0U7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQW1CO0FBQ2hELG9DQUFvQyxzREFBc0QsNkJBQTZCLG9EQUFvRDtBQUMzSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrSkFBK0osOENBQU87QUFDdEs7QUFDQTtBQUNBLHVIQUF1SCx1REFBdUQ7QUFDOUs7QUFDQTtBQUNBLGdZQUFnWTtBQUNoWTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtJQUErSSxTQUFTLDZDQUE2QztBQUNyTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMEVBQWdCLENBQUMscUVBQVc7QUFDbEQsZUFBZSxTQUFTLHlDQUF5QztBQUNqRSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTLDhCQUE4QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx1RkFBdUYsb0JBQW9CLGlFQUFpRTtBQUNqTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNk5BQTZOLHFCQUFxQjtBQUNsUDtBQUNBO0FBQ0EsaUhBQWlILHVEQUF1RDtBQUN4SztBQUNBO0FBQ0EsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHdCQUF3QixpQ0FBaUMscUJBQXFCO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRixpQkFBaUI7QUFDbEcsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJOQUEyTiw4Q0FBTztBQUNsTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG90ZWwtbWFuYWdlbWVudC8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0b3IvbGliL2luZGV4Lm1qcz8wMzUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc0VxdWFsIGZyb20gXCJsb2Rhc2gvaXNFcXVhbC5qc1wiO1xuaW1wb3J0IGRlYnVnSXQgZnJvbSBcImRlYnVnXCI7XG5pbXBvcnQgZmxhdHRlbiBmcm9tIFwibG9kYXNoL2ZsYXR0ZW4uanNcIjtcbmltcG9ydCB7IHBhcnNlUGF0Y2ggYXMgcGFyc2VQYXRjaCQxLCBhcHBseVBhdGNoZXMsIHN0cmluZ2lmeVBhdGNoZXMsIG1ha2VQYXRjaGVzIH0gZnJvbSBcIkBzYW5pdHkvZGlmZi1tYXRjaC1wYXRjaFwiO1xuaW1wb3J0IG1heCBmcm9tIFwibG9kYXNoL21heC5qc1wiO1xuaW1wb3J0IG1pbiBmcm9tIFwibG9kYXNoL21pbi5qc1wiO1xuaW1wb3J0IHsgdXVpZCB9IGZyb20gXCJAc2FuaXR5L3V1aWRcIjtcbmltcG9ydCBjb21wYWN0IGZyb20gXCJsb2Rhc2gvY29tcGFjdC5qc1wiO1xuY29uc3QgZGVidWcgPSBkZWJ1Z0l0KFwibXV0YXRvci1kb2N1bWVudFwiKTtcbnZhciBfX2RlZlByb3AkaCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgX19kZWZOb3JtYWxQcm9wJGggPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wJGgob2JqLCBrZXksIHsgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlLCBfX3B1YmxpY0ZpZWxkJGggPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3AkaChvYmosIHR5cGVvZiBrZXkgIT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmNsYXNzIEltbXV0YWJsZUFjY2Vzc29yIHtcbiAgY29uc3RydWN0b3IodmFsdWUsIHBhdGgpIHtcbiAgICBfX3B1YmxpY0ZpZWxkJGgodGhpcywgXCJfdmFsdWVcIiksIF9fcHVibGljRmllbGQkaCh0aGlzLCBcInBhdGhcIiksIHRoaXMuX3ZhbHVlID0gdmFsdWUsIHRoaXMucGF0aCA9IHBhdGggfHwgW107XG4gIH1cbiAgY29udGFpbmVyVHlwZSgpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLl92YWx1ZSkgPyBcImFycmF5XCIgOiB0aGlzLl92YWx1ZSAhPT0gbnVsbCAmJiB0eXBlb2YgdGhpcy5fdmFsdWUgPT0gXCJvYmplY3RcIiA/IFwib2JqZWN0XCIgOiBcInByaW1pdGl2ZVwiO1xuICB9XG4gIC8vIENvbW1vbiByZWFkZXIsIHN1cHBvcnRlZCBieSBhbGwgY29udGFpbmVyc1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICB9XG4gIC8vIEFycmF5IHJlYWRlclxuICBsZW5ndGgoKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHRoaXMuX3ZhbHVlKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIldvbid0IHJldHVybiBsZW5ndGggb2Ygbm9uLWluZGV4YWJsZSBfdmFsdWVcIik7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlLmxlbmd0aDtcbiAgfVxuICBnZXRJbmRleChpKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodGhpcy5fdmFsdWUpID8gaSA+PSB0aGlzLmxlbmd0aCgpID8gbnVsbCA6IG5ldyBJbW11dGFibGVBY2Nlc3Nvcih0aGlzLl92YWx1ZVtpXSwgdGhpcy5wYXRoLmNvbmNhdChpKSkgOiAhMTtcbiAgfVxuICAvLyBPYmplY3QgcmVhZGVyXG4gIGhhc0F0dHJpYnV0ZShrZXkpIHtcbiAgICByZXR1cm4gaXNSZWNvcmQkMSh0aGlzLl92YWx1ZSkgPyB0aGlzLl92YWx1ZS5oYXNPd25Qcm9wZXJ0eShrZXkpIDogITE7XG4gIH1cbiAgYXR0cmlidXRlS2V5cygpIHtcbiAgICByZXR1cm4gaXNSZWNvcmQkMSh0aGlzLl92YWx1ZSkgPyBPYmplY3Qua2V5cyh0aGlzLl92YWx1ZSkgOiBbXTtcbiAgfVxuICBnZXRBdHRyaWJ1dGUoa2V5KSB7XG4gICAgaWYgKCFpc1JlY29yZCQxKHRoaXMuX3ZhbHVlKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcImdldEF0dHJpYnV0ZSBvbmx5IGFwcGxpZXMgdG8gcGxhaW4gb2JqZWN0c1wiKTtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoa2V5KSA/IG5ldyBJbW11dGFibGVBY2Nlc3Nvcih0aGlzLl92YWx1ZVtrZXldLCB0aGlzLnBhdGguY29uY2F0KGtleSkpIDogbnVsbDtcbiAgfVxuICAvLyBDb21tb24gd3JpdGVyLCBzdXBwb3J0ZWQgYnkgYWxsIGNvbnRhaW5lcnNcbiAgc2V0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSB0aGlzLl92YWx1ZSA/IHRoaXMgOiBuZXcgSW1tdXRhYmxlQWNjZXNzb3IodmFsdWUsIHRoaXMucGF0aCk7XG4gIH1cbiAgLy8gYXJyYXkgd3JpdGVyIGludGVyZmFjZVxuICBzZXRJbmRleChpLCB2YWx1ZSkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh0aGlzLl92YWx1ZSkpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJzZXRJbmRleCBvbmx5IGFwcGxpZXMgdG8gYXJyYXlzXCIpO1xuICAgIGlmIChPYmplY3QuaXModmFsdWUsIHRoaXMuX3ZhbHVlW2ldKSlcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIGNvbnN0IG5leHRWYWx1ZSA9IHRoaXMuX3ZhbHVlLnNsaWNlKCk7XG4gICAgcmV0dXJuIG5leHRWYWx1ZVtpXSA9IHZhbHVlLCBuZXcgSW1tdXRhYmxlQWNjZXNzb3IobmV4dFZhbHVlLCB0aGlzLnBhdGgpO1xuICB9XG4gIHNldEluZGV4QWNjZXNzb3IoaSwgYWNjZXNzb3IpIHtcbiAgICByZXR1cm4gdGhpcy5zZXRJbmRleChpLCBhY2Nlc3Nvci5nZXQoKSk7XG4gIH1cbiAgdW5zZXRJbmRpY2VzKGluZGljZXMpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy5fdmFsdWUpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwidW5zZXRJbmRpY2VzIG9ubHkgYXBwbGllcyB0byBhcnJheXNcIik7XG4gICAgY29uc3QgbGVuZ3RoID0gdGhpcy5fdmFsdWUubGVuZ3RoLCBuZXh0VmFsdWUgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKVxuICAgICAgaW5kaWNlcy5pbmRleE9mKGkpID09PSAtMSAmJiBuZXh0VmFsdWUucHVzaCh0aGlzLl92YWx1ZVtpXSk7XG4gICAgcmV0dXJuIG5ldyBJbW11dGFibGVBY2Nlc3NvcihuZXh0VmFsdWUsIHRoaXMucGF0aCk7XG4gIH1cbiAgaW5zZXJ0SXRlbXNBdChwb3MsIGl0ZW1zKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHRoaXMuX3ZhbHVlKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcImluc2VydEl0ZW1zQXQgb25seSBhcHBsaWVzIHRvIGFycmF5c1wiKTtcbiAgICBsZXQgbmV4dFZhbHVlO1xuICAgIHJldHVybiB0aGlzLl92YWx1ZS5sZW5ndGggPT09IDAgJiYgcG9zID09PSAwID8gbmV4dFZhbHVlID0gaXRlbXMgOiBuZXh0VmFsdWUgPSB0aGlzLl92YWx1ZS5zbGljZSgwLCBwb3MpLmNvbmNhdChpdGVtcykuY29uY2F0KHRoaXMuX3ZhbHVlLnNsaWNlKHBvcykpLCBuZXcgSW1tdXRhYmxlQWNjZXNzb3IobmV4dFZhbHVlLCB0aGlzLnBhdGgpO1xuICB9XG4gIC8vIE9iamVjdCB3cml0ZXIgaW50ZXJmYWNlXG4gIHNldEF0dHJpYnV0ZShrZXksIHZhbHVlKSB7XG4gICAgaWYgKCFpc1JlY29yZCQxKHRoaXMuX3ZhbHVlKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBzZXQgYXR0cmlidXRlIG9mIG5vbi1vYmplY3QgY29udGFpbmVyXCIpO1xuICAgIGlmIChPYmplY3QuaXModmFsdWUsIHRoaXMuX3ZhbHVlW2tleV0pKVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgY29uc3QgbmV4dFZhbHVlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5fdmFsdWUsIHsgW2tleV06IHZhbHVlIH0pO1xuICAgIHJldHVybiBuZXcgSW1tdXRhYmxlQWNjZXNzb3IobmV4dFZhbHVlLCB0aGlzLnBhdGgpO1xuICB9XG4gIHNldEF0dHJpYnV0ZUFjY2Vzc29yKGtleSwgYWNjZXNzb3IpIHtcbiAgICByZXR1cm4gdGhpcy5zZXRBdHRyaWJ1dGUoa2V5LCBhY2Nlc3Nvci5nZXQoKSk7XG4gIH1cbiAgdW5zZXRBdHRyaWJ1dGUoa2V5KSB7XG4gICAgaWYgKCFpc1JlY29yZCQxKHRoaXMuX3ZhbHVlKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byB1bnNldCBhdHRyaWJ1dGUgb2Ygbm9uLW9iamVjdCBjb250YWluZXJcIik7XG4gICAgY29uc3QgbmV4dFZhbHVlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5fdmFsdWUpO1xuICAgIHJldHVybiBkZWxldGUgbmV4dFZhbHVlW2tleV0sIG5ldyBJbW11dGFibGVBY2Nlc3NvcihuZXh0VmFsdWUsIHRoaXMucGF0aCk7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzUmVjb3JkJDEodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiO1xufVxuZnVuY3Rpb24gaXNSZWNvcmQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiO1xufVxuY29uc3QgSVNfRE9UVEFCTEUgPSAvXlthLXpfJF0rLztcbmZ1bmN0aW9uIGFycmF5VG9KU09OTWF0Y2hQYXRoKHBhdGhBcnJheSkge1xuICBsZXQgcGF0aCA9IFwiXCI7XG4gIHJldHVybiBwYXRoQXJyYXkuZm9yRWFjaCgoc2VnbWVudCwgaW5kZXgpID0+IHtcbiAgICBwYXRoICs9IHN0cmluZ2lmeVNlZ21lbnQoc2VnbWVudCwgaW5kZXggPT09IDApO1xuICB9KSwgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmluZ2lmeVNlZ21lbnQoc2VnbWVudCwgaGFzTGVhZGluZykge1xuICBpZiAodHlwZW9mIHNlZ21lbnQgPT0gXCJudW1iZXJcIilcbiAgICByZXR1cm4gYFske3NlZ21lbnR9XWA7XG4gIGlmIChpc1JlY29yZChzZWdtZW50KSkge1xuICAgIGNvbnN0IHNlZyA9IHNlZ21lbnQ7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHNlZ21lbnQpLm1hcCgoa2V5KSA9PiBpc1ByaW1pdGl2ZVZhbHVlKHNlZ1trZXldKSA/IGBbJHtrZXl9PT1cIiR7c2VnW2tleV19XCJdYCA6IFwiXCIpLmpvaW4oXCJcIik7XG4gIH1cbiAgcmV0dXJuIHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgJiYgSVNfRE9UVEFCTEUudGVzdChzZWdtZW50KSA/IGhhc0xlYWRpbmcgPyBzZWdtZW50IDogYC4ke3NlZ21lbnR9YCA6IGBbJyR7c2VnbWVudH0nXWA7XG59XG5mdW5jdGlvbiBpc1ByaW1pdGl2ZVZhbHVlKHZhbCkge1xuICBzd2l0Y2ggKHR5cGVvZiB2YWwpIHtcbiAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgY2FzZSBcInN0cmluZ1wiOlxuICAgIGNhc2UgXCJib29sZWFuXCI6XG4gICAgICByZXR1cm4gITA7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAhMTtcbiAgfVxufVxuZnVuY3Rpb24gZGVzY2VuZCQxKHRhaWwpIHtcbiAgY29uc3QgW2hlYWQsIG5ld1RhaWxdID0gc3BsaXRJZlBhdGgodGFpbCk7XG4gIGlmICghaGVhZClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJIZWFkIGNhbm5vdCBiZSBudWxsXCIpO1xuICByZXR1cm4gc3ByZWFkSWZVbmlvbkhlYWQoaGVhZCwgbmV3VGFpbCk7XG59XG5mdW5jdGlvbiBzcGxpdElmUGF0aCh0YWlsKSB7XG4gIGlmICh0YWlsLnR5cGUgIT09IFwicGF0aFwiKVxuICAgIHJldHVybiBbdGFpbCwgbnVsbF07XG4gIGNvbnN0IG5vZGVzID0gdGFpbC5ub2RlcztcbiAgcmV0dXJuIG5vZGVzLmxlbmd0aCA9PT0gMCA/IFtudWxsLCBudWxsXSA6IG5vZGVzLmxlbmd0aCA9PT0gMSA/IFtub2Rlc1swXSwgbnVsbF0gOiBbbm9kZXNbMF0sIHsgdHlwZTogXCJwYXRoXCIsIG5vZGVzOiBub2Rlcy5zbGljZSgxKSB9XTtcbn1cbmZ1bmN0aW9uIGNvbmNhdFBhdGhzKHBhdGgxLCBwYXRoMikge1xuICBpZiAoIXBhdGgxICYmICFwYXRoMilcbiAgICByZXR1cm4gbnVsbDtcbiAgY29uc3Qgbm9kZXMxID0gcGF0aDEgPyBwYXRoMS5ub2RlcyA6IFtdLCBub2RlczIgPSBwYXRoMiA/IHBhdGgyLm5vZGVzIDogW107XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJwYXRoXCIsXG4gICAgbm9kZXM6IG5vZGVzMS5jb25jYXQobm9kZXMyKVxuICB9O1xufVxuZnVuY3Rpb24gc3ByZWFkSWZVbmlvbkhlYWQoaGVhZCwgdGFpbCkge1xuICByZXR1cm4gaGVhZC50eXBlICE9PSBcInVuaW9uXCIgPyBbW2hlYWQsIHRhaWxdXSA6IGhlYWQubm9kZXMubWFwKChub2RlKSA9PiB7XG4gICAgaWYgKG5vZGUudHlwZSA9PT0gXCJwYXRoXCIpIHtcbiAgICAgIGNvbnN0IFtzdWJIZWFkLCBzdWJUYWlsXSA9IHNwbGl0SWZQYXRoKG5vZGUpO1xuICAgICAgcmV0dXJuIFtzdWJIZWFkLCBjb25jYXRQYXRocyhzdWJUYWlsLCB0YWlsKV07XG4gICAgfVxuICAgIHJldHVybiBbbm9kZSwgdGFpbF07XG4gIH0pO1xufVxudmFyIF9fZGVmUHJvcCRnID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AkZyA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3AkZyhvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQkZyA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcCRnKG9iaiwgdHlwZW9mIGtleSAhPSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY29uc3QgZGlnaXRDaGFyID0gL1swLTldLywgYXR0cmlidXRlQ2hhck1hdGNoZXIgPSAvXlthLXpBLVowLTlfXSQvLCBhdHRyaWJ1dGVGaXJzdENoYXJNYXRjaGVyID0gL15bYS16QS1aX10kLywgc3ltYm9scyA9IHtcbiAgLy8gTk9URTogVGhlc2UgYXJlIGNvbXBhcmVkIGFnYWluc3QgaW4gb3JkZXIgb2YgZGVmaW5pdGlvbixcbiAgLy8gdGh1cyAnPT0nIG11c3QgY29tZSBiZWZvcmUgJz0nLCAnPj0nIGJlZm9yZSAnPicsIGV0Yy5cbiAgb3BlcmF0b3I6IFtcIi4uXCIsIFwiLlwiLCBcIixcIiwgXCI6XCIsIFwiP1wiXSxcbiAgY29tcGFyYXRvcjogW1wiPj1cIiwgXCI8PVwiLCBcIjxcIiwgXCI+XCIsIFwiPT1cIiwgXCIhPVwiXSxcbiAga2V5d29yZDogW1wiJFwiLCBcIkBcIl0sXG4gIGJvb2xlYW46IFtcInRydWVcIiwgXCJmYWxzZVwiXSxcbiAgcGFyZW46IFtcIltcIiwgXCJdXCJdXG59LCBzeW1ib2xDbGFzc2VzID0gT2JqZWN0LmtleXMoc3ltYm9scyk7XG5jbGFzcyBUb2tlbml6ZXIge1xuICBjb25zdHJ1Y3RvcihwYXRoKSB7XG4gICAgX19wdWJsaWNGaWVsZCRnKHRoaXMsIFwic291cmNlXCIpLCBfX3B1YmxpY0ZpZWxkJGcodGhpcywgXCJpXCIpLCBfX3B1YmxpY0ZpZWxkJGcodGhpcywgXCJsZW5ndGhcIiksIF9fcHVibGljRmllbGQkZyh0aGlzLCBcInRva2VuaXplcnNcIiksIHRoaXMuc291cmNlID0gcGF0aCwgdGhpcy5sZW5ndGggPSBwYXRoLmxlbmd0aCwgdGhpcy5pID0gMCwgdGhpcy50b2tlbml6ZXJzID0gW1xuICAgICAgdGhpcy50b2tlbml6ZVN5bWJvbCxcbiAgICAgIHRoaXMudG9rZW5pemVJZGVudGlmaWVyLFxuICAgICAgdGhpcy50b2tlbml6ZU51bWJlcixcbiAgICAgIHRoaXMudG9rZW5pemVRdW90ZWRcbiAgICBdLm1hcCgoZm4pID0+IGZuLmJpbmQodGhpcykpO1xuICB9XG4gIHRva2VuaXplKCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgIGZvciAoOyAhdGhpcy5FT0YoKTsgKSB7XG4gICAgICB0aGlzLmNob21wV2hpdGVzcGFjZSgpO1xuICAgICAgbGV0IHRva2VuID0gbnVsbDtcbiAgICAgIGlmICghdGhpcy50b2tlbml6ZXJzLnNvbWUoKHRva2VuaXplcikgPT4gKHRva2VuID0gdG9rZW5pemVyKCksICEhdG9rZW4pKSB8fCAhdG9rZW4pXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0b2tlbnMgaW4ganNvbnBhdGggJyR7dGhpcy5zb3VyY2V9JyBAICR7dGhpcy5pfWApO1xuICAgICAgcmVzdWx0LnB1c2godG9rZW4pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIHRha2VXaGlsZShmbikge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy5pO1xuICAgIGxldCByZXN1bHQgPSBcIlwiO1xuICAgIGZvciAoOyAhdGhpcy5FT0YoKTsgKSB7XG4gICAgICBjb25zdCBuZXh0Q2hhciA9IGZuKHRoaXMuc291cmNlW3RoaXMuaV0pO1xuICAgICAgaWYgKG5leHRDaGFyID09PSBudWxsKVxuICAgICAgICBicmVhaztcbiAgICAgIHJlc3VsdCArPSBuZXh0Q2hhciwgdGhpcy5pKys7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmkgPT09IHN0YXJ0ID8gbnVsbCA6IHJlc3VsdDtcbiAgfVxuICBFT0YoKSB7XG4gICAgcmV0dXJuIHRoaXMuaSA+PSB0aGlzLmxlbmd0aDtcbiAgfVxuICBwZWVrKCkge1xuICAgIHJldHVybiB0aGlzLkVPRigpID8gbnVsbCA6IHRoaXMuc291cmNlW3RoaXMuaV07XG4gIH1cbiAgY29uc3VtZShzdHIpIHtcbiAgICBpZiAodGhpcy5pICsgc3RyLmxlbmd0aCA+IHRoaXMubGVuZ3RoKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCAke3N0cn0gYXQgZW5kIG9mIGpzb25wYXRoYCk7XG4gICAgaWYgKHN0ciA9PT0gdGhpcy5zb3VyY2Uuc2xpY2UodGhpcy5pLCB0aGlzLmkgKyBzdHIubGVuZ3RoKSlcbiAgICAgIHRoaXMuaSArPSBzdHIubGVuZ3RoO1xuICAgIGVsc2VcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgXCIke3N0cn1cIiwgYnV0IHNvdXJjZSBjb250YWluZWQgXCIke3RoaXMuc291cmNlLnNsaWNlKCl9YCk7XG4gIH1cbiAgLy8gVHJpZXMgdG8gbWF0Y2ggdGhlIHVwY29taW5nIGJpdCBvZiBzdHJpbmcgd2l0aCB0aGUgcHJvdmlkZWQgc3RyaW5nLiBJZiBpdCBtYXRjaGVzLCByZXR1cm5zXG4gIC8vIHRoZSBzdHJpbmcsIHRoZW4gYWR2YW5jZXMgdGhlIHJlYWQgcG9pbnRlciB0byB0aGUgbmV4dCBiaXQuIElmIG5vdCwgcmV0dXJucyBudWxsIGFuZCBub3RoaW5nXG4gIC8vIGhhcHBlbnMuXG4gIHRyeUNvbnN1bWUoc3RyKSB7XG4gICAgaWYgKHRoaXMuaSArIHN0ci5sZW5ndGggPiB0aGlzLmxlbmd0aClcbiAgICAgIHJldHVybiBudWxsO1xuICAgIGlmIChzdHIgPT09IHRoaXMuc291cmNlLnNsaWNlKHRoaXMuaSwgdGhpcy5pICsgc3RyLmxlbmd0aCkpIHtcbiAgICAgIGlmIChzdHJbMF0ubWF0Y2goYXR0cmlidXRlQ2hhck1hdGNoZXIpICYmIHRoaXMubGVuZ3RoID4gdGhpcy5pICsgc3RyLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBuZXh0Q2hhciA9IHRoaXMuc291cmNlW3RoaXMuaSArIHN0ci5sZW5ndGhdO1xuICAgICAgICBpZiAobmV4dENoYXIgJiYgbmV4dENoYXIubWF0Y2goYXR0cmlidXRlQ2hhck1hdGNoZXIpKVxuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuaSArPSBzdHIubGVuZ3RoLCBzdHI7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNob21wV2hpdGVzcGFjZSgpIHtcbiAgICB0aGlzLnRha2VXaGlsZSgoY2hhcikgPT4gY2hhciA9PT0gXCIgXCIgPyBcIlwiIDogbnVsbCk7XG4gIH1cbiAgdG9rZW5pemVRdW90ZWQoKSB7XG4gICAgY29uc3QgcXVvdGUgPSB0aGlzLnBlZWsoKTtcbiAgICBpZiAocXVvdGUgPT09IFwiJ1wiIHx8IHF1b3RlID09PSAnXCInKSB7XG4gICAgICB0aGlzLmNvbnN1bWUocXVvdGUpO1xuICAgICAgbGV0IGVzY2FwZSA9ICExO1xuICAgICAgY29uc3QgaW5uZXIgPSB0aGlzLnRha2VXaGlsZSgoY2hhcikgPT4gZXNjYXBlID8gKGVzY2FwZSA9ICExLCBjaGFyKSA6IGNoYXIgPT09IFwiXFxcXFwiID8gKGVzY2FwZSA9ICEwLCBcIlwiKSA6IGNoYXIgIT0gcXVvdGUgPyBjaGFyIDogbnVsbCk7XG4gICAgICByZXR1cm4gdGhpcy5jb25zdW1lKHF1b3RlKSwge1xuICAgICAgICB0eXBlOiBcInF1b3RlZFwiLFxuICAgICAgICB2YWx1ZTogaW5uZXIsXG4gICAgICAgIHF1b3RlOiBxdW90ZSA9PT0gJ1wiJyA/IFwiZG91YmxlXCIgOiBcInNpbmdsZVwiXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB0b2tlbml6ZUlkZW50aWZpZXIoKSB7XG4gICAgbGV0IGZpcnN0ID0gITA7XG4gICAgY29uc3QgaWRlbnRpZmllciA9IHRoaXMudGFrZVdoaWxlKChjaGFyKSA9PiBmaXJzdCA/IChmaXJzdCA9ICExLCBjaGFyLm1hdGNoKGF0dHJpYnV0ZUZpcnN0Q2hhck1hdGNoZXIpID8gY2hhciA6IG51bGwpIDogY2hhci5tYXRjaChhdHRyaWJ1dGVDaGFyTWF0Y2hlcikgPyBjaGFyIDogbnVsbCk7XG4gICAgcmV0dXJuIGlkZW50aWZpZXIgIT09IG51bGwgPyB7XG4gICAgICB0eXBlOiBcImlkZW50aWZpZXJcIixcbiAgICAgIG5hbWU6IGlkZW50aWZpZXJcbiAgICB9IDogbnVsbDtcbiAgfVxuICB0b2tlbml6ZU51bWJlcigpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMuaTtcbiAgICBsZXQgZG90U2VlbiA9ICExLCBkaWdpdFNlZW4gPSAhMSwgbmVnYXRpdmUgPSAhMTtcbiAgICB0aGlzLnBlZWsoKSA9PT0gXCItXCIgJiYgKG5lZ2F0aXZlID0gITAsIHRoaXMuY29uc3VtZShcIi1cIikpO1xuICAgIGNvbnN0IG51bWJlciA9IHRoaXMudGFrZVdoaWxlKChjaGFyKSA9PiBjaGFyID09PSBcIi5cIiAmJiAhZG90U2VlbiAmJiBkaWdpdFNlZW4gPyAoZG90U2VlbiA9ICEwLCBjaGFyKSA6IChkaWdpdFNlZW4gPSAhMCwgY2hhci5tYXRjaChkaWdpdENoYXIpID8gY2hhciA6IG51bGwpKTtcbiAgICByZXR1cm4gbnVtYmVyICE9PSBudWxsID8ge1xuICAgICAgdHlwZTogXCJudW1iZXJcIixcbiAgICAgIHZhbHVlOiBuZWdhdGl2ZSA/IC1udW1iZXIgOiArbnVtYmVyLFxuICAgICAgcmF3OiBuZWdhdGl2ZSA/IGAtJHtudW1iZXJ9YCA6IG51bWJlclxuICAgIH0gOiAodGhpcy5pID0gc3RhcnQsIG51bGwpO1xuICB9XG4gIHRva2VuaXplU3ltYm9sKCkge1xuICAgIGZvciAoY29uc3Qgc3ltYm9sQ2xhc3Mgb2Ygc3ltYm9sQ2xhc3Nlcykge1xuICAgICAgY29uc3Qgc3ltYm9sID0gc3ltYm9sc1tzeW1ib2xDbGFzc10uZmluZCgocGF0dGVybikgPT4gdGhpcy50cnlDb25zdW1lKHBhdHRlcm4pKTtcbiAgICAgIGlmIChzeW1ib2wpXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogc3ltYm9sQ2xhc3MsXG4gICAgICAgICAgc3ltYm9sXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5mdW5jdGlvbiB0b2tlbml6ZShqc29ucGF0aCkge1xuICByZXR1cm4gbmV3IFRva2VuaXplcihqc29ucGF0aCkudG9rZW5pemUoKTtcbn1cbnZhciBfX2RlZlByb3AkZiA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgX19kZWZOb3JtYWxQcm9wJGYgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wJGYob2JqLCBrZXksIHsgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlLCBfX3B1YmxpY0ZpZWxkJGYgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3AkZihvYmosIHR5cGVvZiBrZXkgIT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmNsYXNzIFBhcnNlciB7XG4gIGNvbnN0cnVjdG9yKHBhdGgpIHtcbiAgICBfX3B1YmxpY0ZpZWxkJGYodGhpcywgXCJ0b2tlbnNcIiksIF9fcHVibGljRmllbGQkZih0aGlzLCBcImxlbmd0aFwiKSwgX19wdWJsaWNGaWVsZCRmKHRoaXMsIFwiaVwiKSwgdGhpcy50b2tlbnMgPSB0b2tlbml6ZShwYXRoKSwgdGhpcy5sZW5ndGggPSB0aGlzLnRva2Vucy5sZW5ndGgsIHRoaXMuaSA9IDA7XG4gIH1cbiAgcGFyc2UoKSB7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VQYXRoKCk7XG4gIH1cbiAgRU9GKCkge1xuICAgIHJldHVybiB0aGlzLmkgPj0gdGhpcy5sZW5ndGg7XG4gIH1cbiAgLy8gTG9vayBhdCB1cGNvbWluZyB0b2tlblxuICBwZWVrKCkge1xuICAgIHJldHVybiB0aGlzLkVPRigpID8gbnVsbCA6IHRoaXMudG9rZW5zW3RoaXMuaV07XG4gIH1cbiAgY29uc3VtZSgpIHtcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLnBlZWsoKTtcbiAgICByZXR1cm4gdGhpcy5pICs9IDEsIHJlc3VsdDtcbiAgfVxuICAvLyBSZXR1cm4gbmV4dCB0b2tlbiBpZiBpdCBtYXRjaGVzIHRoZSBwYXR0ZXJuXG4gIHByb2JlKHBhdHRlcm4pIHtcbiAgICBjb25zdCB0b2tlbiA9IHRoaXMucGVlaygpO1xuICAgIGlmICghdG9rZW4pXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICBjb25zdCByZWNvcmQgPSB0b2tlbjtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMocGF0dGVybikuZXZlcnkoKGtleSkgPT4ga2V5IGluIHRva2VuICYmIHBhdHRlcm5ba2V5XSA9PT0gcmVjb3JkW2tleV0pID8gdG9rZW4gOiBudWxsO1xuICB9XG4gIC8vIFJldHVybiBhbmQgY29uc3VtZSBuZXh0IHRva2VuIGlmIGl0IG1hdGNoZXMgdGhlIHBhdHRlcm5cbiAgbWF0Y2gocGF0dGVybikge1xuICAgIHJldHVybiB0aGlzLnByb2JlKHBhdHRlcm4pID8gdGhpcy5jb25zdW1lKCkgOiBudWxsO1xuICB9XG4gIHBhcnNlQXR0cmlidXRlKCkge1xuICAgIGNvbnN0IHRva2VuID0gdGhpcy5tYXRjaCh7IHR5cGU6IFwiaWRlbnRpZmllclwiIH0pO1xuICAgIGlmICh0b2tlbiAmJiB0b2tlbi50eXBlID09PSBcImlkZW50aWZpZXJcIilcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiYXR0cmlidXRlXCIsXG4gICAgICAgIG5hbWU6IHRva2VuLm5hbWVcbiAgICAgIH07XG4gICAgY29uc3QgcXVvdGVkID0gdGhpcy5tYXRjaCh7IHR5cGU6IFwicXVvdGVkXCIsIHF1b3RlOiBcInNpbmdsZVwiIH0pO1xuICAgIHJldHVybiBxdW90ZWQgJiYgcXVvdGVkLnR5cGUgPT09IFwicXVvdGVkXCIgPyB7XG4gICAgICB0eXBlOiBcImF0dHJpYnV0ZVwiLFxuICAgICAgbmFtZTogcXVvdGVkLnZhbHVlIHx8IFwiXCJcbiAgICB9IDogbnVsbDtcbiAgfVxuICBwYXJzZUFsaWFzKCkge1xuICAgIHJldHVybiB0aGlzLm1hdGNoKHsgdHlwZTogXCJrZXl3b3JkXCIsIHN5bWJvbDogXCJAXCIgfSkgfHwgdGhpcy5tYXRjaCh7IHR5cGU6IFwia2V5d29yZFwiLCBzeW1ib2w6IFwiJFwiIH0pID8ge1xuICAgICAgdHlwZTogXCJhbGlhc1wiLFxuICAgICAgdGFyZ2V0OiBcInNlbGZcIlxuICAgIH0gOiBudWxsO1xuICB9XG4gIHBhcnNlTnVtYmVyKCkge1xuICAgIGNvbnN0IHRva2VuID0gdGhpcy5tYXRjaCh7IHR5cGU6IFwibnVtYmVyXCIgfSk7XG4gICAgcmV0dXJuIHRva2VuICYmIHRva2VuLnR5cGUgPT09IFwibnVtYmVyXCIgPyB7XG4gICAgICB0eXBlOiBcIm51bWJlclwiLFxuICAgICAgdmFsdWU6IHRva2VuLnZhbHVlXG4gICAgfSA6IG51bGw7XG4gIH1cbiAgcGFyc2VOdW1iZXJWYWx1ZSgpIHtcbiAgICBjb25zdCBleHByID0gdGhpcy5wYXJzZU51bWJlcigpO1xuICAgIHJldHVybiBleHByID8gZXhwci52YWx1ZSA6IG51bGw7XG4gIH1cbiAgcGFyc2VTbGljZVNlbGVjdG9yKCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy5pLCByYW5nZVN0YXJ0ID0gdGhpcy5wYXJzZU51bWJlclZhbHVlKCk7XG4gICAgaWYgKCF0aGlzLm1hdGNoKHsgdHlwZTogXCJvcGVyYXRvclwiLCBzeW1ib2w6IFwiOlwiIH0pKVxuICAgICAgcmV0dXJuIHJhbmdlU3RhcnQgPT09IG51bGwgPyAodGhpcy5pID0gc3RhcnQsIG51bGwpIDogeyB0eXBlOiBcImluZGV4XCIsIHZhbHVlOiByYW5nZVN0YXJ0IH07XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgdHlwZTogXCJyYW5nZVwiLFxuICAgICAgc3RhcnQ6IHJhbmdlU3RhcnQsXG4gICAgICBlbmQ6IHRoaXMucGFyc2VOdW1iZXJWYWx1ZSgpXG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5tYXRjaCh7IHR5cGU6IFwib3BlcmF0b3JcIiwgc3ltYm9sOiBcIjpcIiB9KSAmJiAocmVzdWx0LnN0ZXAgPSB0aGlzLnBhcnNlTnVtYmVyVmFsdWUoKSksIHJlc3VsdC5zdGFydCA9PT0gbnVsbCAmJiByZXN1bHQuZW5kID09PSBudWxsID8gKHRoaXMuaSA9IHN0YXJ0LCBudWxsKSA6IHJlc3VsdDtcbiAgfVxuICBwYXJzZVZhbHVlUmVmZXJlbmNlKCkge1xuICAgIHJldHVybiB0aGlzLnBhcnNlQXR0cmlidXRlKCkgfHwgdGhpcy5wYXJzZVNsaWNlU2VsZWN0b3IoKTtcbiAgfVxuICBwYXJzZUxpdGVyYWxWYWx1ZSgpIHtcbiAgICBjb25zdCBsaXRlcmFsU3RyaW5nID0gdGhpcy5tYXRjaCh7IHR5cGU6IFwicXVvdGVkXCIsIHF1b3RlOiBcImRvdWJsZVwiIH0pO1xuICAgIGlmIChsaXRlcmFsU3RyaW5nICYmIGxpdGVyYWxTdHJpbmcudHlwZSA9PT0gXCJxdW90ZWRcIilcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgIHZhbHVlOiBsaXRlcmFsU3RyaW5nLnZhbHVlIHx8IFwiXCJcbiAgICAgIH07XG4gICAgY29uc3QgbGl0ZXJhbEJvb2xlYW4gPSB0aGlzLm1hdGNoKHsgdHlwZTogXCJib29sZWFuXCIgfSk7XG4gICAgcmV0dXJuIGxpdGVyYWxCb29sZWFuICYmIGxpdGVyYWxCb29sZWFuLnR5cGUgPT09IFwiYm9vbGVhblwiID8ge1xuICAgICAgdHlwZTogXCJib29sZWFuXCIsXG4gICAgICB2YWx1ZTogbGl0ZXJhbEJvb2xlYW4uc3ltYm9sID09PSBcInRydWVcIlxuICAgIH0gOiB0aGlzLnBhcnNlTnVtYmVyKCk7XG4gIH1cbiAgLy8gVE9ETzogUmVvcmRlciBjb25zdHJhaW50cyBzbyB0aGF0IGxpdGVyYWwgdmFsdWUgaXMgYWx3YXlzIG9uIHJocywgYW5kIHZhcmlhYmxlIGlzIGFsd2F5c1xuICAvLyBvbiBsaHMuXG4gIHBhcnNlRmlsdGVyRXhwcmVzc2lvbigpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMuaSwgZXhwciA9IHRoaXMucGFyc2VBdHRyaWJ1dGUoKSB8fCB0aGlzLnBhcnNlQWxpYXMoKTtcbiAgICBpZiAoIWV4cHIpXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICBpZiAodGhpcy5tYXRjaCh7IHR5cGU6IFwib3BlcmF0b3JcIiwgc3ltYm9sOiBcIj9cIiB9KSlcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiY29uc3RyYWludFwiLFxuICAgICAgICBvcGVyYXRvcjogXCI/XCIsXG4gICAgICAgIGxoczogZXhwclxuICAgICAgfTtcbiAgICBjb25zdCBiaW5PcCA9IHRoaXMubWF0Y2goeyB0eXBlOiBcImNvbXBhcmF0b3JcIiB9KTtcbiAgICBpZiAoIWJpbk9wIHx8IGJpbk9wLnR5cGUgIT09IFwiY29tcGFyYXRvclwiKVxuICAgICAgcmV0dXJuIHRoaXMuaSA9IHN0YXJ0LCBudWxsO1xuICAgIGNvbnN0IGxocyA9IGV4cHIsIHJocyA9IHRoaXMucGFyc2VMaXRlcmFsVmFsdWUoKTtcbiAgICBpZiAoIXJocylcbiAgICAgIHRocm93IG5ldyBFcnJvcihgT3BlcmF0b3IgJHtiaW5PcC5zeW1ib2x9IG5lZWRzIGEgbGl0ZXJhbCB2YWx1ZSBhdCB0aGUgcmlnaHQgaGFuZCBzaWRlYCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiY29uc3RyYWludFwiLFxuICAgICAgb3BlcmF0b3I6IGJpbk9wLnN5bWJvbCxcbiAgICAgIGxocyxcbiAgICAgIHJoc1xuICAgIH07XG4gIH1cbiAgcGFyc2VFeHByZXNzaW9uKCkge1xuICAgIHJldHVybiB0aGlzLnBhcnNlRmlsdGVyRXhwcmVzc2lvbigpIHx8IHRoaXMucGFyc2VWYWx1ZVJlZmVyZW5jZSgpO1xuICB9XG4gIHBhcnNlVW5pb24oKSB7XG4gICAgaWYgKCF0aGlzLm1hdGNoKHsgdHlwZTogXCJwYXJlblwiLCBzeW1ib2w6IFwiW1wiIH0pKVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgY29uc3QgdGVybXMgPSBbXTtcbiAgICBsZXQgZXhwciA9IHRoaXMucGFyc2VGaWx0ZXJFeHByZXNzaW9uKCkgfHwgdGhpcy5wYXJzZVBhdGgoKSB8fCB0aGlzLnBhcnNlVmFsdWVSZWZlcmVuY2UoKTtcbiAgICBmb3IgKDsgZXhwciAmJiAodGVybXMucHVzaChleHByKSwgIXRoaXMubWF0Y2goeyB0eXBlOiBcInBhcmVuXCIsIHN5bWJvbDogXCJdXCIgfSkpOyApIHtcbiAgICAgIGlmICghdGhpcy5tYXRjaCh7IHR5cGU6IFwib3BlcmF0b3JcIiwgc3ltYm9sOiBcIixcIiB9KSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgXVwiKTtcbiAgICAgIGlmIChleHByID0gdGhpcy5wYXJzZUZpbHRlckV4cHJlc3Npb24oKSB8fCB0aGlzLnBhcnNlUGF0aCgpIHx8IHRoaXMucGFyc2VWYWx1ZVJlZmVyZW5jZSgpLCAhZXhwcilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgZXhwcmVzc2lvbiBmb2xsb3dpbmcgJywnXCIpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJ1bmlvblwiLFxuICAgICAgbm9kZXM6IHRlcm1zXG4gICAgfTtcbiAgfVxuICBwYXJzZVJlY3Vyc2l2ZSgpIHtcbiAgICBpZiAoIXRoaXMubWF0Y2goeyB0eXBlOiBcIm9wZXJhdG9yXCIsIHN5bWJvbDogXCIuLlwiIH0pKVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgY29uc3Qgc3VicGF0aCA9IHRoaXMucGFyc2VQYXRoKCk7XG4gICAgaWYgKCFzdWJwYXRoKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgcGF0aCBmb2xsb3dpbmcgJy4uJyBvcGVyYXRvclwiKTtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJyZWN1cnNpdmVcIixcbiAgICAgIHRlcm06IHN1YnBhdGhcbiAgICB9O1xuICB9XG4gIHBhcnNlUGF0aCgpIHtcbiAgICBjb25zdCBub2RlcyA9IFtdLCBleHByID0gdGhpcy5wYXJzZUF0dHJpYnV0ZSgpIHx8IHRoaXMucGFyc2VVbmlvbigpIHx8IHRoaXMucGFyc2VSZWN1cnNpdmUoKTtcbiAgICBpZiAoIWV4cHIpXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICBmb3IgKG5vZGVzLnB1c2goZXhwcik7ICF0aGlzLkVPRigpOyApXG4gICAgICBpZiAodGhpcy5tYXRjaCh7IHR5cGU6IFwib3BlcmF0b3JcIiwgc3ltYm9sOiBcIi5cIiB9KSkge1xuICAgICAgICBjb25zdCBhdHRyID0gdGhpcy5wYXJzZUF0dHJpYnV0ZSgpO1xuICAgICAgICBpZiAoIWF0dHIpXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgYXR0cmlidXRlIG5hbWUgZm9sbG93aW5nICcuXCIpO1xuICAgICAgICBub2Rlcy5wdXNoKGF0dHIpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wcm9iZSh7IHR5cGU6IFwicGFyZW5cIiwgc3ltYm9sOiBcIltcIiB9KSkge1xuICAgICAgICBjb25zdCB1bmlvbiA9IHRoaXMucGFyc2VVbmlvbigpO1xuICAgICAgICBpZiAoIXVuaW9uKVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIHVuaW9uIGZvbGxvd2luZyAnWydcIik7XG4gICAgICAgIG5vZGVzLnB1c2godW5pb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgcmVjdXJzaXZlID0gdGhpcy5wYXJzZVJlY3Vyc2l2ZSgpO1xuICAgICAgICByZWN1cnNpdmUgJiYgbm9kZXMucHVzaChyZWN1cnNpdmUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICByZXR1cm4gbm9kZXMubGVuZ3RoID09PSAxID8gbm9kZXNbMF0gOiB7XG4gICAgICB0eXBlOiBcInBhdGhcIixcbiAgICAgIG5vZGVzXG4gICAgfTtcbiAgfVxufVxuZnVuY3Rpb24gcGFyc2VKc29uUGF0aChwYXRoKSB7XG4gIGNvbnN0IHBhcnNlZCA9IG5ldyBQYXJzZXIocGF0aCkucGFyc2UoKTtcbiAgaWYgKCFwYXJzZWQpXG4gICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcGFyc2UgSlNPTiBwYXRoIFwiJHtwYXRofVwiYCk7XG4gIHJldHVybiBwYXJzZWQ7XG59XG5mdW5jdGlvbiB0b1BhdGgoZXhwcikge1xuICByZXR1cm4gdG9QYXRoSW5uZXIoZXhwciwgITEpO1xufVxuZnVuY3Rpb24gdG9QYXRoSW5uZXIoZXhwciwgaW5Vbmlvbikge1xuICBzd2l0Y2ggKGV4cHIudHlwZSkge1xuICAgIGNhc2UgXCJhdHRyaWJ1dGVcIjpcbiAgICAgIHJldHVybiBleHByLm5hbWU7XG4gICAgY2FzZSBcImFsaWFzXCI6XG4gICAgICByZXR1cm4gZXhwci50YXJnZXQgPT09IFwic2VsZlwiID8gXCJAXCIgOiBcIiRcIjtcbiAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICByZXR1cm4gYCR7ZXhwci52YWx1ZX1gO1xuICAgIGNhc2UgXCJyYW5nZVwiOiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgIHJldHVybiBpblVuaW9uIHx8IHJlc3VsdC5wdXNoKFwiW1wiKSwgZXhwci5zdGFydCAmJiByZXN1bHQucHVzaChgJHtleHByLnN0YXJ0fWApLCByZXN1bHQucHVzaChcIjpcIiksIGV4cHIuZW5kICYmIHJlc3VsdC5wdXNoKGAke2V4cHIuZW5kfWApLCBleHByLnN0ZXAgJiYgcmVzdWx0LnB1c2goYDoke2V4cHIuc3RlcH1gKSwgaW5VbmlvbiB8fCByZXN1bHQucHVzaChcIl1cIiksIHJlc3VsdC5qb2luKFwiXCIpO1xuICAgIH1cbiAgICBjYXNlIFwiaW5kZXhcIjpcbiAgICAgIHJldHVybiBpblVuaW9uID8gYCR7ZXhwci52YWx1ZX1gIDogYFske2V4cHIudmFsdWV9XWA7XG4gICAgY2FzZSBcImNvbnN0cmFpbnRcIjoge1xuICAgICAgY29uc3QgcmhzID0gZXhwci5yaHMgPyBgICR7dG9QYXRoSW5uZXIoZXhwci5yaHMsICExKX1gIDogXCJcIiwgaW5uZXIgPSBgJHt0b1BhdGhJbm5lcihleHByLmxocywgITEpfSAke2V4cHIub3BlcmF0b3J9JHtyaHN9YDtcbiAgICAgIHJldHVybiBpblVuaW9uID8gaW5uZXIgOiBgWyR7aW5uZXJ9XWA7XG4gICAgfVxuICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShleHByLnZhbHVlKTtcbiAgICBjYXNlIFwicGF0aFwiOiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBbXSwgbm9kZXMgPSBleHByLm5vZGVzLnNsaWNlKCk7XG4gICAgICBmb3IgKDsgbm9kZXMubGVuZ3RoID4gMDsgKSB7XG4gICAgICAgIGNvbnN0IG5vZGUgPSBub2Rlcy5zaGlmdCgpO1xuICAgICAgICBub2RlICYmIHJlc3VsdC5wdXNoKHRvUGF0aChub2RlKSk7XG4gICAgICAgIGNvbnN0IHVwY29taW5nID0gbm9kZXNbMF07XG4gICAgICAgIHVwY29taW5nICYmIHRvUGF0aElubmVyKHVwY29taW5nLCAhMSlbMF0gIT09IFwiW1wiICYmIHJlc3VsdC5wdXNoKFwiLlwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQuam9pbihcIlwiKTtcbiAgICB9XG4gICAgY2FzZSBcInVuaW9uXCI6XG4gICAgICByZXR1cm4gYFske2V4cHIubm9kZXMubWFwKChlKSA9PiB0b1BhdGhJbm5lcihlLCAhMCkpLmpvaW4oXCIsXCIpfV1gO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gbm9kZSB0eXBlICR7ZXhwci50eXBlfWApO1xuICAgIGNhc2UgXCJyZWN1cnNpdmVcIjpcbiAgICAgIHJldHVybiBgLi4ke3RvUGF0aElubmVyKGV4cHIudGVybSwgITEpfWA7XG4gIH1cbn1cbnZhciBfX2RlZlByb3AkZSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgX19kZWZOb3JtYWxQcm9wJGUgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wJGUob2JqLCBrZXksIHsgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlLCBfX3B1YmxpY0ZpZWxkJGUgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3AkZShvYmosIGtleSArIFwiXCIsIHZhbHVlKTtcbmNsYXNzIEV4cHJlc3Npb24ge1xuICBjb25zdHJ1Y3RvcihleHByKSB7XG4gICAgaWYgKF9fcHVibGljRmllbGQkZSh0aGlzLCBcImV4cHJcIiksICFleHByKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGVkIHRvIGNyZWF0ZSBFeHByZXNzaW9uIGZyb20gbnVsbC12YWx1ZVwiKTtcbiAgICBpZiAoXCJleHByXCIgaW4gZXhwciA/IHRoaXMuZXhwciA9IGV4cHIuZXhwciA6IHRoaXMuZXhwciA9IGV4cHIsICEoXCJ0eXBlXCIgaW4gdGhpcy5leHByKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkF0dGVtcHQgdG8gY3JlYXRlIEV4cHJlc3Npb24gZm9yIGV4cHJlc3Npb24gd2l0aCBubyB0eXBlXCIpO1xuICB9XG4gIGlzUGF0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5leHByLnR5cGUgPT09IFwicGF0aFwiO1xuICB9XG4gIGlzVW5pb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwci50eXBlID09PSBcInVuaW9uXCI7XG4gIH1cbiAgaXNDb2xsZWN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmlzUGF0aCgpIHx8IHRoaXMuaXNVbmlvbigpO1xuICB9XG4gIGlzQ29uc3RyYWludCgpIHtcbiAgICByZXR1cm4gdGhpcy5leHByLnR5cGUgPT09IFwiY29uc3RyYWludFwiO1xuICB9XG4gIGlzUmVjdXJzaXZlKCkge1xuICAgIHJldHVybiB0aGlzLmV4cHIudHlwZSA9PT0gXCJyZWN1cnNpdmVcIjtcbiAgfVxuICBpc0V4aXN0ZW5jZUNvbnN0cmFpbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwci50eXBlID09PSBcImNvbnN0cmFpbnRcIiAmJiB0aGlzLmV4cHIub3BlcmF0b3IgPT09IFwiP1wiO1xuICB9XG4gIGlzSW5kZXgoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwci50eXBlID09PSBcImluZGV4XCI7XG4gIH1cbiAgaXNSYW5nZSgpIHtcbiAgICByZXR1cm4gdGhpcy5leHByLnR5cGUgPT09IFwicmFuZ2VcIjtcbiAgfVxuICBleHBhbmRSYW5nZShwcm9iZSkge1xuICAgIGNvbnN0IHByb2JlTGVuZ3RoID0gKCkgPT4ge1xuICAgICAgaWYgKCFwcm9iZSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZXhwYW5kUmFuZ2UoKSByZXF1aXJlZCBhIHByb2JlIHRoYXQgd2FzIG5vdCBwYXNzZWRcIik7XG4gICAgICByZXR1cm4gcHJvYmUubGVuZ3RoKCk7XG4gICAgfTtcbiAgICBsZXQgc3RhcnQgPSBcInN0YXJ0XCIgaW4gdGhpcy5leHByICYmIHRoaXMuZXhwci5zdGFydCB8fCAwO1xuICAgIHN0YXJ0ID0gaW50ZXJwcmV0TmVnYXRpdmVJbmRleChzdGFydCwgcHJvYmUpO1xuICAgIGxldCBlbmQgPSBcImVuZFwiIGluIHRoaXMuZXhwciAmJiB0aGlzLmV4cHIuZW5kIHx8IHByb2JlTGVuZ3RoKCk7XG4gICAgZW5kID0gaW50ZXJwcmV0TmVnYXRpdmVJbmRleChlbmQsIHByb2JlKTtcbiAgICBjb25zdCBzdGVwID0gXCJzdGVwXCIgaW4gdGhpcy5leHByICYmIHRoaXMuZXhwci5zdGVwIHx8IDE7XG4gICAgcmV0dXJuIHsgc3RhcnQsIGVuZCwgc3RlcCB9O1xuICB9XG4gIGlzQXR0cmlidXRlUmVmZXJlbmNlKCkge1xuICAgIHJldHVybiB0aGlzLmV4cHIudHlwZSA9PT0gXCJhdHRyaWJ1dGVcIjtcbiAgfVxuICAvLyBJcyBhIHJhbmdlIG9yIGluZGV4IC0+IHNvbWV0aGluZyByZWZlcmVuY2luZyBpbmRleGVzXG4gIGlzSW5kZXhSZWZlcmVuY2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuaXNJbmRleCgpIHx8IHRoaXMuaXNSYW5nZSgpO1xuICB9XG4gIG5hbWUoKSB7XG4gICAgcmV0dXJuIFwibmFtZVwiIGluIHRoaXMuZXhwciA/IHRoaXMuZXhwci5uYW1lIDogXCJcIjtcbiAgfVxuICBpc1NlbGZSZWZlcmVuY2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwci50eXBlID09PSBcImFsaWFzXCIgJiYgdGhpcy5leHByLnRhcmdldCA9PT0gXCJzZWxmXCI7XG4gIH1cbiAgY29uc3RyYWludFRhcmdldElzU2VsZigpIHtcbiAgICByZXR1cm4gdGhpcy5leHByLnR5cGUgPT09IFwiY29uc3RyYWludFwiICYmIHRoaXMuZXhwci5saHMudHlwZSA9PT0gXCJhbGlhc1wiICYmIHRoaXMuZXhwci5saHMudGFyZ2V0ID09PSBcInNlbGZcIjtcbiAgfVxuICBjb25zdHJhaW50VGFyZ2V0SXNBdHRyaWJ1dGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwci50eXBlID09PSBcImNvbnN0cmFpbnRcIiAmJiB0aGlzLmV4cHIubGhzLnR5cGUgPT09IFwiYXR0cmlidXRlXCI7XG4gIH1cbiAgdGVzdENvbnN0cmFpbnQocHJvYmUpIHtcbiAgICBjb25zdCBleHByID0gdGhpcy5leHByO1xuICAgIGlmIChleHByLnR5cGUgPT09IFwiY29uc3RyYWludFwiICYmIGV4cHIubGhzLnR5cGUgPT09IFwiYWxpYXNcIiAmJiBleHByLmxocy50YXJnZXQgPT09IFwic2VsZlwiKSB7XG4gICAgICBpZiAocHJvYmUuY29udGFpbmVyVHlwZSgpICE9PSBcInByaW1pdGl2ZVwiKVxuICAgICAgICByZXR1cm4gITE7XG4gICAgICBpZiAoZXhwci50eXBlID09PSBcImNvbnN0cmFpbnRcIiAmJiBleHByLm9wZXJhdG9yID09PSBcIj9cIilcbiAgICAgICAgcmV0dXJuICEwO1xuICAgICAgY29uc3QgbGhzMiA9IHByb2JlLmdldCgpLCByaHMyID0gZXhwci5yaHMgJiYgXCJ2YWx1ZVwiIGluIGV4cHIucmhzID8gZXhwci5yaHMudmFsdWUgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gdGVzdEJpbmFyeU9wZXJhdG9yKGxoczIsIGV4cHIub3BlcmF0b3IsIHJoczIpO1xuICAgIH1cbiAgICBpZiAoZXhwci50eXBlICE9PSBcImNvbnN0cmFpbnRcIilcbiAgICAgIHJldHVybiAhMTtcbiAgICBjb25zdCBsaHMgPSBleHByLmxocztcbiAgICBpZiAoIWxocylcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIExIUyBvZiBleHByZXNzaW9uXCIpO1xuICAgIGlmIChsaHMudHlwZSAhPT0gXCJhdHRyaWJ1dGVcIilcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ29uc3RyYWludCB0YXJnZXQgJHtsaHMudHlwZX0gbm90IHN1cHBvcnRlZGApO1xuICAgIGlmIChwcm9iZS5jb250YWluZXJUeXBlKCkgIT09IFwib2JqZWN0XCIpXG4gICAgICByZXR1cm4gITE7XG4gICAgY29uc3QgbGhzVmFsdWUgPSBwcm9iZS5nZXRBdHRyaWJ1dGUobGhzLm5hbWUpO1xuICAgIGlmIChsaHNWYWx1ZSA9PSBudWxsIHx8IGxoc1ZhbHVlLmNvbnRhaW5lclR5cGUoKSAhPT0gXCJwcmltaXRpdmVcIilcbiAgICAgIHJldHVybiAhMTtcbiAgICBpZiAodGhpcy5pc0V4aXN0ZW5jZUNvbnN0cmFpbnQoKSlcbiAgICAgIHJldHVybiAhMDtcbiAgICBjb25zdCByaHMgPSBleHByLnJocyAmJiBcInZhbHVlXCIgaW4gZXhwci5yaHMgPyBleHByLnJocy52YWx1ZSA6IHZvaWQgMDtcbiAgICByZXR1cm4gdGVzdEJpbmFyeU9wZXJhdG9yKGxoc1ZhbHVlLmdldCgpLCBleHByLm9wZXJhdG9yLCByaHMpO1xuICB9XG4gIHBhdGhOb2RlcygpIHtcbiAgICByZXR1cm4gdGhpcy5leHByLnR5cGUgPT09IFwicGF0aFwiID8gdGhpcy5leHByLm5vZGVzIDogW3RoaXMuZXhwcl07XG4gIH1cbiAgcHJlcGVuZChub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUgPyBuZXcgRXhwcmVzc2lvbih7XG4gICAgICB0eXBlOiBcInBhdGhcIixcbiAgICAgIG5vZGVzOiBub2RlLnBhdGhOb2RlcygpLmNvbmNhdCh0aGlzLnBhdGhOb2RlcygpKVxuICAgIH0pIDogdGhpcztcbiAgfVxuICBjb25jYXQob3RoZXIpIHtcbiAgICByZXR1cm4gb3RoZXIgPyBvdGhlci5wcmVwZW5kKHRoaXMpIDogdGhpcztcbiAgfVxuICBkZXNjZW5kKCkge1xuICAgIHJldHVybiBkZXNjZW5kJDEodGhpcy5leHByKS5tYXAoKGhlYWRUYWlsKSA9PiB7XG4gICAgICBjb25zdCBbaGVhZCwgdGFpbF0gPSBoZWFkVGFpbDtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGhlYWQ6IGhlYWQgPyBuZXcgRXhwcmVzc2lvbihoZWFkKSA6IG51bGwsXG4gICAgICAgIHRhaWw6IHRhaWwgPyBuZXcgRXhwcmVzc2lvbih0YWlsKSA6IG51bGxcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cbiAgdW53cmFwUmVjdXJzaXZlKCkge1xuICAgIGlmICh0aGlzLmV4cHIudHlwZSAhPT0gXCJyZWN1cnNpdmVcIilcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQXR0ZW1wdCB0byB1bndyYXAgcmVjdXJzaXZlIG9uIHR5cGUgJHt0aGlzLmV4cHIudHlwZX1gKTtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb24odGhpcy5leHByLnRlcm0pO1xuICB9XG4gIHRvSW5kaWNpZXMocHJvYmUpIHtcbiAgICBpZiAodGhpcy5leHByLnR5cGUgIT09IFwiaW5kZXhcIiAmJiB0aGlzLmV4cHIudHlwZSAhPT0gXCJyYW5nZVwiKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm9kZSBjYW5ub3QgYmUgY29udmVydGVkIHRvIGluZGV4ZXNcIik7XG4gICAgaWYgKHRoaXMuZXhwci50eXBlID09PSBcImluZGV4XCIpXG4gICAgICByZXR1cm4gW2ludGVycHJldE5lZ2F0aXZlSW5kZXgodGhpcy5leHByLnZhbHVlLCBwcm9iZSldO1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdLCByYW5nZSA9IHRoaXMuZXhwYW5kUmFuZ2UocHJvYmUpO1xuICAgIGxldCB7IHN0YXJ0LCBlbmQgfSA9IHJhbmdlO1xuICAgIHJhbmdlLnN0ZXAgPCAwICYmIChbc3RhcnQsIGVuZF0gPSBbZW5kLCBzdGFydF0pO1xuICAgIGZvciAobGV0IGkgPSBzdGFydDsgaSA8IGVuZDsgaSsrKVxuICAgICAgcmVzdWx0LnB1c2goaSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICB0b0ZpZWxkUmVmZXJlbmNlcygpIHtcbiAgICBpZiAodGhpcy5pc0luZGV4UmVmZXJlbmNlKCkpXG4gICAgICByZXR1cm4gdGhpcy50b0luZGljaWVzKCk7XG4gICAgaWYgKHRoaXMuZXhwci50eXBlID09PSBcImF0dHJpYnV0ZVwiKVxuICAgICAgcmV0dXJuIFt0aGlzLmV4cHIubmFtZV07XG4gICAgdGhyb3cgbmV3IEVycm9yKGBDYW4ndCBjb252ZXJ0ICR7dGhpcy5leHByLnR5cGV9IHRvIGZpZWxkIHJlZmVyZW5jZXNgKTtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdG9QYXRoKHRoaXMuZXhwcik7XG4gIH1cbiAgc3RhdGljIGZyb21QYXRoKHBhdGgpIHtcbiAgICBjb25zdCBwYXJzZWQgPSBwYXJzZUpzb25QYXRoKHBhdGgpO1xuICAgIGlmICghcGFyc2VkKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcGFyc2UgcGF0aCBcIiR7cGF0aH1cImApO1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbihwYXJzZWQpO1xuICB9XG4gIHN0YXRpYyBhdHRyaWJ1dGVSZWZlcmVuY2UobmFtZSkge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbih7XG4gICAgICB0eXBlOiBcImF0dHJpYnV0ZVwiLFxuICAgICAgbmFtZVxuICAgIH0pO1xuICB9XG4gIHN0YXRpYyBpbmRleFJlZmVyZW5jZShpKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uKHtcbiAgICAgIHR5cGU6IFwiaW5kZXhcIixcbiAgICAgIHZhbHVlOiBpXG4gICAgfSk7XG4gIH1cbn1cbmZ1bmN0aW9uIHRlc3RCaW5hcnlPcGVyYXRvcihsaHNWYWx1ZSwgb3BlcmF0b3IsIHJoc1ZhbHVlKSB7XG4gIHN3aXRjaCAob3BlcmF0b3IpIHtcbiAgICBjYXNlIFwiPlwiOlxuICAgICAgcmV0dXJuIGxoc1ZhbHVlID4gcmhzVmFsdWU7XG4gICAgY2FzZSBcIj49XCI6XG4gICAgICByZXR1cm4gbGhzVmFsdWUgPj0gcmhzVmFsdWU7XG4gICAgY2FzZSBcIjxcIjpcbiAgICAgIHJldHVybiBsaHNWYWx1ZSA8IHJoc1ZhbHVlO1xuICAgIGNhc2UgXCI8PVwiOlxuICAgICAgcmV0dXJuIGxoc1ZhbHVlIDw9IHJoc1ZhbHVlO1xuICAgIGNhc2UgXCI9PVwiOlxuICAgICAgcmV0dXJuIGxoc1ZhbHVlID09PSByaHNWYWx1ZTtcbiAgICBjYXNlIFwiIT1cIjpcbiAgICAgIHJldHVybiBsaHNWYWx1ZSAhPT0gcmhzVmFsdWU7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgYmluYXJ5IG9wZXJhdG9yICR7b3BlcmF0b3J9YCk7XG4gIH1cbn1cbmZ1bmN0aW9uIGludGVycHJldE5lZ2F0aXZlSW5kZXgoaW5kZXgsIHByb2JlKSB7XG4gIGlmIChpbmRleCA+PSAwKVxuICAgIHJldHVybiBpbmRleDtcbiAgaWYgKCFwcm9iZSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnRlcnByZXROZWdhdGl2ZUluZGV4KCkgbXVzdCBoYXZlIGEgcHJvYmUgd2hlbiA8IDBcIik7XG4gIHJldHVybiBpbmRleCArIHByb2JlLmxlbmd0aCgpO1xufVxudmFyIF9fZGVmUHJvcCRkID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AkZCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3AkZChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQkZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcCRkKG9iaiwgdHlwZW9mIGtleSAhPSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY2xhc3MgRGVzY2VuZGVyIHtcbiAgY29uc3RydWN0b3IoaGVhZCwgdGFpbCkge1xuICAgIF9fcHVibGljRmllbGQkZCh0aGlzLCBcImhlYWRcIiksIF9fcHVibGljRmllbGQkZCh0aGlzLCBcInRhaWxcIiksIHRoaXMuaGVhZCA9IGhlYWQsIHRoaXMudGFpbCA9IHRhaWw7XG4gIH1cbiAgLy8gSXRlcmF0ZSB0aGlzIGRlc2NlbmRlciBvbmNlIHByb2Nlc3NpbmcgYW55IGNvbnN0cmFpbnRzIHRoYXQgYXJlXG4gIC8vIHJlc29sdmFibGUgb24gdGhlIGN1cnJlbnQgdmFsdWUuIFJldHVybnMgYW4gYXJyYXkgb2YgbmV3IGRlc2NlbmRlcnNcbiAgLy8gdGhhdCBhcmUgZ3VhcmFudGVlZCB0byBiZSB3aXRob3V0IGNvbnN0cmFpbnRzIGluIHRoZSBoZWFkXG4gIGl0ZXJhdGUocHJvYmUpIHtcbiAgICBsZXQgcmVzdWx0ID0gW3RoaXNdO1xuICAgIGlmICh0aGlzLmhlYWQgJiYgdGhpcy5oZWFkLmlzQ29uc3RyYWludCgpKSB7XG4gICAgICBsZXQgYW55Q29uc3RyYWludHMgPSAhMDtcbiAgICAgIGZvciAoOyBhbnlDb25zdHJhaW50czsgKVxuICAgICAgICByZXN1bHQgPSBmbGF0dGVuKFxuICAgICAgICAgIHJlc3VsdC5tYXAoKGRlc2NlbmRlcikgPT4gZGVzY2VuZGVyLml0ZXJhdGVDb25zdHJhaW50cyhwcm9iZSkpXG4gICAgICAgICksIGFueUNvbnN0cmFpbnRzID0gcmVzdWx0LnNvbWUoKGRlc2NlbmRlcikgPT4gZGVzY2VuZGVyLmhlYWQgJiYgZGVzY2VuZGVyLmhlYWQuaXNDb25zdHJhaW50KCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGlzUmVjdXJzaXZlKCkge1xuICAgIHJldHVybiAhISh0aGlzLmhlYWQgJiYgdGhpcy5oZWFkLmlzUmVjdXJzaXZlKCkpO1xuICB9XG4gIGhhc0Fycml2ZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGVhZCA9PT0gbnVsbCAmJiB0aGlzLnRhaWwgPT09IG51bGw7XG4gIH1cbiAgZXh0cmFjdFJlY3Vyc2l2ZXMoKSB7XG4gICAgaWYgKHRoaXMuaGVhZCAmJiB0aGlzLmhlYWQuaXNSZWN1cnNpdmUoKSkge1xuICAgICAgY29uc3QgdGVybSA9IHRoaXMuaGVhZC51bndyYXBSZWN1cnNpdmUoKTtcbiAgICAgIHJldHVybiBuZXcgRGVzY2VuZGVyKG51bGwsIHRlcm0uY29uY2F0KHRoaXMudGFpbCkpLmRlc2NlbmQoKTtcbiAgICB9XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGl0ZXJhdGVDb25zdHJhaW50cyhwcm9iZSkge1xuICAgIGNvbnN0IGhlYWQgPSB0aGlzLmhlYWQ7XG4gICAgaWYgKGhlYWQgPT09IG51bGwgfHwgIWhlYWQuaXNDb25zdHJhaW50KCkpXG4gICAgICByZXR1cm4gW3RoaXNdO1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgIGlmIChwcm9iZS5jb250YWluZXJUeXBlKCkgPT09IFwicHJpbWl0aXZlXCIgJiYgaGVhZC5jb25zdHJhaW50VGFyZ2V0SXNTZWxmKCkpXG4gICAgICByZXR1cm4gaGVhZC50ZXN0Q29uc3RyYWludChwcm9iZSkgJiYgcmVzdWx0LnB1c2goLi4udGhpcy5kZXNjZW5kKCkpLCByZXN1bHQ7XG4gICAgaWYgKHByb2JlLmNvbnRhaW5lclR5cGUoKSA9PT0gXCJhcnJheVwiKSB7XG4gICAgICBjb25zdCBsZW5ndGggPSBwcm9iZS5sZW5ndGgoKTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY29uc3RyYWludCA9IHByb2JlLmdldEluZGV4KGkpO1xuICAgICAgICBjb25zdHJhaW50ICYmIGhlYWQudGVzdENvbnN0cmFpbnQoY29uc3RyYWludCkgJiYgcmVzdWx0LnB1c2gobmV3IERlc2NlbmRlcihuZXcgRXhwcmVzc2lvbih7IHR5cGU6IFwiaW5kZXhcIiwgdmFsdWU6IGkgfSksIHRoaXMudGFpbCkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIHByb2JlLmNvbnRhaW5lclR5cGUoKSA9PT0gXCJvYmplY3RcIiA/IGhlYWQuY29uc3RyYWludFRhcmdldElzU2VsZigpID8gW10gOiBoZWFkLnRlc3RDb25zdHJhaW50KHByb2JlKSA/IHRoaXMuZGVzY2VuZCgpIDogcmVzdWx0IDogcmVzdWx0O1xuICB9XG4gIGRlc2NlbmQoKSB7XG4gICAgcmV0dXJuIHRoaXMudGFpbCA/IHRoaXMudGFpbC5kZXNjZW5kKCkubWFwKChodCkgPT4gbmV3IERlc2NlbmRlcihodC5oZWFkLCBodC50YWlsKSkgOiBbbmV3IERlc2NlbmRlcihudWxsLCBudWxsKV07XG4gIH1cbiAgdG9TdHJpbmcoKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gW1wiPFwiXTtcbiAgICByZXR1cm4gdGhpcy5oZWFkICYmIHJlc3VsdC5wdXNoKHRoaXMuaGVhZC50b1N0cmluZygpKSwgcmVzdWx0LnB1c2goXCJ8XCIpLCB0aGlzLnRhaWwgJiYgcmVzdWx0LnB1c2godGhpcy50YWlsLnRvU3RyaW5nKCkpLCByZXN1bHQucHVzaChcIj5cIiksIHJlc3VsdC5qb2luKFwiXCIpO1xuICB9XG59XG52YXIgX19kZWZQcm9wJGMgPSBPYmplY3QuZGVmaW5lUHJvcGVydHksIF9fZGVmTm9ybWFsUHJvcCRjID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcCRjKG9iaiwga2V5LCB7IGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwLCB3cml0YWJsZTogITAsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZSwgX19wdWJsaWNGaWVsZCRjID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wJGMob2JqLCB0eXBlb2Yga2V5ICE9IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5jbGFzcyBNYXRjaGVyIHtcbiAgY29uc3RydWN0b3IoYWN0aXZlLCBwYXJlbnQpIHtcbiAgICBfX3B1YmxpY0ZpZWxkJGModGhpcywgXCJhY3RpdmVcIiksIF9fcHVibGljRmllbGQkYyh0aGlzLCBcInJlY3Vyc2l2ZXNcIiksIF9fcHVibGljRmllbGQkYyh0aGlzLCBcInBheWxvYWRcIiksIHRoaXMuYWN0aXZlID0gYWN0aXZlIHx8IFtdLCBwYXJlbnQgPyAodGhpcy5yZWN1cnNpdmVzID0gcGFyZW50LnJlY3Vyc2l2ZXMsIHRoaXMucGF5bG9hZCA9IHBhcmVudC5wYXlsb2FkKSA6IHRoaXMucmVjdXJzaXZlcyA9IFtdLCB0aGlzLmV4dHJhY3RSZWN1cnNpdmVzKCk7XG4gIH1cbiAgc2V0UGF5bG9hZChwYXlsb2FkKSB7XG4gICAgcmV0dXJuIHRoaXMucGF5bG9hZCA9IHBheWxvYWQsIHRoaXM7XG4gIH1cbiAgLy8gTW92ZXMgYW55IHJlY3Vyc2l2ZSBkZXNjZW5kZXJzIG9udG8gdGhlIHJlY3Vyc2l2ZSB0cmFjaywgcmVtb3ZpbmcgdGhlbSBmcm9tXG4gIC8vIHRoZSBhY3RpdmUgc2V0XG4gIGV4dHJhY3RSZWN1cnNpdmVzKCkge1xuICAgIHRoaXMuYWN0aXZlID0gdGhpcy5hY3RpdmUuZmlsdGVyKChkZXNjZW5kZXIpID0+IGRlc2NlbmRlci5pc1JlY3Vyc2l2ZSgpID8gKHRoaXMucmVjdXJzaXZlcy5wdXNoKC4uLmRlc2NlbmRlci5leHRyYWN0UmVjdXJzaXZlcygpKSwgITEpIDogITApO1xuICB9XG4gIC8vIEZpbmQgcmVjdXJzaXZlcyB0aGF0IGFyZSByZWxldmFudCBub3cgYW5kIHNob3VsZCBiZSBjb25zaWRlcmVkIHBhcnQgb2YgdGhlIGFjdGl2ZSBzZXRcbiAgYWN0aXZlUmVjdXJzaXZlcyhwcm9iZSkge1xuICAgIHJldHVybiB0aGlzLnJlY3Vyc2l2ZXMuZmlsdGVyKChkZXNjZW5kZXIpID0+IHtcbiAgICAgIGNvbnN0IGhlYWQgPSBkZXNjZW5kZXIuaGVhZDtcbiAgICAgIHJldHVybiBoZWFkID8gaGVhZC5pc0NvbnN0cmFpbnQoKSB8fCBwcm9iZS5jb250YWluZXJUeXBlKCkgPT09IFwiYXJyYXlcIiAmJiBoZWFkLmlzSW5kZXhSZWZlcmVuY2UoKSA/ICEwIDogcHJvYmUuY29udGFpbmVyVHlwZSgpID09PSBcIm9iamVjdFwiID8gaGVhZC5pc0F0dHJpYnV0ZVJlZmVyZW5jZSgpICYmIHByb2JlLmhhc0F0dHJpYnV0ZShoZWFkLm5hbWUoKSkgOiAhMSA6ICExO1xuICAgIH0pO1xuICB9XG4gIG1hdGNoKHByb2JlKSB7XG4gICAgcmV0dXJuIHRoaXMuaXRlcmF0ZShwcm9iZSkuZXh0cmFjdE1hdGNoZXMocHJvYmUpO1xuICB9XG4gIGl0ZXJhdGUocHJvYmUpIHtcbiAgICBjb25zdCBuZXdBY3RpdmVTZXQgPSBbXTtcbiAgICByZXR1cm4gdGhpcy5hY3RpdmUuY29uY2F0KHRoaXMuYWN0aXZlUmVjdXJzaXZlcyhwcm9iZSkpLmZvckVhY2goKGRlc2NlbmRlcikgPT4ge1xuICAgICAgbmV3QWN0aXZlU2V0LnB1c2goLi4uZGVzY2VuZGVyLml0ZXJhdGUocHJvYmUpKTtcbiAgICB9KSwgbmV3IE1hdGNoZXIobmV3QWN0aXZlU2V0LCB0aGlzKTtcbiAgfVxuICAvLyBSZXR1cm5zIHRydWUgaWYgYW55IG9mIHRoZSBkZXNjZW5kZXJzIGluIHRoZSBhY3RpdmUgb3IgcmVjdXJzaXZlIHNldFxuICAvLyBjb25zaWRlciB0aGUgY3VycmVudCBzdGF0ZSBhIGZpbmFsIGRlc3RpbmF0aW9uXG4gIGlzRGVzdGluYXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZlLnNvbWUoKGRlc2NlbmRlcikgPT4gZGVzY2VuZGVyLmhhc0Fycml2ZWQoKSk7XG4gIH1cbiAgaGFzUmVjdXJzaXZlcygpIHtcbiAgICByZXR1cm4gdGhpcy5yZWN1cnNpdmVzLmxlbmd0aCA+IDA7XG4gIH1cbiAgLy8gUmV0dXJucyBhbnkgcGF5bG9hZCBkZWxpdmllcmllcyBhbmQgbGVhZHMgdGhhdCBuZWVkcyB0byBiZSBmb2xsb3dlZCB0byBjb21wbGV0ZVxuICAvLyB0aGUgcHJvY2Vzcy5cbiAgZXh0cmFjdE1hdGNoZXMocHJvYmUpIHtcbiAgICBjb25zdCBsZWFkcyA9IFtdLCB0YXJnZXRzID0gW107XG4gICAgaWYgKHRoaXMuYWN0aXZlLmZvckVhY2goKGRlc2NlbmRlcikgPT4ge1xuICAgICAgaWYgKGRlc2NlbmRlci5oYXNBcnJpdmVkKCkpIHtcbiAgICAgICAgdGFyZ2V0cy5wdXNoKFxuICAgICAgICAgIG5ldyBFeHByZXNzaW9uKHtcbiAgICAgICAgICAgIHR5cGU6IFwiYWxpYXNcIixcbiAgICAgICAgICAgIHRhcmdldDogXCJzZWxmXCJcbiAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBkZXNjZW5kZXJIZWFkID0gZGVzY2VuZGVyLmhlYWQ7XG4gICAgICBpZiAoZGVzY2VuZGVySGVhZCAmJiAhKHByb2JlLmNvbnRhaW5lclR5cGUoKSA9PT0gXCJhcnJheVwiICYmICFkZXNjZW5kZXJIZWFkLmlzSW5kZXhSZWZlcmVuY2UoKSkgJiYgIShwcm9iZS5jb250YWluZXJUeXBlKCkgPT09IFwib2JqZWN0XCIgJiYgIWRlc2NlbmRlckhlYWQuaXNBdHRyaWJ1dGVSZWZlcmVuY2UoKSkpXG4gICAgICAgIGlmIChkZXNjZW5kZXIudGFpbCkge1xuICAgICAgICAgIGNvbnN0IG1hdGNoZXIgPSBuZXcgTWF0Y2hlcihkZXNjZW5kZXIuZGVzY2VuZCgpLCB0aGlzKTtcbiAgICAgICAgICBkZXNjZW5kZXJIZWFkLnRvRmllbGRSZWZlcmVuY2VzKCkuZm9yRWFjaCgoKSA9PiB7XG4gICAgICAgICAgICBsZWFkcy5wdXNoKHtcbiAgICAgICAgICAgICAgdGFyZ2V0OiBkZXNjZW5kZXJIZWFkLFxuICAgICAgICAgICAgICBtYXRjaGVyXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlXG4gICAgICAgICAgdGFyZ2V0cy5wdXNoKGRlc2NlbmRlckhlYWQpO1xuICAgIH0pLCB0aGlzLmhhc1JlY3Vyc2l2ZXMoKSkge1xuICAgICAgY29uc3QgcmVjdXJzaXZlc01hdGNoZXIgPSBuZXcgTWF0Y2hlcihbXSwgdGhpcyk7XG4gICAgICBpZiAocHJvYmUuY29udGFpbmVyVHlwZSgpID09PSBcImFycmF5XCIpIHtcbiAgICAgICAgY29uc3QgbGVuZ3RoID0gcHJvYmUubGVuZ3RoKCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspXG4gICAgICAgICAgbGVhZHMucHVzaCh7XG4gICAgICAgICAgICB0YXJnZXQ6IEV4cHJlc3Npb24uaW5kZXhSZWZlcmVuY2UoaSksXG4gICAgICAgICAgICBtYXRjaGVyOiByZWN1cnNpdmVzTWF0Y2hlclxuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHByb2JlLmNvbnRhaW5lclR5cGUoKSA9PT0gXCJvYmplY3RcIiAmJiBwcm9iZS5hdHRyaWJ1dGVLZXlzKCkuZm9yRWFjaCgobmFtZSkgPT4ge1xuICAgICAgICBsZWFkcy5wdXNoKHtcbiAgICAgICAgICB0YXJnZXQ6IEV4cHJlc3Npb24uYXR0cmlidXRlUmVmZXJlbmNlKG5hbWUpLFxuICAgICAgICAgIG1hdGNoZXI6IHJlY3Vyc2l2ZXNNYXRjaGVyXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXRzLmxlbmd0aCA+IDAgPyB7IGxlYWRzLCBkZWxpdmVyeTogeyB0YXJnZXRzLCBwYXlsb2FkOiB0aGlzLnBheWxvYWQgfSB9IDogeyBsZWFkcyB9O1xuICB9XG4gIHN0YXRpYyBmcm9tUGF0aChqc29ucGF0aCkge1xuICAgIGNvbnN0IHBhdGggPSBwYXJzZUpzb25QYXRoKGpzb25wYXRoKTtcbiAgICBpZiAoIXBhdGgpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBwYXJzZSBwYXRoIGZyb20gXCIke2pzb25wYXRofVwiYCk7XG4gICAgY29uc3QgZGVzY2VuZGVyID0gbmV3IERlc2NlbmRlcihudWxsLCBuZXcgRXhwcmVzc2lvbihwYXRoKSk7XG4gICAgcmV0dXJuIG5ldyBNYXRjaGVyKGRlc2NlbmRlci5kZXNjZW5kKCkpO1xuICB9XG59XG52YXIgX19kZWZQcm9wJGIgPSBPYmplY3QuZGVmaW5lUHJvcGVydHksIF9fZGVmTm9ybWFsUHJvcCRiID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcCRiKG9iaiwga2V5LCB7IGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwLCB3cml0YWJsZTogITAsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZSwgX19wdWJsaWNGaWVsZCRiID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wJGIob2JqLCB0eXBlb2Yga2V5ICE9IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5jbGFzcyBQbGFpblByb2JlIHtcbiAgY29uc3RydWN0b3IodmFsdWUsIHBhdGgpIHtcbiAgICBfX3B1YmxpY0ZpZWxkJGIodGhpcywgXCJfdmFsdWVcIiksIF9fcHVibGljRmllbGQkYih0aGlzLCBcInBhdGhcIiksIHRoaXMuX3ZhbHVlID0gdmFsdWUsIHRoaXMucGF0aCA9IHBhdGggfHwgW107XG4gIH1cbiAgY29udGFpbmVyVHlwZSgpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLl92YWx1ZSkgPyBcImFycmF5XCIgOiB0aGlzLl92YWx1ZSAhPT0gbnVsbCAmJiB0eXBlb2YgdGhpcy5fdmFsdWUgPT0gXCJvYmplY3RcIiA/IFwib2JqZWN0XCIgOiBcInByaW1pdGl2ZVwiO1xuICB9XG4gIGxlbmd0aCgpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy5fdmFsdWUpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV29uJ3QgcmV0dXJuIGxlbmd0aCBvZiBub24taW5kZXhhYmxlIF92YWx1ZVwiKTtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWUubGVuZ3RoO1xuICB9XG4gIGdldEluZGV4KGkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLl92YWx1ZSkgPyBpID49IHRoaXMubGVuZ3RoKCkgPyBudWxsIDogbmV3IFBsYWluUHJvYmUodGhpcy5fdmFsdWVbaV0sIHRoaXMucGF0aC5jb25jYXQoaSkpIDogITE7XG4gIH1cbiAgaGFzQXR0cmlidXRlKGtleSkge1xuICAgIHJldHVybiBpc1JlY29yZCh0aGlzLl92YWx1ZSkgPyB0aGlzLl92YWx1ZS5oYXNPd25Qcm9wZXJ0eShrZXkpIDogITE7XG4gIH1cbiAgYXR0cmlidXRlS2V5cygpIHtcbiAgICByZXR1cm4gaXNSZWNvcmQodGhpcy5fdmFsdWUpID8gT2JqZWN0LmtleXModGhpcy5fdmFsdWUpIDogW107XG4gIH1cbiAgZ2V0QXR0cmlidXRlKGtleSkge1xuICAgIGlmICghaXNSZWNvcmQodGhpcy5fdmFsdWUpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2V0QXR0cmlidXRlIG9ubHkgYXBwbGllcyB0byBwbGFpbiBvYmplY3RzXCIpO1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZShrZXkpID8gbmV3IFBsYWluUHJvYmUodGhpcy5fdmFsdWVba2V5XSwgdGhpcy5wYXRoLmNvbmNhdChrZXkpKSA6IG51bGw7XG4gIH1cbiAgZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLl92YWx1ZTtcbiAgfVxufVxuZnVuY3Rpb24gZXh0cmFjdEFjY2Vzc29ycyhwYXRoLCB2YWx1ZSkge1xuICBjb25zdCByZXN1bHQgPSBbXSwgbWF0Y2hlciA9IE1hdGNoZXIuZnJvbVBhdGgocGF0aCkuc2V0UGF5bG9hZChmdW5jdGlvbih2YWx1ZXMpIHtcbiAgICByZXN1bHQucHVzaCguLi52YWx1ZXMpO1xuICB9KSwgYWNjZXNzb3IgPSBuZXcgUGxhaW5Qcm9iZSh2YWx1ZSk7XG4gIHJldHVybiBkZXNjZW5kKG1hdGNoZXIsIGFjY2Vzc29yKSwgcmVzdWx0O1xufVxuZnVuY3Rpb24gZGVzY2VuZChtYXRjaGVyLCBhY2Nlc3Nvcikge1xuICBjb25zdCB7IGxlYWRzLCBkZWxpdmVyeSB9ID0gbWF0Y2hlci5tYXRjaChhY2Nlc3Nvcik7XG4gIGxlYWRzLmZvckVhY2goKGxlYWQpID0+IHtcbiAgICBhY2Nlc3NvcnNGcm9tVGFyZ2V0KGxlYWQudGFyZ2V0LCBhY2Nlc3NvcikuZm9yRWFjaCgoY2hpbGRBY2Nlc3NvcikgPT4ge1xuICAgICAgZGVzY2VuZChsZWFkLm1hdGNoZXIsIGNoaWxkQWNjZXNzb3IpO1xuICAgIH0pO1xuICB9KSwgZGVsaXZlcnkgJiYgZGVsaXZlcnkudGFyZ2V0cy5mb3JFYWNoKCh0YXJnZXQpID0+IHtcbiAgICB0eXBlb2YgZGVsaXZlcnkucGF5bG9hZCA9PSBcImZ1bmN0aW9uXCIgJiYgZGVsaXZlcnkucGF5bG9hZChhY2Nlc3NvcnNGcm9tVGFyZ2V0KHRhcmdldCwgYWNjZXNzb3IpKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBhY2Nlc3NvcnNGcm9tVGFyZ2V0KHRhcmdldCwgYWNjZXNzb3IpIHtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGlmICh0YXJnZXQuaXNJbmRleFJlZmVyZW5jZSgpKVxuICAgIHRhcmdldC50b0luZGljaWVzKGFjY2Vzc29yKS5mb3JFYWNoKChpKSA9PiB7XG4gICAgICByZXN1bHQucHVzaChhY2Nlc3Nvci5nZXRJbmRleChpKSk7XG4gICAgfSk7XG4gIGVsc2UgaWYgKHRhcmdldC5pc0F0dHJpYnV0ZVJlZmVyZW5jZSgpKVxuICAgIHJlc3VsdC5wdXNoKGFjY2Vzc29yLmdldEF0dHJpYnV0ZSh0YXJnZXQubmFtZSgpKSk7XG4gIGVsc2UgaWYgKHRhcmdldC5pc1NlbGZSZWZlcmVuY2UoKSlcbiAgICByZXN1bHQucHVzaChhY2Nlc3Nvcik7XG4gIGVsc2VcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBkZXJpdmUgYWNjZXNzb3IgZm9yIHRhcmdldCAke3RhcmdldC50b1N0cmluZygpfWApO1xuICByZXR1cm4gY29tcGFjdChyZXN1bHQpO1xufVxuZnVuY3Rpb24gZXh0cmFjdChwYXRoLCB2YWx1ZSkge1xuICByZXR1cm4gZXh0cmFjdEFjY2Vzc29ycyhwYXRoLCB2YWx1ZSkubWFwKChhY2MpID0+IGFjYy5nZXQoKSk7XG59XG5mdW5jdGlvbiBleHRyYWN0V2l0aFBhdGgocGF0aCwgdmFsdWUpIHtcbiAgcmV0dXJuIGV4dHJhY3RBY2Nlc3NvcnMocGF0aCwgdmFsdWUpLm1hcCgoYWNjKSA9PiAoeyBwYXRoOiBhY2MucGF0aCwgdmFsdWU6IGFjYy5nZXQoKSB9KSk7XG59XG52YXIgX19kZWZQcm9wJGEgPSBPYmplY3QuZGVmaW5lUHJvcGVydHksIF9fZGVmTm9ybWFsUHJvcCRhID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcCRhKG9iaiwga2V5LCB7IGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwLCB3cml0YWJsZTogITAsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZSwgX19wdWJsaWNGaWVsZCRhID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wJGEob2JqLCB0eXBlb2Yga2V5ICE9IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5mdW5jdGlvbiBhcHBseVBhdGNoKHBhdGNoLCBvbGRWYWx1ZSkge1xuICBpZiAodHlwZW9mIG9sZFZhbHVlICE9IFwic3RyaW5nXCIpIHJldHVybiBvbGRWYWx1ZTtcbiAgY29uc3QgW3Jlc3VsdF0gPSBhcHBseVBhdGNoZXMocGF0Y2gsIG9sZFZhbHVlLCB7IGFsbG93RXhjZWVkaW5nSW5kaWNlczogITAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5jbGFzcyBEaWZmTWF0Y2hQYXRjaCB7XG4gIGNvbnN0cnVjdG9yKGlkLCBwYXRoLCBkbXBQYXRjaFNyYykge1xuICAgIF9fcHVibGljRmllbGQkYSh0aGlzLCBcInBhdGhcIiksIF9fcHVibGljRmllbGQkYSh0aGlzLCBcImRtcFBhdGNoXCIpLCBfX3B1YmxpY0ZpZWxkJGEodGhpcywgXCJpZFwiKSwgdGhpcy5pZCA9IGlkLCB0aGlzLnBhdGggPSBwYXRoLCB0aGlzLmRtcFBhdGNoID0gcGFyc2VQYXRjaCQxKGRtcFBhdGNoU3JjKTtcbiAgfVxuICBhcHBseSh0YXJnZXRzLCBhY2Nlc3Nvcikge1xuICAgIGxldCByZXN1bHQgPSBhY2Nlc3NvcjtcbiAgICBpZiAocmVzdWx0LmNvbnRhaW5lclR5cGUoKSA9PT0gXCJwcmltaXRpdmVcIilcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgZm9yIChjb25zdCB0YXJnZXQgb2YgdGFyZ2V0cykge1xuICAgICAgaWYgKHRhcmdldC5pc0luZGV4UmVmZXJlbmNlKCkpIHtcbiAgICAgICAgZm9yIChjb25zdCBpbmRleCBvZiB0YXJnZXQudG9JbmRpY2llcyhhY2Nlc3NvcikpIHtcbiAgICAgICAgICBjb25zdCBpdGVtID0gcmVzdWx0LmdldEluZGV4KGluZGV4KTtcbiAgICAgICAgICBpZiAoIWl0ZW0pXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICBjb25zdCBvbGRWYWx1ZSA9IGl0ZW0uZ2V0KCksIG5leHRWYWx1ZSA9IGFwcGx5UGF0Y2godGhpcy5kbXBQYXRjaCwgb2xkVmFsdWUpO1xuICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5zZXRJbmRleChpbmRleCwgbmV4dFZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0YXJnZXQuaXNBdHRyaWJ1dGVSZWZlcmVuY2UoKSAmJiByZXN1bHQuaGFzQXR0cmlidXRlKHRhcmdldC5uYW1lKCkpKSB7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZSA9IHJlc3VsdC5nZXRBdHRyaWJ1dGUodGFyZ2V0Lm5hbWUoKSk7XG4gICAgICAgIGlmICghYXR0cmlidXRlKVxuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBjb25zdCBvbGRWYWx1ZSA9IGF0dHJpYnV0ZS5nZXQoKSwgbmV4dFZhbHVlID0gYXBwbHlQYXRjaCh0aGlzLmRtcFBhdGNoLCBvbGRWYWx1ZSk7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC5zZXRBdHRyaWJ1dGUodGFyZ2V0Lm5hbWUoKSwgbmV4dFZhbHVlKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBhcHBseSBkaWZmTWF0Y2hQYXRjaCB0byB0YXJnZXQgJHt0YXJnZXQudG9TdHJpbmcoKX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufVxudmFyIF9fZGVmUHJvcCQ5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AkOSA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3AkOShvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQkOSA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcCQ5KG9iaiwgdHlwZW9mIGtleSAhPSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuZnVuY3Rpb24gcGVyZm9ybUluY3JlbWVudChwcmV2aW91c1ZhbHVlLCBkZWx0YSkge1xuICByZXR1cm4gdHlwZW9mIHByZXZpb3VzVmFsdWUgIT0gXCJudW1iZXJcIiB8fCAhTnVtYmVyLmlzRmluaXRlKHByZXZpb3VzVmFsdWUpID8gcHJldmlvdXNWYWx1ZSA6IHByZXZpb3VzVmFsdWUgKyBkZWx0YTtcbn1cbmNsYXNzIEluY1BhdGNoIHtcbiAgY29uc3RydWN0b3IoaWQsIHBhdGgsIHZhbHVlKSB7XG4gICAgX19wdWJsaWNGaWVsZCQ5KHRoaXMsIFwicGF0aFwiKSwgX19wdWJsaWNGaWVsZCQ5KHRoaXMsIFwidmFsdWVcIiksIF9fcHVibGljRmllbGQkOSh0aGlzLCBcImlkXCIpLCB0aGlzLnBhdGggPSBwYXRoLCB0aGlzLnZhbHVlID0gdmFsdWUsIHRoaXMuaWQgPSBpZDtcbiAgfVxuICBhcHBseSh0YXJnZXRzLCBhY2Nlc3Nvcikge1xuICAgIGxldCByZXN1bHQgPSBhY2Nlc3NvcjtcbiAgICBpZiAocmVzdWx0LmNvbnRhaW5lclR5cGUoKSA9PT0gXCJwcmltaXRpdmVcIilcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgZm9yIChjb25zdCB0YXJnZXQgb2YgdGFyZ2V0cykge1xuICAgICAgaWYgKHRhcmdldC5pc0luZGV4UmVmZXJlbmNlKCkpIHtcbiAgICAgICAgZm9yIChjb25zdCBpbmRleCBvZiB0YXJnZXQudG9JbmRpY2llcyhhY2Nlc3NvcikpIHtcbiAgICAgICAgICBjb25zdCBpdGVtID0gcmVzdWx0LmdldEluZGV4KGluZGV4KTtcbiAgICAgICAgICBpZiAoIWl0ZW0pXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICBjb25zdCBwcmV2aW91c1ZhbHVlID0gaXRlbS5nZXQoKTtcbiAgICAgICAgICByZXN1bHQgPSByZXN1bHQuc2V0SW5kZXgoaW5kZXgsIHBlcmZvcm1JbmNyZW1lbnQocHJldmlvdXNWYWx1ZSwgdGhpcy52YWx1ZSkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHRhcmdldC5pc0F0dHJpYnV0ZVJlZmVyZW5jZSgpKSB7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZSA9IHJlc3VsdC5nZXRBdHRyaWJ1dGUodGFyZ2V0Lm5hbWUoKSk7XG4gICAgICAgIGlmICghYXR0cmlidXRlKVxuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBjb25zdCBwcmV2aW91c1ZhbHVlID0gYXR0cmlidXRlLmdldCgpO1xuICAgICAgICByZXN1bHQgPSByZXN1bHQuc2V0QXR0cmlidXRlKHRhcmdldC5uYW1lKCksIHBlcmZvcm1JbmNyZW1lbnQocHJldmlvdXNWYWx1ZSwgdGhpcy52YWx1ZSkpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGFwcGx5IHRvIHRhcmdldCAke3RhcmdldC50b1N0cmluZygpfWApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59XG5mdW5jdGlvbiB0YXJnZXRzVG9JbmRpY2llcyh0YXJnZXRzLCBhY2Nlc3Nvcikge1xuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgcmV0dXJuIHRhcmdldHMuZm9yRWFjaCgodGFyZ2V0KSA9PiB7XG4gICAgdGFyZ2V0LmlzSW5kZXhSZWZlcmVuY2UoKSAmJiByZXN1bHQucHVzaCguLi50YXJnZXQudG9JbmRpY2llcyhhY2Nlc3NvcikpO1xuICB9KSwgcmVzdWx0LnNvcnQoKTtcbn1cbnZhciBfX2RlZlByb3AkOCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgX19kZWZOb3JtYWxQcm9wJDggPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wJDgob2JqLCBrZXksIHsgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlLCBfX3B1YmxpY0ZpZWxkJDggPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3AkOChvYmosIHR5cGVvZiBrZXkgIT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmNsYXNzIEluc2VydFBhdGNoIHtcbiAgY29uc3RydWN0b3IoaWQsIGxvY2F0aW9uLCBwYXRoLCBpdGVtcykge1xuICAgIF9fcHVibGljRmllbGQkOCh0aGlzLCBcImxvY2F0aW9uXCIpLCBfX3B1YmxpY0ZpZWxkJDgodGhpcywgXCJwYXRoXCIpLCBfX3B1YmxpY0ZpZWxkJDgodGhpcywgXCJpdGVtc1wiKSwgX19wdWJsaWNGaWVsZCQ4KHRoaXMsIFwiaWRcIiksIHRoaXMuaWQgPSBpZCwgdGhpcy5sb2NhdGlvbiA9IGxvY2F0aW9uLCB0aGlzLnBhdGggPSBwYXRoLCB0aGlzLml0ZW1zID0gaXRlbXM7XG4gIH1cbiAgYXBwbHkodGFyZ2V0cywgYWNjZXNzb3IpIHtcbiAgICBsZXQgcmVzdWx0ID0gYWNjZXNzb3I7XG4gICAgaWYgKGFjY2Vzc29yLmNvbnRhaW5lclR5cGUoKSAhPT0gXCJhcnJheVwiKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdCB0byBhcHBseSBpbnNlcnQgcGF0Y2ggdG8gbm9uLWFycmF5IHZhbHVlXCIpO1xuICAgIHN3aXRjaCAodGhpcy5sb2NhdGlvbikge1xuICAgICAgY2FzZSBcImJlZm9yZVwiOiB7XG4gICAgICAgIGNvbnN0IHBvcyA9IG1pbkluZGV4KHRhcmdldHMsIGFjY2Vzc29yKTtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0Lmluc2VydEl0ZW1zQXQocG9zLCB0aGlzLml0ZW1zKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFwiYWZ0ZXJcIjoge1xuICAgICAgICBjb25zdCBwb3MgPSBtYXhJbmRleCh0YXJnZXRzLCBhY2Nlc3Nvcik7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC5pbnNlcnRJdGVtc0F0KHBvcyArIDEsIHRoaXMuaXRlbXMpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgXCJyZXBsYWNlXCI6IHtcbiAgICAgICAgY29uc3QgaW5kaWNpZXMgPSB0YXJnZXRzVG9JbmRpY2llcyh0YXJnZXRzLCBhY2Nlc3Nvcik7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC51bnNldEluZGljZXMoaW5kaWNpZXMpLCByZXN1bHQgPSByZXN1bHQuaW5zZXJ0SXRlbXNBdChpbmRpY2llc1swXSwgdGhpcy5pdGVtcyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBsb2NhdGlvbiBhdG06ICR7dGhpcy5sb2NhdGlvbn1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufVxuZnVuY3Rpb24gbWluSW5kZXgodGFyZ2V0cywgYWNjZXNzb3IpIHtcbiAgbGV0IHJlc3VsdCA9IG1pbih0YXJnZXRzVG9JbmRpY2llcyh0YXJnZXRzLCBhY2Nlc3NvcikpIHx8IDA7XG4gIHJldHVybiB0YXJnZXRzLmZvckVhY2goKHRhcmdldCkgPT4ge1xuICAgIGlmICh0YXJnZXQuaXNSYW5nZSgpKSB7XG4gICAgICBjb25zdCB7IHN0YXJ0IH0gPSB0YXJnZXQuZXhwYW5kUmFuZ2UoKTtcbiAgICAgIHN0YXJ0IDwgcmVzdWx0ICYmIChyZXN1bHQgPSBzdGFydCk7XG4gICAgfVxuICB9KSwgcmVzdWx0O1xufVxuZnVuY3Rpb24gbWF4SW5kZXgodGFyZ2V0cywgYWNjZXNzb3IpIHtcbiAgbGV0IHJlc3VsdCA9IG1heCh0YXJnZXRzVG9JbmRpY2llcyh0YXJnZXRzLCBhY2Nlc3NvcikpIHx8IDA7XG4gIHJldHVybiB0YXJnZXRzLmZvckVhY2goKHRhcmdldCkgPT4ge1xuICAgIGlmICh0YXJnZXQuaXNSYW5nZSgpKSB7XG4gICAgICBjb25zdCB7IGVuZCB9ID0gdGFyZ2V0LmV4cGFuZFJhbmdlKCk7XG4gICAgICBlbmQgPiByZXN1bHQgJiYgKHJlc3VsdCA9IGVuZCk7XG4gICAgfVxuICB9KSwgcmVzdWx0O1xufVxudmFyIF9fZGVmUHJvcCQ3ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AkNyA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3AkNyhvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQkNyA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcCQ3KG9iaiwgdHlwZW9mIGtleSAhPSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY2xhc3MgU2V0SWZNaXNzaW5nUGF0Y2gge1xuICBjb25zdHJ1Y3RvcihpZCwgcGF0aCwgdmFsdWUpIHtcbiAgICBfX3B1YmxpY0ZpZWxkJDcodGhpcywgXCJpZFwiKSwgX19wdWJsaWNGaWVsZCQ3KHRoaXMsIFwicGF0aFwiKSwgX19wdWJsaWNGaWVsZCQ3KHRoaXMsIFwidmFsdWVcIiksIHRoaXMuaWQgPSBpZCwgdGhpcy5wYXRoID0gcGF0aCwgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIGFwcGx5KHRhcmdldHMsIGFjY2Vzc29yKSB7XG4gICAgbGV0IHJlc3VsdCA9IGFjY2Vzc29yO1xuICAgIHJldHVybiB0YXJnZXRzLmZvckVhY2goKHRhcmdldCkgPT4ge1xuICAgICAgaWYgKCF0YXJnZXQuaXNJbmRleFJlZmVyZW5jZSgpKVxuICAgICAgICBpZiAodGFyZ2V0LmlzQXR0cmlidXRlUmVmZXJlbmNlKCkpXG4gICAgICAgICAgcmVzdWx0LmNvbnRhaW5lclR5cGUoKSA9PT0gXCJwcmltaXRpdmVcIiA/IHJlc3VsdCA9IHJlc3VsdC5zZXQoeyBbdGFyZ2V0Lm5hbWUoKV06IHRoaXMudmFsdWUgfSkgOiByZXN1bHQuaGFzQXR0cmlidXRlKHRhcmdldC5uYW1lKCkpIHx8IChyZXN1bHQgPSBhY2Nlc3Nvci5zZXRBdHRyaWJ1dGUodGFyZ2V0Lm5hbWUoKSwgdGhpcy52YWx1ZSkpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gYXBwbHkgdG8gdGFyZ2V0ICR7dGFyZ2V0LnRvU3RyaW5nKCl9YCk7XG4gICAgfSksIHJlc3VsdDtcbiAgfVxufVxudmFyIF9fZGVmUHJvcCQ2ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AkNiA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3AkNihvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQkNiA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcCQ2KG9iaiwgdHlwZW9mIGtleSAhPSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY2xhc3MgU2V0UGF0Y2gge1xuICBjb25zdHJ1Y3RvcihpZCwgcGF0aCwgdmFsdWUpIHtcbiAgICBfX3B1YmxpY0ZpZWxkJDYodGhpcywgXCJpZFwiKSwgX19wdWJsaWNGaWVsZCQ2KHRoaXMsIFwicGF0aFwiKSwgX19wdWJsaWNGaWVsZCQ2KHRoaXMsIFwidmFsdWVcIiksIHRoaXMuaWQgPSBpZCwgdGhpcy5wYXRoID0gcGF0aCwgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIGFwcGx5KHRhcmdldHMsIGFjY2Vzc29yKSB7XG4gICAgbGV0IHJlc3VsdCA9IGFjY2Vzc29yO1xuICAgIHJldHVybiB0YXJnZXRzLmZvckVhY2goKHRhcmdldCkgPT4ge1xuICAgICAgaWYgKHRhcmdldC5pc1NlbGZSZWZlcmVuY2UoKSlcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0LnNldCh0aGlzLnZhbHVlKTtcbiAgICAgIGVsc2UgaWYgKHRhcmdldC5pc0luZGV4UmVmZXJlbmNlKCkpXG4gICAgICAgIHRhcmdldC50b0luZGljaWVzKGFjY2Vzc29yKS5mb3JFYWNoKChpKSA9PiB7XG4gICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LnNldEluZGV4KGksIHRoaXMudmFsdWUpO1xuICAgICAgICB9KTtcbiAgICAgIGVsc2UgaWYgKHRhcmdldC5pc0F0dHJpYnV0ZVJlZmVyZW5jZSgpKVxuICAgICAgICByZXN1bHQuY29udGFpbmVyVHlwZSgpID09PSBcInByaW1pdGl2ZVwiID8gcmVzdWx0ID0gcmVzdWx0LnNldCh7IFt0YXJnZXQubmFtZSgpXTogdGhpcy52YWx1ZSB9KSA6IHJlc3VsdCA9IHJlc3VsdC5zZXRBdHRyaWJ1dGUodGFyZ2V0Lm5hbWUoKSwgdGhpcy52YWx1ZSk7XG4gICAgICBlbHNlXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGFwcGx5IHRvIHRhcmdldCAke3RhcmdldC50b1N0cmluZygpfWApO1xuICAgIH0pLCByZXN1bHQ7XG4gIH1cbn1cbnZhciBfX2RlZlByb3AkNSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgX19kZWZOb3JtYWxQcm9wJDUgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wJDUob2JqLCBrZXksIHsgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlLCBfX3B1YmxpY0ZpZWxkJDUgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3AkNShvYmosIHR5cGVvZiBrZXkgIT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmNsYXNzIFVuc2V0UGF0Y2gge1xuICBjb25zdHJ1Y3RvcihpZCwgcGF0aCkge1xuICAgIF9fcHVibGljRmllbGQkNSh0aGlzLCBcImlkXCIpLCBfX3B1YmxpY0ZpZWxkJDUodGhpcywgXCJwYXRoXCIpLCBfX3B1YmxpY0ZpZWxkJDUodGhpcywgXCJ2YWx1ZVwiKSwgdGhpcy5pZCA9IGlkLCB0aGlzLnBhdGggPSBwYXRoO1xuICB9XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIGFwcGx5KHRhcmdldHMsIGFjY2Vzc29yKSB7XG4gICAgbGV0IHJlc3VsdCA9IGFjY2Vzc29yO1xuICAgIHN3aXRjaCAoYWNjZXNzb3IuY29udGFpbmVyVHlwZSgpKSB7XG4gICAgICBjYXNlIFwiYXJyYXlcIjpcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0LnVuc2V0SW5kaWNlcyh0YXJnZXRzVG9JbmRpY2llcyh0YXJnZXRzLCBhY2Nlc3NvcikpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJvYmplY3RcIjpcbiAgICAgICAgdGFyZ2V0cy5mb3JFYWNoKCh0YXJnZXQpID0+IHtcbiAgICAgICAgICByZXN1bHQgPSByZXN1bHQudW5zZXRBdHRyaWJ1dGUodGFyZ2V0Lm5hbWUoKSk7XG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBcIlRhcmdldCB2YWx1ZSBpcyBuZWl0aGVyIGluZGV4YWJsZSBvciBhbiBvYmplY3QuIFRoaXMgZXJyb3Igc2hvdWxkIHBvdGVudGlhbGx5IGp1c3QgYmUgc2lsZW50bHkgaWdub3JlZD9cIlxuICAgICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59XG5mdW5jdGlvbiBwYXJzZVBhdGNoKHBhdGNoKSB7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuICBpZiAoQXJyYXkuaXNBcnJheShwYXRjaCkpXG4gICAgcmV0dXJuIHBhdGNoLnJlZHVjZSgociwgcCkgPT4gci5jb25jYXQocGFyc2VQYXRjaChwKSksIHJlc3VsdCk7XG4gIGNvbnN0IHsgc2V0LCBzZXRJZk1pc3NpbmcsIHVuc2V0LCBkaWZmTWF0Y2hQYXRjaCwgaW5jLCBkZWMsIGluc2VydCB9ID0gcGF0Y2g7XG4gIGlmIChzZXRJZk1pc3NpbmcgJiYgT2JqZWN0LmtleXMoc2V0SWZNaXNzaW5nKS5mb3JFYWNoKChwYXRoKSA9PiB7XG4gICAgcmVzdWx0LnB1c2gobmV3IFNldElmTWlzc2luZ1BhdGNoKHBhdGNoLmlkLCBwYXRoLCBzZXRJZk1pc3NpbmdbcGF0aF0pKTtcbiAgfSksIHNldCAmJiBPYmplY3Qua2V5cyhzZXQpLmZvckVhY2goKHBhdGgpID0+IHtcbiAgICByZXN1bHQucHVzaChuZXcgU2V0UGF0Y2gocGF0Y2guaWQsIHBhdGgsIHNldFtwYXRoXSkpO1xuICB9KSwgdW5zZXQgJiYgdW5zZXQuZm9yRWFjaCgocGF0aCkgPT4ge1xuICAgIHJlc3VsdC5wdXNoKG5ldyBVbnNldFBhdGNoKHBhdGNoLmlkLCBwYXRoKSk7XG4gIH0pLCBkaWZmTWF0Y2hQYXRjaCAmJiBPYmplY3Qua2V5cyhkaWZmTWF0Y2hQYXRjaCkuZm9yRWFjaCgocGF0aCkgPT4ge1xuICAgIHJlc3VsdC5wdXNoKG5ldyBEaWZmTWF0Y2hQYXRjaChwYXRjaC5pZCwgcGF0aCwgZGlmZk1hdGNoUGF0Y2hbcGF0aF0pKTtcbiAgfSksIGluYyAmJiBPYmplY3Qua2V5cyhpbmMpLmZvckVhY2goKHBhdGgpID0+IHtcbiAgICByZXN1bHQucHVzaChuZXcgSW5jUGF0Y2gocGF0Y2guaWQsIHBhdGgsIGluY1twYXRoXSkpO1xuICB9KSwgZGVjICYmIE9iamVjdC5rZXlzKGRlYykuZm9yRWFjaCgocGF0aCkgPT4ge1xuICAgIHJlc3VsdC5wdXNoKG5ldyBJbmNQYXRjaChwYXRjaC5pZCwgcGF0aCwgLWRlY1twYXRoXSkpO1xuICB9KSwgaW5zZXJ0KSB7XG4gICAgbGV0IGxvY2F0aW9uLCBwYXRoO1xuICAgIGNvbnN0IHNwZWMgPSBpbnNlcnQ7XG4gICAgaWYgKFwiYmVmb3JlXCIgaW4gc3BlYylcbiAgICAgIGxvY2F0aW9uID0gXCJiZWZvcmVcIiwgcGF0aCA9IHNwZWMuYmVmb3JlO1xuICAgIGVsc2UgaWYgKFwiYWZ0ZXJcIiBpbiBzcGVjKVxuICAgICAgbG9jYXRpb24gPSBcImFmdGVyXCIsIHBhdGggPSBzcGVjLmFmdGVyO1xuICAgIGVsc2UgaWYgKFwicmVwbGFjZVwiIGluIHNwZWMpXG4gICAgICBsb2NhdGlvbiA9IFwicmVwbGFjZVwiLCBwYXRoID0gc3BlYy5yZXBsYWNlO1xuICAgIGVsc2VcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgaW5zZXJ0IHBhdGNoXCIpO1xuICAgIHJlc3VsdC5wdXNoKG5ldyBJbnNlcnRQYXRjaChwYXRjaC5pZCwgbG9jYXRpb24sIHBhdGgsIHNwZWMuaXRlbXMpKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxudmFyIF9fZGVmUHJvcCQ0ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AkNCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3AkNChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQkNCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcCQ0KG9iaiwga2V5ICsgXCJcIiwgdmFsdWUpO1xuY2xhc3MgUGF0Y2hlciB7XG4gIGNvbnN0cnVjdG9yKHBhdGNoKSB7XG4gICAgX19wdWJsaWNGaWVsZCQ0KHRoaXMsIFwicGF0Y2hlc1wiKSwgdGhpcy5wYXRjaGVzID0gcGFyc2VQYXRjaChwYXRjaCk7XG4gIH1cbiAgYXBwbHkodmFsdWUpIHtcbiAgICBjb25zdCBhY2Nlc3NvciA9IG5ldyBJbW11dGFibGVBY2Nlc3Nvcih2YWx1ZSk7XG4gICAgcmV0dXJuIHRoaXMuYXBwbHlWaWFBY2Nlc3NvcihhY2Nlc3NvcikuZ2V0KCk7XG4gIH1cbiAgLy8gSWYgeW91IHdhbnQgdG8gdXNlIHlvdXIgb3duIGFjY2Vzc29yIGltcGxlbWVudGF0aW9uLCB5b3UgY2FuIHVzZSB0aGlzIG1ldGhvZFxuICAvLyB0byBpbnZva2UgdGhlIHBhdGNoZXIuIFNpbmNlIGFsbCBzdWJzZXF1ZW50IGFjY2Vzc29ycyBmb3IgY2hpbGRyZW4gb2YgdGhpcyBhY2Nlc3NvclxuICAvLyBhcmUgb2J0YWluZWQgdGhyb3VnaCB0aGUgbWV0aG9kcyBpbiB0aGUgYWNjZXNzb3JzLCB5b3UgcmV0YWluIGZ1bGwgY29udHJvbCBvZiB0aGVcbiAgLy8gaW1wbGVtZW50YXRpb24gdGhyb2d1aGdvdXQgdGhlIGFwcGxpY2F0aW9uLiBIYXZlIGEgbG9vayBpbiBJbW11dGFibGVBY2Nlc3NvclxuICAvLyB0byBzZWUgYW4gZXhhbXBsZSBvZiBob3cgYWNjZXNzb3JzIGFyZSBpbXBsZW1lbnRlZC5cbiAgYXBwbHlWaWFBY2Nlc3NvcihhY2Nlc3Nvcikge1xuICAgIGxldCByZXN1bHQgPSBhY2Nlc3NvcjtcbiAgICBjb25zdCBpZEFjY2Vzc29yID0gYWNjZXNzb3IuZ2V0QXR0cmlidXRlKFwiX2lkXCIpO1xuICAgIGlmICghaWRBY2Nlc3NvcilcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBhcHBseSBwYXRjaCB0byBkb2N1bWVudCB3aXRoIG5vIF9pZFwiKTtcbiAgICBjb25zdCBpZCA9IGlkQWNjZXNzb3IuZ2V0KCk7XG4gICAgZm9yIChjb25zdCBwYXRjaCBvZiB0aGlzLnBhdGNoZXMpIHtcbiAgICAgIGlmIChwYXRjaC5pZCAhPT0gaWQpXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgY29uc3QgbWF0Y2hlciA9IE1hdGNoZXIuZnJvbVBhdGgocGF0Y2gucGF0aCkuc2V0UGF5bG9hZChwYXRjaCk7XG4gICAgICByZXN1bHQgPSBwcm9jZXNzKG1hdGNoZXIsIHJlc3VsdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn1cbmZ1bmN0aW9uIHByb2Nlc3MobWF0Y2hlciwgYWNjZXNzb3IpIHtcbiAgY29uc3QgaXNTZXRQYXRjaCA9IG1hdGNoZXIucGF5bG9hZCBpbnN0YW5jZW9mIFNldFBhdGNoIHx8IG1hdGNoZXIucGF5bG9hZCBpbnN0YW5jZW9mIFNldElmTWlzc2luZ1BhdGNoO1xuICBsZXQgcmVzdWx0ID0gYWNjZXNzb3I7XG4gIGNvbnN0IHsgbGVhZHMsIGRlbGl2ZXJ5IH0gPSBtYXRjaGVyLm1hdGNoKGFjY2Vzc29yKTtcbiAgcmV0dXJuIGxlYWRzLmZvckVhY2goKGxlYWQpID0+IHtcbiAgICBpZiAobGVhZC50YXJnZXQuaXNJbmRleFJlZmVyZW5jZSgpKVxuICAgICAgbGVhZC50YXJnZXQudG9JbmRpY2llcygpLmZvckVhY2goKGkpID0+IHtcbiAgICAgICAgY29uc3QgaXRlbSA9IHJlc3VsdC5nZXRJbmRleChpKTtcbiAgICAgICAgaWYgKCFpdGVtKVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkluZGV4IG91dCBvZiBib3VuZHNcIik7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC5zZXRJbmRleEFjY2Vzc29yKGksIHByb2Nlc3MobGVhZC5tYXRjaGVyLCBpdGVtKSk7XG4gICAgICB9KTtcbiAgICBlbHNlIGlmIChsZWFkLnRhcmdldC5pc0F0dHJpYnV0ZVJlZmVyZW5jZSgpKSB7XG4gICAgICBpc1NldFBhdGNoICYmIHJlc3VsdC5jb250YWluZXJUeXBlKCkgPT09IFwicHJpbWl0aXZlXCIgJiYgKHJlc3VsdCA9IHJlc3VsdC5zZXQoe30pKTtcbiAgICAgIGxldCBvbGRWYWx1ZUFjY2Vzc29yID0gcmVzdWx0LmdldEF0dHJpYnV0ZShsZWFkLnRhcmdldC5uYW1lKCkpO1xuICAgICAgaWYgKCFvbGRWYWx1ZUFjY2Vzc29yICYmIGlzU2V0UGF0Y2ggJiYgKHJlc3VsdCA9IHJlc3VsdC5zZXRBdHRyaWJ1dGUobGVhZC50YXJnZXQubmFtZSgpLCB7fSksIG9sZFZhbHVlQWNjZXNzb3IgPSByZXN1bHQuZ2V0QXR0cmlidXRlKGxlYWQudGFyZ2V0Lm5hbWUoKSkpLCAhb2xkVmFsdWVBY2Nlc3NvcilcbiAgICAgICAgcmV0dXJuO1xuICAgICAgY29uc3QgbmV3VmFsdWVBY2Nlc3NvciA9IHByb2Nlc3MobGVhZC5tYXRjaGVyLCBvbGRWYWx1ZUFjY2Vzc29yKTtcbiAgICAgIG9sZFZhbHVlQWNjZXNzb3IgIT09IG5ld1ZhbHVlQWNjZXNzb3IgJiYgKHJlc3VsdCA9IHJlc3VsdC5zZXRBdHRyaWJ1dGVBY2Nlc3NvcihsZWFkLnRhcmdldC5uYW1lKCksIG5ld1ZhbHVlQWNjZXNzb3IpKTtcbiAgICB9IGVsc2VcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGhhbmRsZSB0YXJnZXQgJHtsZWFkLnRhcmdldC50b1N0cmluZygpfWApO1xuICB9KSwgZGVsaXZlcnkgJiYgaXNQYXRjaGVyKGRlbGl2ZXJ5LnBheWxvYWQpICYmIChyZXN1bHQgPSBkZWxpdmVyeS5wYXlsb2FkLmFwcGx5KGRlbGl2ZXJ5LnRhcmdldHMsIHJlc3VsdCkpLCByZXN1bHQ7XG59XG5mdW5jdGlvbiBpc1BhdGNoZXIocGF5bG9hZCkge1xuICByZXR1cm4gISEocGF5bG9hZCAmJiB0eXBlb2YgcGF5bG9hZCA9PSBcIm9iamVjdFwiICYmIHBheWxvYWQgIT09IG51bGwgJiYgXCJhcHBseVwiIGluIHBheWxvYWQgJiYgdHlwZW9mIHBheWxvYWQuYXBwbHkgPT0gXCJmdW5jdGlvblwiKTtcbn1cbmNvbnN0IGx1aWQgPSB1dWlkO1xudmFyIF9fZGVmUHJvcCQzID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AkMyA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3AkMyhvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQkMyA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcCQzKG9iaiwgdHlwZW9mIGtleSAhPSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY2xhc3MgTXV0YXRpb24ge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCQzKHRoaXMsIFwicGFyYW1zXCIpLCBfX3B1YmxpY0ZpZWxkJDModGhpcywgXCJjb21waWxlZFwiKSwgX19wdWJsaWNGaWVsZCQzKHRoaXMsIFwiX2FwcGxpZXNUb01pc3NpbmdEb2N1bWVudFwiKSwgdGhpcy5wYXJhbXMgPSBvcHRpb25zO1xuICB9XG4gIGdldCB0cmFuc2FjdGlvbklkKCkge1xuICAgIHJldHVybiB0aGlzLnBhcmFtcy50cmFuc2FjdGlvbklkO1xuICB9XG4gIGdldCB0cmFuc2l0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnBhcmFtcy50cmFuc2l0aW9uO1xuICB9XG4gIGdldCBpZGVudGl0eSgpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJhbXMuaWRlbnRpdHk7XG4gIH1cbiAgZ2V0IHByZXZpb3VzUmV2KCkge1xuICAgIHJldHVybiB0aGlzLnBhcmFtcy5wcmV2aW91c1JldjtcbiAgfVxuICBnZXQgcmVzdWx0UmV2KCkge1xuICAgIHJldHVybiB0aGlzLnBhcmFtcy5yZXN1bHRSZXY7XG4gIH1cbiAgZ2V0IG11dGF0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJhbXMubXV0YXRpb25zO1xuICB9XG4gIGdldCB0aW1lc3RhbXAoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLnBhcmFtcy50aW1lc3RhbXAgPT0gXCJzdHJpbmdcIilcbiAgICAgIHJldHVybiBuZXcgRGF0ZSh0aGlzLnBhcmFtcy50aW1lc3RhbXApO1xuICB9XG4gIGdldCBlZmZlY3RzKCkge1xuICAgIHJldHVybiB0aGlzLnBhcmFtcy5lZmZlY3RzO1xuICB9XG4gIGFzc2lnblJhbmRvbVRyYW5zYWN0aW9uSWQoKSB7XG4gICAgdGhpcy5wYXJhbXMudHJhbnNhY3Rpb25JZCA9IGx1aWQoKSwgdGhpcy5wYXJhbXMucmVzdWx0UmV2ID0gdGhpcy5wYXJhbXMudHJhbnNhY3Rpb25JZDtcbiAgfVxuICBhcHBsaWVzVG9NaXNzaW5nRG9jdW1lbnQoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLl9hcHBsaWVzVG9NaXNzaW5nRG9jdW1lbnQgPCBcInVcIilcbiAgICAgIHJldHVybiB0aGlzLl9hcHBsaWVzVG9NaXNzaW5nRG9jdW1lbnQ7XG4gICAgY29uc3QgZmlyc3RNdXQgPSB0aGlzLm11dGF0aW9uc1swXTtcbiAgICByZXR1cm4gZmlyc3RNdXQgPyB0aGlzLl9hcHBsaWVzVG9NaXNzaW5nRG9jdW1lbnQgPSAhIShmaXJzdE11dC5jcmVhdGUgfHwgZmlyc3RNdXQuY3JlYXRlSWZOb3RFeGlzdHMgfHwgZmlyc3RNdXQuY3JlYXRlT3JSZXBsYWNlKSA6IHRoaXMuX2FwcGxpZXNUb01pc3NpbmdEb2N1bWVudCA9ICEwLCB0aGlzLl9hcHBsaWVzVG9NaXNzaW5nRG9jdW1lbnQ7XG4gIH1cbiAgLy8gQ29tcGlsZXMgYWxsIG11dGF0aW9ucyBpbnRvIGEgaGFuZHkgZnVuY3Rpb25cbiAgY29tcGlsZSgpIHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0gW107XG4gICAgdGhpcy5tdXRhdGlvbnMuZm9yRWFjaCgobXV0YXRpb24pID0+IHtcbiAgICAgIGlmIChtdXRhdGlvbi5jcmVhdGUpIHtcbiAgICAgICAgY29uc3QgY3JlYXRlID0gbXV0YXRpb24uY3JlYXRlIHx8IHt9O1xuICAgICAgICBvcGVyYXRpb25zLnB1c2goKGRvYykgPT4gZG9jIHx8IE9iamVjdC5hc3NpZ24oY3JlYXRlLCB7XG4gICAgICAgICAgX2NyZWF0ZWRBdDogY3JlYXRlLl9jcmVhdGVkQXQgfHwgdGhpcy5wYXJhbXMudGltZXN0YW1wXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKG11dGF0aW9uLmNyZWF0ZUlmTm90RXhpc3RzKSB7XG4gICAgICAgIGNvbnN0IGNyZWF0ZUlmTm90RXhpc3RzID0gbXV0YXRpb24uY3JlYXRlSWZOb3RFeGlzdHMgfHwge307XG4gICAgICAgIG9wZXJhdGlvbnMucHVzaChcbiAgICAgICAgICAoZG9jKSA9PiBkb2MgPT09IG51bGwgPyBPYmplY3QuYXNzaWduKGNyZWF0ZUlmTm90RXhpc3RzLCB7XG4gICAgICAgICAgICBfY3JlYXRlZEF0OiBjcmVhdGVJZk5vdEV4aXN0cy5fY3JlYXRlZEF0IHx8IHRoaXMucGFyYW1zLnRpbWVzdGFtcFxuICAgICAgICAgIH0pIDogZG9jXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChtdXRhdGlvbi5jcmVhdGVPclJlcGxhY2UpIHtcbiAgICAgICAgY29uc3QgY3JlYXRlT3JSZXBsYWNlID0gbXV0YXRpb24uY3JlYXRlT3JSZXBsYWNlIHx8IHt9O1xuICAgICAgICBvcGVyYXRpb25zLnB1c2goXG4gICAgICAgICAgKCkgPT4gT2JqZWN0LmFzc2lnbihjcmVhdGVPclJlcGxhY2UsIHtcbiAgICAgICAgICAgIF9jcmVhdGVkQXQ6IGNyZWF0ZU9yUmVwbGFjZS5fY3JlYXRlZEF0IHx8IHRoaXMucGFyYW1zLnRpbWVzdGFtcFxuICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChtdXRhdGlvbi5kZWxldGUpIHtcbiAgICAgICAgb3BlcmF0aW9ucy5wdXNoKCgpID0+IG51bGwpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAobXV0YXRpb24ucGF0Y2gpIHtcbiAgICAgICAgaWYgKFwicXVlcnlcIiBpbiBtdXRhdGlvbi5wYXRjaClcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHBhdGNoID0gbmV3IFBhdGNoZXIobXV0YXRpb24ucGF0Y2gpO1xuICAgICAgICBvcGVyYXRpb25zLnB1c2goKGRvYykgPT4gcGF0Y2guYXBwbHkoZG9jKSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgbXV0YXRpb24gJHtKU09OLnN0cmluZ2lmeShtdXRhdGlvbiwgbnVsbCwgMil9YCk7XG4gICAgfSksIHR5cGVvZiB0aGlzLnBhcmFtcy50aW1lc3RhbXAgPT0gXCJzdHJpbmdcIiAmJiBvcGVyYXRpb25zLnB1c2goKGRvYykgPT4gZG9jID8gT2JqZWN0LmFzc2lnbihkb2MsIHsgX3VwZGF0ZWRBdDogdGhpcy5wYXJhbXMudGltZXN0YW1wIH0pIDogbnVsbCk7XG4gICAgY29uc3QgcHJldlJldiA9IHRoaXMucHJldmlvdXNSZXYsIHJldiA9IHRoaXMucmVzdWx0UmV2IHx8IHRoaXMudHJhbnNhY3Rpb25JZDtcbiAgICB0aGlzLmNvbXBpbGVkID0gKGRvYykgPT4ge1xuICAgICAgaWYgKHByZXZSZXYgJiYgZG9jICYmIHByZXZSZXYgIT09IGRvYy5fcmV2KVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFByZXZpb3VzIHJldmlzaW9uIGZvciB0aGlzIG11dGF0aW9uIHdhcyAke3ByZXZSZXZ9LCBidXQgdGhlIGRvY3VtZW50IHJldmlzaW9uIGlzICR7ZG9jLl9yZXZ9YFxuICAgICAgICApO1xuICAgICAgbGV0IHJlc3VsdCA9IGRvYztcbiAgICAgIGZvciAoY29uc3Qgb3BlcmF0aW9uIG9mIG9wZXJhdGlvbnMpXG4gICAgICAgIHJlc3VsdCA9IG9wZXJhdGlvbihyZXN1bHQpO1xuICAgICAgcmV0dXJuIHJlc3VsdCAmJiByZXYgJiYgKHJlc3VsdCA9PT0gZG9jICYmIChyZXN1bHQgPSBPYmplY3QuYXNzaWduKHt9LCBkb2MpKSwgcmVzdWx0Ll9yZXYgPSByZXYpLCByZXN1bHQ7XG4gICAgfTtcbiAgfVxuICBhcHBseShkb2N1bWVudCkge1xuICAgIGRlYnVnKFwiQXBwbHlpbmcgbXV0YXRpb24gJU8gdG8gZG9jdW1lbnQgJU9cIiwgdGhpcy5tdXRhdGlvbnMsIGRvY3VtZW50KSwgdGhpcy5jb21waWxlZCB8fCB0aGlzLmNvbXBpbGUoKTtcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmNvbXBpbGVkKGRvY3VtZW50KTtcbiAgICByZXR1cm4gZGVidWcoXCIgID0+ICVPXCIsIHJlc3VsdCksIHJlc3VsdDtcbiAgfVxuICBzdGF0aWMgYXBwbHlBbGwoZG9jdW1lbnQsIG11dGF0aW9ucykge1xuICAgIHJldHVybiBtdXRhdGlvbnMucmVkdWNlKChkb2MsIG11dGF0aW9uKSA9PiBtdXRhdGlvbi5hcHBseShkb2MpLCBkb2N1bWVudCk7XG4gIH1cbiAgLy8gR2l2ZW4gYSBudW1iZXIgb2YgeWV0LXRvLWJlLWNvbW1pdHRlZCBtdXRhdGlvbiBvYmplY3RzLCBjb2xsZWN0cyB0aGVtIGludG8gb25lIGJpZyBtdXRhdGlvblxuICAvLyBhbnkgbWV0YWRhdGEgbGlrZSB0cmFuc2FjdGlvbklkIGlzIGlnbm9yZWQgYW5kIG11c3QgYmUgc3VibWl0dGVkIGJ5IHRoZSBjbGllbnQuIEl0IGlzIGFzc3VtZWRcbiAgLy8gdGhhdCBhbGwgbXV0YXRpb25zIGFyZSBvbiB0aGUgc2FtZSBkb2N1bWVudC5cbiAgLy8gVE9PTzogT3B0aW1pemUgbXV0YXRpb25zLCBlbGltaW5hdGluZyBtdXRhdGlvbnMgdGhhdCBvdmVyd3JpdGUgdGhlbXNlbHZlcyFcbiAgc3RhdGljIHNxdWFzaChkb2N1bWVudCwgbXV0YXRpb25zKSB7XG4gICAgY29uc3Qgc3F1YXNoZWQgPSBtdXRhdGlvbnMucmVkdWNlKFxuICAgICAgKHJlc3VsdCwgbXV0YXRpb24pID0+IHJlc3VsdC5jb25jYXQoLi4ubXV0YXRpb24ubXV0YXRpb25zKSxcbiAgICAgIFtdXG4gICAgKTtcbiAgICByZXR1cm4gbmV3IE11dGF0aW9uKHsgbXV0YXRpb25zOiBzcXVhc2hlZCB9KTtcbiAgfVxufVxudmFyIF9fZGVmUHJvcCQyID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AkMiA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3AkMihvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQkMiA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcCQyKG9iaiwgdHlwZW9mIGtleSAhPSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY2xhc3MgRG9jdW1lbnQge1xuICBjb25zdHJ1Y3Rvcihkb2MpIHtcbiAgICBfX3B1YmxpY0ZpZWxkJDIodGhpcywgXCJpbmNvbWluZ1wiLCBbXSksIF9fcHVibGljRmllbGQkMih0aGlzLCBcInN1Ym1pdHRlZFwiLCBbXSksIF9fcHVibGljRmllbGQkMih0aGlzLCBcInBlbmRpbmdcIiwgW10pLCBfX3B1YmxpY0ZpZWxkJDIodGhpcywgXCJIRUFEXCIpLCBfX3B1YmxpY0ZpZWxkJDIodGhpcywgXCJFREdFXCIpLCBfX3B1YmxpY0ZpZWxkJDIodGhpcywgXCJvblJlYmFzZVwiKSwgX19wdWJsaWNGaWVsZCQyKHRoaXMsIFwib25NdXRhdGlvblwiKSwgX19wdWJsaWNGaWVsZCQyKHRoaXMsIFwib25Db25zaXN0ZW5jeUNoYW5nZWRcIiksIF9fcHVibGljRmllbGQkMih0aGlzLCBcIm9uUmVtb3RlTXV0YXRpb25cIiksIF9fcHVibGljRmllbGQkMih0aGlzLCBcImluY29uc2lzdGVudEF0XCIsIG51bGwpLCBfX3B1YmxpY0ZpZWxkJDIodGhpcywgXCJsYXN0U3RhZ2VkQXRcIiwgbnVsbCksIHRoaXMucmVzZXQoZG9jKSwgdGhpcy5IRUFEID0gZG9jLCB0aGlzLkVER0UgPSBkb2M7XG4gIH1cbiAgLy8gUmVzZXQgdGhlIHN0YXRlIG9mIHRoZSBEb2N1bWVudCwgdXNlZCB0byByZWNvdmVyIGZyb20gdW5zYXZvcnkgc3RhdGVzIGJ5IHJlbG9hZGluZyB0aGUgZG9jdW1lbnRcbiAgcmVzZXQoZG9jKSB7XG4gICAgdGhpcy5pbmNvbWluZyA9IFtdLCB0aGlzLnN1Ym1pdHRlZCA9IFtdLCB0aGlzLnBlbmRpbmcgPSBbXSwgdGhpcy5pbmNvbnNpc3RlbnRBdCA9IG51bGwsIHRoaXMuSEVBRCA9IGRvYywgdGhpcy5FREdFID0gZG9jLCB0aGlzLmNvbnNpZGVySW5jb21pbmcoKSwgdGhpcy51cGRhdGVDb25zaXN0ZW5jeUZsYWcoKTtcbiAgfVxuICAvLyBDYWxsIHdoZW4gYSBtdXRhdGlvbiBhcnJpdmVzIGZyb20gU2FuaXR5XG4gIGFycml2ZShtdXRhdGlvbikge1xuICAgIHRoaXMuaW5jb21pbmcucHVzaChtdXRhdGlvbiksIHRoaXMuY29uc2lkZXJJbmNvbWluZygpLCB0aGlzLnVwZGF0ZUNvbnNpc3RlbmN5RmxhZygpO1xuICB9XG4gIC8vIENhbGwgdG8gc2lnbmFsIHRoYXQgd2UgYXJlIHN1Ym1pdHRpbmcgYSBtdXRhdGlvbi4gUmV0dXJucyBhIGNhbGxiYWNrIG9iamVjdCB3aXRoIGFcbiAgLy8gc3VjY2VzcyBhbmQgZmFpbHVyZSBoYW5kbGVyIHRoYXQgbXVzdCBiZSBjYWxsZWQgYWNjb3JkaW5nIHRvIHRoZSBvdXRjb21lIG9mIG91clxuICAvLyBzdWJtaXNzaW9uLlxuICBzdGFnZShtdXRhdGlvbiwgc2lsZW50KSB7XG4gICAgaWYgKCFtdXRhdGlvbi50cmFuc2FjdGlvbklkKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTXV0YXRpb25zIF9tdXN0XyBoYXZlIHRyYW5zYWN0aW9uSWQgd2hlbiBzdWJtaXR0ZWRcIik7XG4gICAgdGhpcy5sYXN0U3RhZ2VkQXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoKSwgZGVidWcoXCJTdGFnaW5nIG11dGF0aW9uICVzIChwdXNoZWQgdG8gcGVuZGluZylcIiwgbXV0YXRpb24udHJhbnNhY3Rpb25JZCksIHRoaXMucGVuZGluZy5wdXNoKG11dGF0aW9uKSwgdGhpcy5FREdFID0gbXV0YXRpb24uYXBwbHkodGhpcy5FREdFKSwgdGhpcy5vbk11dGF0aW9uICYmICFzaWxlbnQgJiYgdGhpcy5vbk11dGF0aW9uKHtcbiAgICAgIG11dGF0aW9uLFxuICAgICAgZG9jdW1lbnQ6IHRoaXMuRURHRSxcbiAgICAgIHJlbW90ZTogITFcbiAgICB9KTtcbiAgICBjb25zdCB0eG5JZCA9IG11dGF0aW9uLnRyYW5zYWN0aW9uSWQ7XG4gICAgcmV0dXJuIHRoaXMudXBkYXRlQ29uc2lzdGVuY3lGbGFnKCksIHtcbiAgICAgIHN1Y2Nlc3M6ICgpID0+IHtcbiAgICAgICAgdGhpcy5wZW5kaW5nU3VjY2Vzc2Z1bGx5U3VibWl0dGVkKHR4bklkKSwgdGhpcy51cGRhdGVDb25zaXN0ZW5jeUZsYWcoKTtcbiAgICAgIH0sXG4gICAgICBmYWlsdXJlOiAoKSA9PiB7XG4gICAgICAgIHRoaXMucGVuZGluZ0ZhaWxlZCh0eG5JZCksIHRoaXMudXBkYXRlQ29uc2lzdGVuY3lGbGFnKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICAvLyBDYWxsIHRvIGNoZWNrIGlmIGV2ZXJ5dGhpbmcgaXMgbmljZSBhbmQgcXVpZXQgYW5kIHRoZXJlIGFyZSBubyB1bnJlc29sdmVkIG11dGF0aW9ucy5cbiAgLy8gTWVhbnMgdGhpcyBtb2RlbCB0aGlua3MgYm90aCBIRUFEIGFuZCBFREdFIGlzIHVwIHRvIGRhdGUgd2l0aCB3aGF0IHRoZSBzZXJ2ZXIgc2Vlcy5cbiAgaXNDb25zaXN0ZW50KCkge1xuICAgIHJldHVybiAhdGhpcy5pbmNvbnNpc3RlbnRBdDtcbiAgfVxuICAvLyBQcml2YXRlXG4gIC8vIEF0dGVtcHRzIHRvIGFwcGx5IGFueSByZXNvbHZhYmxlIGluY29taW5nIHBhdGNoZXMgdG8gSEVBRC4gV2lsbCBrZWVwIHBhdGNoaW5nIGFzIGxvbmcgYXMgdGhlcmVcbiAgLy8gYXJlIGFwcGxpY2FibGUgcGF0Y2hlcyB0byBiZSBhcHBsaWVkXG4gIGNvbnNpZGVySW5jb21pbmcoKSB7XG4gICAgbGV0IG11c3RSZWJhc2UgPSAhMSwgbmV4dE11dDtcbiAgICBjb25zdCByZWJhc2VNdXRhdGlvbnMgPSBbXTtcbiAgICBpZiAodGhpcy5IRUFEICYmIHRoaXMuSEVBRC5fdXBkYXRlZEF0KSB7XG4gICAgICBjb25zdCB1cGRhdGVkQXQgPSBuZXcgRGF0ZSh0aGlzLkhFQUQuX3VwZGF0ZWRBdCk7XG4gICAgICB0aGlzLmluY29taW5nLmZpbmQoKG11dCkgPT4gbXV0LnRpbWVzdGFtcCAmJiBtdXQudGltZXN0YW1wIDwgdXBkYXRlZEF0KSAmJiAodGhpcy5pbmNvbWluZyA9IHRoaXMuaW5jb21pbmcuZmlsdGVyKChtdXQpID0+IG11dC50aW1lc3RhbXAgJiYgbXV0LnRpbWVzdGFtcCA8IHVwZGF0ZWRBdCkpO1xuICAgIH1cbiAgICBsZXQgcHJvdGVjdCA9IDA7XG4gICAgZG8ge1xuICAgICAgaWYgKHRoaXMuSEVBRCkge1xuICAgICAgICBjb25zdCBIRUFEID0gdGhpcy5IRUFEO1xuICAgICAgICBuZXh0TXV0ID0gSEVBRC5fcmV2ID8gdGhpcy5pbmNvbWluZy5maW5kKChtdXQpID0+IG11dC5wcmV2aW91c1JldiA9PT0gSEVBRC5fcmV2KSA6IHZvaWQgMDtcbiAgICAgIH0gZWxzZVxuICAgICAgICBuZXh0TXV0ID0gdGhpcy5pbmNvbWluZy5maW5kKChtdXQpID0+IG11dC5hcHBsaWVzVG9NaXNzaW5nRG9jdW1lbnQoKSk7XG4gICAgICBpZiAobmV4dE11dCkge1xuICAgICAgICBjb25zdCBhcHBsaWVkID0gdGhpcy5hcHBseUluY29taW5nKG5leHRNdXQpO1xuICAgICAgICBpZiAobXVzdFJlYmFzZSA9IG11c3RSZWJhc2UgfHwgYXBwbGllZCwgbXVzdFJlYmFzZSAmJiByZWJhc2VNdXRhdGlvbnMucHVzaChuZXh0TXV0KSwgcHJvdGVjdCsrID4gMTApXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgYE11dGF0b3Igc3R1Y2sgZmx1c2hpbmcgaW5jb21pbmcgbXV0YXRpb25zLiBQcm9iYWJseSBzdHVjayBoZXJlOiAke0pTT04uc3RyaW5naWZ5KFxuICAgICAgICAgICAgICBuZXh0TXV0XG4gICAgICAgICAgICApfWBcbiAgICAgICAgICApO1xuICAgICAgfVxuICAgIH0gd2hpbGUgKG5leHRNdXQpO1xuICAgIHRoaXMuaW5jb21pbmcubGVuZ3RoID4gMCAmJiBkZWJ1Zy5lbmFibGVkICYmIGRlYnVnKFxuICAgICAgXCJVbmFibGUgdG8gYXBwbHkgbXV0YXRpb25zICVzXCIsXG4gICAgICB0aGlzLmluY29taW5nLm1hcCgobXV0KSA9PiBtdXQudHJhbnNhY3Rpb25JZCkuam9pbihcIiwgXCIpXG4gICAgKSwgbXVzdFJlYmFzZSAmJiB0aGlzLnJlYmFzZShyZWJhc2VNdXRhdGlvbnMpO1xuICB9XG4gIC8vIGNoZWNrIGN1cnJlbnQgY29uc2lzdGVuY3kgc3RhdGUsIHVwZGF0ZSBmbGFnIGFuZCBpbnZva2UgY2FsbGJhY2sgaWYgbmVlZGVkXG4gIHVwZGF0ZUNvbnNpc3RlbmN5RmxhZygpIHtcbiAgICBjb25zdCB3YXNDb25zaXN0ZW50ID0gdGhpcy5pc0NvbnNpc3RlbnQoKSwgaXNDb25zaXN0ZW50ID0gdGhpcy5wZW5kaW5nLmxlbmd0aCA9PT0gMCAmJiB0aGlzLnN1Ym1pdHRlZC5sZW5ndGggPT09IDAgJiYgdGhpcy5pbmNvbWluZy5sZW5ndGggPT09IDA7XG4gICAgaXNDb25zaXN0ZW50ID8gdGhpcy5pbmNvbnNpc3RlbnRBdCA9IG51bGwgOiB0aGlzLmluY29uc2lzdGVudEF0IHx8ICh0aGlzLmluY29uc2lzdGVudEF0ID0gLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKCkpLCB3YXNDb25zaXN0ZW50ICE9IGlzQ29uc2lzdGVudCAmJiB0aGlzLm9uQ29uc2lzdGVuY3lDaGFuZ2VkICYmIChkZWJ1Zyhpc0NvbnNpc3RlbnQgPyBcIkJ1ZmZlcmVkIGRvY3VtZW50IGlzIGluY29uc2lzdGVudFwiIDogXCJCdWZmZXJlZCBkb2N1bWVudCBpcyBjb25zaXN0ZW50XCIpLCB0aGlzLm9uQ29uc2lzdGVuY3lDaGFuZ2VkKGlzQ29uc2lzdGVudCkpO1xuICB9XG4gIC8vIGFwcGx5IGFuIGluY29taW5nIHBhdGNoIHRoYXQgaGFzIGJlZW4gcHJlcXVhbGlmaWVkIGFzIHRoZSBuZXh0IGluIGxpbmUgZm9yIHRoaXMgZG9jdW1lbnRcbiAgYXBwbHlJbmNvbWluZyhtdXQpIHtcbiAgICBpZiAoIW11dClcbiAgICAgIHJldHVybiAhMTtcbiAgICBpZiAoIW11dC50cmFuc2FjdGlvbklkKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVjZWl2ZWQgaW5jb21pbmcgbXV0YXRpb24gd2l0aG91dCBhIHRyYW5zYWN0aW9uIElEXCIpO1xuICAgIGlmIChkZWJ1ZyhcbiAgICAgIFwiQXBwbHlpbmcgbXV0YXRpb24gJXMgLT4gJXMgdG8gcmV2ICVzXCIsXG4gICAgICBtdXQucHJldmlvdXNSZXYsXG4gICAgICBtdXQucmVzdWx0UmV2LFxuICAgICAgdGhpcy5IRUFEICYmIHRoaXMuSEVBRC5fcmV2XG4gICAgKSwgdGhpcy5IRUFEID0gbXV0LmFwcGx5KHRoaXMuSEVBRCksIHRoaXMub25SZW1vdGVNdXRhdGlvbiAmJiB0aGlzLm9uUmVtb3RlTXV0YXRpb24obXV0KSwgdGhpcy5pbmNvbWluZyA9IHRoaXMuaW5jb21pbmcuZmlsdGVyKChtKSA9PiBtLnRyYW5zYWN0aW9uSWQgIT09IG11dC50cmFuc2FjdGlvbklkKSwgdGhpcy5oYXNVbnJlc29sdmVkTXV0YXRpb25zKCkpIHtcbiAgICAgIGNvbnN0IG5lZWRSZWJhc2UgPSB0aGlzLmNvbnN1bWVVbnJlc29sdmVkKG11dC50cmFuc2FjdGlvbklkKTtcbiAgICAgIHJldHVybiBkZWJ1Zy5lbmFibGVkICYmIChkZWJ1ZyhcbiAgICAgICAgYEluY29taW5nIG11dGF0aW9uICR7bXV0LnRyYW5zYWN0aW9uSWR9IGFwcGVhcmVkIHdoaWxlIHRoZXJlIHdlcmUgcGVuZGluZyBvciBzdWJtaXR0ZWQgbG9jYWwgbXV0YXRpb25zYFxuICAgICAgKSwgZGVidWcoYFN1Ym1pdHRlZCB0eG5JZHM6ICR7dGhpcy5zdWJtaXR0ZWQubWFwKChtKSA9PiBtLnRyYW5zYWN0aW9uSWQpLmpvaW4oXCIsIFwiKX1gKSwgZGVidWcoYFBlbmRpbmcgdHhuSWRzOiAke3RoaXMucGVuZGluZy5tYXAoKG0pID0+IG0udHJhbnNhY3Rpb25JZCkuam9pbihcIiwgXCIpfWApLCBkZWJ1ZyhcIm5lZWRSZWJhc2UgPT09ICVzXCIsIG5lZWRSZWJhc2UpKSwgbmVlZFJlYmFzZTtcbiAgICB9XG4gICAgcmV0dXJuIGRlYnVnKFxuICAgICAgXCJSZW1vdGUgbXV0YXRpb24gJXMgYXJyaXZlZCB3L28gYW55IHBlbmRpbmcgb3Igc3VibWl0dGVkIGxvY2FsIG11dGF0aW9uc1wiLFxuICAgICAgbXV0LnRyYW5zYWN0aW9uSWRcbiAgICApLCB0aGlzLkVER0UgPSB0aGlzLkhFQUQsIHRoaXMub25NdXRhdGlvbiAmJiB0aGlzLm9uTXV0YXRpb24oe1xuICAgICAgbXV0YXRpb246IG11dCxcbiAgICAgIGRvY3VtZW50OiB0aGlzLkVER0UsXG4gICAgICByZW1vdGU6ICEwXG4gICAgfSksICExO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlcmUgYXJlIHVucmVzb2x2ZWQgbXV0YXRpb25zIGJldHdlZW4gSEVBRCBhbmQgRURHRSwgbWVhbmluZyB3ZSBoYXZlXG4gICAqIG11dGF0aW9ucyB0aGF0IGFyZSBzdGlsbCB3YWl0aW5nIHRvIGJlIGVpdGhlciBzdWJtaXR0ZWQsIG9yIHRvIGJlIGNvbmZpcm1lZCBieSB0aGUgc2VydmVyLlxuICAgKlxuICAgKiBAcmV0dXJucyB0cnVlIGlmIHRoZXJlIGFyZSB1bnJlc29sdmVkIG11dGF0aW9ucyBiZXR3ZWVuIEhFQUQgYW5kIEVER0UsIGZhbHNlIG90aGVyd2lzZVxuICAgKi9cbiAgaGFzVW5yZXNvbHZlZE11dGF0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5zdWJtaXR0ZWQubGVuZ3RoID4gMCB8fCB0aGlzLnBlbmRpbmcubGVuZ3RoID4gMDtcbiAgfVxuICAvKipcbiAgICogV2hlbiBhbiBpbmNvbWluZyBtdXRhdGlvbiBpcyBhcHBsaWVkIHRvIEhFQUQsIHRoaXMgaXMgY2FsbGVkIHRvIHJlbW92ZSB0aGUgbXV0YXRpb24gZnJvbVxuICAgKiB0aGUgdW5yZXNvbHZlZCBzdGF0ZS4gSWYgdGhlIG5ld2x5IGFwcGxpZWQgcGF0Y2ggaXMgdGhlIG5leHQgdXBjb21pbmcgdW5yZXNvbHZlZCBtdXRhdGlvbixcbiAgICogbm8gcmViYXNlIGlzIG5lZWRlZCwgYnV0IHdlIG1pZ2h0IGhhdmUgdGhlIHdyb25nIGlkZWEgYWJvdXQgdGhlIG9yZGVyaW5nIG9mIG11dGF0aW9ucywgc28gaW5cbiAgICogdGhhdCBjYXNlIHdlIGFyZSBnaXZlbiB0aGUgZmxhZyBgbmVlZFJlYmFzZWAgdG8gdGVsbCB1cyB0aGF0IHRoaXMgbXV0YXRpb24gYXJyaXZlZCBvdXQgb2ZcbiAgICogb3JkZXIgaW4gdGVybXMgb2Ygb3VyIG9wdGltaXN0aWMgdmVyc2lvbiwgc28gYSByZWJhc2UgaXMgbmVlZGVkLlxuICAgKlxuICAgKiBAcGFyYW0gdHhuSWQgLSBUcmFuc2FjdGlvbiBJRCBvZiB0aGUgcmVtb3RlIG11dGF0aW9uXG4gICAqIEByZXR1cm5zIHRydWUgaWYgcmViYXNlIGlzIG5lZWRlZCwgZmFsc2Ugb3RoZXJ3aXNlXG4gICAqL1xuICBjb25zdW1lVW5yZXNvbHZlZCh0eG5JZCkge1xuICAgIGlmICh0aGlzLnN1Ym1pdHRlZC5sZW5ndGggPT09IDAgJiYgdGhpcy5wZW5kaW5nLmxlbmd0aCA9PT0gMClcbiAgICAgIHJldHVybiAhMTtcbiAgICBpZiAodGhpcy5zdWJtaXR0ZWQubGVuZ3RoICE9PSAwKSB7XG4gICAgICBpZiAodGhpcy5zdWJtaXR0ZWRbMF0udHJhbnNhY3Rpb25JZCA9PT0gdHhuSWQpXG4gICAgICAgIHJldHVybiBkZWJ1ZyhcbiAgICAgICAgICBcIlJlbW90ZSBtdXRhdGlvbiAlcyBtYXRjaGVzIHVwY29taW5nIHN1Ym1pdHRlZCBtdXRhdGlvbiwgY29uc3VtZWQgZnJvbSAnc3VibWl0dGVkJyBidWZmZXJcIixcbiAgICAgICAgICB0eG5JZFxuICAgICAgICApLCB0aGlzLnN1Ym1pdHRlZC5zaGlmdCgpLCAhMTtcbiAgICB9IGVsc2UgaWYgKHRoaXMucGVuZGluZy5sZW5ndGggPiAwICYmIHRoaXMucGVuZGluZ1swXS50cmFuc2FjdGlvbklkID09PSB0eG5JZClcbiAgICAgIHJldHVybiBkZWJ1ZyhcbiAgICAgICAgXCJSZW1vdGUgbXV0YXRpb24gJXMgbWF0Y2hlcyB1cGNvbWluZyBwZW5kaW5nIG11dGF0aW9uLCBjb25zdW1lZCBmcm9tICdwZW5kaW5nJyBidWZmZXJcIixcbiAgICAgICAgdHhuSWRcbiAgICAgICksIHRoaXMucGVuZGluZy5zaGlmdCgpLCAhMTtcbiAgICByZXR1cm4gZGVidWcoXG4gICAgICBcIlRoZSBtdXRhdGlvbiB3YXMgbm90IHRoZSB1cGNvbWluZyBtdXRhdGlvbiwgc2NydWJiaW5nLiBQZW5kaW5nOiAlZCwgU3VibWl0dGVkOiAlZFwiLFxuICAgICAgdGhpcy5wZW5kaW5nLmxlbmd0aCxcbiAgICAgIHRoaXMuc3VibWl0dGVkLmxlbmd0aFxuICAgICksIHRoaXMuc3VibWl0dGVkID0gdGhpcy5zdWJtaXR0ZWQuZmlsdGVyKChtdXQpID0+IG11dC50cmFuc2FjdGlvbklkICE9PSB0eG5JZCksIHRoaXMucGVuZGluZyA9IHRoaXMucGVuZGluZy5maWx0ZXIoKG11dCkgPT4gbXV0LnRyYW5zYWN0aW9uSWQgIT09IHR4bklkKSwgZGVidWcoXCJBZnRlciBzY3J1YmJpbmc6IFBlbmRpbmc6ICVkLCBTdWJtaXR0ZWQ6ICVkXCIsIHRoaXMucGVuZGluZy5sZW5ndGgsIHRoaXMuc3VibWl0dGVkLmxlbmd0aCksICEwO1xuICB9XG4gIHBlbmRpbmdTdWNjZXNzZnVsbHlTdWJtaXR0ZWQocGVuZGluZ1R4bklkKSB7XG4gICAgaWYgKHRoaXMucGVuZGluZy5sZW5ndGggPT09IDApXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgZmlyc3QgPSB0aGlzLnBlbmRpbmdbMF07XG4gICAgaWYgKGZpcnN0LnRyYW5zYWN0aW9uSWQgPT09IHBlbmRpbmdUeG5JZCkge1xuICAgICAgdGhpcy5wZW5kaW5nLnNoaWZ0KCksIHRoaXMuc3VibWl0dGVkLnB1c2goZmlyc3QpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQganVzdFN1Ym1pdHRlZDtcbiAgICBjb25zdCBzdGlsbFBlbmRpbmcgPSBbXTtcbiAgICB0aGlzLnBlbmRpbmcuZm9yRWFjaCgobXV0YXRpb24pID0+IHtcbiAgICAgIGlmIChtdXRhdGlvbi50cmFuc2FjdGlvbklkID09PSBwZW5kaW5nVHhuSWQpIHtcbiAgICAgICAganVzdFN1Ym1pdHRlZCA9IG11dGF0aW9uO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzdGlsbFBlbmRpbmcucHVzaChtdXRhdGlvbik7XG4gICAgfSksIGp1c3RTdWJtaXR0ZWQgJiYgdGhpcy5zdWJtaXR0ZWQucHVzaChqdXN0U3VibWl0dGVkKSwgdGhpcy5wZW5kaW5nID0gc3RpbGxQZW5kaW5nLCB0aGlzLnJlYmFzZShbXSk7XG4gIH1cbiAgcGVuZGluZ0ZhaWxlZChwZW5kaW5nVHhuSWQpIHtcbiAgICB0aGlzLnBlbmRpbmcgPSB0aGlzLnBlbmRpbmcuZmlsdGVyKChtdXRhdGlvbikgPT4gbXV0YXRpb24udHJhbnNhY3Rpb25JZCAhPT0gcGVuZGluZ1R4bklkKSwgdGhpcy5yZWJhc2UoW10pO1xuICB9XG4gIHJlYmFzZShpbmNvbWluZ011dGF0aW9ucykge1xuICAgIGNvbnN0IG9sZEVkZ2UgPSB0aGlzLkVER0U7XG4gICAgdGhpcy5FREdFID0gTXV0YXRpb24uYXBwbHlBbGwodGhpcy5IRUFELCB0aGlzLnN1Ym1pdHRlZC5jb25jYXQodGhpcy5wZW5kaW5nKSksIG9sZEVkZ2UgIT09IG51bGwgJiYgdGhpcy5FREdFICE9PSBudWxsICYmIChvbGRFZGdlLl9yZXYgPSB0aGlzLkVER0UuX3JldiksICFpc0VxdWFsKHRoaXMuRURHRSwgb2xkRWRnZSkgJiYgdGhpcy5vblJlYmFzZSAmJiB0aGlzLm9uUmViYXNlKHRoaXMuRURHRSwgaW5jb21pbmdNdXRhdGlvbnMsIHRoaXMucGVuZGluZyk7XG4gIH1cbn1cbnZhciBfX2RlZlByb3AkMSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgX19kZWZOb3JtYWxQcm9wJDEgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wJDEob2JqLCBrZXksIHsgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlLCBfX3B1YmxpY0ZpZWxkJDEgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3AkMShvYmosIHR5cGVvZiBrZXkgIT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmNsYXNzIFNxdWFzaGluZ0J1ZmZlciB7XG4gIGNvbnN0cnVjdG9yKGRvYykge1xuICAgIF9fcHVibGljRmllbGQkMSh0aGlzLCBcIkJBU0lTXCIpLCBfX3B1YmxpY0ZpZWxkJDEodGhpcywgXCJQUkVTVEFHRVwiKSwgX19wdWJsaWNGaWVsZCQxKHRoaXMsIFwic2V0T3BlcmF0aW9uc1wiKSwgX19wdWJsaWNGaWVsZCQxKHRoaXMsIFwiZG9jdW1lbnRQcmVzZW50XCIpLCBfX3B1YmxpY0ZpZWxkJDEodGhpcywgXCJvdXRcIiwgW10pLCBfX3B1YmxpY0ZpZWxkJDEodGhpcywgXCJzdGFnZWRcIiksIGRvYyA/IGRlYnVnKFwiUmVzZXQgbXV0YXRpb24gYnVmZmVyIHRvIHJldiAlc1wiLCBkb2MuX3JldikgOiBkZWJ1ZyhcIlJlc2V0IG11dGF0aW9uIGJ1ZmZlciBzdGF0ZSB0byBkb2N1bWVudCBiZWluZyBkZWxldGVkXCIpLCB0aGlzLnN0YWdlZCA9IFtdLCB0aGlzLnNldE9wZXJhdGlvbnMgPSB7fSwgdGhpcy5kb2N1bWVudFByZXNlbnQgPSAhMSwgdGhpcy5CQVNJUyA9IGRvYywgdGhpcy5QUkVTVEFHRSA9IGRvYztcbiAgfVxuICBhZGQobXV0KSB7XG4gICAgbXV0Lm11dGF0aW9ucy5mb3JFYWNoKChvcCkgPT4gdGhpcy5hZGRPcGVyYXRpb24ob3ApKTtcbiAgfVxuICBoYXNDaGFuZ2VzKCkge1xuICAgIHJldHVybiB0aGlzLm91dC5sZW5ndGggPiAwIHx8IE9iamVjdC5rZXlzKHRoaXMuc2V0T3BlcmF0aW9ucykubGVuZ3RoID4gMDtcbiAgfVxuICAvKipcbiAgICogRXh0cmFjdHMgdGhlIG11dGF0aW9ucyBpbiB0aGlzIGJ1ZmZlci5cbiAgICogQWZ0ZXIgdGhpcyBpcyBkb25lLCB0aGUgYnVmZmVyIGxpZmVjeWNsZSBpcyBvdmVyIGFuZCB0aGUgY2xpZW50IHNob3VsZFxuICAgKiBjcmVhdGUgYW4gbmV3IG9uZSB3aXRoIHRoZSBuZXcsIHVwZGF0ZWQgQkFTSVMuXG4gICAqXG4gICAqIEBwYXJhbSB0eG5JZCAtIFRyYW5zYWN0aW9uIElEXG4gICAqIEByZXR1cm5zIEEgYE11dGF0aW9uYCBpbnN0YW5jZSBpZiB3ZSBoYWQgb3V0Z29pbmcgbXV0YXRpb25zIHBlbmRpbmcsIG51bGwgb3RoZXJ3aXNlXG4gICAqL1xuICBwdXJnZSh0eG5JZCkge1xuICAgIHRoaXMuc3Rhc2hTdGFnZWRPcGVyYXRpb25zKCk7XG4gICAgbGV0IHJlc3VsdCA9IG51bGw7XG4gICAgcmV0dXJuIHRoaXMub3V0Lmxlbmd0aCA+IDAgJiYgKGRlYnVnKFwiUHVyZ2VkIG11dGF0aW9uIGJ1ZmZlclwiKSwgcmVzdWx0ID0gbmV3IE11dGF0aW9uKHtcbiAgICAgIG11dGF0aW9uczogdGhpcy5vdXQsXG4gICAgICByZXN1bHRSZXY6IHR4bklkLFxuICAgICAgdHJhbnNhY3Rpb25JZDogdHhuSWRcbiAgICB9KSksIHRoaXMub3V0ID0gW10sIHRoaXMuZG9jdW1lbnRQcmVzZW50ID0gITEsIHJlc3VsdDtcbiAgfVxuICBhZGRPcGVyYXRpb24ob3ApIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKG9wLnBhdGNoICYmIG9wLnBhdGNoLnNldCAmJiBcImlkXCIgaW4gb3AucGF0Y2ggJiYgb3AucGF0Y2guaWQgPT09ICgoX2EgPSB0aGlzLlBSRVNUQUdFKSA9PSBudWxsID8gdm9pZCAwIDogX2EuX2lkKSAmJiBPYmplY3Qua2V5cyhvcC5wYXRjaCkubGVuZ3RoID09PSAyKSB7XG4gICAgICBjb25zdCBzZXRQYXRjaCA9IG9wLnBhdGNoLnNldCwgdW5vcHRpbWl6YWJsZSA9IHt9O1xuICAgICAgZm9yIChjb25zdCBwYXRoIG9mIE9iamVjdC5rZXlzKHNldFBhdGNoKSlcbiAgICAgICAgc2V0UGF0Y2guaGFzT3duUHJvcGVydHkocGF0aCkgJiYgKHRoaXMub3B0aW1pc2VTZXRPcGVyYXRpb24ocGF0aCwgc2V0UGF0Y2hbcGF0aF0pIHx8ICh1bm9wdGltaXphYmxlW3BhdGhdID0gc2V0UGF0Y2hbcGF0aF0pKTtcbiAgICAgIE9iamVjdC5rZXlzKHVub3B0aW1pemFibGUpLmxlbmd0aCA+IDAgJiYgKGRlYnVnKFwiVW5vcHRpbWl6YWJsZSBzZXQtb3BlcmF0aW9uIGRldGVjdGVkLCBwdXJnaW5nIG9wdGltaXphdGlvbiBidWZmZXJcIiksIHRoaXMuc3RhZ2VkLnB1c2goeyBwYXRjaDogeyBpZDogdGhpcy5QUkVTVEFHRS5faWQsIHNldDogdW5vcHRpbWl6YWJsZSB9IH0pLCB0aGlzLnN0YXNoU3RhZ2VkT3BlcmF0aW9ucygpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKG9wLmNyZWF0ZUlmTm90RXhpc3RzICYmIHRoaXMuUFJFU1RBR0UgJiYgb3AuY3JlYXRlSWZOb3RFeGlzdHMuX2lkID09PSB0aGlzLlBSRVNUQUdFLl9pZCkge1xuICAgICAgdGhpcy5kb2N1bWVudFByZXNlbnQgfHwgKHRoaXMuc3RhZ2VkLnB1c2gob3ApLCB0aGlzLmRvY3VtZW50UHJlc2VudCA9ICEwLCB0aGlzLnN0YXNoU3RhZ2VkT3BlcmF0aW9ucygpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZGVidWcoXCJVbm9wdGltaXphYmxlIG11dGF0aW9uIGRldGVjdGVkLCBwdXJnaW5nIG9wdGltaXphdGlvbiBidWZmZXJcIiksIHRoaXMuc3RhZ2VkLnB1c2gob3ApLCB0aGlzLnN0YXNoU3RhZ2VkT3BlcmF0aW9ucygpO1xuICB9XG4gIC8qKlxuICAgICAqIEF0dGVtcHQgdG8gcGVyZm9ybSBvbmUgc2luZ2xlIHNldCBvcGVyYXRpb24gaW4gYW4gb3B0aW1pc2VkIG1hbm5lciwgcmV0dXJuIHZhbHVlXG4gICAgICogcmVmbGVjdHMgd2hldGhlciBvciBub3QgdGhlIG9wZXJhdGlvbiBjb3VsZCBiZSBwZXJmb3JtZWQuXG4gIFxuICAgICAqIEBwYXJhbSBwYXRoIC0gVGhlIEpTT05QYXRoIHRvIHRoZSBzZXQgb3BlcmF0aW9uIGluIHF1ZXN0aW9uXG4gICAgICogQHBhcmFtIG5leHRWYWx1ZSAtIFRoZSB2YWx1ZSB0byBiZSBzZXRcbiAgICAgKiBAcmV0dXJucyBUcnVlIG9mIG9wdGltaXplZCwgZmFsc2Ugb3RoZXJ3aXNlXG4gICAgICovXG4gIG9wdGltaXNlU2V0T3BlcmF0aW9uKHBhdGgsIG5leHRWYWx1ZSkge1xuICAgIGlmICh0eXBlb2YgbmV4dFZhbHVlID09IFwib2JqZWN0XCIpXG4gICAgICByZXR1cm4gITE7XG4gICAgY29uc3QgbWF0Y2hlcyA9IGV4dHJhY3RXaXRoUGF0aChwYXRoLCB0aGlzLlBSRVNUQUdFKTtcbiAgICBpZiAobWF0Y2hlcy5sZW5ndGggIT09IDEpXG4gICAgICByZXR1cm4gITE7XG4gICAgY29uc3QgbWF0Y2ggPSBtYXRjaGVzWzBdO1xuICAgIGlmICh0eXBlb2YgbWF0Y2gudmFsdWUgPT0gXCJvYmplY3RcIiB8fCAhdGhpcy5QUkVTVEFHRSlcbiAgICAgIHJldHVybiAhMTtcbiAgICBsZXQgb3AgPSBudWxsO1xuICAgIGlmIChtYXRjaC52YWx1ZSA9PT0gbmV4dFZhbHVlKVxuICAgICAgb3AgPSBudWxsO1xuICAgIGVsc2UgaWYgKHR5cGVvZiBtYXRjaC52YWx1ZSA9PSBcInN0cmluZ1wiICYmIHR5cGVvZiBuZXh0VmFsdWUgPT0gXCJzdHJpbmdcIilcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHBhdGNoID0gc3RyaW5naWZ5UGF0Y2hlcyhtYWtlUGF0Y2hlcyhtYXRjaC52YWx1ZSwgbmV4dFZhbHVlKSk7XG4gICAgICAgIG9wID0geyBwYXRjaDogeyBpZDogdGhpcy5QUkVTVEFHRS5faWQsIGRpZmZNYXRjaFBhdGNoOiB7IFtwYXRoXTogcGF0Y2ggfSB9IH07XG4gICAgICB9IGNhdGNoIHtcbiAgICAgICAgcmV0dXJuICExO1xuICAgICAgfVxuICAgIGVsc2VcbiAgICAgIG9wID0geyBwYXRjaDogeyBpZDogdGhpcy5QUkVTVEFHRS5faWQsIHNldDogeyBbcGF0aF06IG5leHRWYWx1ZSB9IH0gfTtcbiAgICBjb25zdCBjYW5vbmljYWxQYXRoID0gYXJyYXlUb0pTT05NYXRjaFBhdGgobWF0Y2gucGF0aCk7XG4gICAgcmV0dXJuIG9wID8gdGhpcy5zZXRPcGVyYXRpb25zW2Nhbm9uaWNhbFBhdGhdID0gb3AgOiBkZWxldGUgdGhpcy5zZXRPcGVyYXRpb25zW2Nhbm9uaWNhbFBhdGhdLCAhMDtcbiAgfVxuICBzdGFzaFN0YWdlZE9wZXJhdGlvbnMoKSB7XG4gICAgY29uc3QgbmV4dE9wcyA9IFtdO1xuICAgIE9iamVjdC5rZXlzKHRoaXMuc2V0T3BlcmF0aW9ucykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBjb25zdCBvcCA9IHRoaXMuc2V0T3BlcmF0aW9uc1trZXldO1xuICAgICAgb3AgJiYgbmV4dE9wcy5wdXNoKG9wKTtcbiAgICB9KSwgbmV4dE9wcy5wdXNoKC4uLnRoaXMuc3RhZ2VkKSwgbmV4dE9wcy5sZW5ndGggPiAwICYmICh0aGlzLlBSRVNUQUdFID0gbmV3IE11dGF0aW9uKHsgbXV0YXRpb25zOiBuZXh0T3BzIH0pLmFwcGx5KHRoaXMuUFJFU1RBR0UpLCB0aGlzLnN0YWdlZCA9IFtdLCB0aGlzLnNldE9wZXJhdGlvbnMgPSB7fSksIHRoaXMub3V0LnB1c2goLi4ubmV4dE9wcyk7XG4gIH1cbiAgLyoqXG4gICAqIFJlYmFzZXMgZ2l2ZW4gdGhlIG5ldyBiYXNlLWRvY3VtZW50XG4gICAqXG4gICAqIEBwYXJhbSBuZXdCYXNpcyAtIE5ldyBiYXNlIGRvY3VtZW50IHRvIHJlYmFzZSBvblxuICAgKiBAcmV0dXJucyBOZXcgXCJlZGdlXCIgZG9jdW1lbnQgd2l0aCBidWZmZXJlZCBjaGFuZ2VzIGludGVncmF0ZWRcbiAgICovXG4gIHJlYmFzZShuZXdCYXNpcykge1xuICAgIHJldHVybiB0aGlzLnN0YXNoU3RhZ2VkT3BlcmF0aW9ucygpLCBuZXdCYXNpcyA9PT0gbnVsbCA/ICh0aGlzLm91dCA9IFtdLCB0aGlzLkJBU0lTID0gbmV3QmFzaXMsIHRoaXMuUFJFU1RBR0UgPSBuZXdCYXNpcywgdGhpcy5kb2N1bWVudFByZXNlbnQgPSAhMSkgOiAodGhpcy5CQVNJUyA9IG5ld0Jhc2lzLCB0aGlzLm91dCA/IHRoaXMuUFJFU1RBR0UgPSBuZXcgTXV0YXRpb24oeyBtdXRhdGlvbnM6IHRoaXMub3V0IH0pLmFwcGx5KHRoaXMuQkFTSVMpIDogdGhpcy5QUkVTVEFHRSA9IHRoaXMuQkFTSVMpLCB0aGlzLlBSRVNUQUdFO1xuICB9XG59XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LCBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwLCB3cml0YWJsZTogITAsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZSwgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmNvbnN0IE9ORV9NSU5VVEUgPSAxZTMgKiA2MDtcbmNsYXNzIENvbW1pdCB7XG4gIGNvbnN0cnVjdG9yKG11dGF0aW9ucywgeyByZXNvbHZlLCByZWplY3QgfSkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtdXRhdGlvbnNcIiksIF9fcHVibGljRmllbGQodGhpcywgXCJ0cmllc1wiKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlc29sdmVcIiksIF9fcHVibGljRmllbGQodGhpcywgXCJyZWplY3RcIiksIHRoaXMubXV0YXRpb25zID0gbXV0YXRpb25zLCB0aGlzLnRyaWVzID0gMCwgdGhpcy5yZXNvbHZlID0gcmVzb2x2ZSwgdGhpcy5yZWplY3QgPSByZWplY3Q7XG4gIH1cbiAgYXBwbHkoZG9jKSB7XG4gICAgcmV0dXJuIE11dGF0aW9uLmFwcGx5QWxsKGRvYywgdGhpcy5tdXRhdGlvbnMpO1xuICB9XG4gIHNxdWFzaChkb2MpIHtcbiAgICBjb25zdCByZXN1bHQgPSBNdXRhdGlvbi5zcXVhc2goZG9jLCB0aGlzLm11dGF0aW9ucyk7XG4gICAgcmV0dXJuIHJlc3VsdC5hc3NpZ25SYW5kb21UcmFuc2FjdGlvbklkKCksIHJlc3VsdDtcbiAgfVxufVxuY29uc3QgbXV0UmVkdWNlckZuID0gKGFjYywgbXV0KSA9PiBhY2MuY29uY2F0KG11dC5tdXRhdGlvbnMpO1xuY2xhc3MgQnVmZmVyZWREb2N1bWVudCB7XG4gIGNvbnN0cnVjdG9yKGRvYykge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtdXRhdGlvbnNcIiksIF9fcHVibGljRmllbGQodGhpcywgXCJkb2N1bWVudFwiKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcIkxPQ0FMXCIpLCBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29tbWl0c1wiKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcImJ1ZmZlclwiKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm9uTXV0YXRpb25cIiksIF9fcHVibGljRmllbGQodGhpcywgXCJvblJlbW90ZU11dGF0aW9uXCIpLCBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib25SZWJhc2VcIiksIF9fcHVibGljRmllbGQodGhpcywgXCJvbkRlbGV0ZVwiKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm9uQ29uc2lzdGVuY3lDaGFuZ2VkXCIpLCBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29tbWl0SGFuZGxlclwiKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbW1pdHRlclJ1bm5pbmdcIiwgITEpLCB0aGlzLmJ1ZmZlciA9IG5ldyBTcXVhc2hpbmdCdWZmZXIoZG9jKSwgdGhpcy5kb2N1bWVudCA9IG5ldyBEb2N1bWVudChkb2MpLCB0aGlzLmRvY3VtZW50Lm9uTXV0YXRpb24gPSAobXNnKSA9PiB0aGlzLmhhbmRsZURvY011dGF0aW9uKG1zZyksIHRoaXMuZG9jdW1lbnQub25SZW1vdGVNdXRhdGlvbiA9IChtdXQpID0+IHRoaXMub25SZW1vdGVNdXRhdGlvbiAmJiB0aGlzLm9uUmVtb3RlTXV0YXRpb24obXV0KSwgdGhpcy5kb2N1bWVudC5vblJlYmFzZSA9IChlZGdlLCByZW1vdGVNdXRhdGlvbnMsIGxvY2FsTXV0YXRpb25zKSA9PiB0aGlzLmhhbmRsZURvY1JlYmFzZShlZGdlLCByZW1vdGVNdXRhdGlvbnMsIGxvY2FsTXV0YXRpb25zKSwgdGhpcy5kb2N1bWVudC5vbkNvbnNpc3RlbmN5Q2hhbmdlZCA9IChtc2cpID0+IHRoaXMuaGFuZGxlRG9jQ29uc2lzdGVuY3lDaGFuZ2VkKG1zZyksIHRoaXMuTE9DQUwgPSBkb2MsIHRoaXMubXV0YXRpb25zID0gW10sIHRoaXMuY29tbWl0cyA9IFtdO1xuICB9XG4gIC8vIFVzZWQgdG8gcmVzZXQgdGhlIHN0YXRlIG9mIHRoZSBsb2NhbCBkb2N1bWVudCBtb2RlbC4gSWYgdGhlIG1vZGVsIGhhcyBiZWVuIGluY29uc2lzdGVudFxuICAvLyBmb3IgdG9vIGxvbmcsIGl0IGhhcyBwcm9iYWJseSBtaXNzZWQgYSBub3RpZmljYXRpb24sIGFuZCBzaG91bGQgcmVsb2FkIHRoZSBkb2N1bWVudCBmcm9tIHRoZSBzZXJ2ZXJcbiAgcmVzZXQoZG9jKSB7XG4gICAgZG9jID8gZGVidWcoXCJEb2N1bWVudCBzdGF0ZSByZXNldCB0byByZXZpc2lvbiAlc1wiLCBkb2MuX3JldikgOiBkZWJ1ZyhcIkRvY3VtZW50IHN0YXRlIHJlc2V0IHRvIGJlaW5nIGRlbGV0ZWRcIiksIHRoaXMuZG9jdW1lbnQucmVzZXQoZG9jKSwgdGhpcy5yZWJhc2UoW10sIFtdKSwgdGhpcy5oYW5kbGVEb2NDb25zaXN0ZW5jeUNoYW5nZWQodGhpcy5kb2N1bWVudC5pc0NvbnNpc3RlbnQoKSk7XG4gIH1cbiAgLy8gQWRkIGEgY2hhbmdlIHRvIHRoZSBidWZmZXJcbiAgYWRkKG11dGF0aW9uKSB7XG4gICAgdGhpcy5vbkNvbnNpc3RlbmN5Q2hhbmdlZCAmJiB0aGlzLm9uQ29uc2lzdGVuY3lDaGFuZ2VkKCExKSwgZGVidWcoXCJTdGFnZWQgbG9jYWwgbXV0YXRpb25cIiksIHRoaXMuYnVmZmVyLmFkZChtdXRhdGlvbik7XG4gICAgY29uc3Qgb2xkTG9jYWwgPSB0aGlzLkxPQ0FMO1xuICAgIHRoaXMuTE9DQUwgPSBtdXRhdGlvbi5hcHBseSh0aGlzLkxPQ0FMKSwgdGhpcy5vbk11dGF0aW9uICYmIG9sZExvY2FsICE9PSB0aGlzLkxPQ0FMICYmIChkZWJ1ZyhcIm9uTXV0YXRpb24gZmlyZWRcIiksIHRoaXMub25NdXRhdGlvbih7XG4gICAgICBtdXRhdGlvbixcbiAgICAgIGRvY3VtZW50OiB0aGlzLkxPQ0FMLFxuICAgICAgcmVtb3RlOiAhMVxuICAgIH0pLCB0aGlzLkxPQ0FMID09PSBudWxsICYmIHRoaXMub25EZWxldGUgJiYgdGhpcy5vbkRlbGV0ZSh0aGlzLkxPQ0FMKSk7XG4gIH1cbiAgLy8gQ2FsbCB3aGVuIGEgbXV0YXRpb24gYXJyaXZlcyBmcm9tIFNhbml0eVxuICBhcnJpdmUobXV0YXRpb24pIHtcbiAgICBpZiAoZGVidWcoXCJSZW1vdGUgbXV0YXRpb24gYXJyaXZlZCAlcyAtPiAlc1wiLCBtdXRhdGlvbi5wcmV2aW91c1JldiwgbXV0YXRpb24ucmVzdWx0UmV2KSwgbXV0YXRpb24ucHJldmlvdXNSZXYgPT09IG11dGF0aW9uLnJlc3VsdFJldilcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYE11dGF0aW9uICR7bXV0YXRpb24udHJhbnNhY3Rpb25JZH0gaGFzIHByZXZpb3VzUmV2ID09PSByZXN1bHRSZXYgKCR7bXV0YXRpb24ucHJldmlvdXNSZXZ9KWBcbiAgICAgICk7XG4gICAgcmV0dXJuIHRoaXMuZG9jdW1lbnQuYXJyaXZlKG11dGF0aW9uKTtcbiAgfVxuICAvLyBTdWJtaXQgYWxsIG11dGF0aW9ucyBpbiB0aGUgYnVmZmVyIHRvIGJlIGNvbW1pdHRlZFxuICBjb21taXQoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmICghdGhpcy5idWZmZXIuaGFzQ2hhbmdlcygpKSB7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZGVidWcoXCJDb21taXR0aW5nIGxvY2FsIGNoYW5nZXNcIik7XG4gICAgICBjb25zdCBwZW5kaW5nTXV0YXRpb25zID0gdGhpcy5idWZmZXIucHVyZ2UoKTtcbiAgICAgIHRoaXMuY29tbWl0cy5wdXNoKG5ldyBDb21taXQocGVuZGluZ011dGF0aW9ucyA/IFtwZW5kaW5nTXV0YXRpb25zXSA6IFtdLCB7IHJlc29sdmUsIHJlamVjdCB9KSksIHRoaXMuYnVmZmVyID0gbmV3IFNxdWFzaGluZ0J1ZmZlcih0aGlzLkxPQ0FMKSwgdGhpcy5wZXJmb3JtQ29tbWl0cygpO1xuICAgIH0pO1xuICB9XG4gIC8vIFN0YXJ0cyB0aGUgY29tbWl0dGVyIHRoYXQgd2lsbCB0cnkgdG8gY29tbWl0dCBhbGwgc3RhZ2VkIGNvbW1pdHMgdG8gdGhlIGRhdGFiYXNlXG4gIC8vIGJ5IGNhbGxpbmcgdGhlIGNvbW1pdEhhbmRsZXIuIFdpbGwga2VlcCBydW5uaW5nIHVudGlsIGFsbCBjb21taXRzIGFyZSBzdWNjZXNzZnVsbHlcbiAgLy8gY29tbWl0dGVkLlxuICBwZXJmb3JtQ29tbWl0cygpIHtcbiAgICBpZiAoIXRoaXMuY29tbWl0SGFuZGxlcilcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGNvbW1pdEhhbmRsZXIgY29uZmlndXJlZCBmb3IgdGhpcyBCdWZmZXJlZERvY3VtZW50XCIpO1xuICAgIHRoaXMuY29tbWl0dGVyUnVubmluZyB8fCB0aGlzLl9jeWNsZUNvbW1pdHRlcigpO1xuICB9XG4gIC8vIFRPRE86IEVycm9yIGhhbmRsaW5nLCByaWdodCBub3cgcmV0cmllcyBhZnRlciBldmVyeSBlcnJvclxuICBfY3ljbGVDb21taXR0ZXIoKSB7XG4gICAgY29uc3QgY29tbWl0ID0gdGhpcy5jb21taXRzLnNoaWZ0KCk7XG4gICAgaWYgKCFjb21taXQpIHtcbiAgICAgIHRoaXMuY29tbWl0dGVyUnVubmluZyA9ICExO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmNvbW1pdHRlclJ1bm5pbmcgPSAhMDtcbiAgICBjb25zdCBzcXVhc2hlZCA9IGNvbW1pdC5zcXVhc2godGhpcy5MT0NBTCksIGRvY1Jlc3BvbmRlciA9IHRoaXMuZG9jdW1lbnQuc3RhZ2Uoc3F1YXNoZWQsICEwKSwgcmVzcG9uZGVyID0ge1xuICAgICAgc3VjY2VzczogKCkgPT4ge1xuICAgICAgICBkZWJ1ZyhcIkNvbW1pdCBzdWNjZWVkZWRcIiksIGRvY1Jlc3BvbmRlci5zdWNjZXNzKCksIGNvbW1pdC5yZXNvbHZlKCksIHRoaXMuX2N5Y2xlQ29tbWl0dGVyKCk7XG4gICAgICB9LFxuICAgICAgZmFpbHVyZTogKCkgPT4ge1xuICAgICAgICBkZWJ1ZyhcIkNvbW1pdCBmYWlsZWRcIiksIGNvbW1pdC50cmllcyArPSAxLCB0aGlzLkxPQ0FMICE9PSBudWxsICYmIHRoaXMuY29tbWl0cy51bnNoaWZ0KGNvbW1pdCksIGRvY1Jlc3BvbmRlci5mYWlsdXJlKCksIGNvbW1pdC50cmllcyA8IDIwMCAmJiBzZXRUaW1lb3V0KCgpID0+IHRoaXMuX2N5Y2xlQ29tbWl0dGVyKCksIE1hdGgubWluKGNvbW1pdC50cmllcyAqIDFlMywgT05FX01JTlVURSkpO1xuICAgICAgfSxcbiAgICAgIGNhbmNlbDogKGVycm9yKSA9PiB7XG4gICAgICAgIHRoaXMuY29tbWl0cy5mb3JFYWNoKChjb21tKSA9PiBjb21tLnJlamVjdChlcnJvcikpLCB0aGlzLmNvbW1pdHMgPSBbXSwgdGhpcy5yZXNldCh0aGlzLmRvY3VtZW50LkhFQUQpLCB0aGlzLmJ1ZmZlciA9IG5ldyBTcXVhc2hpbmdCdWZmZXIodGhpcy5MT0NBTCksIHRoaXMuY29tbWl0dGVyUnVubmluZyA9ICExO1xuICAgICAgfVxuICAgIH07XG4gICAgZGVidWcoXCJQb3N0aW5nIGNvbW1pdFwiKSwgdGhpcy5jb21taXRIYW5kbGVyICYmIHRoaXMuY29tbWl0SGFuZGxlcih7XG4gICAgICBtdXRhdGlvbjogc3F1YXNoZWQsXG4gICAgICBzdWNjZXNzOiByZXNwb25kZXIuc3VjY2VzcyxcbiAgICAgIGZhaWx1cmU6IHJlc3BvbmRlci5mYWlsdXJlLFxuICAgICAgY2FuY2VsOiByZXNwb25kZXIuY2FuY2VsXG4gICAgfSk7XG4gIH1cbiAgaGFuZGxlRG9jUmViYXNlKGVkZ2UsIHJlbW90ZU11dGF0aW9ucywgbG9jYWxNdXRhdGlvbnMpIHtcbiAgICB0aGlzLnJlYmFzZShyZW1vdGVNdXRhdGlvbnMsIGxvY2FsTXV0YXRpb25zKTtcbiAgfVxuICBoYW5kbGVEb2N1bWVudERlbGV0ZWQoKSB7XG4gICAgZGVidWcoXCJEb2N1bWVudCBkZWxldGVkXCIpLCB0aGlzLkxPQ0FMICE9PSBudWxsICYmIHRoaXMub25EZWxldGUgJiYgdGhpcy5vbkRlbGV0ZSh0aGlzLkxPQ0FMKSwgdGhpcy5jb21taXRzID0gW10sIHRoaXMubXV0YXRpb25zID0gW107XG4gIH1cbiAgaGFuZGxlRG9jTXV0YXRpb24obXNnKSB7XG4gICAgaWYgKHRoaXMuY29tbWl0cy5sZW5ndGggPT09IDAgJiYgIXRoaXMuYnVmZmVyLmhhc0NoYW5nZXMoKSkge1xuICAgICAgZGVidWcoXCJEb2N1bWVudCBtdXRhdGVkIGZyb20gcmVtb3RlIHdpdGggbm8gbG9jYWwgY2hhbmdlc1wiKSwgdGhpcy5MT0NBTCA9IHRoaXMuZG9jdW1lbnQuRURHRSwgdGhpcy5idWZmZXIgPSBuZXcgU3F1YXNoaW5nQnVmZmVyKHRoaXMuTE9DQUwpLCB0aGlzLm9uTXV0YXRpb24gJiYgdGhpcy5vbk11dGF0aW9uKG1zZyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGRlYnVnKFwiRG9jdW1lbnQgbXV0YXRlZCBmcm9tIHJlbW90ZSB3aXRoIGxvY2FsIGNoYW5nZXNcIiksIHRoaXMuZG9jdW1lbnQuRURHRSA9PT0gbnVsbCAmJiB0aGlzLmhhbmRsZURvY3VtZW50RGVsZXRlZCgpLCB0aGlzLnJlYmFzZShbbXNnLm11dGF0aW9uXSwgW10pO1xuICB9XG4gIHJlYmFzZShyZW1vdGVNdXRhdGlvbnMsIGxvY2FsTXV0YXRpb25zKSB7XG4gICAgZGVidWcoXCJSZWJhc2luZyBkb2N1bWVudFwiKSwgdGhpcy5kb2N1bWVudC5FREdFID09PSBudWxsICYmIHRoaXMuaGFuZGxlRG9jdW1lbnREZWxldGVkKCk7XG4gICAgY29uc3Qgb2xkTG9jYWwgPSB0aGlzLkxPQ0FMO1xuICAgIHRoaXMuTE9DQUwgPSB0aGlzLmNvbW1pdHMucmVkdWNlKChkb2MsIGNvbW1pdCkgPT4gY29tbWl0LmFwcGx5KGRvYyksIHRoaXMuZG9jdW1lbnQuRURHRSksIHRoaXMuTE9DQUwgPSB0aGlzLmJ1ZmZlci5yZWJhc2UodGhpcy5MT0NBTCksIG9sZExvY2FsICE9PSBudWxsICYmIHRoaXMuTE9DQUwgIT09IG51bGwgJiYgKG9sZExvY2FsLl9yZXYgPSB0aGlzLkxPQ0FMLl9yZXYpLCAhaXNFcXVhbCh0aGlzLkxPQ0FMLCBvbGRMb2NhbCkgJiYgdGhpcy5vblJlYmFzZSAmJiB0aGlzLm9uUmViYXNlKFxuICAgICAgdGhpcy5MT0NBTCxcbiAgICAgIHJlbW90ZU11dGF0aW9ucy5yZWR1Y2UobXV0UmVkdWNlckZuLCBbXSksXG4gICAgICBsb2NhbE11dGF0aW9ucy5yZWR1Y2UobXV0UmVkdWNlckZuLCBbXSlcbiAgICApO1xuICB9XG4gIGhhbmRsZURvY0NvbnNpc3RlbmN5Q2hhbmdlZChpc0NvbnNpc3RlbnQpIHtcbiAgICBpZiAoIXRoaXMub25Db25zaXN0ZW5jeUNoYW5nZWQpXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgaGFzTG9jYWxDaGFuZ2VzID0gdGhpcy5jb21taXRzLmxlbmd0aCA+IDAgfHwgdGhpcy5idWZmZXIuaGFzQ2hhbmdlcygpO1xuICAgIGlzQ29uc2lzdGVudCAmJiAhaGFzTG9jYWxDaGFuZ2VzICYmIHRoaXMub25Db25zaXN0ZW5jeUNoYW5nZWQoITApLCBpc0NvbnNpc3RlbnQgfHwgdGhpcy5vbkNvbnNpc3RlbmN5Q2hhbmdlZCghMSk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIEJ1ZmZlcmVkRG9jdW1lbnQsXG4gIE11dGF0aW9uLFxuICBhcnJheVRvSlNPTk1hdGNoUGF0aCxcbiAgZXh0cmFjdCxcbiAgZXh0cmFjdFdpdGhQYXRoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/mutator/lib/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/portable-text-editor/lib/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/portable-text-editor/lib/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PortableTextEditable: () => (/* binding */ PortableTextEditable),\n/* harmony export */   PortableTextEditor: () => (/* binding */ PortableTextEditor),\n/* harmony export */   compactPatches: () => (/* binding */ compactPatches),\n/* harmony export */   keyGenerator: () => (/* binding */ defaultKeyGenerator),\n/* harmony export */   usePortableTextEditor: () => (/* binding */ usePortableTextEditor),\n/* harmony export */   usePortableTextEditorSelection: () => (/* binding */ usePortableTextEditorSelection)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEqual.js */ \"(ssr)/./node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_noop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/noop.js */ \"(ssr)/./node_modules/lodash/noop.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var slate__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! slate */ \"(ssr)/./node_modules/slate/dist/index.es.js\");\n/* harmony import */ var slate_react__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! slate-react */ \"(ssr)/./node_modules/slate-react/dist/index.es.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/@sanity/portable-text-editor/node_modules/debug/src/index.js\");\n/* harmony import */ var _sanity_types__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @sanity/types */ \"(ssr)/./node_modules/@sanity/types/lib/index.mjs\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! styled-components */ \"(ssr)/./node_modules/styled-components/dist/styled-components.esm.js\");\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/uniq.js */ \"(ssr)/./node_modules/lodash/uniq.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var _sanity_schema__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @sanity/schema */ \"(ssr)/./node_modules/@sanity/schema/lib/index.mjs\");\n/* harmony import */ var lodash_get_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/get.js */ \"(ssr)/./node_modules/lodash/get.js\");\n/* harmony import */ var lodash_isUndefined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/isUndefined.js */ \"(ssr)/./node_modules/lodash/isUndefined.js\");\n/* harmony import */ var lodash_omitBy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/omitBy.js */ \"(ssr)/./node_modules/lodash/omitBy.js\");\n/* harmony import */ var lodash_isObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/isObject.js */ \"(ssr)/./node_modules/lodash/isObject.js\");\n/* harmony import */ var lodash_isString_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lodash/isString.js */ \"(ssr)/./node_modules/lodash/isString.js\");\n/* harmony import */ var lodash_findIndex_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash/findIndex.js */ \"(ssr)/./node_modules/lodash/findIndex.js\");\n/* harmony import */ var lodash_clone_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lodash/clone.js */ \"(ssr)/./node_modules/lodash/clone.js\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! lodash/omit.js */ \"(ssr)/./node_modules/lodash/omit.js\");\n/* harmony import */ var lodash_flatten_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lodash/flatten.js */ \"(ssr)/./node_modules/lodash/flatten.js\");\n/* harmony import */ var is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! is-hotkey-esm */ \"(ssr)/./node_modules/is-hotkey-esm/dist/index.js\");\n/* harmony import */ var _sanity_block_tools__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @sanity/block-tools */ \"(ssr)/./node_modules/@sanity/block-tools/lib/index.mjs\");\n/* harmony import */ var lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! lodash/isPlainObject.js */ \"(ssr)/./node_modules/lodash/isPlainObject.js\");\n/* harmony import */ var lodash_throttle_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! lodash/throttle.js */ \"(ssr)/./node_modules/lodash/throttle.js\");\n/* harmony import */ var _sanity_util_content__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @sanity/util/content */ \"(ssr)/./node_modules/@sanity/util/lib/content.mjs\");\n/* harmony import */ var lodash_debounce_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! lodash/debounce.js */ \"(ssr)/./node_modules/lodash/debounce.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst rootName = \"sanity-pte:\";\ndebug__WEBPACK_IMPORTED_MODULE_4__(rootName);\nfunction debugWithName(name) {\n  const namespace = `${rootName}${name}`;\n  return debug__WEBPACK_IMPORTED_MODULE_4__ && debug__WEBPACK_IMPORTED_MODULE_4__.enabled(namespace) ? debug__WEBPACK_IMPORTED_MODULE_4__(namespace) : debug__WEBPACK_IMPORTED_MODULE_4__(rootName);\n}\nfunction createKeyedPath(point, value, types) {\n  const blockPath = [point.path[0]];\n  if (!value)\n    return null;\n  const block = value[blockPath[0]];\n  if (!block)\n    return null;\n  const keyedBlockPath = [{ _key: block._key }];\n  if (block._type !== types.block.name)\n    return keyedBlockPath;\n  let keyedChildPath;\n  const childPath = point.path.slice(0, 2), child = Array.isArray(block.children) && block.children[childPath[1]];\n  return child && (keyedChildPath = [\"children\", { _key: child._key }]), keyedChildPath ? [...keyedBlockPath, ...keyedChildPath] : keyedBlockPath;\n}\nfunction createArrayedPath(point, editor) {\n  if (!editor)\n    return [];\n  const [block, blockPath] = Array.from(\n    slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n      at: [],\n      match: (n) => (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isKeySegment)(point.path[0]) && n._key === point.path[0]._key\n    })\n  )[0] || [void 0, void 0];\n  if (!block || !slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(block))\n    return [];\n  if (editor.isVoid(block))\n    return [blockPath[0], 0];\n  const childPath = [point.path[2]], childIndex = block.children.findIndex((child) => lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__([{ _key: child._key }], childPath));\n  if (childIndex >= 0 && block.children[childIndex]) {\n    const child = block.children[childIndex];\n    return slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(child) && editor.isVoid(child) ? blockPath.concat(childIndex).concat(0) : blockPath.concat(childIndex);\n  }\n  return blockPath;\n}\nfunction toPortableTextRange(value, range, types) {\n  if (!range)\n    return null;\n  let anchor = null, focus = null;\n  const anchorPath = range.anchor && createKeyedPath(range.anchor, value, types);\n  anchorPath && range.anchor && (anchor = {\n    path: anchorPath,\n    offset: range.anchor.offset\n  });\n  const focusPath = range.focus && createKeyedPath(range.focus, value, types);\n  focusPath && range.focus && (focus = {\n    path: focusPath,\n    offset: range.focus.offset\n  });\n  const backward = !!(slate__WEBPACK_IMPORTED_MODULE_18__.Range.isRange(range) && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isBackward(range));\n  return anchor && focus ? { anchor, focus, backward } : null;\n}\nfunction toSlateRange(selection, editor) {\n  if (!selection || !editor)\n    return null;\n  const anchor = {\n    path: createArrayedPath(selection.anchor, editor),\n    offset: selection.anchor.offset\n  }, focus = {\n    path: createArrayedPath(selection.focus, editor),\n    offset: selection.focus.offset\n  };\n  return focus.path.length === 0 || anchor.path.length === 0 ? null : anchor && focus ? { anchor, focus } : null;\n}\nfunction moveRangeByOperation(range, operation) {\n  const anchor = slate__WEBPACK_IMPORTED_MODULE_18__.Point.transform(range.anchor, operation), focus = slate__WEBPACK_IMPORTED_MODULE_18__.Point.transform(range.focus, operation);\n  return anchor === null || focus === null ? null : slate__WEBPACK_IMPORTED_MODULE_18__.Point.equals(anchor, range.anchor) && slate__WEBPACK_IMPORTED_MODULE_18__.Point.equals(focus, range.focus) ? range : { anchor, focus };\n}\nfunction normalizePoint(point, value) {\n  if (!point || !value)\n    return null;\n  const newPath = [];\n  let newOffset = point.offset || 0;\n  const blockKey = typeof point.path[0] == \"object\" && \"_key\" in point.path[0] && point.path[0]._key, childKey = typeof point.path[2] == \"object\" && \"_key\" in point.path[2] && point.path[2]._key, block = value.find((blk) => blk._key === blockKey);\n  if (block)\n    newPath.push({ _key: block._key });\n  else\n    return null;\n  if (block && point.path[1] === \"children\") {\n    if (!block.children || Array.isArray(block.children) && block.children.length === 0)\n      return null;\n    const child = Array.isArray(block.children) && block.children.find((cld) => cld._key === childKey);\n    if (child)\n      newPath.push(\"children\"), newPath.push({ _key: child._key }), newOffset = child.text && child.text.length >= point.offset ? point.offset : child.text && child.text.length || 0;\n    else\n      return null;\n  }\n  return { path: newPath, offset: newOffset };\n}\nfunction normalizeSelection(selection, value) {\n  if (!selection || !value || value.length === 0)\n    return null;\n  let newAnchor = null, newFocus = null;\n  const { anchor, focus } = selection;\n  return anchor && value.find((blk) => lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__({ _key: blk._key }, anchor.path[0])) && (newAnchor = normalizePoint(anchor, value)), focus && value.find((blk) => lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__({ _key: blk._key }, focus.path[0])) && (newFocus = normalizePoint(focus, value)), newAnchor && newFocus ? { anchor: newAnchor, focus: newFocus, backward: selection.backward } : null;\n}\nconst EMPTY_MARKDEFS = [], EMPTY_MARKS$1 = [], VOID_CHILD_KEY = \"void-child\";\nfunction keepObjectEquality(object, keyMap) {\n  const value = keyMap[object._key];\n  return value && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(object, value) ? value : (keyMap[object._key] = object, object);\n}\nfunction toSlateValue(value, { schemaTypes }, keyMap = {}) {\n  return value && Array.isArray(value) ? value.map((block) => {\n    const { _type, _key, ...rest } = block, voidChildren = [{ _key: VOID_CHILD_KEY, _type: \"span\", text: \"\", marks: [] }];\n    if (block && block._type === schemaTypes.block.name) {\n      const textBlock = block;\n      let hasInlines = !1;\n      const hasMissingStyle = typeof textBlock.style > \"u\", hasMissingMarkDefs = typeof textBlock.markDefs > \"u\", hasMissingChildren = typeof textBlock.children > \"u\", children = (textBlock.children || []).map((child) => {\n        const { _type: cType, _key: cKey, ...cRest } = child;\n        return cType !== \"span\" ? (hasInlines = !0, keepObjectEquality(\n          {\n            _type: cType,\n            _key: cKey,\n            children: voidChildren,\n            value: cRest,\n            __inline: !0\n          },\n          keyMap\n        )) : child;\n      });\n      return !hasMissingStyle && !hasMissingMarkDefs && !hasMissingChildren && !hasInlines && slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(block) ? block : (hasMissingStyle && (rest.style = schemaTypes.styles[0].value), keepObjectEquality({ _type, _key, ...rest, children }, keyMap));\n    }\n    return keepObjectEquality(\n      {\n        _type,\n        _key,\n        children: voidChildren,\n        value: rest\n      },\n      keyMap\n    );\n  }) : [];\n}\nfunction fromSlateValue(value, textBlockType, keyMap = {}) {\n  return value.map((block) => {\n    const { _key, _type } = block;\n    if (!_key || !_type)\n      throw new Error(\"Not a valid block\");\n    if (_type === textBlockType && \"children\" in block && Array.isArray(block.children) && _key) {\n      let hasInlines = !1;\n      const children = block.children.map((child) => {\n        const { _type: _cType } = child;\n        if (\"value\" in child && _cType !== \"span\") {\n          hasInlines = !0;\n          const { value: v, _key: k, _type: t, __inline: _i, children: _c, ...rest } = child;\n          return keepObjectEquality({ ...rest, ...v, _key: k, _type: t }, keyMap);\n        }\n        return child;\n      });\n      return hasInlines ? keepObjectEquality({ ...block, children, _key, _type }, keyMap) : block;\n    }\n    const blockValue = \"value\" in block && block.value;\n    return keepObjectEquality(\n      { _key, _type, ...typeof blockValue == \"object\" ? blockValue : {} },\n      keyMap\n    );\n  });\n}\nfunction isEqualToEmptyEditor(children, schemaTypes) {\n  var _a;\n  return children === void 0 || children && Array.isArray(children) && children.length === 0 || children && Array.isArray(children) && children.length === 1 && slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(children[0]) && children[0]._type === schemaTypes.block.name && \"style\" in children[0] && children[0].style === schemaTypes.styles[0].value && !(\"listItem\" in children[0]) && Array.isArray(children[0].children) && children[0].children.length === 1 && slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(children[0].children[0]) && children[0].children[0]._type === \"span\" && !((_a = children[0].children[0].marks) != null && _a.join(\"\")) && children[0].children[0].text === \"\";\n}\nconst IS_PROCESSING_REMOTE_CHANGES = /* @__PURE__ */ new WeakMap(), IS_PROCESSING_LOCAL_CHANGES = /* @__PURE__ */ new WeakMap(), IS_DRAGGING = /* @__PURE__ */ new WeakMap(), IS_DRAGGING_BLOCK_ELEMENT = /* @__PURE__ */ new WeakMap(), IS_DRAGGING_ELEMENT_TARGET = /* @__PURE__ */ new WeakMap(), IS_DRAGGING_BLOCK_TARGET_POSITION = /* @__PURE__ */ new WeakMap(), KEY_TO_SLATE_ELEMENT = /* @__PURE__ */ new WeakMap(), KEY_TO_VALUE_ELEMENT = /* @__PURE__ */ new WeakMap(), SLATE_TO_PORTABLE_TEXT_RANGE = /* @__PURE__ */ new WeakMap(), DefaultObject = (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\", { children: JSON.stringify(props.value, null, 2) }) }), DefaultBlockObject = styled_components__WEBPACK_IMPORTED_MODULE_20__.styled.div`\n  user-select: none;\n  border: ${(props) => props.selected ? \"1px solid blue\" : \"1px solid transparent\"};\n`;\nstyled_components__WEBPACK_IMPORTED_MODULE_20__.styled.span`\n  background: #999;\n  border: ${(props) => props.selected ? \"1px solid blue\" : \"1px solid transparent\"};\n`;\nconst DefaultListItem = styled_components__WEBPACK_IMPORTED_MODULE_20__.styled.div`\n  &.pt-list-item {\n    width: fit-content;\n    position: relative;\n    display: block;\n\n    /* Important 'transform' in order to force refresh the ::before and ::after rules\n      in Webkit: https://stackoverflow.com/a/21947628/831480\n    */\n    transform: translateZ(0);\n    margin-left: ${(props) => getLeftPositionForListLevel(props.listLevel)};\n  }\n  &.pt-list-item > .pt-list-item-inner {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    &:before {\n      justify-content: flex-start;\n      vertical-align: top;\n    }\n  }\n  &.pt-list-item-bullet > .pt-list-item-inner:before {\n      content: '${(props) => getContentForListLevelAndStyle(props.listLevel, props.listStyle)}';\n      font-size: 0.4375rem; /* 7px */\n      line-height: 1.5rem; /* Same as body text */\n      /* Optical alignment */\n      position: relative;\n    }\n  }\n  &.pt-list-item-bullet > .pt-list-item-inner {\n    &:before {\n      min-width: 1.5rem; /* Make sure space between bullet and text never shrinks */\n    }\n  }\n  &.pt-list-item-number {\n    counter-increment: ${(props) => getCounterIncrementForListLevel(props.listLevel)};\n    counter-reset: ${(props) => getCounterResetForListLevel(props.listLevel)};\n  }\n  & + :not(.pt-list-item-number) {\n    counter-reset: listItemNumber;\n  }\n  &.pt-list-item-number > .pt-list-item-inner:before {\n    content: ${(props) => getCounterContentForListLevel(props.listLevel)};\n    min-width: 1.5rem; /* Make sure space between number and text never shrinks */\n    /* Optical alignment */\n    position: relative;\n    top: 1px;\n  }\n`, DefaultListItemInner = styled_components__WEBPACK_IMPORTED_MODULE_20__.styled.div``;\nfunction getLeftPositionForListLevel(level) {\n  switch (Number(level)) {\n    case 1:\n      return \"1.5em\";\n    case 2:\n      return \"3em\";\n    case 3:\n      return \"4.5em\";\n    case 4:\n      return \"6em\";\n    case 5:\n      return \"7.5em\";\n    case 6:\n      return \"9em\";\n    case 7:\n      return \"10.5em\";\n    case 8:\n      return \"12em\";\n    case 9:\n      return \"13.5em\";\n    case 10:\n      return \"15em\";\n    default:\n      return \"0em\";\n  }\n}\nconst bullets = [\"\\u25CF\", \"\\u25CB\", \"\\u25A0\"];\nfunction getContentForListLevelAndStyle(level, style) {\n  const normalizedLevel = (level - 1) % 3;\n  return style === \"bullet\" ? bullets[normalizedLevel] : \"*\";\n}\nfunction getCounterIncrementForListLevel(level) {\n  switch (level) {\n    case 1:\n      return \"listItemNumber\";\n    case 2:\n      return \"listItemAlpha\";\n    case 3:\n      return \"listItemRoman\";\n    case 4:\n      return \"listItemNumberNext\";\n    case 5:\n      return \"listItemLetterNext\";\n    case 6:\n      return \"listItemRomanNext\";\n    case 7:\n      return \"listItemNumberNextNext\";\n    case 8:\n      return \"listItemAlphaNextNext\";\n    case 9:\n      return \"listItemRomanNextNext\";\n    default:\n      return \"listItemNumberNextNextNext\";\n  }\n}\nfunction getCounterResetForListLevel(level) {\n  switch (level) {\n    case 1:\n      return \"listItemAlpha\";\n    case 2:\n      return \"listItemRoman\";\n    case 3:\n      return \"listItemNumberNext\";\n    case 4:\n      return \"listItemLetterNext\";\n    case 5:\n      return \"listItemRomanNext\";\n    case 6:\n      return \"listItemNumberNextNext\";\n    case 7:\n      return \"listItemAlphaNextNext\";\n    case 8:\n      return \"listItemRomanNextNext\";\n    case 9:\n      return \"listItemNumberNextNextNext\";\n    default:\n      return \"listItemNumberNextNextNext\";\n  }\n}\nfunction getCounterContentForListLevel(level) {\n  switch (level) {\n    case 1:\n      return \"counter(listItemNumber) '. '\";\n    case 2:\n      return \"counter(listItemAlpha, lower-alpha) '. '\";\n    case 3:\n      return \"counter(listItemRoman, lower-roman) '. '\";\n    case 4:\n      return \"counter(listItemNumberNext) '. '\";\n    case 5:\n      return \"counter(listItemLetterNext, lower-alpha) '. '\";\n    case 6:\n      return \"counter(listItemRomanNext, lower-roman) '. '\";\n    case 7:\n      return \"counter(listItemNumberNextNext) '. '\";\n    case 8:\n      return \"counter(listItemAlphaNextNext, lower-alpha) '. '\";\n    case 9:\n      return \"counter(listItemRomanNextNext, lower-roman) '. '\";\n    default:\n      return \"counter(listItemNumberNextNextNext) '. '\";\n  }\n}\nconst debug$k = debugWithName(\"components:DraggableBlock\"), DraggableBlock = ({ children, element, readOnly, blockRef }) => {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_21__.useSlateStatic)(), dragGhostRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(), [isDragOver, setIsDragOver] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1), isVoid = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(editor, element), [editor, element]), isInline = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isInline(editor, element), [editor, element]), [blockElement, setBlockElement] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(\n    () => setBlockElement(blockRef ? blockRef.current : slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.toDOMNode(editor, element)),\n    [editor, element, blockRef]\n  );\n  const handleDragOver = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      const isMyDragOver = IS_DRAGGING_BLOCK_ELEMENT.get(editor);\n      if (!isMyDragOver || !blockElement)\n        return;\n      event.preventDefault(), event.dataTransfer.dropEffect = \"move\", IS_DRAGGING_ELEMENT_TARGET.set(editor, element);\n      const elementRect = blockElement.getBoundingClientRect(), offset = elementRect.top, height = elementRect.height, Y = event.pageY, loc = Math.abs(offset - Y);\n      let position = \"bottom\";\n      if (element === editor.children[0] ? position = \"top\" : loc < height / 2 ? (position = \"top\", IS_DRAGGING_BLOCK_TARGET_POSITION.set(editor, position)) : (position = \"bottom\", IS_DRAGGING_BLOCK_TARGET_POSITION.set(editor, position)), isMyDragOver === element) {\n        event.dataTransfer.dropEffect = \"none\";\n        return;\n      }\n      setIsDragOver(!0);\n    },\n    [blockElement, editor, element]\n  ), handleDragLeave = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    setIsDragOver(!1);\n  }, []), handleDragEnd = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      const targetBlock = IS_DRAGGING_ELEMENT_TARGET.get(editor);\n      if (targetBlock) {\n        IS_DRAGGING.set(editor, !1), event.preventDefault(), event.stopPropagation(), IS_DRAGGING_ELEMENT_TARGET.delete(editor), dragGhostRef.current && (debug$k(\"Removing drag ghost\"), document.body.removeChild(dragGhostRef.current));\n        const dragPosition2 = IS_DRAGGING_BLOCK_TARGET_POSITION.get(editor);\n        IS_DRAGGING_BLOCK_TARGET_POSITION.delete(editor);\n        let targetPath = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.findPath(editor, targetBlock);\n        const myPath = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.findPath(editor, element), isBefore = slate__WEBPACK_IMPORTED_MODULE_18__.Path.isBefore(myPath, targetPath);\n        if (dragPosition2 === \"bottom\" && !isBefore) {\n          if (targetPath[0] >= editor.children.length - 1) {\n            debug$k(\"target is already at the bottom, not moving\");\n            return;\n          }\n          const originalPath = targetPath;\n          targetPath = slate__WEBPACK_IMPORTED_MODULE_18__.Path.next(targetPath), debug$k(\n            `Adjusting targetPath from ${JSON.stringify(originalPath)} to ${JSON.stringify(\n              targetPath\n            )}`\n          );\n        }\n        if (dragPosition2 === \"top\" && isBefore && targetPath[0] !== editor.children.length - 1) {\n          const originalPath = targetPath;\n          targetPath = slate__WEBPACK_IMPORTED_MODULE_18__.Path.previous(targetPath), debug$k(\n            `Adjusting targetPath from ${JSON.stringify(originalPath)} to ${JSON.stringify(\n              targetPath\n            )}`\n          );\n        }\n        if (slate__WEBPACK_IMPORTED_MODULE_18__.Path.equals(targetPath, myPath)) {\n          event.preventDefault(), debug$k(\"targetPath and myPath is the same, not moving\");\n          return;\n        }\n        debug$k(\n          `Moving element ${element._key} from path ${JSON.stringify(myPath)} to ${JSON.stringify(\n            targetPath\n          )} (${dragPosition2})`\n        ), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.moveNodes(editor, { at: myPath, to: targetPath }), editor.onChange();\n        return;\n      }\n      debug$k(\"No target element, not doing anything\");\n    },\n    [editor, element]\n  ), handleDrop = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      IS_DRAGGING_BLOCK_ELEMENT.get(editor) && (debug$k(\"On drop (prevented)\", element), event.preventDefault(), event.stopPropagation(), setIsDragOver(!1));\n    },\n    [editor, element]\n  ), handleDrag = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      if (!isVoid) {\n        IS_DRAGGING_BLOCK_ELEMENT.delete(editor);\n        return;\n      }\n      IS_DRAGGING.set(editor, !0), IS_DRAGGING_BLOCK_ELEMENT.set(editor, element), event.stopPropagation();\n      const target = event.target;\n      target instanceof HTMLElement && (target.style.opacity = \"1\");\n    },\n    [editor, element, isVoid]\n  ), handleDragStart = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      if (!isVoid || isInline) {\n        debug$k(\"Not dragging block\"), IS_DRAGGING_BLOCK_ELEMENT.delete(editor), IS_DRAGGING.set(editor, !1);\n        return;\n      }\n      if (debug$k(\"Drag start\"), IS_DRAGGING.set(editor, !0), event.dataTransfer && (event.dataTransfer.setData(\"application/portable-text\", \"something\"), event.dataTransfer.effectAllowed = \"move\"), blockElement && blockElement instanceof HTMLElement) {\n        let dragGhost = blockElement.cloneNode(!0);\n        const customGhost = dragGhost.querySelector(\"[data-pt-drag-ghost-element]\");\n        if (customGhost && (dragGhost = customGhost), dragGhost.setAttribute(\"data-dragged\", \"\"), document.body) {\n          dragGhostRef.current = dragGhost, dragGhost.style.position = \"absolute\", dragGhost.style.left = \"-99999px\", dragGhost.style.boxSizing = \"border-box\", document.body.appendChild(dragGhost);\n          const rect = blockElement.getBoundingClientRect(), x = event.clientX - rect.left, y = event.clientY - rect.top;\n          dragGhost.style.width = `${rect.width}px`, dragGhost.style.height = `${rect.height}px`, event.dataTransfer.setDragImage(dragGhost, x, y);\n        }\n      }\n      handleDrag(event);\n    },\n    [blockElement, editor, handleDrag, isInline, isVoid]\n  ), isDraggingOverFirstBlock = isDragOver && editor.children[0] === IS_DRAGGING_ELEMENT_TARGET.get(editor), isDraggingOverLastBlock = isDragOver && editor.children[editor.children.length - 1] === IS_DRAGGING_ELEMENT_TARGET.get(editor), dragPosition = IS_DRAGGING_BLOCK_TARGET_POSITION.get(editor), isDraggingOverTop = isDraggingOverFirstBlock || isDragOver && !isDraggingOverFirstBlock && !isDraggingOverLastBlock && dragPosition === \"top\", isDraggingOverBottom = isDraggingOverLastBlock || isDragOver && !isDraggingOverFirstBlock && !isDraggingOverLastBlock && dragPosition === \"bottom\", dropIndicator = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      \"div\",\n      {\n        className: \"pt-drop-indicator\",\n        style: {\n          position: \"absolute\",\n          width: \"100%\",\n          height: 1,\n          borderBottom: \"1px solid currentColor\",\n          zIndex: 5\n        }\n      }\n    ),\n    []\n  );\n  return readOnly ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"div\",\n    {\n      draggable: isVoid,\n      onDragStart: handleDragStart,\n      onDrag: handleDrag,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDragEnd: handleDragEnd,\n      onDrop: handleDrop,\n      children: [\n        isDraggingOverTop && dropIndicator,\n        children,\n        isDraggingOverBottom && dropIndicator\n      ]\n    }\n  );\n};\ndebugWithName(\"components:Element\");\nconst EMPTY_ANNOTATIONS = [], inlineBlockStyle = { display: \"inline-block\" }, Element = ({\n  attributes,\n  children,\n  element,\n  schemaTypes,\n  readOnly,\n  renderBlock,\n  renderChild,\n  renderListItem,\n  renderStyle,\n  spellCheck\n}) => {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_21__.useSlateStatic)(), selected = (0,slate_react__WEBPACK_IMPORTED_MODULE_21__.useSelected)(), blockRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null), inlineBlockObjectRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null), focused = selected && editor.selection && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(editor.selection) || !1, value = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => fromSlateValue([element], schemaTypes.block.name, KEY_TO_VALUE_ELEMENT.get(editor))[0],\n    [editor, element, schemaTypes.block.name]\n  );\n  let renderedBlock = children, className;\n  const blockPath = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => [{ _key: element._key }], [element]);\n  if (typeof element._type != \"string\")\n    throw new Error(\"Expected element to have a _type property\");\n  if (typeof element._key != \"string\")\n    throw new Error(\"Expected element to have a _key property\");\n  if (editor.isInline(element)) {\n    const path = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.findPath(editor, element), [block2] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, path, { depth: 1 }), schemaType2 = schemaTypes.inlineObjects.find((_type) => _type.name === element._type);\n    if (!schemaType2)\n      throw new Error(\"Could not find type for inline block element\");\n    if (slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(block2)) {\n      const elmPath = [{ _key: block2._key }, \"children\", { _key: element._key }];\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { ...attributes, children: [\n        children,\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n          \"span\",\n          {\n            draggable: !readOnly,\n            className: \"pt-inline-object\",\n            \"data-testid\": \"pt-inline-object\",\n            ref: inlineBlockObjectRef,\n            style: inlineBlockStyle,\n            contentEditable: !1,\n            children: [\n              renderChild && renderChild({\n                annotations: EMPTY_ANNOTATIONS,\n                // These inline objects currently doesn't support annotations. This is a limitation of the current PT spec/model.\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultObject, { value }),\n                editorElementRef: inlineBlockObjectRef,\n                focused,\n                path: elmPath,\n                schemaType: schemaType2,\n                selected,\n                type: schemaType2,\n                value\n              }),\n              !renderChild && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultObject, { value })\n            ]\n          },\n          element._key\n        )\n      ] });\n    }\n    throw new Error(\"Block not found!\");\n  }\n  if (element._type === schemaTypes.block.name) {\n    className = \"pt-block pt-text-block\";\n    const isListItem = \"listItem\" in element, style = \"style\" in element && element.style || \"normal\";\n    className = `pt-block pt-text-block pt-text-block-style-${style}`;\n    const blockStyleType = schemaTypes.styles.find((item) => item.value === style);\n    renderStyle && blockStyleType && (renderedBlock = renderStyle({\n      block: element,\n      children,\n      focused,\n      selected,\n      value: style,\n      path: blockPath,\n      schemaType: blockStyleType,\n      editorElementRef: blockRef\n    }));\n    let level;\n    if (isListItem && (typeof element.level == \"number\" && (level = element.level), className += ` pt-list-item pt-list-item-${element.listItem} pt-list-item-level-${level || 1}`), editor.isListBlock(value) && isListItem && element.listItem) {\n      const listType = schemaTypes.lists.find((item) => item.value === element.listItem);\n      renderListItem && listType ? renderedBlock = renderListItem({\n        block: value,\n        children: renderedBlock,\n        focused,\n        selected,\n        value: element.listItem,\n        path: blockPath,\n        schemaType: listType,\n        level: value.level || 1,\n        editorElementRef: blockRef\n      }) : renderedBlock = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        DefaultListItem,\n        {\n          listStyle: value.listItem || schemaTypes.lists[0].value,\n          listLevel: value.level || 1,\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultListItemInner, { children: renderedBlock })\n        }\n      );\n    }\n    const renderProps = Object.defineProperty(\n      {\n        children: renderedBlock,\n        editorElementRef: blockRef,\n        focused,\n        level,\n        listItem: isListItem ? element.listItem : void 0,\n        path: blockPath,\n        selected,\n        style,\n        schemaType: schemaTypes.block,\n        value\n      },\n      \"type\",\n      {\n        enumerable: !1,\n        get() {\n          return console.warn(\"Property 'type' is deprecated, use 'schemaType' instead.\"), schemaTypes.block;\n        }\n      }\n    ), propsOrDefaultRendered = renderBlock ? renderBlock(renderProps) : children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ...attributes, className, spellCheck, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DraggableBlock, { element, readOnly, blockRef, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ref: blockRef, children: propsOrDefaultRendered }) }) }, element._key);\n  }\n  const schemaType = schemaTypes.blockObjects.find((_type) => _type.name === element._type);\n  if (!schemaType)\n    throw new Error(`Could not find schema type for block element of _type ${element._type}`);\n  className = \"pt-block pt-object-block\";\n  const block = fromSlateValue(\n    [element],\n    schemaTypes.block.name,\n    KEY_TO_VALUE_ELEMENT.get(editor)\n  )[0];\n  let renderedBlockFromProps;\n  if (renderBlock) {\n    const _props = Object.defineProperty(\n      {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultObject, { value }),\n        editorElementRef: blockRef,\n        focused,\n        path: blockPath,\n        schemaType,\n        selected,\n        value: block\n      },\n      \"type\",\n      {\n        enumerable: !1,\n        get() {\n          return console.warn(\"Property 'type' is deprecated, use 'schemaType' instead.\"), schemaType;\n        }\n      }\n    );\n    renderedBlockFromProps = renderBlock(_props);\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { ...attributes, className, children: [\n    children,\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(DraggableBlock, { element, readOnly, blockRef, children: [\n      renderedBlockFromProps && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ref: blockRef, contentEditable: !1, children: renderedBlockFromProps }),\n      !renderedBlockFromProps && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultBlockObject, { selected, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultObject, { value }) })\n    ] })\n  ] }, element._key);\n}, PortableTextEditorContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null), usePortableTextEditor = () => {\n  const editor = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(PortableTextEditorContext);\n  if (!editor)\n    throw new Error(\n      \"The `usePortableTextEditor` hook must be used inside the <PortableTextEditor> component's context.\"\n    );\n  return editor;\n};\nfunction DefaultAnnotation(props) {\n  const handleClick = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => alert(JSON.stringify(props.annotation)), [props.annotation]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { style: { color: \"blue\" }, onClick: handleClick, children: props.children });\n}\nfunction getPortableTextMemberSchemaTypes(portableTextType) {\n  var _a, _b, _c;\n  if (!portableTextType)\n    throw new Error(\"Parameter 'portabletextType' missing (required)\");\n  const blockType = (_a = portableTextType.of) == null ? void 0 : _a.find(findBlockType);\n  if (!blockType)\n    throw new Error(\"Block type is not defined in this schema (required)\");\n  const childrenField = (_b = blockType.fields) == null ? void 0 : _b.find((field) => field.name === \"children\");\n  if (!childrenField)\n    throw new Error(\"Children field for block type found in schema (required)\");\n  const ofType = childrenField.type.of;\n  if (!ofType)\n    throw new Error(\"Valid types for block children not found in schema (required)\");\n  const spanType = ofType.find((memberType) => memberType.name === \"span\");\n  if (!spanType)\n    throw new Error(\"Span type not found in schema (required)\");\n  const inlineObjectTypes = ofType.filter((memberType) => memberType.name !== \"span\") || [], blockObjectTypes = ((_c = portableTextType.of) == null ? void 0 : _c.filter((field) => field.name !== blockType.name)) || [];\n  return {\n    styles: resolveEnabledStyles(blockType),\n    decorators: resolveEnabledDecorators(spanType),\n    lists: resolveEnabledListItems(blockType),\n    block: blockType,\n    span: spanType,\n    portableText: portableTextType,\n    inlineObjects: inlineObjectTypes,\n    blockObjects: blockObjectTypes,\n    annotations: spanType.annotations\n  };\n}\nfunction resolveEnabledStyles(blockType) {\n  var _a, _b, _c;\n  const styleField = (_a = blockType.fields) == null ? void 0 : _a.find((btField) => btField.name === \"style\");\n  if (!styleField)\n    throw new Error(\"A field with name 'style' is not defined in the block type (required).\");\n  const textStyles = ((_b = styleField.type.options) == null ? void 0 : _b.list) && ((_c = styleField.type.options.list) == null ? void 0 : _c.filter((style) => style.value));\n  if (!textStyles || textStyles.length === 0)\n    throw new Error(\n      \"The style fields need at least one style defined. I.e: {title: 'Normal', value: 'normal'}.\"\n    );\n  return textStyles;\n}\nfunction resolveEnabledDecorators(spanType) {\n  return spanType.decorators;\n}\nfunction resolveEnabledListItems(blockType) {\n  var _a, _b;\n  const listField = (_a = blockType.fields) == null ? void 0 : _a.find((btField) => btField.name === \"listItem\");\n  if (!listField)\n    throw new Error(\"A field with name 'listItem' is not defined in the block type (required).\");\n  const listItems = ((_b = listField.type.options) == null ? void 0 : _b.list) && listField.type.options.list.filter((list) => list.value);\n  if (!listItems)\n    throw new Error(\"The list field need at least to be an empty array\");\n  return listItems;\n}\nfunction findBlockType(type) {\n  return type.type ? findBlockType(type.type) : type.name === \"block\" ? type : null;\n}\nfunction compileType(rawType) {\n  return _sanity_schema__WEBPACK_IMPORTED_MODULE_22__.Schema.compile({\n    name: \"blockTypeSchema\",\n    types: [rawType]\n  }).get(rawType.name);\n}\nfunction isHighSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 55296 && charCode <= 56319;\n}\nfunction isLowSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 56320 && charCode <= 57343;\n}\nfunction cloneDiff(diff2) {\n  const [type, patch] = diff2;\n  return [type, patch];\n}\nfunction getCommonOverlap(textA, textB) {\n  let text1 = textA, text2 = textB;\n  const text1Length = text1.length, text2Length = text2.length;\n  if (text1Length === 0 || text2Length === 0)\n    return 0;\n  text1Length > text2Length ? text1 = text1.substring(text1Length - text2Length) : text1Length < text2Length && (text2 = text2.substring(0, text1Length));\n  const textLength = Math.min(text1Length, text2Length);\n  if (text1 === text2)\n    return textLength;\n  let best = 0, length = 1;\n  for (let found = 0; found !== -1; ) {\n    const pattern = text1.substring(textLength - length);\n    if (found = text2.indexOf(pattern), found === -1)\n      return best;\n    length += found, (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) && (best = length, length++);\n  }\n  return best;\n}\nfunction getCommonPrefix(text1, text2) {\n  if (!text1 || !text2 || text1[0] !== text2[0])\n    return 0;\n  let pointerMin = 0, pointerMax = Math.min(text1.length, text2.length), pointerMid = pointerMax, pointerStart = 0;\n  for (; pointerMin < pointerMid; )\n    text1.substring(pointerStart, pointerMid) === text2.substring(pointerStart, pointerMid) ? (pointerMin = pointerMid, pointerStart = pointerMin) : pointerMax = pointerMid, pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  return pointerMid;\n}\nfunction getCommonSuffix(text1, text2) {\n  if (!text1 || !text2 || text1[text1.length - 1] !== text2[text2.length - 1])\n    return 0;\n  let pointerMin = 0, pointerMax = Math.min(text1.length, text2.length), pointerMid = pointerMax, pointerEnd = 0;\n  for (; pointerMin < pointerMid; )\n    text1.substring(text1.length - pointerMid, text1.length - pointerEnd) === text2.substring(text2.length - pointerMid, text2.length - pointerEnd) ? (pointerMin = pointerMid, pointerEnd = pointerMin) : pointerMax = pointerMid, pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  return pointerMid;\n}\nfunction cleanupSemantic(rawDiffs) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2)), hasChanges = !1;\n  const equalities = [];\n  let equalitiesLength = 0, lastEquality = null, pointer = 0, lengthInsertions1 = 0, lengthDeletions1 = 0, lengthInsertions2 = 0, lengthDeletions2 = 0;\n  for (; pointer < diffs.length; )\n    diffs[pointer][0] === DIFF_EQUAL ? (equalities[equalitiesLength++] = pointer, lengthInsertions1 = lengthInsertions2, lengthDeletions1 = lengthDeletions2, lengthInsertions2 = 0, lengthDeletions2 = 0, lastEquality = diffs[pointer][1]) : (diffs[pointer][0] === DIFF_INSERT ? lengthInsertions2 += diffs[pointer][1].length : lengthDeletions2 += diffs[pointer][1].length, lastEquality && lastEquality.length <= Math.max(lengthInsertions1, lengthDeletions1) && lastEquality.length <= Math.max(lengthInsertions2, lengthDeletions2) && (diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]), diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT, equalitiesLength--, equalitiesLength--, pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1, lengthInsertions1 = 0, lengthDeletions1 = 0, lengthInsertions2 = 0, lengthDeletions2 = 0, lastEquality = null, hasChanges = !0)), pointer++;\n  for (hasChanges && (diffs = cleanupMerge(diffs)), diffs = cleanupSemanticLossless(diffs), pointer = 1; pointer < diffs.length; ) {\n    if (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n      const deletion = diffs[pointer - 1][1], insertion = diffs[pointer][1], overlapLength1 = getCommonOverlap(deletion, insertion), overlapLength2 = getCommonOverlap(insertion, deletion);\n      overlapLength1 >= overlapLength2 ? (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) && (diffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlapLength1)]), diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1), diffs[pointer + 1][1] = insertion.substring(overlapLength1), pointer++) : (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) && (diffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlapLength2)]), diffs[pointer - 1][0] = DIFF_INSERT, diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2), diffs[pointer + 1][0] = DIFF_DELETE, diffs[pointer + 1][1] = deletion.substring(overlapLength2), pointer++), pointer++;\n    }\n    pointer++;\n  }\n  return diffs;\n}\nconst nonAlphaNumericRegex = /[^a-zA-Z0-9]/, whitespaceRegex = /\\s/, linebreakRegex = /[\\r\\n]/, blanklineEndRegex = /\\n\\r?\\n$/, blanklineStartRegex = /^\\r?\\n\\r?\\n/;\nfunction cleanupSemanticLossless(rawDiffs) {\n  const diffs = rawDiffs.map((diff2) => cloneDiff(diff2));\n  function diffCleanupSemanticScore(one, two) {\n    if (!one || !two)\n      return 6;\n    const char1 = one.charAt(one.length - 1), char2 = two.charAt(0), nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex), nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex), whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex), whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex), lineBreak1 = whitespace1 && char1.match(linebreakRegex), lineBreak2 = whitespace2 && char2.match(linebreakRegex), blankLine1 = lineBreak1 && one.match(blanklineEndRegex), blankLine2 = lineBreak2 && two.match(blanklineStartRegex);\n    return blankLine1 || blankLine2 ? 5 : lineBreak1 || lineBreak2 ? 4 : nonAlphaNumeric1 && !whitespace1 && whitespace2 ? 3 : whitespace1 || whitespace2 ? 2 : nonAlphaNumeric1 || nonAlphaNumeric2 ? 1 : 0;\n  }\n  let pointer = 1;\n  for (; pointer < diffs.length - 1; ) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      let equality1 = diffs[pointer - 1][1], edit = diffs[pointer][1], equality2 = diffs[pointer + 1][1];\n      const commonOffset = getCommonSuffix(equality1, edit);\n      if (commonOffset) {\n        const commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset), edit = commonString + edit.substring(0, edit.length - commonOffset), equality2 = commonString + equality2;\n      }\n      let bestEquality1 = equality1, bestEdit = edit, bestEquality2 = equality2, bestScore = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n      for (; edit.charAt(0) === equality2.charAt(0); ) {\n        equality1 += edit.charAt(0), edit = edit.substring(1) + equality2.charAt(0), equality2 = equality2.substring(1);\n        const score = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n        score >= bestScore && (bestScore = score, bestEquality1 = equality1, bestEdit = edit, bestEquality2 = equality2);\n      }\n      diffs[pointer - 1][1] !== bestEquality1 && (bestEquality1 ? diffs[pointer - 1][1] = bestEquality1 : (diffs.splice(pointer - 1, 1), pointer--), diffs[pointer][1] = bestEdit, bestEquality2 ? diffs[pointer + 1][1] = bestEquality2 : (diffs.splice(pointer + 1, 1), pointer--));\n    }\n    pointer++;\n  }\n  return diffs;\n}\nfunction cleanupMerge(rawDiffs) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2));\n  diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0, countDelete = 0, countInsert = 0, textDelete = \"\", textInsert = \"\", commonlength;\n  for (; pointer < diffs.length; )\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++, textInsert += diffs[pointer][1], pointer++;\n        break;\n      case DIFF_DELETE:\n        countDelete++, textDelete += diffs[pointer][1], pointer++;\n        break;\n      case DIFF_EQUAL:\n        countDelete + countInsert > 1 ? (countDelete !== 0 && countInsert !== 0 && (commonlength = getCommonPrefix(textInsert, textDelete), commonlength !== 0 && (pointer - countDelete - countInsert > 0 && diffs[pointer - countDelete - countInsert - 1][0] === DIFF_EQUAL ? diffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(0, commonlength) : (diffs.splice(0, 0, [DIFF_EQUAL, textInsert.substring(0, commonlength)]), pointer++), textInsert = textInsert.substring(commonlength), textDelete = textDelete.substring(commonlength)), commonlength = getCommonSuffix(textInsert, textDelete), commonlength !== 0 && (diffs[pointer][1] = textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1], textInsert = textInsert.substring(0, textInsert.length - commonlength), textDelete = textDelete.substring(0, textDelete.length - commonlength))), pointer -= countDelete + countInsert, diffs.splice(pointer, countDelete + countInsert), textDelete.length && (diffs.splice(pointer, 0, [DIFF_DELETE, textDelete]), pointer++), textInsert.length && (diffs.splice(pointer, 0, [DIFF_INSERT, textInsert]), pointer++), pointer++) : pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL ? (diffs[pointer - 1][1] += diffs[pointer][1], diffs.splice(pointer, 1)) : pointer++, countInsert = 0, countDelete = 0, textDelete = \"\", textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation\");\n    }\n  diffs[diffs.length - 1][1] === \"\" && diffs.pop();\n  let hasChanges = !1;\n  for (pointer = 1; pointer < diffs.length - 1; )\n    diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL && (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1] ? (diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length), diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1], diffs.splice(pointer - 1, 1), hasChanges = !0) : diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1] && (diffs[pointer - 1][1] += diffs[pointer + 1][1], diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1], diffs.splice(pointer + 1, 1), hasChanges = !0)), pointer++;\n  return hasChanges && (diffs = cleanupMerge(diffs)), diffs;\n}\nfunction trueCount() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)\n    args[_key] = arguments[_key];\n  return args.reduce((n, bool) => n + (bool ? 1 : 0), 0);\n}\nfunction cleanupEfficiency(rawDiffs) {\n  let editCost = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 4, diffs = rawDiffs.map((diff2) => cloneDiff(diff2)), hasChanges = !1;\n  const equalities = [];\n  let equalitiesLength = 0, lastEquality = null, pointer = 0, preIns = !1, preDel = !1, postIns = !1, postDel = !1;\n  for (; pointer < diffs.length; )\n    diffs[pointer][0] === DIFF_EQUAL ? (diffs[pointer][1].length < editCost && (postIns || postDel) ? (equalities[equalitiesLength++] = pointer, preIns = postIns, preDel = postDel, lastEquality = diffs[pointer][1]) : (equalitiesLength = 0, lastEquality = null), postIns = !1, postDel = !1) : (diffs[pointer][0] === DIFF_DELETE ? postDel = !0 : postIns = !0, lastEquality && (preIns && preDel && postIns && postDel || lastEquality.length < editCost / 2 && trueCount(preIns, preDel, postIns, postDel) === 3) && (diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]), diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT, equalitiesLength--, lastEquality = null, preIns && preDel ? (postIns = !0, postDel = !0, equalitiesLength = 0) : (equalitiesLength--, pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1, postIns = !1, postDel = !1), hasChanges = !0)), pointer++;\n  return hasChanges && (diffs = cleanupMerge(diffs)), diffs;\n}\nfunction bisect(text1, text2, deadline) {\n  const text1Length = text1.length, text2Length = text2.length, maxD = Math.ceil((text1Length + text2Length) / 2), vOffset = maxD, vLength = 2 * maxD, v1 = new Array(vLength), v2 = new Array(vLength);\n  for (let x = 0; x < vLength; x++)\n    v1[x] = -1, v2[x] = -1;\n  v1[vOffset + 1] = 0, v2[vOffset + 1] = 0;\n  const delta = text1Length - text2Length, front = delta % 2 !== 0;\n  let k1start = 0, k1end = 0, k2start = 0, k2end = 0;\n  for (let d = 0; d < maxD && !(Date.now() > deadline); d++) {\n    for (let k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      const k1Offset = vOffset + k1;\n      let x1;\n      k1 === -d || k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1] ? x1 = v1[k1Offset + 1] : x1 = v1[k1Offset - 1] + 1;\n      let y1 = x1 - k1;\n      for (; x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1); )\n        x1++, y1++;\n      if (v1[k1Offset] = x1, x1 > text1Length)\n        k1end += 2;\n      else if (y1 > text2Length)\n        k1start += 2;\n      else if (front) {\n        const k2Offset = vOffset + delta - k1;\n        if (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\n          const x2 = text1Length - v2[k2Offset];\n          if (x1 >= x2)\n            return bisectSplit(text1, text2, x1, y1, deadline);\n        }\n      }\n    }\n    for (let k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      const k2Offset = vOffset + k2;\n      let x2;\n      k2 === -d || k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1] ? x2 = v2[k2Offset + 1] : x2 = v2[k2Offset - 1] + 1;\n      let y2 = x2 - k2;\n      for (; x2 < text1Length && y2 < text2Length && text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1); )\n        x2++, y2++;\n      if (v2[k2Offset] = x2, x2 > text1Length)\n        k2end += 2;\n      else if (y2 > text2Length)\n        k2start += 2;\n      else if (!front) {\n        const k1Offset = vOffset + delta - k2;\n        if (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\n          const x1 = v1[k1Offset], y1 = vOffset + x1 - k1Offset;\n          if (x2 = text1Length - x2, x1 >= x2)\n            return bisectSplit(text1, text2, x1, y1, deadline);\n        }\n      }\n    }\n  }\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n}\nfunction bisectSplit(text1, text2, x, y, deadline) {\n  const text1a = text1.substring(0, x), text2a = text2.substring(0, y), text1b = text1.substring(x), text2b = text2.substring(y), diffs = doDiff(text1a, text2a, {\n    checkLines: !1,\n    deadline\n  }), diffsb = doDiff(text1b, text2b, {\n    checkLines: !1,\n    deadline\n  });\n  return diffs.concat(diffsb);\n}\nfunction findHalfMatch(text1, text2) {\n  if ((arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1) <= 0)\n    return null;\n  const longText = text1.length > text2.length ? text1 : text2, shortText = text1.length > text2.length ? text2 : text1;\n  if (longText.length < 4 || shortText.length * 2 < longText.length)\n    return null;\n  const halfMatch1 = halfMatchI(longText, shortText, Math.ceil(longText.length / 4)), halfMatch2 = halfMatchI(longText, shortText, Math.ceil(longText.length / 2));\n  let halfMatch;\n  if (halfMatch1 && halfMatch2)\n    halfMatch = halfMatch1[4].length > halfMatch2[4].length ? halfMatch1 : halfMatch2;\n  else {\n    if (!halfMatch1 && !halfMatch2)\n      return null;\n    halfMatch2 ? halfMatch1 || (halfMatch = halfMatch2) : halfMatch = halfMatch1;\n  }\n  if (!halfMatch)\n    throw new Error(\"Unable to find a half match.\");\n  let text1A, text1B, text2A, text2B;\n  text1.length > text2.length ? (text1A = halfMatch[0], text1B = halfMatch[1], text2A = halfMatch[2], text2B = halfMatch[3]) : (text2A = halfMatch[0], text2B = halfMatch[1], text1A = halfMatch[2], text1B = halfMatch[3]);\n  const midCommon = halfMatch[4];\n  return [text1A, text1B, text2A, text2B, midCommon];\n}\nfunction halfMatchI(longText, shortText, i) {\n  const seed = longText.slice(i, i + Math.floor(longText.length / 4));\n  let j = -1, bestCommon = \"\", bestLongTextA, bestLongTextB, bestShortTextA, bestShortTextB;\n  for (; (j = shortText.indexOf(seed, j + 1)) !== -1; ) {\n    const prefixLength = getCommonPrefix(longText.slice(i), shortText.slice(j)), suffixLength = getCommonSuffix(longText.slice(0, i), shortText.slice(0, j));\n    bestCommon.length < suffixLength + prefixLength && (bestCommon = shortText.slice(j - suffixLength, j) + shortText.slice(j, j + prefixLength), bestLongTextA = longText.slice(0, i - suffixLength), bestLongTextB = longText.slice(i + prefixLength), bestShortTextA = shortText.slice(0, j - suffixLength), bestShortTextB = shortText.slice(j + prefixLength));\n  }\n  return bestCommon.length * 2 >= longText.length ? [bestLongTextA || \"\", bestLongTextB || \"\", bestShortTextA || \"\", bestShortTextB || \"\", bestCommon || \"\"] : null;\n}\nfunction charsToLines(diffs, lineArray) {\n  for (let x = 0; x < diffs.length; x++) {\n    const chars = diffs[x][1], text = [];\n    for (let y = 0; y < chars.length; y++)\n      text[y] = lineArray[chars.charCodeAt(y)];\n    diffs[x][1] = text.join(\"\");\n  }\n}\nfunction linesToChars(textA, textB) {\n  const lineArray = [], lineHash = {};\n  lineArray[0] = \"\";\n  function diffLinesToMunge(text) {\n    let chars = \"\", lineStart = 0, lineEnd = -1, lineArrayLength = lineArray.length;\n    for (; lineEnd < text.length - 1; ) {\n      lineEnd = text.indexOf(`\n`, lineStart), lineEnd === -1 && (lineEnd = text.length - 1);\n      let line = text.slice(lineStart, lineEnd + 1);\n      (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== void 0) ? chars += String.fromCharCode(lineHash[line]) : (lineArrayLength === maxLines && (line = text.slice(lineStart), lineEnd = text.length), chars += String.fromCharCode(lineArrayLength), lineHash[line] = lineArrayLength, lineArray[lineArrayLength++] = line), lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  let maxLines = 4e4;\n  const chars1 = diffLinesToMunge(textA);\n  maxLines = 65535;\n  const chars2 = diffLinesToMunge(textB);\n  return {\n    chars1,\n    chars2,\n    lineArray\n  };\n}\nfunction doLineModeDiff(textA, textB, opts) {\n  let text1 = textA, text2 = textB;\n  const a = linesToChars(text1, text2);\n  text1 = a.chars1, text2 = a.chars2;\n  const linearray = a.lineArray;\n  let diffs = doDiff(text1, text2, {\n    checkLines: !1,\n    deadline: opts.deadline\n  });\n  charsToLines(diffs, linearray), diffs = cleanupSemantic(diffs), diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0, countDelete = 0, countInsert = 0, textDelete = \"\", textInsert = \"\";\n  for (; pointer < diffs.length; ) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++, textInsert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        countDelete++, textDelete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        if (countDelete >= 1 && countInsert >= 1) {\n          diffs.splice(pointer - countDelete - countInsert, countDelete + countInsert), pointer = pointer - countDelete - countInsert;\n          const aa = doDiff(textDelete, textInsert, {\n            checkLines: !1,\n            deadline: opts.deadline\n          });\n          for (let j = aa.length - 1; j >= 0; j--)\n            diffs.splice(pointer, 0, aa[j]);\n          pointer += aa.length;\n        }\n        countInsert = 0, countDelete = 0, textDelete = \"\", textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n    pointer++;\n  }\n  return diffs.pop(), diffs;\n}\nfunction computeDiff(text1, text2, opts) {\n  let diffs;\n  if (!text1)\n    return [[DIFF_INSERT, text2]];\n  if (!text2)\n    return [[DIFF_DELETE, text1]];\n  const longtext = text1.length > text2.length ? text1 : text2, shorttext = text1.length > text2.length ? text2 : text1, i = longtext.indexOf(shorttext);\n  if (i !== -1)\n    return diffs = [[DIFF_INSERT, longtext.substring(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.substring(i + shorttext.length)]], text1.length > text2.length && (diffs[0][0] = DIFF_DELETE, diffs[2][0] = DIFF_DELETE), diffs;\n  if (shorttext.length === 1)\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  const halfMatch = findHalfMatch(text1, text2);\n  if (halfMatch) {\n    const text1A = halfMatch[0], text1B = halfMatch[1], text2A = halfMatch[2], text2B = halfMatch[3], midCommon = halfMatch[4], diffsA = doDiff(text1A, text2A, opts), diffsB = doDiff(text1B, text2B, opts);\n    return diffsA.concat([[DIFF_EQUAL, midCommon]], diffsB);\n  }\n  return opts.checkLines && text1.length > 100 && text2.length > 100 ? doLineModeDiff(text1, text2, opts) : bisect(text1, text2, opts.deadline);\n}\nconst DIFF_DELETE = -1, DIFF_INSERT = 1, DIFF_EQUAL = 0;\nfunction diff(textA, textB, opts) {\n  if (textA === null || textB === null)\n    throw new Error(\"Null input. (diff)\");\n  const diffs = doDiff(textA, textB, createInternalOpts(opts || {}));\n  return adjustDiffForSurrogatePairs(diffs), diffs;\n}\nfunction doDiff(textA, textB, options) {\n  let text1 = textA, text2 = textB;\n  if (text1 === text2)\n    return text1 ? [[DIFF_EQUAL, text1]] : [];\n  let commonlength = getCommonPrefix(text1, text2);\n  const commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength), text2 = text2.substring(commonlength), commonlength = getCommonSuffix(text1, text2);\n  const commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength), text2 = text2.substring(0, text2.length - commonlength);\n  let diffs = computeDiff(text1, text2, options);\n  return commonprefix && diffs.unshift([DIFF_EQUAL, commonprefix]), commonsuffix && diffs.push([DIFF_EQUAL, commonsuffix]), diffs = cleanupMerge(diffs), diffs;\n}\nfunction createDeadLine(timeout) {\n  let t = 1;\n  return typeof timeout < \"u\" && (t = timeout <= 0 ? Number.MAX_VALUE : timeout), Date.now() + t * 1e3;\n}\nfunction createInternalOpts(opts) {\n  return {\n    checkLines: !0,\n    deadline: createDeadLine(opts.timeout || 1),\n    ...opts\n  };\n}\nfunction combineChar(data, char, dir) {\n  return dir === 1 ? data + char : char + data;\n}\nfunction splitChar(data, dir) {\n  return dir === 1 ? [data.substring(0, data.length - 1), data[data.length - 1]] : [data.substring(1), data[0]];\n}\nfunction hasSharedChar(diffs, i, j, dir) {\n  return dir === 1 ? diffs[i][1][diffs[i][1].length - 1] === diffs[j][1][diffs[j][1].length - 1] : diffs[i][1][0] === diffs[j][1][0];\n}\nfunction deisolateChar(diffs, i, dir) {\n  const inv = dir === 1 ? -1 : 1;\n  let insertIdx = null, deleteIdx = null, j = i + dir;\n  for (; j >= 0 && j < diffs.length && (insertIdx === null || deleteIdx === null); j += dir) {\n    const [op, text2] = diffs[j];\n    if (text2.length !== 0) {\n      if (op === DIFF_INSERT) {\n        insertIdx === null && (insertIdx = j);\n        continue;\n      } else if (op === DIFF_DELETE) {\n        deleteIdx === null && (deleteIdx = j);\n        continue;\n      } else if (op === DIFF_EQUAL) {\n        if (insertIdx === null && deleteIdx === null) {\n          const [rest, char2] = splitChar(diffs[i][1], dir);\n          diffs[i][1] = rest, diffs[j][1] = combineChar(diffs[j][1], char2, inv);\n          return;\n        }\n        break;\n      }\n    }\n  }\n  if (insertIdx !== null && deleteIdx !== null && hasSharedChar(diffs, insertIdx, deleteIdx, dir)) {\n    const [insertText, insertChar] = splitChar(diffs[insertIdx][1], inv), [deleteText] = splitChar(diffs[deleteIdx][1], inv);\n    diffs[insertIdx][1] = insertText, diffs[deleteIdx][1] = deleteText, diffs[i][1] = combineChar(diffs[i][1], insertChar, dir);\n    return;\n  }\n  const [text, char] = splitChar(diffs[i][1], dir);\n  diffs[i][1] = text, insertIdx === null ? (diffs.splice(j, 0, [DIFF_INSERT, char]), deleteIdx !== null && deleteIdx >= j && deleteIdx++) : diffs[insertIdx][1] = combineChar(diffs[insertIdx][1], char, inv), deleteIdx === null ? diffs.splice(j, 0, [DIFF_DELETE, char]) : diffs[deleteIdx][1] = combineChar(diffs[deleteIdx][1], char, inv);\n}\nfunction adjustDiffForSurrogatePairs(diffs) {\n  for (let i = 0; i < diffs.length; i++) {\n    const [diffType, diffText] = diffs[i];\n    if (diffText.length === 0) continue;\n    const firstChar = diffText[0], lastChar = diffText[diffText.length - 1];\n    isHighSurrogate(lastChar) && diffType === DIFF_EQUAL && deisolateChar(diffs, i, 1), isLowSurrogate(firstChar) && diffType === DIFF_EQUAL && deisolateChar(diffs, i, -1);\n  }\n  for (let i = 0; i < diffs.length; i++)\n    diffs[i][1].length === 0 && diffs.splice(i, 1);\n}\nconst DEFAULT_OPTIONS = {\n  /**\n   * At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n   */\n  threshold: 0.5,\n  /**\n   * How far to search for a match (0 = exact location, 1000+ = broad match).\n   * A match this many characters away from the expected location will add\n   * 1.0 to the score (0.0 is a perfect match).\n   */\n  distance: 1e3\n};\nfunction applyDefaults(options) {\n  return {\n    ...DEFAULT_OPTIONS,\n    ...options\n  };\n}\nconst MAX_BITS$1 = 32;\nfunction bitap(text, pattern, loc) {\n  let opts = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n  if (pattern.length > MAX_BITS$1)\n    throw new Error(\"Pattern too long for this browser.\");\n  const options = applyDefaults(opts), s = getAlphabetFromPattern(pattern);\n  function getBitapScore(e, x) {\n    const accuracy = e / pattern.length, proximity = Math.abs(loc - x);\n    return options.distance ? accuracy + proximity / options.distance : proximity ? 1 : accuracy;\n  }\n  let scoreThreshold = options.threshold, bestLoc = text.indexOf(pattern, loc);\n  bestLoc !== -1 && (scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold), bestLoc = text.lastIndexOf(pattern, loc + pattern.length), bestLoc !== -1 && (scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold)));\n  const matchmask = 1 << pattern.length - 1;\n  bestLoc = -1;\n  let binMin, binMid, binMax = pattern.length + text.length, lastRd = [];\n  for (let d = 0; d < pattern.length; d++) {\n    for (binMin = 0, binMid = binMax; binMin < binMid; )\n      getBitapScore(d, loc + binMid) <= scoreThreshold ? binMin = binMid : binMax = binMid, binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    binMax = binMid;\n    let start = Math.max(1, loc - binMid + 1);\n    const finish = Math.min(loc + binMid, text.length) + pattern.length, rd = new Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (let j = finish; j >= start; j--) {\n      const charMatch = s[text.charAt(j - 1)];\n      if (d === 0 ? rd[j] = (rd[j + 1] << 1 | 1) & charMatch : rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((lastRd[j + 1] | lastRd[j]) << 1 | 1) | lastRd[j + 1], rd[j] & matchmask) {\n        const score = getBitapScore(d, j - 1);\n        if (score <= scoreThreshold)\n          if (scoreThreshold = score, bestLoc = j - 1, bestLoc > loc)\n            start = Math.max(1, 2 * loc - bestLoc);\n          else\n            break;\n      }\n    }\n    if (getBitapScore(d + 1, loc) > scoreThreshold)\n      break;\n    lastRd = rd;\n  }\n  return bestLoc;\n}\nfunction getAlphabetFromPattern(pattern) {\n  const s = {};\n  for (let i = 0; i < pattern.length; i++)\n    s[pattern.charAt(i)] = 0;\n  for (let i = 0; i < pattern.length; i++)\n    s[pattern.charAt(i)] |= 1 << pattern.length - i - 1;\n  return s;\n}\nfunction match(text, pattern, searchLocation) {\n  if (text === null || pattern === null || searchLocation === null)\n    throw new Error(\"Null input. (match())\");\n  const loc = Math.max(0, Math.min(searchLocation, text.length));\n  if (text === pattern)\n    return 0;\n  if (text.length) {\n    if (text.substring(loc, loc + pattern.length) === pattern)\n      return loc;\n  } else return -1;\n  return bitap(text, pattern, loc);\n}\nfunction createPatchObject(start1, start2) {\n  return {\n    diffs: [],\n    start1,\n    start2,\n    utf8Start1: start1,\n    utf8Start2: start2,\n    length1: 0,\n    length2: 0,\n    utf8Length1: 0,\n    utf8Length2: 0\n  };\n}\nfunction diffText1(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++)\n    diffs[x][0] !== DIFF_INSERT && (text[x] = diffs[x][1]);\n  return text.join(\"\");\n}\nfunction diffText2(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++)\n    diffs[x][0] !== DIFF_DELETE && (text[x] = diffs[x][1]);\n  return text.join(\"\");\n}\nfunction countUtf8Bytes(str) {\n  let bytes = 0;\n  for (let i = 0; i < str.length; i++) {\n    const codePoint = str.codePointAt(i);\n    if (typeof codePoint > \"u\")\n      throw new Error(\"Failed to get codepoint\");\n    bytes += utf8len(codePoint);\n  }\n  return bytes;\n}\nfunction adjustIndiciesToUcs2(patches, base) {\n  let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, byteOffset = 0, idx = 0;\n  function advanceTo(target) {\n    for (; byteOffset < target; ) {\n      const codePoint = base.codePointAt(idx);\n      if (typeof codePoint > \"u\")\n        return idx;\n      byteOffset += utf8len(codePoint), codePoint > 65535 ? idx += 2 : idx += 1;\n    }\n    if (!options.allowExceedingIndices && byteOffset !== target)\n      throw new Error(\"Failed to determine byte offset\");\n    return idx;\n  }\n  const adjusted = [];\n  for (const patch of patches)\n    adjusted.push({\n      diffs: patch.diffs.map((diff2) => cloneDiff(diff2)),\n      start1: advanceTo(patch.start1),\n      start2: advanceTo(patch.start2),\n      utf8Start1: patch.utf8Start1,\n      utf8Start2: patch.utf8Start2,\n      length1: patch.length1,\n      length2: patch.length2,\n      utf8Length1: patch.utf8Length1,\n      utf8Length2: patch.utf8Length2\n    });\n  return adjusted;\n}\nfunction utf8len(codePoint) {\n  return codePoint <= 127 ? 1 : codePoint <= 2047 ? 2 : codePoint <= 65535 ? 3 : 4;\n}\nconst MAX_BITS = 32, DEFAULT_MARGIN = 4, DEFAULT_OPTS = {\n  margin: 4\n};\nfunction getDefaultOpts() {\n  let opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n  return {\n    ...DEFAULT_OPTS,\n    ...opts\n  };\n}\nfunction make(a, b, options) {\n  if (typeof a == \"string\" && typeof b == \"string\") {\n    let diffs = diff(a, b, {\n      checkLines: !0\n    });\n    return diffs.length > 2 && (diffs = cleanupSemantic(diffs), diffs = cleanupEfficiency(diffs)), _make(a, diffs, getDefaultOpts(options));\n  }\n  if (a && Array.isArray(a) && typeof b > \"u\")\n    return _make(diffText1(a), a, getDefaultOpts(options));\n  if (typeof a == \"string\" && b && Array.isArray(b))\n    return _make(a, b, getDefaultOpts(options));\n  throw new Error(\"Unknown call format to make()\");\n}\nfunction _make(textA, diffs, options) {\n  if (diffs.length === 0)\n    return [];\n  const patches = [];\n  let patch = createPatchObject(0, 0), patchDiffLength = 0, charCount1 = 0, charCount2 = 0, utf8Count1 = 0, utf8Count2 = 0, prepatchText = textA, postpatchText = textA;\n  for (let x = 0; x < diffs.length; x++) {\n    const currentDiff = diffs[x], [diffType, diffText] = currentDiff, diffTextLength = diffText.length, diffByteLength = countUtf8Bytes(diffText);\n    switch (!patchDiffLength && diffType !== DIFF_EQUAL && (patch.start1 = charCount1, patch.start2 = charCount2, patch.utf8Start1 = utf8Count1, patch.utf8Start2 = utf8Count2), diffType) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = currentDiff, patch.length2 += diffTextLength, patch.utf8Length2 += diffByteLength, postpatchText = postpatchText.substring(0, charCount2) + diffText + postpatchText.substring(charCount2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diffTextLength, patch.utf8Length1 += diffByteLength, patch.diffs[patchDiffLength++] = currentDiff, postpatchText = postpatchText.substring(0, charCount2) + postpatchText.substring(charCount2 + diffTextLength);\n        break;\n      case DIFF_EQUAL:\n        diffTextLength <= 2 * options.margin && patchDiffLength && diffs.length !== x + 1 ? (patch.diffs[patchDiffLength++] = currentDiff, patch.length1 += diffTextLength, patch.length2 += diffTextLength, patch.utf8Length1 += diffByteLength, patch.utf8Length2 += diffByteLength) : diffTextLength >= 2 * options.margin && patchDiffLength && (addContext(patch, prepatchText, options), patches.push(patch), patch = createPatchObject(-1, -1), patchDiffLength = 0, prepatchText = postpatchText, charCount1 = charCount2, utf8Count1 = utf8Count2);\n        break;\n      default:\n        throw new Error(\"Unknown diff type\");\n    }\n    diffType !== DIFF_INSERT && (charCount1 += diffTextLength, utf8Count1 += diffByteLength), diffType !== DIFF_DELETE && (charCount2 += diffTextLength, utf8Count2 += diffByteLength);\n  }\n  return patchDiffLength && (addContext(patch, prepatchText, options), patches.push(patch)), patches;\n}\nfunction addContext(patch, text, opts) {\n  if (text.length === 0)\n    return;\n  let pattern = text.substring(patch.start2, patch.start2 + patch.length1), padding = 0;\n  for (; text.indexOf(pattern) !== text.lastIndexOf(pattern) && pattern.length < MAX_BITS - opts.margin - opts.margin; )\n    padding += opts.margin, pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding);\n  padding += opts.margin;\n  let prefixStart = patch.start2 - padding;\n  prefixStart >= 1 && isLowSurrogate(text[prefixStart]) && prefixStart--;\n  const prefix = text.substring(prefixStart, patch.start2);\n  prefix && patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  const prefixLength = prefix.length, prefixUtf8Length = countUtf8Bytes(prefix);\n  let suffixEnd = patch.start2 + patch.length1 + padding;\n  suffixEnd < text.length && isLowSurrogate(text[suffixEnd]) && suffixEnd++;\n  const suffix = text.substring(patch.start2 + patch.length1, suffixEnd);\n  suffix && patch.diffs.push([DIFF_EQUAL, suffix]);\n  const suffixLength = suffix.length, suffixUtf8Length = countUtf8Bytes(suffix);\n  patch.start1 -= prefixLength, patch.start2 -= prefixLength, patch.utf8Start1 -= prefixUtf8Length, patch.utf8Start2 -= prefixUtf8Length, patch.length1 += prefixLength + suffixLength, patch.length2 += prefixLength + suffixLength, patch.utf8Length1 += prefixUtf8Length + suffixUtf8Length, patch.utf8Length2 += prefixUtf8Length + suffixUtf8Length;\n}\nfunction levenshtein(diffs) {\n  let leven = 0, insertions = 0, deletions = 0;\n  for (let x = 0; x < diffs.length; x++) {\n    const op = diffs[x][0], data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        leven += Math.max(insertions, deletions), insertions = 0, deletions = 0;\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n  }\n  return leven += Math.max(insertions, deletions), leven;\n}\nfunction xIndex(diffs, loc) {\n  let chars1 = 0, chars2 = 0, lastChars1 = 0, lastChars2 = 0, x;\n  for (x = 0; x < diffs.length && (diffs[x][0] !== DIFF_INSERT && (chars1 += diffs[x][1].length), diffs[x][0] !== DIFF_DELETE && (chars2 += diffs[x][1].length), !(chars1 > loc)); x++)\n    lastChars1 = chars1, lastChars2 = chars2;\n  return diffs.length !== x && diffs[x][0] === DIFF_DELETE ? lastChars2 : lastChars2 + (loc - lastChars1);\n}\nfunction addPadding(patches) {\n  const paddingLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_MARGIN;\n  let nullPadding = \"\";\n  for (let x = 1; x <= paddingLength; x++)\n    nullPadding += String.fromCharCode(x);\n  for (const p of patches)\n    p.start1 += paddingLength, p.start2 += paddingLength, p.utf8Start1 += paddingLength, p.utf8Start2 += paddingLength;\n  let patch = patches[0], diffs = patch.diffs;\n  if (diffs.length === 0 || diffs[0][0] !== DIFF_EQUAL)\n    diffs.unshift([DIFF_EQUAL, nullPadding]), patch.start1 -= paddingLength, patch.start2 -= paddingLength, patch.utf8Start1 -= paddingLength, patch.utf8Start2 -= paddingLength, patch.length1 += paddingLength, patch.length2 += paddingLength, patch.utf8Length1 += paddingLength, patch.utf8Length2 += paddingLength;\n  else if (paddingLength > diffs[0][1].length) {\n    const firstDiffLength = diffs[0][1].length, extraLength = paddingLength - firstDiffLength;\n    diffs[0][1] = nullPadding.substring(firstDiffLength) + diffs[0][1], patch.start1 -= extraLength, patch.start2 -= extraLength, patch.utf8Start1 -= extraLength, patch.utf8Start2 -= extraLength, patch.length1 += extraLength, patch.length2 += extraLength, patch.utf8Length1 += extraLength, patch.utf8Length2 += extraLength;\n  }\n  if (patch = patches[patches.length - 1], diffs = patch.diffs, diffs.length === 0 || diffs[diffs.length - 1][0] !== DIFF_EQUAL)\n    diffs.push([DIFF_EQUAL, nullPadding]), patch.length1 += paddingLength, patch.length2 += paddingLength, patch.utf8Length1 += paddingLength, patch.utf8Length2 += paddingLength;\n  else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    const extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength), patch.length1 += extraLength, patch.length2 += extraLength, patch.utf8Length1 += extraLength, patch.utf8Length2 += extraLength;\n  }\n  return nullPadding;\n}\nfunction splitMax(patches) {\n  let margin = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_MARGIN;\n  const patchSize = MAX_BITS;\n  for (let x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patchSize)\n      continue;\n    const bigpatch = patches[x];\n    patches.splice(x--, 1);\n    let start1 = bigpatch.start1, start2 = bigpatch.start2, preContext = \"\";\n    for (; bigpatch.diffs.length !== 0; ) {\n      const patch = createPatchObject(start1 - preContext.length, start2 - preContext.length);\n      let empty = !0;\n      if (preContext !== \"\") {\n        const precontextByteCount = countUtf8Bytes(preContext);\n        patch.length1 = preContext.length, patch.utf8Length1 = precontextByteCount, patch.length2 = preContext.length, patch.utf8Length2 = precontextByteCount, patch.diffs.push([DIFF_EQUAL, preContext]);\n      }\n      for (; bigpatch.diffs.length !== 0 && patch.length1 < patchSize - margin; ) {\n        const diffType = bigpatch.diffs[0][0];\n        let diffText = bigpatch.diffs[0][1], diffTextByteCount = countUtf8Bytes(diffText);\n        if (diffType === DIFF_INSERT) {\n          patch.length2 += diffText.length, patch.utf8Length2 += diffTextByteCount, start2 += diffText.length;\n          const diff2 = bigpatch.diffs.shift();\n          diff2 && patch.diffs.push(diff2), empty = !1;\n        } else diffType === DIFF_DELETE && patch.diffs.length === 1 && patch.diffs[0][0] === DIFF_EQUAL && diffText.length > 2 * patchSize ? (patch.length1 += diffText.length, patch.utf8Length1 += diffTextByteCount, start1 += diffText.length, empty = !1, patch.diffs.push([diffType, diffText]), bigpatch.diffs.shift()) : (diffText = diffText.substring(0, patchSize - patch.length1 - margin), diffTextByteCount = countUtf8Bytes(diffText), patch.length1 += diffText.length, patch.utf8Length1 += diffTextByteCount, start1 += diffText.length, diffType === DIFF_EQUAL ? (patch.length2 += diffText.length, patch.utf8Length2 += diffTextByteCount, start2 += diffText.length) : empty = !1, patch.diffs.push([diffType, diffText]), diffText === bigpatch.diffs[0][1] ? bigpatch.diffs.shift() : bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diffText.length));\n      }\n      preContext = diffText2(patch.diffs), preContext = preContext.substring(preContext.length - margin);\n      const postContext = diffText1(bigpatch.diffs).substring(0, margin), postContextByteCount = countUtf8Bytes(postContext);\n      postContext !== \"\" && (patch.length1 += postContext.length, patch.length2 += postContext.length, patch.utf8Length1 += postContextByteCount, patch.utf8Length2 += postContextByteCount, patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL ? patch.diffs[patch.diffs.length - 1][1] += postContext : patch.diffs.push([DIFF_EQUAL, postContext])), empty || patches.splice(++x, 0, patch);\n    }\n  }\n}\nfunction apply$4(patches, originalText) {\n  let opts = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  if (typeof patches == \"string\")\n    throw new Error(\"Patches must be an array - pass the patch to `parsePatch()` first\");\n  let text = originalText;\n  if (patches.length === 0)\n    return [text, []];\n  const parsed = adjustIndiciesToUcs2(patches, text, {\n    allowExceedingIndices: opts.allowExceedingIndices\n  }), margin = opts.margin || DEFAULT_MARGIN, deleteThreshold = opts.deleteThreshold || 0.4, nullPadding = addPadding(parsed, margin);\n  text = nullPadding + text + nullPadding, splitMax(parsed, margin);\n  let delta = 0;\n  const results = [];\n  for (let x = 0; x < parsed.length; x++) {\n    const expectedLoc = parsed[x].start2 + delta, text1 = diffText1(parsed[x].diffs);\n    let startLoc, endLoc = -1;\n    if (text1.length > MAX_BITS ? (startLoc = match(text, text1.substring(0, MAX_BITS), expectedLoc), startLoc !== -1 && (endLoc = match(text, text1.substring(text1.length - MAX_BITS), expectedLoc + text1.length - MAX_BITS), (endLoc === -1 || startLoc >= endLoc) && (startLoc = -1))) : startLoc = match(text, text1, expectedLoc), startLoc === -1)\n      results[x] = !1, delta -= parsed[x].length2 - parsed[x].length1;\n    else {\n      results[x] = !0, delta = startLoc - expectedLoc;\n      let text2;\n      if (endLoc === -1 ? text2 = text.substring(startLoc, startLoc + text1.length) : text2 = text.substring(startLoc, endLoc + MAX_BITS), text1 === text2)\n        text = text.substring(0, startLoc) + diffText2(parsed[x].diffs) + text.substring(startLoc + text1.length);\n      else {\n        let diffs = diff(text1, text2, {\n          checkLines: !1\n        });\n        if (text1.length > MAX_BITS && levenshtein(diffs) / text1.length > deleteThreshold)\n          results[x] = !1;\n        else {\n          diffs = cleanupSemanticLossless(diffs);\n          let index1 = 0, index2 = 0;\n          for (let y = 0; y < parsed[x].diffs.length; y++) {\n            const mod = parsed[x].diffs[y];\n            mod[0] !== DIFF_EQUAL && (index2 = xIndex(diffs, index1)), mod[0] === DIFF_INSERT ? text = text.substring(0, startLoc + index2) + mod[1] + text.substring(startLoc + index2) : mod[0] === DIFF_DELETE && (text = text.substring(0, startLoc + index2) + text.substring(startLoc + xIndex(diffs, index1 + mod[1].length))), mod[0] !== DIFF_DELETE && (index1 += mod[1].length);\n          }\n        }\n      }\n    }\n  }\n  return text = text.substring(nullPadding.length, text.length - nullPadding.length), [text, results];\n}\nfunction stringify(patches) {\n  return patches.map(stringifyPatch).join(\"\");\n}\nfunction stringifyPatch(patch) {\n  const {\n    utf8Length1,\n    utf8Length2,\n    utf8Start1,\n    utf8Start2,\n    diffs\n  } = patch;\n  let coords1;\n  utf8Length1 === 0 ? coords1 = \"\".concat(utf8Start1, \",0\") : utf8Length1 === 1 ? coords1 = \"\".concat(utf8Start1 + 1) : coords1 = \"\".concat(utf8Start1 + 1, \",\").concat(utf8Length1);\n  let coords2;\n  utf8Length2 === 0 ? coords2 = \"\".concat(utf8Start2, \",0\") : utf8Length2 === 1 ? coords2 = \"\".concat(utf8Start2 + 1) : coords2 = \"\".concat(utf8Start2 + 1, \",\").concat(utf8Length2);\n  const text = [\"@@ -\".concat(coords1, \" +\").concat(coords2, ` @@\n`)];\n  let op;\n  for (let x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        op = \"+\";\n        break;\n      case DIFF_DELETE:\n        op = \"-\";\n        break;\n      case DIFF_EQUAL:\n        op = \" \";\n        break;\n      default:\n        throw new Error(\"Unknown patch operation.\");\n    }\n    text[x + 1] = \"\".concat(op + encodeURI(diffs[x][1]), `\n`);\n  }\n  return text.join(\"\").replace(/%20/g, \" \");\n}\nconst patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\nfunction parse(textline) {\n  if (!textline)\n    return [];\n  const patches = [], lines = textline.split(`\n`);\n  let textPointer = 0;\n  for (; textPointer < lines.length; ) {\n    const m = lines[textPointer].match(patchHeader);\n    if (!m)\n      throw new Error(\"Invalid patch string: \".concat(lines[textPointer]));\n    const patch = createPatchObject(toInt(m[1]), toInt(m[3]));\n    for (patches.push(patch), m[2] === \"\" ? (patch.start1--, patch.utf8Start1--, patch.length1 = 1, patch.utf8Length1 = 1) : m[2] === \"0\" ? (patch.length1 = 0, patch.utf8Length1 = 0) : (patch.start1--, patch.utf8Start1--, patch.utf8Length1 = toInt(m[2]), patch.length1 = patch.utf8Length1), m[4] === \"\" ? (patch.start2--, patch.utf8Start2--, patch.length2 = 1, patch.utf8Length2 = 1) : m[4] === \"0\" ? (patch.length2 = 0, patch.utf8Length2 = 0) : (patch.start2--, patch.utf8Start2--, patch.utf8Length2 = toInt(m[4]), patch.length2 = patch.utf8Length2), textPointer++; textPointer < lines.length; ) {\n      const currentLine = lines[textPointer], sign = currentLine.charAt(0);\n      if (sign === \"@\")\n        break;\n      if (sign === \"\") {\n        textPointer++;\n        continue;\n      }\n      let line;\n      try {\n        line = decodeURI(currentLine.slice(1));\n      } catch {\n        throw new Error(\"Illegal escape in parse: \".concat(currentLine));\n      }\n      const utf8Diff = countUtf8Bytes(line) - line.length;\n      if (sign === \"-\")\n        patch.diffs.push([DIFF_DELETE, line]), patch.length1 -= utf8Diff;\n      else if (sign === \"+\")\n        patch.diffs.push([DIFF_INSERT, line]), patch.length2 -= utf8Diff;\n      else if (sign === \" \")\n        patch.diffs.push([DIFF_EQUAL, line]), patch.length1 -= utf8Diff, patch.length2 -= utf8Diff;\n      else\n        throw new Error('Invalid patch mode \"'.concat(sign, '\" in: ').concat(line));\n      textPointer++;\n    }\n  }\n  return patches;\n}\nfunction toInt(num) {\n  return parseInt(num, 10);\n}\nfunction setIfMissing(value, path = []) {\n  return {\n    type: \"setIfMissing\",\n    path,\n    value\n  };\n}\nfunction diffMatchPatch$1(currentValue, nextValue, path = []) {\n  const patches = make(currentValue, nextValue), patch = stringify(patches);\n  return { type: \"diffMatchPatch\", path, value: patch };\n}\nfunction insert$1(items, position, path = []) {\n  return {\n    type: \"insert\",\n    path,\n    position,\n    items\n  };\n}\nfunction set(value, path = []) {\n  return { type: \"set\", path, value };\n}\nfunction unset(path = []) {\n  return { type: \"unset\", path };\n}\nconst debug$j = debugWithName(\"operationToPatches\");\ndebug$j.enabled = !1;\nfunction createOperationToPatches(types) {\n  const textBlockName = types.block.name;\n  function insertTextPatch(editor, operation, beforeValue) {\n    debug$j.enabled && debug$j(\"Operation\", JSON.stringify(operation, null, 2));\n    const block = editor.isTextBlock(editor.children[operation.path[0]]) && editor.children[operation.path[0]];\n    if (!block)\n      throw new Error(\"Could not find block\");\n    const textChild = editor.isTextBlock(block) && editor.isTextSpan(block.children[operation.path[1]]) && block.children[operation.path[1]];\n    if (!textChild)\n      throw new Error(\"Could not find child\");\n    const path = [{ _key: block._key }, \"children\", { _key: textChild._key }, \"text\"], prevBlock = beforeValue[operation.path[0]], prevChild = editor.isTextBlock(prevBlock) && prevBlock.children[operation.path[1]], prevText = editor.isTextSpan(prevChild) ? prevChild.text : \"\", patch = diffMatchPatch$1(prevText, textChild.text, path);\n    return patch.value.length ? [patch] : [];\n  }\n  function removeTextPatch(editor, operation, beforeValue) {\n    const block = editor && editor.children[operation.path[0]];\n    if (!block)\n      throw new Error(\"Could not find block\");\n    const child = editor.isTextBlock(block) && block.children[operation.path[1]] || void 0, textChild = editor.isTextSpan(child) ? child : void 0;\n    if (child && !textChild)\n      throw new Error(\"Expected span\");\n    if (!textChild)\n      throw new Error(\"Could not find child\");\n    const path = [{ _key: block._key }, \"children\", { _key: textChild._key }, \"text\"], beforeBlock = beforeValue[operation.path[0]], prevTextChild = editor.isTextBlock(beforeBlock) && beforeBlock.children[operation.path[1]], prevText = editor.isTextSpan(prevTextChild) && prevTextChild.text, patch = diffMatchPatch$1(prevText || \"\", textChild.text, path);\n    return patch.value ? [patch] : [];\n  }\n  function setNodePatch(editor, operation) {\n    if (operation.path.length === 1) {\n      const block = editor.children[operation.path[0]];\n      if (typeof block._key != \"string\")\n        throw new Error(\"Expected block to have a _key\");\n      const setNode = lodash_omitBy_js__WEBPACK_IMPORTED_MODULE_8__(\n        { ...editor.children[operation.path[0]], ...operation.newProperties },\n        lodash_isUndefined_js__WEBPACK_IMPORTED_MODULE_7__\n      );\n      return [set(fromSlateValue([setNode], textBlockName)[0], [{ _key: block._key }])];\n    } else if (operation.path.length === 2) {\n      const block = editor.children[operation.path[0]];\n      if (editor.isTextBlock(block)) {\n        const child = block.children[operation.path[1]];\n        if (child) {\n          const blockKey = block._key, childKey = child._key, patches = [], keys = Object.keys(operation.newProperties);\n          return keys.forEach((keyName) => {\n            if (keys.length === 1 && keyName === \"_key\") {\n              const val = lodash_get_js__WEBPACK_IMPORTED_MODULE_6__(operation.newProperties, keyName);\n              patches.push(\n                set(val, [{ _key: blockKey }, \"children\", block.children.indexOf(child), keyName])\n              );\n            } else {\n              const val = lodash_get_js__WEBPACK_IMPORTED_MODULE_6__(operation.newProperties, keyName);\n              patches.push(set(val, [{ _key: blockKey }, \"children\", { _key: childKey }, keyName]));\n            }\n          }), patches;\n        }\n        throw new Error(\"Could not find a valid child\");\n      }\n      throw new Error(\"Could not find a valid block\");\n    } else\n      throw new Error(`Unexpected path encountered: ${JSON.stringify(operation.path)}`);\n  }\n  function insertNodePatch(editor, operation, beforeValue) {\n    const block = beforeValue[operation.path[0]], isTextBlock = editor.isTextBlock(block);\n    if (operation.path.length === 1) {\n      const position = operation.path[0] === 0 ? \"before\" : \"after\", beforeBlock = beforeValue[operation.path[0] - 1], targetKey = operation.path[0] === 0 ? block == null ? void 0 : block._key : beforeBlock == null ? void 0 : beforeBlock._key;\n      return targetKey ? [\n        insert$1([fromSlateValue([operation.node], textBlockName)[0]], position, [\n          { _key: targetKey }\n        ])\n      ] : [\n        setIfMissing(beforeValue, []),\n        insert$1([fromSlateValue([operation.node], textBlockName)[0]], \"before\", [\n          operation.path[0]\n        ])\n      ];\n    } else if (isTextBlock && operation.path.length === 2 && editor.children[operation.path[0]]) {\n      const position = block.children.length === 0 || !block.children[operation.path[1] - 1] ? \"before\" : \"after\", node = { ...operation.node };\n      !node._type && slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(node) && (node._type = \"span\", node.marks = []);\n      const child = fromSlateValue(\n        [\n          {\n            _key: \"bogus\",\n            _type: textBlockName,\n            children: [node]\n          }\n        ],\n        textBlockName\n      )[0].children[0];\n      return [\n        insert$1([child], position, [\n          { _key: block._key },\n          \"children\",\n          block.children.length <= 1 || !block.children[operation.path[1] - 1] ? 0 : { _key: block.children[operation.path[1] - 1]._key }\n        ])\n      ];\n    }\n    return debug$j(\"Something was inserted into a void block. Not producing editor patches.\"), [];\n  }\n  function splitNodePatch(editor, operation, beforeValue) {\n    const patches = [], splitBlock = editor.children[operation.path[0]];\n    if (!editor.isTextBlock(splitBlock))\n      throw new Error(\n        `Block with path ${JSON.stringify(\n          operation.path[0]\n        )} is not a text block and can't be split`\n      );\n    if (operation.path.length === 1) {\n      const oldBlock = beforeValue[operation.path[0]];\n      if (editor.isTextBlock(oldBlock)) {\n        const targetValue = fromSlateValue(\n          [editor.children[operation.path[0] + 1]],\n          textBlockName\n        )[0];\n        targetValue && (patches.push(insert$1([targetValue], \"after\", [{ _key: splitBlock._key }])), oldBlock.children.slice(operation.position).forEach((span) => {\n          const path = [{ _key: oldBlock._key }, \"children\", { _key: span._key }];\n          patches.push(unset(path));\n        }));\n      }\n      return patches;\n    }\n    if (operation.path.length === 2) {\n      const splitSpan = splitBlock.children[operation.path[1]];\n      if (editor.isTextSpan(splitSpan)) {\n        const targetSpans = fromSlateValue(\n          [\n            {\n              ...splitBlock,\n              children: splitBlock.children.slice(operation.path[1] + 1, operation.path[1] + 2)\n            }\n          ],\n          textBlockName\n        )[0].children;\n        patches.push(\n          insert$1(targetSpans, \"after\", [\n            { _key: splitBlock._key },\n            \"children\",\n            { _key: splitSpan._key }\n          ])\n        ), patches.push(\n          set(splitSpan.text, [\n            { _key: splitBlock._key },\n            \"children\",\n            { _key: splitSpan._key },\n            \"text\"\n          ])\n        );\n      }\n      return patches;\n    }\n    return patches;\n  }\n  function removeNodePatch(editor, operation, beforeValue) {\n    const block = beforeValue[operation.path[0]];\n    if (operation.path.length === 1) {\n      if (block && block._key)\n        return [unset([{ _key: block._key }])];\n      throw new Error(\"Block not found\");\n    } else if (editor.isTextBlock(block) && operation.path.length === 2) {\n      const spanToRemove = editor.isTextBlock(block) && block.children && block.children[operation.path[1]];\n      return spanToRemove ? [unset([{ _key: block._key }, \"children\", { _key: spanToRemove._key }])] : (debug$j(\"Span not found in editor trying to remove node\"), []);\n    } else\n      return debug$j(\"Not creating patch inside object block\"), [];\n  }\n  function mergeNodePatch(editor, operation, beforeValue) {\n    const patches = [], block = beforeValue[operation.path[0]], targetBlock = editor.children[operation.path[0]];\n    if (operation.path.length === 1)\n      if (block != null && block._key) {\n        const newBlock = fromSlateValue([editor.children[operation.path[0] - 1]], textBlockName)[0];\n        patches.push(set(newBlock, [{ _key: newBlock._key }])), patches.push(unset([{ _key: block._key }]));\n      } else\n        throw new Error(\"Target key not found!\");\n    else if (operation.path.length === 2 && editor.isTextBlock(targetBlock)) {\n      const mergedSpan = editor.isTextBlock(block) && block.children[operation.path[1]] || void 0, targetSpan = targetBlock.children[operation.path[1] - 1];\n      editor.isTextSpan(targetSpan) && (patches.push(\n        set(targetSpan.text, [{ _key: block._key }, \"children\", { _key: targetSpan._key }, \"text\"])\n      ), mergedSpan && patches.push(unset([{ _key: block._key }, \"children\", { _key: mergedSpan._key }])));\n    } else\n      debug$j(\"Void nodes can't be merged, not creating any patches\");\n    return patches;\n  }\n  function moveNodePatch(editor, operation, beforeValue) {\n    const patches = [], block = beforeValue[operation.path[0]], targetBlock = beforeValue[operation.newPath[0]];\n    if (operation.path.length === 1) {\n      const position = operation.path[0] > operation.newPath[0] ? \"before\" : \"after\";\n      patches.push(unset([{ _key: block._key }])), patches.push(\n        insert$1([fromSlateValue([block], textBlockName)[0]], position, [{ _key: targetBlock._key }])\n      );\n    } else if (operation.path.length === 2 && editor.isTextBlock(block) && editor.isTextBlock(targetBlock)) {\n      const child = block.children[operation.path[1]], targetChild = targetBlock.children[operation.newPath[1]], position = operation.newPath[1] === targetBlock.children.length ? \"after\" : \"before\", childToInsert = fromSlateValue([block], textBlockName)[0].children[operation.path[1]];\n      patches.push(unset([{ _key: block._key }, \"children\", { _key: child._key }])), patches.push(\n        insert$1([childToInsert], position, [\n          { _key: targetBlock._key },\n          \"children\",\n          { _key: targetChild._key }\n        ])\n      );\n    }\n    return patches;\n  }\n  return {\n    insertNodePatch,\n    insertTextPatch,\n    mergeNodePatch,\n    moveNodePatch,\n    removeNodePatch,\n    removeTextPatch,\n    setNodePatch,\n    splitNodePatch\n  };\n}\nconst debug$i = debugWithName(\"API:editable\");\nfunction createWithEditableAPI(portableTextEditor, types, keyGenerator) {\n  return function(editor) {\n    return portableTextEditor.setEditable({\n      focus: () => {\n        slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.focus(editor);\n      },\n      blur: () => {\n        slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.blur(editor);\n      },\n      toggleMark: (mark) => {\n        editor.pteToggleMark(mark);\n      },\n      toggleList: (listStyle) => {\n        editor.pteToggleListItem(listStyle);\n      },\n      toggleBlockStyle: (blockStyle) => {\n        editor.pteToggleBlockStyle(blockStyle);\n      },\n      isMarkActive: (mark) => {\n        try {\n          return editor.pteIsMarkActive(mark);\n        } catch (err) {\n          return console.warn(err), !1;\n        }\n      },\n      marks: () => ({\n        ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.marks(editor) || {}\n      }).marks || [],\n      undo: () => editor.undo(),\n      redo: () => editor.redo(),\n      select: (selection) => {\n        const slateSelection = toSlateRange(selection, editor);\n        slateSelection ? slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, slateSelection) : slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.deselect(editor), editor.onChange();\n      },\n      focusBlock: () => {\n        if (editor.selection) {\n          const block = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, editor.selection.focus.path.slice(0, 1));\n          if (block)\n            return fromSlateValue([block], types.block.name, KEY_TO_VALUE_ELEMENT.get(editor))[0];\n        }\n      },\n      focusChild: () => {\n        if (editor.selection) {\n          const block = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, editor.selection.focus.path.slice(0, 1));\n          if (block && editor.isTextBlock(block))\n            return fromSlateValue(\n              [block],\n              types.block.name,\n              KEY_TO_VALUE_ELEMENT.get(editor)\n            )[0].children[editor.selection.focus.path[1]];\n        }\n      },\n      insertChild: (type, value) => {\n        var _a;\n        if (!editor.selection)\n          throw new Error(\"The editor has no selection\");\n        const [focusBlock] = Array.from(\n          slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n            at: editor.selection.focus.path.slice(0, 1),\n            match: (n) => n._type === types.block.name\n          })\n        )[0] || [void 0];\n        if (!focusBlock)\n          throw new Error(\"No focused text block\");\n        if (type.name !== types.span.name && !types.inlineObjects.some((t) => t.name === type.name))\n          throw new Error(\"This type cannot be inserted as a child to a text block\");\n        const child = toSlateValue(\n          [\n            {\n              _key: keyGenerator(),\n              _type: types.block.name,\n              children: [\n                {\n                  _key: keyGenerator(),\n                  _type: type.name,\n                  ...value || {}\n                }\n              ]\n            }\n          ],\n          portableTextEditor\n        )[0].children[0], focusChildPath = editor.selection.focus.path.slice(0, 2), isSpanNode = child._type === types.span.name, focusNode = slate__WEBPACK_IMPORTED_MODULE_18__.Node.get(editor, focusChildPath);\n        return isSpanNode && focusNode._type !== types.span.name && (debug$i(\"Inserting span child next to inline object child, moving selection + 1\"), editor.move({ distance: 1, unit: \"character\" })), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(editor, child, {\n          select: !0,\n          at: editor.selection\n        }), editor.onChange(), ((_a = toPortableTextRange(\n          fromSlateValue(editor.children, types.block.name, KEY_TO_VALUE_ELEMENT.get(editor)),\n          editor.selection,\n          types\n        )) == null ? void 0 : _a.focus.path) || [];\n      },\n      insertBlock: (type, value) => {\n        var _a;\n        if (!editor.selection)\n          throw new Error(\"The editor has no selection\");\n        const block = toSlateValue(\n          [\n            {\n              _key: keyGenerator(),\n              _type: type.name,\n              ...value || {}\n            }\n          ],\n          portableTextEditor\n        )[0], [focusBlock] = Array.from(\n          slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n            at: editor.selection.focus.path.slice(0, 1),\n            match: (n) => n._type === types.block.name\n          })\n        )[0] || [void 0];\n        return focusBlock && isEqualToEmptyEditor([focusBlock], types) && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, { at: editor.selection }), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.insertNode(editor, block), editor.onChange(), ((_a = toPortableTextRange(\n          fromSlateValue(editor.children, types.block.name, KEY_TO_VALUE_ELEMENT.get(editor)),\n          editor.selection,\n          types\n        )) == null ? void 0 : _a.focus.path) || [];\n      },\n      hasBlockStyle: (style) => {\n        try {\n          return editor.pteHasBlockStyle(style);\n        } catch {\n          return !1;\n        }\n      },\n      hasListStyle: (listStyle) => {\n        try {\n          return editor.pteHasListStyle(listStyle);\n        } catch {\n          return !1;\n        }\n      },\n      isVoid: (element) => ![types.block.name, types.span.name].includes(element._type),\n      findByPath: (path) => {\n        const slatePath = toSlateRange(\n          { focus: { path, offset: 0 }, anchor: { path, offset: 0 } },\n          editor\n        );\n        if (slatePath) {\n          const [block, blockPath] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, slatePath.focus.path.slice(0, 1));\n          if (block && blockPath && typeof block._key == \"string\") {\n            if (path.length === 1 && slatePath.focus.path.length === 1)\n              return [fromSlateValue([block], types.block.name)[0], [{ _key: block._key }]];\n            const ptBlock = fromSlateValue(\n              [block],\n              types.block.name,\n              KEY_TO_VALUE_ELEMENT.get(editor)\n            )[0];\n            if (editor.isTextBlock(ptBlock)) {\n              const ptChild = ptBlock.children[slatePath.focus.path[1]];\n              if (ptChild)\n                return [ptChild, [{ _key: block._key }, \"children\", { _key: ptChild._key }]];\n            }\n          }\n        }\n        return [void 0, void 0];\n      },\n      findDOMNode: (element) => {\n        let node;\n        try {\n          const [item] = Array.from(\n            slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n              at: [],\n              match: (n) => n._key === element._key\n            }) || []\n          )[0] || [void 0];\n          node = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.toDOMNode(editor, item);\n        } catch {\n        }\n        return node;\n      },\n      activeAnnotations: () => {\n        var _a;\n        if (!editor.selection || editor.selection.focus.path.length < 2)\n          return [];\n        try {\n          const activeAnnotations = [], spans = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n            at: editor.selection,\n            match: (node) => slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(node) && node.marks !== void 0 && Array.isArray(node.marks) && node.marks.length > 0\n          });\n          for (const [span, path] of spans) {\n            const [block] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, path, { depth: 1 });\n            editor.isTextBlock(block) && ((_a = block.markDefs) == null || _a.forEach((def) => {\n              slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(span) && span.marks && Array.isArray(span.marks) && span.marks.includes(def._key) && activeAnnotations.push(def);\n            }));\n          }\n          return activeAnnotations;\n        } catch {\n          return [];\n        }\n      },\n      isAnnotationActive: (annotationType) => {\n        if (!editor.selection || editor.selection.focus.path.length < 2)\n          return !1;\n        try {\n          const spans = [\n            ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n              at: editor.selection,\n              match: (node) => slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(node)\n            })\n          ];\n          if (spans.some(\n            ([span]) => {\n              var _a;\n              return !(0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextSpan)(span) || !span.marks || ((_a = span.marks) == null ? void 0 : _a.length) === 0;\n            }\n          ))\n            return !1;\n          const selectionMarkDefs = spans.reduce((accMarkDefs, [, path]) => {\n            const [block] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, path, { depth: 1 });\n            return editor.isTextBlock(block) && block.markDefs ? [...accMarkDefs, ...block.markDefs] : accMarkDefs;\n          }, []);\n          return spans.every(([span]) => {\n            var _a;\n            if (!(0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextSpan)(span)) return !1;\n            const spanMarkDefs = (_a = span.marks) == null ? void 0 : _a.map(\n              (markKey) => {\n                var _a2;\n                return (_a2 = selectionMarkDefs.find((def) => (def == null ? void 0 : def._key) === markKey)) == null ? void 0 : _a2._type;\n              }\n            );\n            return spanMarkDefs == null ? void 0 : spanMarkDefs.includes(annotationType);\n          });\n        } catch {\n          return !1;\n        }\n      },\n      addAnnotation: (type, value) => {\n        const { selection: originalSelection } = editor;\n        let returnValue;\n        if (originalSelection) {\n          const [block] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, originalSelection.focus, { depth: 1 });\n          if (!editor.isTextBlock(block))\n            return;\n          slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(originalSelection) && (editor.pteExpandToWord(), editor.onChange());\n          const [textNode] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, originalSelection.focus, { depth: 2 });\n          editor.selection && (slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(editor, () => {\n            const annotationKey = keyGenerator();\n            slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n              editor,\n              {\n                markDefs: [\n                  ...block.markDefs || [],\n                  { _type: type.name, _key: annotationKey, ...value }\n                ]\n              },\n              { at: originalSelection.focus }\n            ), editor.onChange(), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, {}, { match: slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText, split: !0 }), editor.onChange(), editor.selection && slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(textNode) && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n              editor,\n              {\n                marks: [...textNode.marks || [], annotationKey]\n              },\n              {\n                at: editor.selection,\n                match: (n) => n._type === types.span.name\n              }\n            ), editor.onChange(), editor.selection && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(\n              editor,\n              [{ _type: \"span\", text: \"\", marks: [], _key: keyGenerator() }],\n              {\n                at: slate__WEBPACK_IMPORTED_MODULE_18__.Range.end(editor.selection)\n              }\n            );\n            const newPortableTextEditorSelection = toPortableTextRange(\n              fromSlateValue(editor.children, types.block.name, KEY_TO_VALUE_ELEMENT.get(editor)),\n              editor.selection,\n              types\n            );\n            newPortableTextEditorSelection && (returnValue = {\n              spanPath: newPortableTextEditorSelection.focus.path,\n              markDefPath: [{ _key: block._key }, \"markDefs\", { _key: annotationKey }]\n            });\n          }), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.normalize(editor), editor.onChange());\n        }\n        return returnValue;\n      },\n      delete: (selection, options) => {\n        if (selection) {\n          const range = toSlateRange(selection, editor);\n          if (!(range && range.anchor.path.length > 0 && range.focus.path.length > 0))\n            throw new Error(\"Invalid range\");\n          if (range) {\n            if (!(options != null && options.mode) || (options == null ? void 0 : options.mode) === \"selected\") {\n              debug$i(\"Deleting content in selection\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.delete(editor, {\n                at: range,\n                hanging: !0,\n                voids: !0\n              }), editor.onChange();\n              return;\n            }\n            (options == null ? void 0 : options.mode) === \"blocks\" && (debug$i(\"Deleting blocks touched by selection\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, {\n              at: range,\n              voids: !0,\n              match: (node) => editor.isTextBlock(node) || !editor.isTextBlock(node) && slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(node)\n            })), (options == null ? void 0 : options.mode) === \"children\" && (debug$i(\"Deleting children touched by selection\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, {\n              at: range,\n              voids: !0,\n              match: (node) => node._type === types.span.name || // Text children\n              !editor.isTextBlock(node) && slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(node)\n            })), editor.children.length === 0 && (editor.children = [editor.pteCreateEmptyBlock()]), editor.onChange();\n          }\n        }\n      },\n      removeAnnotation: (type) => {\n        let { selection } = editor;\n        if (debug$i(\"Removing annotation\", type), selection) {\n          if (slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(selection)) {\n            const [node, nodePath] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, selection, { depth: 2 });\n            slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(node) && node.marks && typeof node.text == \"string\" && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, nodePath), selection = editor.selection);\n          }\n          slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(editor, () => {\n            if (selection && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isExpanded(selection)) {\n              if (selection = editor.selection, !selection)\n                return;\n              [\n                ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n                  at: selection,\n                  match: (node) => editor.isTextBlock(node) && Array.isArray(node.markDefs) && node.markDefs.some((def) => def._type === type.name)\n                })\n              ].forEach(([block]) => {\n                editor.isTextBlock(block) && Array.isArray(block.markDefs) && block.markDefs.filter((def) => def._type === type.name).forEach((def) => {\n                  slate__WEBPACK_IMPORTED_MODULE_18__.Editor.removeMark(editor, def._key);\n                });\n              });\n            }\n          }), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.normalize(editor), editor.onChange();\n        }\n      },\n      getSelection: () => {\n        let ptRange = null;\n        if (editor.selection) {\n          const existing = SLATE_TO_PORTABLE_TEXT_RANGE.get(editor.selection);\n          if (existing)\n            return existing;\n          ptRange = toPortableTextRange(\n            fromSlateValue(editor.children, types.block.name, KEY_TO_VALUE_ELEMENT.get(editor)),\n            editor.selection,\n            types\n          ), SLATE_TO_PORTABLE_TEXT_RANGE.set(editor.selection, ptRange);\n        }\n        return ptRange;\n      },\n      getValue: () => fromSlateValue(editor.children, types.block.name, KEY_TO_VALUE_ELEMENT.get(editor)),\n      isCollapsedSelection: () => !!editor.selection && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(editor.selection),\n      isExpandedSelection: () => !!editor.selection && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isExpanded(editor.selection),\n      insertBreak: () => {\n        editor.insertBreak(), editor.onChange();\n      },\n      getFragment: () => fromSlateValue(editor.getFragment(), types.block.name),\n      isSelectionsOverlapping: (selectionA, selectionB) => {\n        const rangeA = toSlateRange(selectionA, editor), rangeB = toSlateRange(selectionB, editor);\n        return slate__WEBPACK_IMPORTED_MODULE_18__.Range.isRange(rangeA) && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isRange(rangeB) && slate__WEBPACK_IMPORTED_MODULE_18__.Range.includes(rangeA, rangeB);\n      }\n    }), editor;\n  };\n}\nfunction createWithInsertBreak(types) {\n  return function(editor) {\n    const { insertBreak } = editor;\n    return editor.insertBreak = () => {\n      if (editor.selection) {\n        const focusBlockPath = editor.selection.focus.path.slice(0, 1), focusBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, focusBlockPath);\n        if (editor.isTextBlock(focusBlock)) {\n          const [, end] = slate__WEBPACK_IMPORTED_MODULE_18__.Range.edges(editor.selection), isEndAtStartOfNode = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isStart(editor, end, end.path), isEmptyTextBlock = focusBlock && isEqualToEmptyEditor([focusBlock], types);\n          if (isEndAtStartOfNode && !isEmptyTextBlock) {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Editor.insertNode(editor, editor.pteCreateEmptyBlock());\n            const [nextBlockPath] = slate__WEBPACK_IMPORTED_MODULE_18__.Path.next(focusBlockPath);\n            slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, {\n              anchor: { path: [nextBlockPath, 0], offset: 0 },\n              focus: { path: [nextBlockPath, 0], offset: 0 }\n            }), editor.onChange();\n            return;\n          }\n        }\n      }\n      insertBreak();\n    }, editor;\n  };\n}\nfunction createWithMaxBlocks(maxBlocks) {\n  return function(editor) {\n    const { apply: apply2 } = editor;\n    return editor.apply = (operation) => {\n      const rows = maxBlocks;\n      rows > 0 && editor.children.length >= rows && (operation.type === \"insert_node\" || operation.type === \"split_node\") && operation.path.length === 1 || apply2(operation);\n    }, editor;\n  };\n}\nconst PRESERVE_KEYS = /* @__PURE__ */ new WeakMap();\nfunction withPreserveKeys(editor, fn) {\n  const prev = isPreservingKeys(editor);\n  PRESERVE_KEYS.set(editor, !0), fn(), PRESERVE_KEYS.set(editor, prev);\n}\nfunction isPreservingKeys(editor) {\n  return PRESERVE_KEYS.get(editor);\n}\nfunction createWithObjectKeys(schemaTypes, keyGenerator) {\n  return function(editor) {\n    PRESERVE_KEYS.set(editor, !1);\n    const { apply: apply2, normalizeNode } = editor;\n    return editor.apply = (operation) => {\n      if (operation.type === \"split_node\") {\n        const withNewKey = !isPreservingKeys(editor) || !(\"_key\" in operation.properties);\n        operation.properties = {\n          ...operation.properties,\n          ...withNewKey ? { _key: keyGenerator() } : {}\n        };\n      }\n      if (operation.type === \"insert_node\") {\n        const withNewKey = !isPreservingKeys(editor) || !(\"_key\" in operation.node);\n        slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isEditor(operation.node) || (operation.node = {\n          ...operation.node,\n          ...withNewKey ? { _key: keyGenerator() } : {}\n        });\n      }\n      apply2(operation);\n    }, editor.normalizeNode = (entry) => {\n      const [node, path] = entry;\n      if (slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(node) && node._type === schemaTypes.block.name) {\n        node._key || slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { _key: keyGenerator() }, { at: path });\n        for (const [child, childPath] of slate__WEBPACK_IMPORTED_MODULE_18__.Node.children(editor, path))\n          if (!child._key) {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { _key: keyGenerator() }, { at: childPath });\n            return;\n          }\n      }\n      normalizeNode(entry);\n    }, editor;\n  };\n}\nconst BEFORE = \"before\", AFTER = \"after\";\nfunction insert(array, position, index, ...args) {\n  if (position !== BEFORE && position !== AFTER)\n    throw new Error(`Invalid position \"${position}\", must be either ${BEFORE} or ${AFTER}`);\n  const items = flatten(...args);\n  if (array.length === 0)\n    return items;\n  const len = array.length, idx = Math.abs((len + index) % len) % len, normalizedIdx = position === \"after\" ? idx + 1 : idx, copy = array.slice();\n  return copy.splice(normalizedIdx, 0, ...flatten(items)), copy;\n}\nfunction flatten(...values) {\n  return values.reduce((prev, item) => prev.concat(item), []);\n}\nconst hasOwn = Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty);\nfunction move(arr, from, to) {\n  const nextValue = arr.slice(), val = nextValue[from];\n  return nextValue.splice(from, 1), nextValue.splice(to, 0, val), nextValue;\n}\nfunction findTargetIndex(array, pathSegment) {\n  if (typeof pathSegment == \"number\")\n    return pathSegment;\n  const index = lodash_findIndex_js__WEBPACK_IMPORTED_MODULE_11__(array, pathSegment);\n  return index === -1 ? !1 : index;\n}\nfunction apply$3(value, patch) {\n  const nextValue = value.slice();\n  if (patch.path.length === 0) {\n    if (patch.type === \"setIfMissing\") {\n      if (!Array.isArray(patch.value))\n        throw new Error(\"Cannot set value of an array to a non-array\");\n      return value === void 0 ? patch.value : value;\n    } else if (patch.type === \"set\") {\n      if (!Array.isArray(patch.value))\n        throw new Error(\"Cannot set value of an array to a non-array\");\n      return patch.value;\n    } else {\n      if (patch.type === \"unset\")\n        return;\n      if (patch.type === \"move\") {\n        if (!patch.value || !hasOwn(patch.value, \"from\") || !hasOwn(patch.value, \"to\"))\n          throw new Error(\n            `Invalid value of 'move' patch. Expected a value with \"from\" and \"to\" indexes, instead got: ${JSON.stringify(\n              patch.value\n            )}`\n          );\n        return move(nextValue, patch.value.from, patch.value.to);\n      }\n    }\n    throw new Error(`Invalid array operation: ${patch.type}`);\n  }\n  const [head, ...tail] = patch.path, index = findTargetIndex(value, head);\n  if (index === !1)\n    return nextValue;\n  if (tail.length === 0) {\n    if (patch.type === \"insert\") {\n      const { position, items } = patch;\n      return insert(value, position, index, items);\n    } else if (patch.type === \"unset\") {\n      if (typeof index != \"number\")\n        throw new Error(`Expected array index to be a number, instead got \"${index}\"`);\n      return nextValue.splice(index, 1), nextValue;\n    }\n  }\n  return nextValue[index] = _apply(nextValue[index], {\n    ...patch,\n    path: tail\n  }), nextValue;\n}\nfunction apply$2(value, patch) {\n  const nextValue = lodash_clone_js__WEBPACK_IMPORTED_MODULE_12__(value);\n  if (patch.path.length === 0) {\n    if (patch.type === \"set\") {\n      if (!lodash_isObject_js__WEBPACK_IMPORTED_MODULE_9__(patch.value))\n        throw new Error(\"Cannot set value of an object to a non-object\");\n      return patch.value;\n    } else {\n      if (patch.type === \"unset\")\n        return;\n      if (patch.type === \"setIfMissing\")\n        return value === void 0 ? patch.value : value;\n    }\n    throw new Error(`Invalid object operation: ${patch.type}`);\n  }\n  const [head, ...tail] = patch.path;\n  if (typeof head != \"string\")\n    throw new Error(`Expected field name to be a string, instad got: ${head}`);\n  return tail.length === 0 && patch.type === \"unset\" ? lodash_omit_js__WEBPACK_IMPORTED_MODULE_13__(nextValue, head) : (nextValue[head] = _apply(nextValue[head], {\n    ...patch,\n    path: tail\n  }), nextValue);\n}\nconst OPERATIONS$1 = {\n  replace(_currentValue, nextValue) {\n    return nextValue;\n  },\n  set(_currentValue, nextValue) {\n    return nextValue;\n  },\n  setIfMissing(currentValue, nextValue) {\n    return currentValue === void 0 ? nextValue : currentValue;\n  },\n  unset(_currentValue, _nextValue) {\n  },\n  inc(currentValue, nextValue) {\n    return currentValue + nextValue;\n  },\n  dec(currentValue, nextValue) {\n    return currentValue - nextValue;\n  }\n}, SUPPORTED_PATCH_TYPES$1 = Object.keys(OPERATIONS$1);\nfunction apply$1(value, patch) {\n  if (!SUPPORTED_PATCH_TYPES$1.includes(patch.type))\n    throw new Error(\n      `Received patch of unsupported type: \"${JSON.stringify(\n        patch.type\n      )}\" for primitives. This is most likely a bug.`\n    );\n  if (patch.path.length > 0)\n    throw new Error(\n      `Cannot apply deep operations on primitive values. Received patch with type \"${patch.type}\" and path \"${patch.path.map((path) => JSON.stringify(path)).join(\".\")} that targeted the value \"${JSON.stringify(value)}\"`\n    );\n  return OPERATIONS$1[patch.type](value, patch.value);\n}\nconst OPERATIONS = {\n  replace(currentValue, nextValue) {\n    return nextValue;\n  },\n  set(currentValue, nextValue) {\n    return nextValue;\n  },\n  setIfMissing(currentValue, nextValue) {\n    return currentValue === void 0 ? nextValue : currentValue;\n  },\n  unset(currentValue, nextValue) {\n  },\n  diffMatchPatch(currentValue, nextValue) {\n    const [result] = apply$4(parse(nextValue), currentValue, {\n      allowExceedingIndices: !0\n    });\n    return result;\n  }\n}, SUPPORTED_PATCH_TYPES = Object.keys(OPERATIONS);\nfunction apply(value, patch) {\n  if (!SUPPORTED_PATCH_TYPES.includes(patch.type))\n    throw new Error(\n      `Received patch of unsupported type: \"${JSON.stringify(\n        patch.type\n      )}\" for string. This is most likely a bug.`\n    );\n  if (patch.path.length > 0)\n    throw new Error(\n      `Cannot apply deep operations on string values. Received patch with type \"${patch.type}\" and path \"${patch.path.join(\".\")} that targeted the value \"${JSON.stringify(value)}\"`\n    );\n  const func = OPERATIONS[patch.type];\n  if (func)\n    return func(value, patch.value);\n  throw new Error(\"Unknown patch type\");\n}\nfunction applyAll(value, patches) {\n  return patches.reduce(_apply, value);\n}\nfunction applyPatch(value, patch) {\n  return Array.isArray(value) ? apply$3(value, patch) : lodash_isString_js__WEBPACK_IMPORTED_MODULE_10__(value) ? apply(value, patch) : lodash_isObject_js__WEBPACK_IMPORTED_MODULE_9__(value) ? apply$2(value, patch) : apply$1(value, patch);\n}\nfunction _apply(value, patch) {\n  return applyPatch(value, patch);\n}\nconst debug$h = debugWithName(\"applyPatches\"), debugVerbose$3 = debug$h.enabled && !0;\nfunction createApplyPatch(schemaTypes) {\n  let previousPatch;\n  return function(editor, patch) {\n    let changed = !1;\n    debugVerbose$3 && (debug$h(`\n\nNEW PATCH =============================================================`), debug$h(JSON.stringify(patch, null, 2)));\n    try {\n      switch (patch.type) {\n        case \"insert\":\n          changed = insertPatch(editor, patch, schemaTypes);\n          break;\n        case \"unset\":\n          changed = unsetPatch(editor, patch, previousPatch);\n          break;\n        case \"set\":\n          changed = setPatch(editor, patch);\n          break;\n        case \"diffMatchPatch\":\n          changed = diffMatchPatch(editor, patch);\n          break;\n        default:\n          debug$h(\"Unhandled patch\", patch.type);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n    return previousPatch = patch, changed;\n  };\n}\nfunction diffMatchPatch(editor, patch) {\n  const { block, child, childPath } = findBlockAndChildFromPath(editor, patch.path);\n  if (!block)\n    return debug$h(\"Block not found\"), !1;\n  if (!child || !childPath)\n    return debug$h(\"Child not found\"), !1;\n  if (!(block && editor.isTextBlock(block) && patch.path.length === 4 && patch.path[1] === \"children\" && patch.path[3] === \"text\") || !slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(child))\n    return !1;\n  const patches = parse(patch.value), [newValue] = apply$4(patches, child.text, { allowExceedingIndices: !0 }), diff$1 = cleanupEfficiency(diff(child.text, newValue), 5);\n  debugState(editor, \"before\");\n  let offset = 0;\n  for (const [op, text] of diff$1)\n    op === DIFF_INSERT ? (editor.apply({ type: \"insert_text\", path: childPath, offset, text }), offset += text.length) : op === DIFF_DELETE ? editor.apply({ type: \"remove_text\", path: childPath, offset, text }) : op === DIFF_EQUAL && (offset += text.length);\n  return debugState(editor, \"after\"), !0;\n}\nfunction insertPatch(editor, patch, schemaTypes) {\n  const {\n    block: targetBlock,\n    child: targetChild,\n    blockPath: targetBlockPath,\n    childPath: targetChildPath\n  } = findBlockAndChildFromPath(editor, patch.path);\n  if (!targetBlock || !targetBlockPath)\n    return debug$h(\"Block not found\"), !1;\n  if (patch.path.length > 1 && patch.path[1] !== \"children\")\n    return debug$h(\"Ignoring patch targeting void value\"), !1;\n  if (patch.path.length === 1) {\n    const { items: items2, position: position2 } = patch, blocksToInsert = toSlateValue(\n      items2,\n      { schemaTypes },\n      KEY_TO_SLATE_ELEMENT.get(editor)\n    ), targetBlockIndex = targetBlockPath[0], normalizedIdx2 = position2 === \"after\" ? targetBlockIndex + 1 : targetBlockIndex;\n    return debug$h(`Inserting blocks at path [${normalizedIdx2}]`), debugState(editor, \"before\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(editor, blocksToInsert, { at: [normalizedIdx2] }), debugState(editor, \"after\"), !0;\n  }\n  const { items, position } = patch;\n  if (!targetChild || !targetChildPath)\n    return debug$h(\"Child not found\"), !1;\n  const childrenToInsert = targetBlock && toSlateValue(\n    [{ ...targetBlock, children: items }],\n    { schemaTypes },\n    KEY_TO_SLATE_ELEMENT.get(editor)\n  ), targetChildIndex = targetChildPath[1], normalizedIdx = position === \"after\" ? targetChildIndex + 1 : targetChildIndex, childInsertPath = [targetChildPath[0], normalizedIdx];\n  return debug$h(`Inserting children at path ${childInsertPath}`), debugState(editor, \"before\"), childrenToInsert && slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(childrenToInsert[0]) && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(editor, childrenToInsert[0].children, { at: childInsertPath }), debugState(editor, \"after\"), !0;\n}\nfunction setPatch(editor, patch) {\n  let value = patch.value;\n  typeof patch.path[3] == \"string\" && (value = {}, value[patch.path[3]] = patch.value);\n  const { block, blockPath, child, childPath } = findBlockAndChildFromPath(editor, patch.path);\n  if (!block)\n    return debug$h(\"Block not found\"), !1;\n  const isTextBlock = editor.isTextBlock(block);\n  if (isTextBlock && patch.path.length > 1 && patch.path[1] !== \"children\")\n    return debug$h(\"Ignoring setting void value\"), !1;\n  if (debugState(editor, \"before\"), isTextBlock && child && childPath) {\n    if (slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(value) && slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(child)) {\n      const newText = child.text;\n      value.text !== newText && (debug$h(\"Setting text property\"), editor.apply({\n        type: \"remove_text\",\n        path: childPath,\n        offset: 0,\n        text: newText\n      }), editor.apply({\n        type: \"insert_text\",\n        path: childPath,\n        offset: 0,\n        text: value.text\n      }), editor.onChange());\n    } else\n      debug$h(\"Setting non-text property\"), editor.apply({\n        type: \"set_node\",\n        path: childPath,\n        properties: {},\n        newProperties: value\n      });\n    return !0;\n  } else if (slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(block) && patch.path.length === 1 && blockPath) {\n    debug$h(\"Setting block property\");\n    const { children, ...nextRest } = value, { children: prevChildren, ...prevRest } = block || { children: void 0 };\n    editor.apply({\n      type: \"set_node\",\n      path: blockPath,\n      properties: { ...prevRest },\n      newProperties: nextRest\n    }), debug$h(\"Setting children\"), block.children.forEach((c, cIndex) => {\n      editor.apply({\n        type: \"remove_node\",\n        path: blockPath.concat(block.children.length - 1 - cIndex),\n        node: c\n      });\n    }), Array.isArray(children) && children.forEach((c, cIndex) => {\n      editor.apply({\n        type: \"insert_node\",\n        path: blockPath.concat(cIndex),\n        node: c\n      });\n    });\n  } else if (block && \"value\" in block) {\n    const newVal = applyAll([block.value], [patch])[0];\n    return slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { ...block, value: newVal }, { at: blockPath }), !0;\n  }\n  return debugState(editor, \"after\"), !0;\n}\nfunction unsetPatch(editor, patch, previousPatch) {\n  if (patch.path.length === 0) {\n    debug$h(\"Removing everything\"), debugState(editor, \"before\");\n    const previousSelection = editor.selection;\n    return slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.deselect(editor), editor.children.forEach((c, i) => {\n      slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, { at: [i] });\n    }), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(editor, editor.pteCreateEmptyBlock()), previousSelection && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, {\n      anchor: { path: [0, 0], offset: 0 },\n      focus: { path: [0, 0], offset: 0 }\n    }), editor.onChange(), debugState(editor, \"after\"), !0;\n  }\n  const { block, blockPath, child, childPath } = findBlockAndChildFromPath(editor, patch.path);\n  if (patch.path.length === 1) {\n    if (!block || !blockPath)\n      return debug$h(\"Block not found\"), !1;\n    const blockIndex = blockPath[0];\n    return debug$h(`Removing block at path [${blockIndex}]`), debugState(editor, \"before\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, { at: [blockIndex] }), debugState(editor, \"after\"), !0;\n  }\n  return editor.isTextBlock(block) && patch.path[1] === \"children\" && patch.path.length === 3 ? !child || !childPath ? (debug$h(\"Child not found\"), !1) : (debug$h(`Unsetting child at path ${JSON.stringify(childPath)}`), debugState(editor, \"before\"), debugVerbose$3 && debug$h(`Removing child at path ${JSON.stringify(childPath)}`), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, { at: childPath }), debugState(editor, \"after\"), !0) : !1;\n}\nfunction isKeyedSegment(segment) {\n  return typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction debugState(editor, stateName) {\n  debugVerbose$3 && (debug$h(`Children ${stateName}:`, JSON.stringify(editor.children, null, 2)), debug$h(`Selection ${stateName}: `, JSON.stringify(editor.selection, null, 2)));\n}\nfunction findBlockFromPath(editor, path) {\n  let blockIndex = -1;\n  const block = editor.children.find((node, index) => {\n    const isMatch = isKeyedSegment(path[0]) ? node._key === path[0]._key : index === path[0];\n    return isMatch && (blockIndex = index), isMatch;\n  });\n  return block ? { block, path: [blockIndex] } : {};\n}\nfunction findBlockAndChildFromPath(editor, path) {\n  const { block, path: blockPath } = findBlockFromPath(editor, path);\n  if (!(slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(block) && path[1] === \"children\"))\n    return { block, blockPath, child: void 0, childPath: void 0 };\n  let childIndex = -1;\n  const child = block.children.find((node, index) => {\n    const isMatch = isKeyedSegment(path[2]) ? node._key === path[2]._key : index === path[2];\n    return isMatch && (childIndex = index), isMatch;\n  });\n  return child ? { block, child, blockPath, childPath: blockPath == null ? void 0 : blockPath.concat(childIndex) } : { block, blockPath, child: void 0, childPath: void 0 };\n}\nfunction withRemoteChanges(editor, fn) {\n  const prev = isChangingRemotely(editor) || !1;\n  IS_PROCESSING_REMOTE_CHANGES.set(editor, !0), fn(), IS_PROCESSING_REMOTE_CHANGES.set(editor, prev);\n}\nfunction isChangingRemotely(editor) {\n  return IS_PROCESSING_REMOTE_CHANGES.get(editor);\n}\nfunction isChangingLocally(editor) {\n  return IS_PROCESSING_LOCAL_CHANGES.get(editor);\n}\nconst PATCHING = /* @__PURE__ */ new WeakMap();\nfunction withoutPatching(editor, fn) {\n  const prev = isPatching(editor);\n  PATCHING.set(editor, !1), fn(), PATCHING.set(editor, prev);\n}\nfunction isPatching(editor) {\n  return PATCHING.get(editor);\n}\nconst debug$g = debugWithName(\"plugin:withUndoRedo\"), debugVerbose$2 = debug$g.enabled && !1, SAVING = /* @__PURE__ */ new WeakMap(), REMOTE_PATCHES = /* @__PURE__ */ new WeakMap(), UNDO_STEP_LIMIT = 1e3, isSaving = (editor) => {\n  const state = SAVING.get(editor);\n  return state === void 0 ? !0 : state;\n}, getRemotePatches = (editor) => (REMOTE_PATCHES.get(editor) || REMOTE_PATCHES.set(editor, []), REMOTE_PATCHES.get(editor) || []);\nfunction createWithUndoRedo(options) {\n  const { readOnly, patches$, blockSchemaType } = options;\n  return (editor) => {\n    let previousSnapshot = fromSlateValue(\n      editor.children,\n      blockSchemaType.name\n    );\n    const remotePatches = getRemotePatches(editor);\n    patches$ && editor.subscriptions.push(() => {\n      debug$g(\"Subscribing to patches\");\n      const sub = patches$.subscribe(({ patches, snapshot }) => {\n        let reset = !1;\n        patches.forEach((patch) => {\n          if (!reset && patch.origin !== \"local\" && remotePatches) {\n            if (patch.type === \"unset\" && patch.path.length === 0) {\n              debug$g(\"Someone else cleared the content, resetting undo/redo history\"), editor.history = { undos: [], redos: [] }, remotePatches.splice(0, remotePatches.length), SAVING.set(editor, !0), reset = !0;\n              return;\n            }\n            remotePatches.push({ patch, time: /* @__PURE__ */ new Date(), snapshot, previousSnapshot });\n          }\n        }), previousSnapshot = snapshot;\n      });\n      return () => {\n        debug$g(\"Unsubscribing to patches\"), sub.unsubscribe();\n      };\n    }), editor.history = { undos: [], redos: [] };\n    const { apply: apply2 } = editor;\n    return editor.apply = (op) => {\n      if (readOnly) {\n        apply2(op);\n        return;\n      }\n      const { operations, history } = editor, { undos } = history, step = undos[undos.length - 1], lastOp = step && step.operations && step.operations[step.operations.length - 1], overwrite = shouldOverwrite(op, lastOp), save = isSaving(editor);\n      let merge = !0;\n      if (save) {\n        if (step ? operations.length === 0 && (merge = shouldMerge(op, lastOp) || overwrite) : merge = !1, step && merge)\n          step.operations.push(op);\n        else {\n          const newStep = {\n            operations: [...editor.selection === null ? [] : [createSelectOperation(editor)], op],\n            timestamp: /* @__PURE__ */ new Date()\n          };\n          undos.push(newStep), debug$g(\"Created new undo step\", step);\n        }\n        for (; undos.length > UNDO_STEP_LIMIT; )\n          undos.shift();\n        shouldClear(op) && (history.redos = []);\n      }\n      apply2(op);\n    }, editor.undo = () => {\n      if (readOnly)\n        return;\n      const { undos } = editor.history;\n      if (undos.length > 0) {\n        const step = undos[undos.length - 1];\n        if (debug$g(\"Undoing\", step), step.operations.length > 0) {\n          const otherPatches = remotePatches.filter((item) => item.time >= step.timestamp);\n          let transformedOperations = step.operations;\n          otherPatches.forEach((item) => {\n            transformedOperations = lodash_flatten_js__WEBPACK_IMPORTED_MODULE_14__(\n              transformedOperations.map(\n                (op) => transformOperation(editor, item.patch, op, item.snapshot, item.previousSnapshot)\n              )\n            );\n          });\n          try {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(editor, () => {\n              withPreserveKeys(editor, () => {\n                withoutSaving(editor, () => {\n                  transformedOperations.map(slate__WEBPACK_IMPORTED_MODULE_18__.Operation.inverse).reverse().forEach((op) => {\n                    editor.apply(op);\n                  });\n                });\n              });\n            }), editor.normalize(), editor.onChange();\n          } catch (err) {\n            debug$g(\"Could not perform undo step\", err), remotePatches.splice(0, remotePatches.length), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.deselect(editor), editor.history = { undos: [], redos: [] }, SAVING.set(editor, !0), editor.onChange();\n            return;\n          }\n          editor.history.redos.push(step), editor.history.undos.pop();\n        }\n      }\n    }, editor.redo = () => {\n      if (readOnly)\n        return;\n      const { redos } = editor.history;\n      if (redos.length > 0) {\n        const step = redos[redos.length - 1];\n        if (debug$g(\"Redoing\", step), step.operations.length > 0) {\n          const otherPatches = remotePatches.filter((item) => item.time >= step.timestamp);\n          let transformedOperations = step.operations;\n          otherPatches.forEach((item) => {\n            transformedOperations = lodash_flatten_js__WEBPACK_IMPORTED_MODULE_14__(\n              transformedOperations.map(\n                (op) => transformOperation(editor, item.patch, op, item.snapshot, item.previousSnapshot)\n              )\n            );\n          });\n          try {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(editor, () => {\n              withPreserveKeys(editor, () => {\n                withoutSaving(editor, () => {\n                  transformedOperations.forEach((op) => {\n                    editor.apply(op);\n                  });\n                });\n              });\n            }), editor.normalize(), editor.onChange();\n          } catch (err) {\n            debug$g(\"Could not perform redo step\", err), remotePatches.splice(0, remotePatches.length), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.deselect(editor), editor.history = { undos: [], redos: [] }, SAVING.set(editor, !0), editor.onChange();\n            return;\n          }\n          editor.history.undos.push(step), editor.history.redos.pop();\n        }\n      }\n    }, editor;\n  };\n}\nfunction transformOperation(editor, patch, operation, snapshot, previousSnapshot) {\n  debugVerbose$2 && (debug$g(`Adjusting '${operation.type}' operation paths for '${patch.type}' patch`), debug$g(`Operation ${JSON.stringify(operation)}`), debug$g(`Patch ${JSON.stringify(patch)}`));\n  const transformedOperation = { ...operation };\n  if (patch.type === \"insert\" && patch.path.length === 1) {\n    const insertBlockIndex = (snapshot || []).findIndex(\n      (blk) => lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__({ _key: blk._key }, patch.path[0])\n    );\n    return debug$g(\n      `Adjusting block path (+${patch.items.length}) for '${transformedOperation.type}' operation and patch '${patch.type}'`\n    ), [adjustBlockPath(transformedOperation, patch.items.length, insertBlockIndex)];\n  }\n  if (patch.type === \"unset\" && patch.path.length === 1) {\n    const unsetBlockIndex = (previousSnapshot || []).findIndex(\n      (blk) => lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__({ _key: blk._key }, patch.path[0])\n    );\n    return \"path\" in transformedOperation && Array.isArray(transformedOperation.path) && transformedOperation.path[0] === unsetBlockIndex ? (debug$g(\"Skipping transformation that targeted removed block\"), []) : (debugVerbose$2 && (debug$g(`Selection ${JSON.stringify(editor.selection)}`), debug$g(\n      `Adjusting block path (-1) for '${transformedOperation.type}' operation and patch '${patch.type}'`\n    )), [adjustBlockPath(transformedOperation, -1, unsetBlockIndex)]);\n  }\n  if (patch.type === \"unset\" && patch.path.length === 0)\n    return debug$g(`Adjusting selection for unset everything patch and ${operation.type} operation`), [];\n  if (patch.type === \"diffMatchPatch\") {\n    const operationTargetBlock = findOperationTargetBlock(editor, transformedOperation);\n    return !operationTargetBlock || !lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__({ _key: operationTargetBlock._key }, patch.path[0]) ? [transformedOperation] : (parse(patch.value).forEach((diffPatch) => {\n      var _a, _b, _c, _d;\n      let adjustOffsetBy = 0, changedOffset = diffPatch.utf8Start1;\n      const { diffs } = diffPatch;\n      if (diffs.forEach((diff2, index) => {\n        const [diffType, text] = diff2;\n        diffType === DIFF_INSERT ? (adjustOffsetBy += text.length, changedOffset += text.length) : diffType === DIFF_DELETE ? (adjustOffsetBy -= text.length, changedOffset -= text.length) : diffType === DIFF_EQUAL && (diffs.slice(index).every(([dType]) => dType === DIFF_EQUAL) || (changedOffset += text.length));\n      }), transformedOperation.type === \"insert_text\" && changedOffset < transformedOperation.offset && (transformedOperation.offset += adjustOffsetBy), transformedOperation.type === \"remove_text\" && changedOffset <= transformedOperation.offset - transformedOperation.text.length && (transformedOperation.offset += adjustOffsetBy), transformedOperation.type === \"set_selection\") {\n        const currentFocus = (_a = transformedOperation.properties) != null && _a.focus ? { ...transformedOperation.properties.focus } : void 0, currentAnchor = (_b = transformedOperation == null ? void 0 : transformedOperation.properties) != null && _b.anchor ? { ...transformedOperation.properties.anchor } : void 0, newFocus = (_c = transformedOperation == null ? void 0 : transformedOperation.newProperties) != null && _c.focus ? { ...transformedOperation.newProperties.focus } : void 0, newAnchor = (_d = transformedOperation == null ? void 0 : transformedOperation.newProperties) != null && _d.anchor ? { ...transformedOperation.newProperties.anchor } : void 0;\n        (currentFocus && currentAnchor || newFocus && newAnchor) && ([currentFocus, currentAnchor, newFocus, newAnchor].forEach((point) => {\n          point && changedOffset < point.offset && (point.offset += adjustOffsetBy);\n        }), currentFocus && currentAnchor && (transformedOperation.properties = {\n          focus: currentFocus,\n          anchor: currentAnchor\n        }), newFocus && newAnchor && (transformedOperation.newProperties = {\n          focus: newFocus,\n          anchor: newAnchor\n        }));\n      }\n    }), [transformedOperation]);\n  }\n  return [transformedOperation];\n}\nfunction adjustBlockPath(operation, level, blockIndex) {\n  var _a, _b, _c, _d;\n  const transformedOperation = { ...operation };\n  if (blockIndex >= 0 && transformedOperation.type !== \"set_selection\" && Array.isArray(transformedOperation.path) && transformedOperation.path[0] >= blockIndex + level && transformedOperation.path[0] + level > -1) {\n    const newPath = [transformedOperation.path[0] + level, ...transformedOperation.path.slice(1)];\n    transformedOperation.path = newPath;\n  }\n  if (transformedOperation.type === \"set_selection\") {\n    const currentFocus = (_a = transformedOperation.properties) != null && _a.focus ? { ...transformedOperation.properties.focus } : void 0, currentAnchor = (_b = transformedOperation == null ? void 0 : transformedOperation.properties) != null && _b.anchor ? { ...transformedOperation.properties.anchor } : void 0, newFocus = (_c = transformedOperation == null ? void 0 : transformedOperation.newProperties) != null && _c.focus ? { ...transformedOperation.newProperties.focus } : void 0, newAnchor = (_d = transformedOperation == null ? void 0 : transformedOperation.newProperties) != null && _d.anchor ? { ...transformedOperation.newProperties.anchor } : void 0;\n    (currentFocus && currentAnchor || newFocus && newAnchor) && ([currentFocus, currentAnchor, newFocus, newAnchor].forEach((point) => {\n      point && point.path[0] >= blockIndex + level && point.path[0] + level > -1 && (point.path = [point.path[0] + level, ...point.path.slice(1)]);\n    }), currentFocus && currentAnchor && (transformedOperation.properties = {\n      focus: currentFocus,\n      anchor: currentAnchor\n    }), newFocus && newAnchor && (transformedOperation.newProperties = {\n      focus: newFocus,\n      anchor: newAnchor\n    }));\n  }\n  return transformedOperation;\n}\nconst shouldMerge = (op, prev) => !!(op.type === \"set_selection\" || prev && op.type === \"insert_text\" && prev.type === \"insert_text\" && op.offset === prev.offset + prev.text.length && slate__WEBPACK_IMPORTED_MODULE_18__.Path.equals(op.path, prev.path) && op.text !== \" \" || prev && op.type === \"remove_text\" && prev.type === \"remove_text\" && op.offset + op.text.length === prev.offset && slate__WEBPACK_IMPORTED_MODULE_18__.Path.equals(op.path, prev.path)), shouldOverwrite = (op, prev) => !!(prev && op.type === \"set_selection\" && prev.type === \"set_selection\"), shouldClear = (op) => op.type !== \"set_selection\";\nfunction withoutSaving(editor, fn) {\n  const prev = isSaving(editor);\n  SAVING.set(editor, !1), fn(), SAVING.set(editor, prev);\n}\nfunction createSelectOperation(editor) {\n  return {\n    type: \"set_selection\",\n    properties: { ...editor.selection },\n    newProperties: { ...editor.selection }\n  };\n}\nfunction findOperationTargetBlock(editor, operation) {\n  let block;\n  return operation.type === \"set_selection\" && editor.selection ? block = editor.children[editor.selection.focus.path[0]] : \"path\" in operation && (block = editor.children[operation.path[0]]), block;\n}\nconst debug$f = debugWithName(\"plugin:withPatches\");\nfunction createWithPatches({\n  change$,\n  patches$,\n  patchFunctions,\n  readOnly,\n  schemaTypes\n}) {\n  let previousChildren;\n  const applyPatch2 = createApplyPatch(schemaTypes);\n  return function(editor) {\n    IS_PROCESSING_REMOTE_CHANGES.set(editor, !1), PATCHING.set(editor, !0), previousChildren = [...editor.children];\n    const { apply: apply2 } = editor;\n    let bufferedPatches = [];\n    const handleBufferedRemotePatches = () => {\n      if (bufferedPatches.length === 0)\n        return;\n      const patches = bufferedPatches;\n      bufferedPatches = [];\n      let changed = !1;\n      withRemoteChanges(editor, () => {\n        slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(editor, () => {\n          withoutPatching(editor, () => {\n            withoutSaving(editor, () => {\n              withPreserveKeys(editor, () => {\n                patches.forEach((patch) => {\n                  debug$f.enabled && debug$f(`Handling remote patch ${JSON.stringify(patch)}`), changed = applyPatch2(editor, patch);\n                });\n              });\n            });\n          });\n        }), changed && (editor.normalize(), editor.onChange());\n      });\n    }, handlePatches = ({ patches }) => {\n      const remotePatches = patches.filter((p) => p.origin !== \"local\");\n      remotePatches.length !== 0 && (bufferedPatches = bufferedPatches.concat(remotePatches), handleBufferedRemotePatches());\n    };\n    return patches$ && editor.subscriptions.push(() => {\n      debug$f(\"Subscribing to patches$\");\n      const sub = patches$.subscribe(handlePatches);\n      return () => {\n        debug$f(\"Unsubscribing to patches$\"), sub.unsubscribe();\n      };\n    }), editor.apply = (operation) => {\n      if (readOnly)\n        return apply2(operation), editor;\n      let patches = [];\n      previousChildren = editor.children;\n      const editorWasEmpty = isEqualToEmptyEditor(previousChildren, schemaTypes);\n      apply2(operation);\n      const editorIsEmpty = isEqualToEmptyEditor(editor.children, schemaTypes);\n      if (!isPatching(editor))\n        return editor;\n      switch (editorWasEmpty && !editorIsEmpty && operation.type !== \"set_selection\" && patches.push(insert$1(previousChildren, \"before\", [0])), operation.type) {\n        case \"insert_text\":\n          patches = [\n            ...patches,\n            ...patchFunctions.insertTextPatch(editor, operation, previousChildren)\n          ];\n          break;\n        case \"remove_text\":\n          patches = [\n            ...patches,\n            ...patchFunctions.removeTextPatch(editor, operation, previousChildren)\n          ];\n          break;\n        case \"remove_node\":\n          patches = [\n            ...patches,\n            ...patchFunctions.removeNodePatch(editor, operation, previousChildren)\n          ];\n          break;\n        case \"split_node\":\n          patches = [\n            ...patches,\n            ...patchFunctions.splitNodePatch(editor, operation, previousChildren)\n          ];\n          break;\n        case \"insert_node\":\n          patches = [\n            ...patches,\n            ...patchFunctions.insertNodePatch(editor, operation, previousChildren)\n          ];\n          break;\n        case \"set_node\":\n          patches = [\n            ...patches,\n            ...patchFunctions.setNodePatch(editor, operation, previousChildren)\n          ];\n          break;\n        case \"merge_node\":\n          patches = [\n            ...patches,\n            ...patchFunctions.mergeNodePatch(editor, operation, previousChildren)\n          ];\n          break;\n        case \"move_node\":\n          patches = [\n            ...patches,\n            ...patchFunctions.moveNodePatch(editor, operation, previousChildren)\n          ];\n          break;\n      }\n      return !editorWasEmpty && editorIsEmpty && [\"merge_node\", \"set_node\", \"remove_text\", \"remove_node\"].includes(operation.type) && (patches = [...patches, unset([])], change$.next({\n        type: \"unset\",\n        previousValue: fromSlateValue(\n          previousChildren,\n          schemaTypes.block.name,\n          KEY_TO_VALUE_ELEMENT.get(editor)\n        )\n      })), editorWasEmpty && patches.length > 0 && (patches = [setIfMissing([], []), ...patches]), patches.length > 0 && patches.forEach((patch) => {\n        change$.next({\n          type: \"patch\",\n          patch: { ...patch, origin: \"local\" }\n        });\n      }), editor;\n    }, editor;\n  };\n}\nconst debug$e = debugWithName(\"plugin:withPlaceholderBlock\");\nfunction createWithPlaceholderBlock() {\n  return function(editor) {\n    const { apply: apply2 } = editor;\n    return editor.apply = (op) => {\n      if (op.type === \"remove_node\") {\n        const node = op.node;\n        if (op.path[0] === 0 && slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(editor, node)) {\n          const nextPath = slate__WEBPACK_IMPORTED_MODULE_18__.Path.next(op.path);\n          editor.children[nextPath[0]] || (debug$e(\"Adding placeholder block\"), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.insertNode(editor, editor.pteCreateEmptyBlock()));\n        }\n      }\n      apply2(op);\n    }, editor;\n  };\n}\nconst debug$d = debugWithName(\"plugin:withPortableTextBlockStyle\");\nfunction createWithPortableTextBlockStyle(types) {\n  const defaultStyle = types.styles[0].value;\n  return function(editor) {\n    const { normalizeNode } = editor;\n    return editor.normalizeNode = (nodeEntry) => {\n      normalizeNode(nodeEntry);\n      const [, path] = nodeEntry;\n      for (const op of editor.operations)\n        if (op.type === \"split_node\" && op.path.length === 1 && editor.isTextBlock(op.properties) && op.properties.style !== defaultStyle && op.path[0] === path[0] && !slate__WEBPACK_IMPORTED_MODULE_18__.Path.equals(path, op.path)) {\n          const [child] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, [op.path[0] + 1, 0]);\n          if (slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(child) && child.text === \"\") {\n            debug$d(`Normalizing split node to ${defaultStyle} style`, op), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { style: defaultStyle }, { at: [op.path[0] + 1], voids: !1 });\n            break;\n          }\n        }\n    }, editor.pteHasBlockStyle = (style) => editor.selection ? [\n      ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n        at: editor.selection,\n        match: (node) => editor.isTextBlock(node) && node.style === style\n      })\n    ].length > 0 : !1, editor.pteToggleBlockStyle = (blockStyle) => {\n      editor.selection && ([\n        ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => editor.isTextBlock(node)\n        })\n      ].forEach(([node, path]) => {\n        editor.isTextBlock(node) && node.style === blockStyle ? (debug$d(`Unsetting block style '${blockStyle}'`), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { ...node, style: defaultStyle }, {\n          at: path\n        })) : (blockStyle ? debug$d(`Setting style '${blockStyle}'`) : debug$d(\"Setting default style\", defaultStyle), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n          editor,\n          {\n            ...node,\n            style: blockStyle || defaultStyle\n          },\n          { at: path }\n        ));\n      }), editor.onChange());\n    }, editor;\n  };\n}\nconst debug$c = debugWithName(\"plugin:withPortableTextLists\"), MAX_LIST_LEVEL = 10;\nfunction createWithPortableTextLists(types) {\n  return function(editor) {\n    return editor.pteToggleListItem = (listItemStyle) => {\n      editor.pteHasListStyle(listItemStyle) ? (debug$c(`Remove list item '${listItemStyle}'`), editor.pteUnsetListItem(listItemStyle)) : (debug$c(`Add list item '${listItemStyle}'`), editor.pteSetListItem(listItemStyle));\n    }, editor.pteUnsetListItem = (listItemStyle) => {\n      editor.selection && [\n        ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(node) && node._type === types.block.name\n        })\n      ].forEach(([node, path]) => {\n        if (editor.isListBlock(node)) {\n          const { listItem, level, ...rest } = node, newNode = {\n            ...rest,\n            listItem: void 0,\n            level: void 0\n          };\n          debug$c(`Unsetting list '${listItemStyle}'`), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, newNode, { at: path });\n        }\n      });\n    }, editor.pteSetListItem = (listItemStyle) => {\n      editor.selection && [\n        ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => editor.isTextBlock(node)\n        })\n      ].forEach(([node, path]) => {\n        debug$c(`Setting list '${listItemStyle}'`), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n          editor,\n          {\n            ...node,\n            level: 1,\n            listItem: listItemStyle || types.lists[0] && types.lists[0].value\n          },\n          { at: path }\n        );\n      });\n    }, editor.pteEndList = () => {\n      if (!editor.selection)\n        return !1;\n      const selectedBlocks = [\n        ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(node) && editor.isListBlock(node) && node.children.length === 1 && slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(node.children[0]) && node.children[0].text === \"\"\n        })\n      ];\n      return selectedBlocks.length === 0 ? !1 : (selectedBlocks.forEach(([node, path]) => {\n        slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(node) && (debug$c(\"Unset list\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n          editor,\n          {\n            ...node,\n            level: void 0,\n            listItem: void 0\n          },\n          { at: path }\n        ));\n      }), !0);\n    }, editor.pteIncrementBlockLevels = (reverse) => {\n      if (!editor.selection)\n        return !1;\n      const selectedBlocks = [\n        ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => !!editor.isListBlock(node)\n        })\n      ];\n      return selectedBlocks.length === 0 ? !1 : (selectedBlocks.forEach(([node, path]) => {\n        if (editor.isListBlock(node)) {\n          let level = node.level || 1;\n          reverse ? (level--, debug$c(\"Decrementing list level\", Math.min(MAX_LIST_LEVEL, Math.max(1, level)))) : (level++, debug$c(\"Incrementing list level\", Math.min(MAX_LIST_LEVEL, Math.max(1, level)))), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n            editor,\n            { level: Math.min(MAX_LIST_LEVEL, Math.max(1, level)) },\n            { at: path }\n          );\n        }\n      }), !0);\n    }, editor.pteHasListStyle = (listStyle) => {\n      if (!editor.selection)\n        return !1;\n      const selectedBlocks = [\n        ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => editor.isTextBlock(node)\n        })\n      ];\n      return selectedBlocks.length > 0 ? selectedBlocks.every(\n        ([node]) => editor.isListBlock(node) && node.listItem === listStyle\n      ) : !1;\n    }, editor;\n  };\n}\nconst debug$b = debugWithName(\"plugin:withPortableTextMarkModel\");\nfunction createWithPortableTextMarkModel(types, change$) {\n  return function(editor) {\n    const { apply: apply2, normalizeNode } = editor, decorators = types.decorators.map((t) => t.value), forceNewSelection = () => {\n      editor.selection && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, { ...editor.selection }), editor.selection = { ...editor.selection });\n      const ptRange = toPortableTextRange(editor.children, editor.selection, types);\n      change$.next({ type: \"selection\", selection: ptRange });\n    };\n    return editor.normalizeNode = (nodeEntry) => {\n      normalizeNode(nodeEntry), editor.operations.some(\n        (op) => [\n          \"insert_node\",\n          \"insert_text\",\n          \"merge_node\",\n          \"remove_node\",\n          \"remove_text\",\n          \"set_node\"\n        ].includes(op.type)\n      ) && mergeSpans(editor);\n      const [node, path] = nodeEntry, isSpan = slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(node) && node._type === types.span.name, isTextBlock = editor.isTextBlock(node);\n      if (isSpan || isTextBlock) {\n        if (isSpan && !Array.isArray(node.marks) && (debug$b(\"Adding .marks to span node\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { marks: [] }, { at: path }), editor.onChange()), isSpan && (node.marks || []).length > 0) {\n          const spanMarks = node.marks || EMPTY_MARKS$1, annotationMarks = spanMarks.filter(\n            (mark) => !types.decorators.map((dec) => dec.value).includes(mark)\n          );\n          if (annotationMarks.length > 0) {\n            const [block] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, slate__WEBPACK_IMPORTED_MODULE_18__.Path.parent(path)), orphanedMarks = editor.isTextBlock(block) && annotationMarks.filter(\n              (mark) => {\n                var _a;\n                return !((_a = block.markDefs) != null && _a.find((def) => def._key === mark));\n              }\n            ) || [];\n            orphanedMarks.length > 0 && (debug$b(\"Removing orphaned .marks from span node\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n              editor,\n              { marks: spanMarks.filter((mark) => !orphanedMarks.includes(mark)) },\n              { at: path }\n            ), editor.onChange());\n          }\n        }\n        for (const op of editor.operations) {\n          if (op.type === \"merge_node\" && op.path.length === 1 && \"markDefs\" in op.properties && op.properties._type === types.block.name && Array.isArray(op.properties.markDefs) && op.properties.markDefs.length > 0 && op.path[0] - 1 >= 0) {\n            const [targetBlock, targetPath] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, [op.path[0] - 1]);\n            if (debug$b(\"Copying markDefs over to merged block\", op), editor.isTextBlock(targetBlock)) {\n              const oldDefs = Array.isArray(targetBlock.markDefs) && targetBlock.markDefs || [], newMarkDefs = lodash_uniq_js__WEBPACK_IMPORTED_MODULE_5__([...oldDefs, ...op.properties.markDefs]);\n              lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(newMarkDefs, targetBlock.markDefs) || (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { markDefs: newMarkDefs }, { at: targetPath, voids: !1 }), editor.onChange());\n            }\n          }\n          if (op.type === \"split_node\" && op.path.length === 1 && slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElementProps(op.properties) && op.properties._type === types.block.name && \"markDefs\" in op.properties && Array.isArray(op.properties.markDefs) && op.properties.markDefs.length > 0 && op.path[0] + 1 < editor.children.length) {\n            const [targetBlock, targetPath] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, [op.path[0] + 1]);\n            if (debug$b(\"Copying markDefs over to split block\", op), editor.isTextBlock(targetBlock)) {\n              const oldDefs = Array.isArray(targetBlock.markDefs) && targetBlock.markDefs || [];\n              slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n                editor,\n                { markDefs: lodash_uniq_js__WEBPACK_IMPORTED_MODULE_5__([...oldDefs, ...op.properties.markDefs]) },\n                { at: targetPath, voids: !1 }\n              ), editor.onChange();\n            }\n          }\n          if (op.type === \"split_node\" && op.path.length === 2 && op.properties._type === types.span.name && \"marks\" in op.properties && Array.isArray(op.properties.marks) && op.properties.marks.length > 0 && op.path[0] + 1 < editor.children.length) {\n            const [child, childPath] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, [op.path[0] + 1, 0]);\n            slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(child) && child.text === \"\" && Array.isArray(child.marks) && child.marks.length > 0 && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { marks: [] }, { at: childPath, voids: !1 }), editor.onChange());\n          }\n          if (op.type === \"split_node\" && op.path.length === 1 && op.properties._type === types.block.name && \"markDefs\" in op.properties && Array.isArray(op.properties.markDefs) && op.properties.markDefs.length > 0) {\n            const [block, blockPath] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, [op.path[0]]);\n            editor.isTextBlock(block) && block.children.length === 1 && block.markDefs && block.markDefs.length > 0 && slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(block.children[0]) && block.children[0].text === \"\" && (!block.children[0].marks || block.children[0].marks.length === 0) && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { markDefs: [] }, { at: blockPath }), editor.onChange());\n          }\n        }\n        isSpan && Array.isArray(node.marks) && (!node.marks || node.marks.length > 0 && node.text === \"\") && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { marks: [] }, { at: path, voids: !1 }), editor.onChange());\n      }\n      if (editor.isTextBlock(node) && !editor.operations.some(\n        (op) => op.type === \"merge_node\" && \"markDefs\" in op.properties && op.path.length === 1\n      )) {\n        const newMarkDefs = (node.markDefs || []).filter((def) => node.children.find((child) => slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(child) && Array.isArray(child.marks) && child.marks.includes(def._key)));\n        node.markDefs && !lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(newMarkDefs, node.markDefs) && (debug$b(\"Removing markDef not in use\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n          editor,\n          {\n            markDefs: newMarkDefs\n          },\n          { at: path }\n        ), editor.onChange());\n      }\n    }, editor.apply = (op) => {\n      var _a, _b;\n      if (op.type === \"insert_text\") {\n        const { selection } = editor;\n        if (selection && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(selection) && (_b = (_a = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.marks(editor)) == null ? void 0 : _a.marks) != null && _b.some((mark) => !decorators.includes(mark))) {\n          const [node] = Array.from(\n            slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n              mode: \"lowest\",\n              at: selection.focus,\n              match: (n) => n._type === types.span.name,\n              voids: !1\n            })\n          )[0] || [void 0];\n          if (slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(node) && node.text.length === selection.focus.offset && Array.isArray(node.marks) && node.marks.length > 0) {\n            apply2(op), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.splitNodes(editor, {\n              match: slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText,\n              at: { ...selection.focus, offset: selection.focus.offset }\n            });\n            const marksWithoutAnnotationMarks = ({\n              ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.marks(editor) || {}\n            }.marks || []).filter((mark) => decorators.includes(mark));\n            slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n              editor,\n              { marks: marksWithoutAnnotationMarks },\n              { at: slate__WEBPACK_IMPORTED_MODULE_18__.Path.next(selection.focus.path) }\n            ), debug$b(\"Inserting text at end of annotation\");\n            return;\n          }\n        }\n      }\n      apply2(op);\n    }, editor.addMark = (mark) => {\n      if (editor.selection) {\n        if (slate__WEBPACK_IMPORTED_MODULE_18__.Range.isExpanded(editor.selection)) {\n          slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, {}, { match: slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText, split: !0 });\n          const splitTextNodes = [\n            ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, { at: editor.selection, match: slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText })\n          ];\n          if (splitTextNodes.every((node) => {\n            var _a;\n            return (_a = node[0].marks) == null ? void 0 : _a.includes(mark);\n          }))\n            return editor.removeMark(mark), editor;\n          slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(editor, () => {\n            splitTextNodes.forEach(([node, path]) => {\n              const marks = [\n                ...(Array.isArray(node.marks) ? node.marks : []).filter(\n                  (eMark) => eMark !== mark\n                ),\n                mark\n              ];\n              slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n                editor,\n                { marks },\n                { at: path, match: slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText, split: !0, hanging: !0 }\n              );\n            });\n          }), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.normalize(editor);\n        } else {\n          const existingMarks = {\n            ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.marks(editor) || {}\n          }.marks || [], marks = {\n            ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.marks(editor) || {},\n            marks: [...existingMarks, mark]\n          };\n          return editor.marks = marks, forceNewSelection(), editor;\n        }\n        editor.onChange(), forceNewSelection();\n      }\n      return editor;\n    }, editor.removeMark = (mark) => {\n      const { selection } = editor;\n      if (selection) {\n        if (slate__WEBPACK_IMPORTED_MODULE_18__.Range.isExpanded(selection))\n          slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(editor, () => {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, {}, { match: slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText, split: !0 }), editor.selection && [\n              ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, { at: editor.selection, match: slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText })\n            ].forEach(([node, path]) => {\n              const block = editor.children[path[0]];\n              slate__WEBPACK_IMPORTED_MODULE_18__.Element.isElement(block) && block.children.includes(node) && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n                editor,\n                {\n                  marks: (Array.isArray(node.marks) ? node.marks : []).filter(\n                    (eMark) => eMark !== mark\n                  ),\n                  _type: \"span\"\n                },\n                { at: path }\n              );\n            });\n          }), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.normalize(editor);\n        else {\n          const existingMarks = {\n            ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.marks(editor) || {}\n          }.marks || [], marks = {\n            ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.marks(editor) || {},\n            marks: existingMarks.filter((eMark) => eMark !== mark)\n          };\n          return editor.marks = { marks: marks.marks, _type: \"span\" }, forceNewSelection(), editor;\n        }\n        editor.onChange(), forceNewSelection();\n      }\n      return editor;\n    }, editor.pteIsMarkActive = (mark) => {\n      if (!editor.selection)\n        return !1;\n      const selectedNodes = Array.from(\n        slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, { match: slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText, at: editor.selection })\n      );\n      return slate__WEBPACK_IMPORTED_MODULE_18__.Range.isExpanded(editor.selection) ? selectedNodes.every((n) => {\n        var _a;\n        const [node] = n;\n        return (_a = node.marks) == null ? void 0 : _a.includes(mark);\n      }) : ({\n        ...slate__WEBPACK_IMPORTED_MODULE_18__.Editor.marks(editor) || {}\n      }.marks || []).includes(mark);\n    }, editor.pteToggleMark = (mark) => {\n      editor.pteIsMarkActive(mark) ? (debug$b(`Remove mark '${mark}'`), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.removeMark(editor, mark)) : (debug$b(`Add mark '${mark}'`), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.addMark(editor, mark, !0));\n    }, editor;\n  };\n  function mergeSpans(editor) {\n    const { selection } = editor;\n    if (selection)\n      for (const [node, path] of Array.from(\n        slate__WEBPACK_IMPORTED_MODULE_18__.Editor.nodes(editor, {\n          at: slate__WEBPACK_IMPORTED_MODULE_18__.Editor.range(editor, [selection.anchor.path[0]], [selection.focus.path[0]])\n        })\n      ).reverse()) {\n        const [parent] = path.length > 1 ? slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, slate__WEBPACK_IMPORTED_MODULE_18__.Path.parent(path)) : [void 0], nextPath = [path[0], path[1] + 1];\n        if (editor.isTextBlock(parent)) {\n          const nextNode = parent.children[nextPath[1]];\n          slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(node) && slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(nextNode) && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(nextNode.marks, node.marks) && (debug$b(\"Merging spans\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.mergeNodes(editor, { at: nextPath, voids: !0 }), editor.onChange());\n        }\n      }\n  }\n}\nconst debug$a = debugWithName(\"plugin:withPortableTextSelections\"), debugVerbose$1 = debug$a.enabled && !1;\nfunction createWithPortableTextSelections(change$, types) {\n  let prevSelection = null;\n  return function(editor) {\n    const emitPortableTextSelection = () => {\n      if (prevSelection !== editor.selection) {\n        let ptRange = null;\n        if (editor.selection) {\n          const existing = SLATE_TO_PORTABLE_TEXT_RANGE.get(editor.selection);\n          if (existing)\n            ptRange = existing;\n          else {\n            const value = editor.children;\n            ptRange = toPortableTextRange(value, editor.selection, types), SLATE_TO_PORTABLE_TEXT_RANGE.set(editor.selection, ptRange);\n          }\n        }\n        debugVerbose$1 && debug$a(\n          `Emitting selection ${JSON.stringify(ptRange || null)} (${JSON.stringify(\n            editor.selection\n          )})`\n        ), ptRange ? change$.next({ type: \"selection\", selection: ptRange }) : change$.next({ type: \"selection\", selection: null });\n      }\n      prevSelection = editor.selection;\n    }, { onChange } = editor;\n    return editor.onChange = () => {\n      const hasChanges = editor.operations.length > 0;\n      onChange(), hasChanges && emitPortableTextSelection();\n    }, editor;\n  };\n}\nconst debug$9 = debugWithName(\"plugin:withSchemaTypes\");\nfunction createWithSchemaTypes({\n  schemaTypes,\n  keyGenerator\n}) {\n  return function(editor) {\n    editor.isTextBlock = (value) => (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextTextBlock)(value) && value._type === schemaTypes.block.name, editor.isTextSpan = (value) => (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextSpan)(value) && value._type == schemaTypes.span.name, editor.isListBlock = (value) => (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextListBlock)(value) && value._type === schemaTypes.block.name, editor.isVoid = (element) => schemaTypes.block.name !== element._type && (schemaTypes.blockObjects.map((obj) => obj.name).includes(element._type) || schemaTypes.inlineObjects.map((obj) => obj.name).includes(element._type)), editor.isInline = (element) => schemaTypes.inlineObjects.map((obj) => obj.name).includes(element._type) && \"__inline\" in element && element.__inline === !0;\n    const { normalizeNode } = editor;\n    return editor.normalizeNode = (entry) => {\n      const [node, path] = entry;\n      if (node._type === void 0 && path.length === 2) {\n        debug$9(\"Setting span type on text node without a type\");\n        const span = node, key = span._key || keyGenerator();\n        slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { ...span, _type: schemaTypes.span.name, _key: key }, { at: path });\n      }\n      if (node._key === void 0 && (path.length === 1 || path.length === 2)) {\n        debug$9(\"Setting missing key on child node without a key\");\n        const key = keyGenerator();\n        slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(editor, { _key: key }, { at: path });\n      }\n      normalizeNode(entry);\n    }, editor;\n  };\n}\nconst debug$8 = debugWithName(\"plugin:withUtils\");\nfunction createWithUtils({ schemaTypes, keyGenerator, portableTextEditor }) {\n  return function(editor) {\n    return editor.pteExpandToWord = () => {\n      const { selection } = editor;\n      if (selection && !slate__WEBPACK_IMPORTED_MODULE_18__.Range.isExpanded(selection)) {\n        const [textNode] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, selection.focus, { depth: 2 });\n        if (!textNode || !slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(textNode) || textNode.text.length === 0) {\n          debug$8(\"pteExpandToWord: Can't expand to word here\");\n          return;\n        }\n        const { focus } = selection, focusOffset = focus.offset, charsBefore = textNode.text.slice(0, focusOffset), charsAfter = textNode.text.slice(focusOffset, -1), isEmpty = (str) => str.match(/\\s/g), whiteSpaceBeforeIndex = charsBefore.split(\"\").reverse().findIndex((str) => isEmpty(str)), newStartOffset = whiteSpaceBeforeIndex > -1 ? charsBefore.length - whiteSpaceBeforeIndex : 0, whiteSpaceAfterIndex = charsAfter.split(\"\").findIndex((obj) => isEmpty(obj)), newEndOffset = charsBefore.length + (whiteSpaceAfterIndex > -1 ? whiteSpaceAfterIndex : charsAfter.length + 1);\n        if (!(newStartOffset === newEndOffset || isNaN(newStartOffset) || isNaN(newEndOffset))) {\n          debug$8(\"pteExpandToWord: Expanding to focused word\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setSelection(editor, {\n            anchor: { ...selection.anchor, offset: newStartOffset },\n            focus: { ...selection.focus, offset: newEndOffset }\n          });\n          return;\n        }\n        debug$8(\"pteExpandToWord: Can't expand to word here\");\n      }\n    }, editor.pteCreateEmptyBlock = () => toSlateValue(\n      [\n        {\n          _type: schemaTypes.block.name,\n          _key: keyGenerator(),\n          style: schemaTypes.styles[0].value || \"normal\",\n          markDefs: [],\n          children: [\n            {\n              _type: \"span\",\n              _key: keyGenerator(),\n              text: \"\",\n              marks: []\n            }\n          ]\n        }\n      ],\n      portableTextEditor\n    )[0], editor;\n  };\n}\nconst debug$7 = debugWithName(\"plugin:withHotKeys\"), DEFAULT_HOTKEYS = {\n  marks: {\n    \"mod+b\": \"strong\",\n    \"mod+i\": \"em\",\n    \"mod+u\": \"underline\",\n    \"mod+'\": \"code\"\n  },\n  custom: {}\n};\nfunction createWithHotkeys(types, portableTextEditor, hotkeysFromOptions) {\n  const reservedHotkeys = [\"enter\", \"tab\", \"shift\", \"delete\", \"end\"], activeHotkeys = hotkeysFromOptions || DEFAULT_HOTKEYS;\n  return function(editor) {\n    return editor.pteWithHotKeys = (event) => {\n      var _a, _b, _c, _d;\n      Object.keys(activeHotkeys).forEach((cat) => {\n        if (cat === \"marks\")\n          for (const hotkey in activeHotkeys[cat]) {\n            if (reservedHotkeys.includes(hotkey))\n              throw new Error(`The hotkey ${hotkey} is reserved!`);\n            if ((0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(hotkey, event.nativeEvent)) {\n              event.preventDefault();\n              const possibleMark = activeHotkeys[cat];\n              if (possibleMark) {\n                const mark = possibleMark[hotkey];\n                debug$7(`HotKey ${hotkey} to toggle ${mark}`), editor.pteToggleMark(mark);\n              }\n            }\n          }\n        if (cat === \"custom\")\n          for (const hotkey in activeHotkeys[cat]) {\n            if (reservedHotkeys.includes(hotkey))\n              throw new Error(`The hotkey ${hotkey} is reserved!`);\n            if ((0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(hotkey, event.nativeEvent)) {\n              const possibleCommand = activeHotkeys[cat];\n              if (possibleCommand) {\n                const command = possibleCommand[hotkey];\n                command(event, portableTextEditor);\n              }\n            }\n          }\n      });\n      const isEnter = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"enter\", event.nativeEvent), isTab = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"tab\", event.nativeEvent), isShiftEnter = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"shift+enter\", event.nativeEvent), isShiftTab = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"shift+tab\", event.nativeEvent), isBackspace = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"backspace\", event.nativeEvent), isDelete = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"delete\", event.nativeEvent), isArrowDown = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"down\", event.nativeEvent), isArrowUp = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"up\", event.nativeEvent);\n      if (isArrowDown && editor.selection) {\n        const focusBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, editor.selection.focus.path.slice(0, 1));\n        if (focusBlock && slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(editor, focusBlock)) {\n          const nextPath = slate__WEBPACK_IMPORTED_MODULE_18__.Path.next(editor.selection.focus.path.slice(0, 1));\n          if (!slate__WEBPACK_IMPORTED_MODULE_18__.Node.has(editor, nextPath)) {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(editor, editor.pteCreateEmptyBlock(), { at: nextPath }), editor.onChange();\n            return;\n          }\n        }\n      }\n      if (isArrowUp && editor.selection) {\n        const isFirstBlock = editor.selection.focus.path[0] === 0, focusBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, editor.selection.focus.path.slice(0, 1));\n        if (isFirstBlock && focusBlock && slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(editor, focusBlock)) {\n          slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(editor, editor.pteCreateEmptyBlock(), { at: [0] }), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, { path: [0, 0], offset: 0 }), editor.onChange();\n          return;\n        }\n      }\n      if (isBackspace && editor.selection && editor.selection.focus.path[0] === 0 && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(editor.selection)) {\n        const focusBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, editor.selection.focus.path.slice(0, 1)), nextPath = slate__WEBPACK_IMPORTED_MODULE_18__.Path.next(editor.selection.focus.path.slice(0, 1)), nextBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.has(editor, nextPath), isTextBlock = (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextTextBlock)(focusBlock), isEmptyFocusBlock = isTextBlock && focusBlock.children.length === 1 && ((_b = (_a = focusBlock.children) == null ? void 0 : _a[0]) == null ? void 0 : _b.text) === \"\";\n        if (nextBlock && isTextBlock && isEmptyFocusBlock) {\n          event.preventDefault(), event.stopPropagation(), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, { match: (n) => n === focusBlock }), editor.onChange();\n          return;\n        }\n      }\n      if (isBackspace && editor.selection && editor.selection.focus.path[0] > 0 && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(editor.selection)) {\n        const prevPath = slate__WEBPACK_IMPORTED_MODULE_18__.Path.previous(editor.selection.focus.path.slice(0, 1)), prevBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, prevPath), focusBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, editor.selection.focus.path.slice(0, 1));\n        if (prevBlock && focusBlock && slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(editor, prevBlock) && editor.selection.focus.offset === 0) {\n          debug$7(\"Preventing deleting void block above\"), event.preventDefault(), event.stopPropagation();\n          const isTextBlock = (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextTextBlock)(focusBlock), isEmptyFocusBlock = isTextBlock && focusBlock.children.length === 1 && ((_d = (_c = focusBlock.children) == null ? void 0 : _c[0]) == null ? void 0 : _d.text) === \"\";\n          if (!isTextBlock || isEmptyFocusBlock) {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, { match: (n) => n === focusBlock }), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, prevPath), editor.onChange();\n            return;\n          }\n          if (isTextBlock && !isEmptyFocusBlock) {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, prevPath), editor.onChange();\n            return;\n          }\n          return;\n        }\n      }\n      if (isDelete && editor.selection && editor.selection.focus.offset === 0 && slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(editor.selection) && editor.children[editor.selection.focus.path[0] + 1]) {\n        const nextBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(\n          editor,\n          slate__WEBPACK_IMPORTED_MODULE_18__.Path.next(editor.selection.focus.path.slice(0, 1))\n        ), focusBlockPath = editor.selection.focus.path.slice(0, 1), focusBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, focusBlockPath);\n        if (nextBlock && focusBlock && !slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(editor, focusBlock) && slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(editor, nextBlock)) {\n          debug$7(\"Preventing deleting void block below\"), event.preventDefault(), event.stopPropagation(), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, { match: (n) => n === focusBlock }), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(editor, focusBlockPath), editor.onChange();\n          return;\n        }\n      }\n      if ((isTab || isShiftTab) && editor.selection) {\n        const [focusChild] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, editor.selection.focus, { depth: 2 }), [focusBlock] = (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextSpan)(focusChild) ? slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, editor.selection.focus, { depth: 1 }) : [], hasAnnotationFocus = focusChild && (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextTextBlock)(focusBlock) && (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextSpan)(focusChild) && (focusChild.marks || []).filter(\n          (m) => (focusBlock.markDefs || []).map((def) => def._key).includes(m)\n        ).length > 0, [start] = slate__WEBPACK_IMPORTED_MODULE_18__.Range.edges(editor.selection), atStartOfNode = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isStart(editor, start, start.path);\n        focusChild && (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextSpan)(focusChild) && (!hasAnnotationFocus || atStartOfNode) && editor.pteIncrementBlockLevels(isShiftTab) && event.preventDefault();\n      }\n      if (isEnter && !isShiftEnter && editor.selection) {\n        const focusBlockPath = editor.selection.focus.path.slice(0, 1), focusBlock = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(editor, focusBlockPath);\n        if (editor.isListBlock(focusBlock)) {\n          editor.pteEndList() && event.preventDefault();\n          return;\n        }\n        if (editor.isTextBlock(focusBlock) && focusBlock.style && focusBlock.style !== types.styles[0].value) {\n          const [, end] = slate__WEBPACK_IMPORTED_MODULE_18__.Range.edges(editor.selection);\n          if (slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isEnd(editor, end, end.path)) {\n            slate__WEBPACK_IMPORTED_MODULE_18__.Editor.insertNode(editor, editor.pteCreateEmptyBlock()), event.preventDefault(), editor.onChange();\n            return;\n          }\n        }\n        if (focusBlock && slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(editor, focusBlock)) {\n          slate__WEBPACK_IMPORTED_MODULE_18__.Editor.insertNode(editor, editor.pteCreateEmptyBlock()), event.preventDefault(), editor.onChange();\n          return;\n        }\n        event.preventDefault(), editor.insertBreak(), editor.onChange();\n      }\n      if (isShiftEnter) {\n        event.preventDefault(), editor.insertText(`\n`);\n        return;\n      }\n      if ((0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"mod+z\", event.nativeEvent)) {\n        event.preventDefault(), editor.undo();\n        return;\n      }\n      ((0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"mod+y\", event.nativeEvent) || (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"mod+shift+z\", event.nativeEvent)) && (event.preventDefault(), editor.redo());\n    }, editor;\n  };\n}\nfunction validateValue(value, types, keyGenerator) {\n  let resolution = null, valid = !0;\n  const validChildTypes = [types.span.name, ...types.inlineObjects.map((t) => t.name)], validBlockTypes = [types.block.name, ...types.blockObjects.map((t) => t.name)];\n  return value === void 0 ? { valid: !0, resolution: null, value } : !Array.isArray(value) || value.length === 0 ? {\n    valid: !1,\n    resolution: {\n      patches: [unset([])],\n      description: \"Editor value must be an array of Portable Text blocks, or undefined.\",\n      action: \"Unset the value\",\n      item: value,\n      i18n: {\n        description: \"inputs.portable-text.invalid-value.not-an-array.description\",\n        action: \"inputs.portable-text.invalid-value.not-an-array.action\"\n      }\n    },\n    value\n  } : (value.some((blk, index) => {\n    if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_15__(blk))\n      return resolution = {\n        patches: [unset([index])],\n        description: `Block must be an object, got ${String(blk)}`,\n        action: \"Unset invalid item\",\n        item: blk,\n        i18n: {\n          description: \"inputs.portable-text.invalid-value.not-an-object.description\",\n          action: \"inputs.portable-text.invalid-value.not-an-object.action\",\n          values: { index }\n        }\n      }, !0;\n    if (!blk._key || typeof blk._key != \"string\")\n      return resolution = {\n        patches: [set({ ...blk, _key: keyGenerator() }, [index])],\n        description: `Block at index ${index} is missing required _key.`,\n        action: \"Set the block with a random _key value\",\n        item: blk,\n        i18n: {\n          description: \"inputs.portable-text.invalid-value.missing-key.description\",\n          action: \"inputs.portable-text.invalid-value.missing-key.action\",\n          values: { index }\n        }\n      }, !0;\n    if (!blk._type || !validBlockTypes.includes(blk._type)) {\n      if (blk._type === \"block\") {\n        const currentBlockTypeName = types.block.name;\n        return resolution = {\n          patches: [set({ ...blk, _type: currentBlockTypeName }, [{ _key: blk._key }])],\n          description: `Block with _key '${blk._key}' has invalid type name '${blk._type}'. According to the schema, the block type name is '${currentBlockTypeName}'`,\n          action: `Use type '${currentBlockTypeName}'`,\n          item: blk,\n          i18n: {\n            description: \"inputs.portable-text.invalid-value.incorrect-block-type.description\",\n            action: \"inputs.portable-text.invalid-value.incorrect-block-type.action\",\n            values: { key: blk._key, expectedTypeName: currentBlockTypeName }\n          }\n        }, !0;\n      }\n      return !blk._type && (0,_sanity_types__WEBPACK_IMPORTED_MODULE_19__.isPortableTextTextBlock)({ ...blk, _type: types.block.name }) ? (resolution = {\n        patches: [set({ ...blk, _type: types.block.name }, [{ _key: blk._key }])],\n        description: `Block with _key '${blk._key}' is missing a type name. According to the schema, the block type name is '${types.block.name}'`,\n        action: `Use type '${types.block.name}'`,\n        item: blk,\n        i18n: {\n          description: \"inputs.portable-text.invalid-value.missing-block-type.description\",\n          action: \"inputs.portable-text.invalid-value.missing-block-type.action\",\n          values: { key: blk._key, expectedTypeName: types.block.name }\n        }\n      }, !0) : blk._type ? (resolution = {\n        patches: [unset([{ _key: blk._key }])],\n        description: `Block with _key '${blk._key}' has invalid _type '${blk._type}'`,\n        action: \"Remove the block\",\n        item: blk,\n        i18n: {\n          description: \"inputs.portable-text.invalid-value.disallowed-type.description\",\n          action: \"inputs.portable-text.invalid-value.disallowed-type.action\",\n          values: { key: blk._key, typeName: blk._type }\n        }\n      }, !0) : (resolution = {\n        patches: [unset([{ _key: blk._key }])],\n        description: `Block with _key '${blk._key}' is missing an _type property`,\n        action: \"Remove the block\",\n        item: blk,\n        i18n: {\n          description: \"inputs.portable-text.invalid-value.missing-type.description\",\n          action: \"inputs.portable-text.invalid-value.missing-type.action\",\n          values: { key: blk._key }\n        }\n      }, !0);\n    }\n    if (blk._type === types.block.name) {\n      const textBlock = blk;\n      if (textBlock.children && !Array.isArray(textBlock.children))\n        return resolution = {\n          patches: [set({ children: [] }, [{ _key: textBlock._key }])],\n          description: `Text block with _key '${textBlock._key}' has a invalid required property 'children'.`,\n          action: \"Reset the children property\",\n          item: textBlock,\n          i18n: {\n            description: \"inputs.portable-text.invalid-value.missing-or-invalid-children.description\",\n            action: \"inputs.portable-text.invalid-value.missing-or-invalid-children.action\",\n            values: { key: textBlock._key }\n          }\n        }, !0;\n      if (textBlock.children === void 0 || Array.isArray(textBlock.children) && textBlock.children.length === 0) {\n        const newSpan = {\n          _type: types.span.name,\n          _key: keyGenerator(),\n          text: \"\",\n          marks: []\n        };\n        return resolution = {\n          autoResolve: !0,\n          patches: [\n            setIfMissing([], [{ _key: blk._key }, \"children\"]),\n            insert$1([newSpan], \"after\", [{ _key: blk._key }, \"children\", 0])\n          ],\n          description: `Children for text block with _key '${blk._key}' is empty.`,\n          action: \"Insert an empty text\",\n          item: blk,\n          i18n: {\n            description: \"inputs.portable-text.invalid-value.empty-children.description\",\n            action: \"inputs.portable-text.invalid-value.empty-children.action\",\n            values: { key: blk._key }\n          }\n        }, !0;\n      }\n      if (blk.markDefs && !Array.isArray(blk.markDefs))\n        return resolution = {\n          patches: [set({ ...textBlock, markDefs: EMPTY_MARKDEFS }, [{ _key: textBlock._key }])],\n          description: \"Block has invalid required property 'markDefs'.\",\n          action: \"Add empty markDefs array\",\n          item: textBlock,\n          i18n: {\n            description: \"inputs.portable-text.invalid-value.missing-or-invalid-markdefs.description\",\n            action: \"inputs.portable-text.invalid-value.missing-or-invalid-markdefs.action\",\n            values: { key: textBlock._key }\n          }\n        }, !0;\n      const allUsedMarks = lodash_uniq_js__WEBPACK_IMPORTED_MODULE_5__(\n        lodash_flatten_js__WEBPACK_IMPORTED_MODULE_14__(\n          textBlock.children.filter((cld) => cld._type === types.span.name).map((cld) => cld.marks || [])\n        )\n      );\n      if (Array.isArray(blk.markDefs) && blk.markDefs.length > 0) {\n        const unusedMarkDefs = lodash_uniq_js__WEBPACK_IMPORTED_MODULE_5__(\n          blk.markDefs.map((def) => def._key).filter((key) => !allUsedMarks.includes(key))\n        );\n        if (unusedMarkDefs.length > 0)\n          return resolution = {\n            autoResolve: !0,\n            patches: unusedMarkDefs.map(\n              (markDefKey) => unset([{ _key: blk._key }, \"markDefs\", { _key: markDefKey }])\n            ),\n            description: `Block contains orphaned data (unused mark definitions): ${unusedMarkDefs.join(\n              \", \"\n            )}.`,\n            action: \"Remove unused mark definition item\",\n            item: blk,\n            i18n: {\n              description: \"inputs.portable-text.invalid-value.orphaned-mark-defs.description\",\n              action: \"inputs.portable-text.invalid-value.orphaned-mark-defs.action\",\n              values: { key: blk._key, unusedMarkDefs: unusedMarkDefs.map((m) => m.toString()) }\n            }\n          }, !0;\n      }\n      const orphanedMarks = allUsedMarks.filter(\n        (mark) => !types.decorators.map((dec) => dec.value).includes(mark)\n      ).filter(\n        (mark) => textBlock.markDefs === void 0 || !textBlock.markDefs.find((def) => def._key === mark)\n      );\n      if (orphanedMarks.length > 0) {\n        const spanChildren = textBlock.children.filter(\n          (cld) => cld._type === types.span.name && Array.isArray(cld.marks) && cld.marks.some((mark) => orphanedMarks.includes(mark))\n        );\n        if (spanChildren) {\n          const orphaned = orphanedMarks.join(\", \");\n          return resolution = {\n            autoResolve: !0,\n            patches: spanChildren.map((child) => set(\n              (child.marks || []).filter((cMrk) => !orphanedMarks.includes(cMrk)),\n              [{ _key: blk._key }, \"children\", { _key: child._key }, \"marks\"]\n            )),\n            description: `Block with _key '${blk._key}' contains marks (${orphaned}) not supported by the current content model.`,\n            action: \"Remove invalid marks\",\n            item: blk,\n            i18n: {\n              description: \"inputs.portable-text.invalid-value.orphaned-marks.description\",\n              action: \"inputs.portable-text.invalid-value.orphaned-marks.action\",\n              values: { key: blk._key, orphanedMarks: orphanedMarks.map((m) => m.toString()) }\n            }\n          }, !0;\n        }\n      }\n      textBlock.children.some((child, cIndex) => {\n        if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_15__(child))\n          return resolution = {\n            patches: [unset([{ _key: blk._key }, \"children\", cIndex])],\n            description: `Child at index '${cIndex}' in block with key '${blk._key}' is not an object.`,\n            action: \"Remove the item\",\n            item: blk,\n            i18n: {\n              description: \"inputs.portable-text.invalid-value.non-object-child.description\",\n              action: \"inputs.portable-text.invalid-value.non-object-child.action\",\n              values: { key: blk._key, index: cIndex }\n            }\n          }, !0;\n        if (!child._key || typeof child._key != \"string\") {\n          const newChild = { ...child, _key: keyGenerator() };\n          return resolution = {\n            autoResolve: !0,\n            patches: [set(newChild, [{ _key: blk._key }, \"children\", cIndex])],\n            description: `Child at index ${cIndex} is missing required _key in block with _key ${blk._key}.`,\n            action: \"Set a new random _key on the object\",\n            item: blk,\n            i18n: {\n              description: \"inputs.portable-text.invalid-value.missing-child-key.description\",\n              action: \"inputs.portable-text.invalid-value.missing-child-key.action\",\n              values: { key: blk._key, index: cIndex }\n            }\n          }, !0;\n        }\n        return child._type ? validChildTypes.includes(child._type) ? child._type === types.span.name && typeof child.text != \"string\" ? (resolution = {\n          patches: [\n            set({ ...child, text: \"\" }, [{ _key: blk._key }, \"children\", { _key: child._key }])\n          ],\n          description: `Child with _key '${child._key}' in block with key '${blk._key}' has missing or invalid text property!`,\n          action: \"Write an empty text property to the object\",\n          item: blk,\n          i18n: {\n            description: \"inputs.portable-text.invalid-value.invalid-span-text.description\",\n            action: \"inputs.portable-text.invalid-value.invalid-span-text.action\",\n            values: { key: blk._key, childKey: child._key }\n          }\n        }, !0) : !1 : (resolution = {\n          patches: [unset([{ _key: blk._key }, \"children\", { _key: child._key }])],\n          description: `Child with _key '${child._key}' in block with key '${blk._key}' has invalid '_type' property (${child._type}).`,\n          action: \"Remove the object\",\n          item: blk,\n          i18n: {\n            description: \"inputs.portable-text.invalid-value.disallowed-child-type.description\",\n            action: \"inputs.portable-text.invalid-value.disallowed-child-type.action\",\n            values: { key: blk._key, childKey: child._key, childType: child._type }\n          }\n        }, !0) : (resolution = {\n          patches: [unset([{ _key: blk._key }, \"children\", { _key: child._key }])],\n          description: `Child with _key '${child._key}' in block with key '${blk._key}' is missing '_type' property.`,\n          action: \"Remove the object\",\n          item: blk,\n          i18n: {\n            description: \"inputs.portable-text.invalid-value.missing-child-type.description\",\n            action: \"inputs.portable-text.invalid-value.missing-child-type.action\",\n            values: { key: blk._key, childKey: child._key }\n          }\n        }, !0);\n      }) && (valid = !1);\n    }\n    return !1;\n  }) && (valid = !1), { valid, resolution, value });\n}\nconst debug$6 = debugWithName(\"plugin:withInsertData\");\nfunction createWithInsertData(change$, schemaTypes, keyGenerator) {\n  return function(editor) {\n    const blockTypeName = schemaTypes.block.name, spanTypeName = schemaTypes.span.name, whitespaceOnPasteMode = schemaTypes.block.options.unstable_whitespaceOnPasteMode, toPlainText = (blocks) => blocks.map((block) => {\n      var _a;\n      return editor.isTextBlock(block) ? block.children.map((child) => {\n        var _a2;\n        return child._type === spanTypeName ? child.text : `[${((_a2 = schemaTypes.inlineObjects.find((t) => t.name === child._type)) == null ? void 0 : _a2.title) || \"Object\"}]`;\n      }).join(\"\") : `[${((_a = schemaTypes.blockObjects.find((t) => t.name === block._type)) == null ? void 0 : _a.title) || \"Object\"}]`;\n    }).join(`\n\n`);\n    return editor.setFragmentData = (data, originEvent) => {\n      const { selection } = editor;\n      if (!selection)\n        return;\n      const [start, end] = slate__WEBPACK_IMPORTED_MODULE_18__.Range.edges(selection), startVoid = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.void(editor, { at: start.path }), endVoid = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.void(editor, { at: end.path });\n      if (slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(selection) && !startVoid)\n        return;\n      const domRange = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.toDOMRange(editor, selection);\n      let contents = domRange.cloneContents();\n      if (endVoid) {\n        const [voidNode] = endVoid, r = domRange.cloneRange(), domNode = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.toDOMNode(editor, voidNode);\n        r.setEndAfter(domNode), contents = r.cloneContents();\n      }\n      Array.from(contents.querySelectorAll(\"[data-slate-zero-width]\")).forEach((zw) => {\n        const isNewline = zw.getAttribute(\"data-slate-zero-width\") === \"n\";\n        zw.textContent = isNewline ? `\n` : \"\";\n      }), Array.from(contents.querySelectorAll(\"*\")).forEach((elm) => {\n        elm.removeAttribute(\"contentEditable\"), elm.removeAttribute(\"data-slate-inline\"), elm.removeAttribute(\"data-slate-leaf\"), elm.removeAttribute(\"data-slate-node\"), elm.removeAttribute(\"data-slate-spacer\"), elm.removeAttribute(\"data-slate-string\"), elm.removeAttribute(\"data-slate-zero-width\"), elm.removeAttribute(\"draggable\");\n        for (const key in elm.attributes)\n          elm.hasAttribute(key) && elm.removeAttribute(key);\n      });\n      const div = contents.ownerDocument.createElement(\"div\");\n      div.appendChild(contents), div.setAttribute(\"hidden\", \"true\"), contents.ownerDocument.body.appendChild(div);\n      const asHTML = div.innerHTML;\n      contents.ownerDocument.body.removeChild(div);\n      const fragment = editor.getFragment(), portableText = fromSlateValue(fragment, blockTypeName), asJSON = JSON.stringify(portableText), asPlainText = toPlainText(portableText);\n      data.clearData(), data.setData(\"text/plain\", asPlainText), data.setData(\"text/html\", asHTML), data.setData(\"application/json\", asJSON), data.setData(\"application/x-portable-text\", asJSON), debug$6(\"text\", asPlainText), data.setData(\"application/x-portable-text-event-origin\", originEvent || \"external\"), debug$6(\"Set fragment data\", asJSON, asHTML);\n    }, editor.insertPortableTextData = (data) => {\n      var _a, _b;\n      if (!editor.selection)\n        return !1;\n      const pText = data.getData(\"application/x-portable-text\"), origin = data.getData(\"application/x-portable-text-event-origin\");\n      if (debug$6(`Inserting portable text from ${origin} event`, pText), pText) {\n        const parsed = JSON.parse(pText);\n        if (Array.isArray(parsed) && parsed.length > 0) {\n          const slateValue = _regenerateKeys(\n            editor,\n            toSlateValue(parsed, { schemaTypes }),\n            keyGenerator,\n            spanTypeName\n          ), validation = validateValue(parsed, schemaTypes, keyGenerator);\n          if (!validation.valid && !((_a = validation.resolution) != null && _a.autoResolve)) {\n            const errorDescription = `${(_b = validation.resolution) == null ? void 0 : _b.description}`;\n            return change$.next({\n              type: \"error\",\n              level: \"warning\",\n              name: \"pasteError\",\n              description: errorDescription,\n              data: validation\n            }), debug$6(\"Invalid insert result\", validation), !1;\n          }\n          return _insertFragment(editor, slateValue, schemaTypes), !0;\n        }\n      }\n      return !1;\n    }, editor.insertTextOrHTMLData = (data) => {\n      var _a;\n      if (!editor.selection)\n        return debug$6(\"No selection, not inserting\"), !1;\n      change$.next({ type: \"loading\", isLoading: !0 });\n      const html = data.getData(\"text/html\"), text = data.getData(\"text/plain\");\n      if (html || text) {\n        debug$6(\"Inserting data\", data);\n        let portableText, fragment, insertedType;\n        if (html) {\n          if (portableText = (0,_sanity_block_tools__WEBPACK_IMPORTED_MODULE_24__.htmlToBlocks)(html, schemaTypes.portableText, {\n            unstable_whitespaceOnPasteMode: whitespaceOnPasteMode\n          }).map((block) => (0,_sanity_block_tools__WEBPACK_IMPORTED_MODULE_24__.normalizeBlock)(block, { blockTypeName })), fragment = toSlateValue(portableText, { schemaTypes }), insertedType = \"HTML\", portableText.length === 0)\n            return !1;\n        } else {\n          const textToHtml = `<html><body>${escapeHtml(text).split(/\\n{2,}/).map(\n            (line) => line ? `<p>${line.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br/>\")}</p>` : \"<p></p>\"\n          ).join(\"\")}</body></html>`;\n          portableText = (0,_sanity_block_tools__WEBPACK_IMPORTED_MODULE_24__.htmlToBlocks)(textToHtml, schemaTypes.portableText).map(\n            (block) => (0,_sanity_block_tools__WEBPACK_IMPORTED_MODULE_24__.normalizeBlock)(block, { blockTypeName })\n          ), fragment = toSlateValue(portableText, {\n            schemaTypes\n          }), insertedType = \"text\";\n        }\n        const validation = validateValue(portableText, schemaTypes, keyGenerator);\n        if (!validation.valid) {\n          const errorDescription = `Could not validate the resulting portable text to insert.\n${(_a = validation.resolution) == null ? void 0 : _a.description}\nTry to insert as plain text (shift-paste) instead.`;\n          return change$.next({\n            type: \"error\",\n            level: \"warning\",\n            name: \"pasteError\",\n            description: errorDescription,\n            data: validation\n          }), debug$6(\"Invalid insert result\", validation), !1;\n        }\n        return debug$6(`Inserting ${insertedType} fragment at ${JSON.stringify(editor.selection)}`), _insertFragment(editor, fragment, schemaTypes), change$.next({ type: \"loading\", isLoading: !1 }), !0;\n      }\n      return change$.next({ type: \"loading\", isLoading: !1 }), !1;\n    }, editor.insertData = (data) => {\n      editor.insertPortableTextData(data) || editor.insertTextOrHTMLData(data);\n    }, editor.insertFragmentData = (data) => {\n      const fragment = data.getData(\"application/x-portable-text\");\n      if (fragment) {\n        const parsed = JSON.parse(fragment);\n        return editor.insertFragment(parsed), !0;\n      }\n      return !1;\n    }, editor;\n  };\n}\nconst entityMap = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\",\n  \"/\": \"&#x2F;\",\n  \"`\": \"&#x60;\",\n  \"=\": \"&#x3D;\"\n};\nfunction escapeHtml(str) {\n  return String(str).replace(/[&<>\"'`=/]/g, (s) => entityMap[s]);\n}\nfunction _regenerateKeys(editor, fragment, keyGenerator, spanTypeName) {\n  return fragment.map((node) => {\n    const newNode = { ...node };\n    editor.isTextBlock(newNode) && (newNode.markDefs = (newNode.markDefs || []).map((def) => {\n      const oldKey = def._key, newKey = keyGenerator();\n      return newNode.children = newNode.children.map(\n        (child) => child._type === spanTypeName && editor.isTextSpan(child) ? {\n          ...child,\n          marks: child.marks && child.marks.includes(oldKey) ? (\n            // eslint-disable-next-line max-nested-callbacks\n            [...child.marks].filter((mark) => mark !== oldKey).concat(newKey)\n          ) : child.marks\n        } : child\n      ), { ...def, _key: newKey };\n    }));\n    const nodeWithNewKeys = { ...newNode, _key: keyGenerator() };\n    return editor.isTextBlock(nodeWithNewKeys) && (nodeWithNewKeys.children = nodeWithNewKeys.children.map((child) => ({\n      ...child,\n      _key: keyGenerator()\n    }))), nodeWithNewKeys;\n  });\n}\nfunction _insertFragment(editor, fragment, schemaTypes) {\n  editor.withoutNormalizing(() => {\n    if (!editor.selection)\n      return;\n    const [focusBlock, focusPath] = slate__WEBPACK_IMPORTED_MODULE_18__.Editor.node(editor, editor.selection, { depth: 1 });\n    if (editor.isTextBlock(focusBlock) && editor.isTextBlock(fragment[0])) {\n      const { markDefs } = focusBlock;\n      debug$6(\"Mixing markDefs of focusBlock and fragments[0] block\", markDefs, fragment[0].markDefs), lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(markDefs, fragment[0].markDefs) || slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n        editor,\n        {\n          markDefs: lodash_uniq_js__WEBPACK_IMPORTED_MODULE_5__([...fragment[0].markDefs || [], ...markDefs || []])\n        },\n        { at: focusPath, mode: \"lowest\", voids: !1 }\n      );\n    }\n    isEqualToEmptyEditor(editor.children, schemaTypes) ? (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.splitNodes(editor, { at: [0, 0] }), editor.insertFragment(fragment), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(editor, { at: [0] })) : editor.insertFragment(fragment);\n  }), editor.onChange();\n}\nconst originalFnMap = /* @__PURE__ */ new WeakMap(), withPlugins = (editor, options) => {\n  const e = editor, { keyGenerator, portableTextEditor, patches$, readOnly, maxBlocks } = options, { schemaTypes, change$ } = portableTextEditor;\n  e.subscriptions = [], e.destroy ? e.destroy() : originalFnMap.set(e, {\n    apply: e.apply,\n    onChange: e.onChange,\n    normalizeNode: e.normalizeNode\n  });\n  const operationToPatches = createOperationToPatches(schemaTypes), withObjectKeys = createWithObjectKeys(schemaTypes, keyGenerator), withSchemaTypes = createWithSchemaTypes({ schemaTypes, keyGenerator }), withEditableAPI = createWithEditableAPI(portableTextEditor, schemaTypes, keyGenerator), withPatches = createWithPatches({\n    change$,\n    keyGenerator,\n    patches$,\n    patchFunctions: operationToPatches,\n    readOnly,\n    schemaTypes\n  }), withMaxBlocks = createWithMaxBlocks(maxBlocks || -1), withPortableTextLists = createWithPortableTextLists(schemaTypes), withUndoRedo = createWithUndoRedo({\n    readOnly,\n    patches$,\n    blockSchemaType: schemaTypes.block\n  }), withPortableTextMarkModel = createWithPortableTextMarkModel(schemaTypes, change$), withPortableTextBlockStyle = createWithPortableTextBlockStyle(schemaTypes), withPlaceholderBlock = createWithPlaceholderBlock(), withInsertBreak = createWithInsertBreak(schemaTypes), withUtils = createWithUtils({ keyGenerator, schemaTypes, portableTextEditor }), withPortableTextSelections = createWithPortableTextSelections(change$, schemaTypes);\n  return e.destroy = () => {\n    const originalFunctions = originalFnMap.get(e);\n    if (!originalFunctions)\n      throw new Error(\"Could not find pristine versions of editor functions\");\n    e.apply = originalFunctions.apply, e.history = { undos: [], redos: [] }, e.normalizeNode = originalFunctions.normalizeNode, e.onChange = originalFunctions.onChange;\n  }, readOnly ? {\n    editor: withSchemaTypes(\n      withObjectKeys(\n        withPortableTextMarkModel(\n          withPortableTextBlockStyle(\n            withUtils(\n              withPlaceholderBlock(\n                withPortableTextLists(\n                  withPortableTextSelections(withEditableAPI(withInsertBreak(e)))\n                )\n              )\n            )\n          )\n        )\n      )\n    ),\n    subscribe: () => lodash_noop_js__WEBPACK_IMPORTED_MODULE_2__\n  } : {\n    editor: withSchemaTypes(\n      withObjectKeys(\n        withPortableTextMarkModel(\n          withPortableTextBlockStyle(\n            withPortableTextLists(\n              withPlaceholderBlock(\n                withUtils(\n                  withMaxBlocks(\n                    withUndoRedo(\n                      withPatches(withPortableTextSelections(withEditableAPI(withInsertBreak(e))))\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    ),\n    subscribe: () => {\n      const unsubscribes = [];\n      return editor.subscriptions.forEach((subscribeFn) => {\n        unsubscribes.push(subscribeFn());\n      }), () => {\n        unsubscribes.forEach((unsubscribeFn) => {\n          unsubscribeFn();\n        });\n      };\n    }\n  };\n}, debug$5 = debugWithName(\"component:PortableTextEditor:SlateContainer\");\nfunction SlateContainer(props) {\n  const { patches$, portableTextEditor, readOnly, maxBlocks, keyGenerator } = props, [[slateEditor, subscribe]] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(() => {\n    debug$5(\"Creating new Slate editor instance\");\n    const { editor, subscribe: _sub } = withPlugins((0,slate_react__WEBPACK_IMPORTED_MODULE_21__.withReact)((0,slate__WEBPACK_IMPORTED_MODULE_18__.createEditor)()), {\n      keyGenerator,\n      maxBlocks,\n      patches$,\n      portableTextEditor,\n      readOnly\n    });\n    return KEY_TO_VALUE_ELEMENT.set(editor, {}), KEY_TO_SLATE_ELEMENT.set(editor, {}), [editor, _sub];\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    const unsubscribe = subscribe();\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribe]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    debug$5(\"Re-initializing plugin chain\"), withPlugins(slateEditor, {\n      keyGenerator,\n      maxBlocks,\n      patches$,\n      portableTextEditor,\n      readOnly\n    });\n  }, [keyGenerator, portableTextEditor, maxBlocks, readOnly, patches$, slateEditor]);\n  const initialValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => [slateEditor.pteCreateEmptyBlock()], [slateEditor]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => () => {\n    debug$5(\"Destroying Slate editor\"), slateEditor.destroy();\n  }, [slateEditor]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(slate_react__WEBPACK_IMPORTED_MODULE_21__.Slate, { editor: slateEditor, initialValue, children: props.children });\n}\nconst defaultKeyGenerator = () => (0,_sanity_util_content__WEBPACK_IMPORTED_MODULE_25__.randomKey)(12), PortableTextEditorKeyGeneratorContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(defaultKeyGenerator), usePortableTextEditorKeyGenerator = () => {\n  const keyGenerator = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(PortableTextEditorKeyGeneratorContext);\n  if (keyGenerator === void 0)\n    throw new Error(\n      \"The `usePortableTextEditorKeyGenerator` hook must be used inside the <PortableTextEditor> component's context.\"\n    );\n  return keyGenerator;\n}, PortableTextEditorSelectionContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null), usePortableTextEditorSelection = () => {\n  const selection = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(PortableTextEditorSelectionContext);\n  if (selection === void 0)\n    throw new Error(\n      \"The `usePortableTextEditorSelection` hook must be used inside the <PortableTextEditor> component's context.\"\n    );\n  return selection;\n}, PortableTextEditorValueContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(\n  void 0\n), PortableTextEditorReadOnlyContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(!1), usePortableTextEditorReadOnlyStatus = () => {\n  const readOnly = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(PortableTextEditorReadOnlyContext);\n  if (readOnly === void 0)\n    throw new Error(\n      \"The `usePortableTextEditorReadOnly` hook must be used inside the <PortableTextEditor> component's context.\"\n    );\n  return readOnly;\n}, debug$4 = debugWithName(\"hook:useSyncValue\"), CURRENT_VALUE = /* @__PURE__ */ new WeakMap();\nfunction useSyncValue(props) {\n  const { portableTextEditor, readOnly, keyGenerator } = props, { change$, schemaTypes } = portableTextEditor, previousValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(), slateEditor = (0,slate_react__WEBPACK_IMPORTED_MODULE_21__.useSlate)(), updateValueFunctionRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(), updateFromCurrentValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    const currentValue = CURRENT_VALUE.get(portableTextEditor);\n    if (previousValue.current === currentValue) {\n      debug$4(\"Value is the same object as previous, not need to sync\");\n      return;\n    }\n    updateValueFunctionRef.current && currentValue && (debug$4(\"Updating the value debounced\"), updateValueFunctionRef.current(currentValue));\n  }, [portableTextEditor]), updateValueDebounced = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => lodash_debounce_js__WEBPACK_IMPORTED_MODULE_17__(updateFromCurrentValue, 1e3, { trailing: !0, leading: !1 }),\n    [updateFromCurrentValue]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    const updateFunction = (value) => {\n      CURRENT_VALUE.set(portableTextEditor, value);\n      const isProcessingLocalChanges = isChangingLocally(slateEditor), isProcessingRemoteChanges = isChangingRemotely(slateEditor);\n      if (!readOnly) {\n        if (isProcessingLocalChanges) {\n          debug$4(\"Has local changes, not syncing value right now\"), updateValueDebounced();\n          return;\n        }\n        if (isProcessingRemoteChanges) {\n          debug$4(\"Has remote changes, not syncing value right now\"), updateValueDebounced();\n          return;\n        }\n      }\n      let isChanged = !1, isValid = !0;\n      const hadSelection = !!slateEditor.selection;\n      if ((!value || value.length === 0) && (debug$4(\"Value is empty\"), slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(slateEditor, () => {\n        withoutSaving(slateEditor, () => {\n          withoutPatching(slateEditor, () => {\n            hadSelection && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.deselect(slateEditor);\n            const childrenLength = slateEditor.children.length;\n            slateEditor.children.forEach((_, index) => {\n              slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(slateEditor, {\n                at: [childrenLength - 1 - index]\n              });\n            }), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(slateEditor, slateEditor.pteCreateEmptyBlock(), { at: [0] }), hadSelection && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(slateEditor, [0, 0]);\n          });\n        });\n      }), isChanged = !0), value && value.length > 0) {\n        const slateValueFromProps = toSlateValue(value, {\n          schemaTypes\n        });\n        slate__WEBPACK_IMPORTED_MODULE_18__.Editor.withoutNormalizing(slateEditor, () => {\n          withRemoteChanges(slateEditor, () => {\n            withoutSaving(slateEditor, () => {\n              withoutPatching(slateEditor, () => {\n                const childrenLength = slateEditor.children.length;\n                if (slateValueFromProps.length < childrenLength) {\n                  for (let i = childrenLength - 1; i > slateValueFromProps.length - 1; i--)\n                    slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(slateEditor, {\n                      at: [i]\n                    });\n                  isChanged = !0;\n                }\n                slateValueFromProps.forEach((currentBlock, currentBlockIndex) => {\n                  var _a, _b, _c, _d, _e;\n                  const oldBlock = slateEditor.children[currentBlockIndex];\n                  if (oldBlock && !lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(currentBlock, oldBlock) && isValid) {\n                    const validationValue = [value[currentBlockIndex]], validation = validateValue(validationValue, schemaTypes, keyGenerator);\n                    !validation.valid && (_a = validation.resolution) != null && _a.autoResolve && ((_b = validation.resolution) == null ? void 0 : _b.patches.length) > 0 && !readOnly && previousValue.current && previousValue.current !== value && (console.warn(\n                      `${validation.resolution.action} for block with _key '${validationValue[0]._key}'. ${(_c = validation.resolution) == null ? void 0 : _c.description}`\n                    ), validation.resolution.patches.forEach((patch) => {\n                      change$.next({ type: \"patch\", patch });\n                    })), validation.valid || (_d = validation.resolution) != null && _d.autoResolve ? (oldBlock._key === currentBlock._key ? (debug$4.enabled && debug$4(\"Updating block\", oldBlock, currentBlock), _updateBlock(slateEditor, currentBlock, oldBlock, currentBlockIndex)) : (debug$4.enabled && debug$4(\"Replacing block\", oldBlock, currentBlock), _replaceBlock(slateEditor, currentBlock, currentBlockIndex)), isChanged = !0) : (change$.next({\n                      type: \"invalidValue\",\n                      resolution: validation.resolution,\n                      value\n                    }), isValid = !1);\n                  }\n                  if (!oldBlock && isValid) {\n                    const validationValue = [value[currentBlockIndex]], validation = validateValue(validationValue, schemaTypes, keyGenerator);\n                    debug$4.enabled && debug$4(\n                      \"Validating and inserting new block in the end of the value\",\n                      currentBlock\n                    ), validation.valid || (_e = validation.resolution) != null && _e.autoResolve ? withPreserveKeys(slateEditor, () => {\n                      slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(slateEditor, currentBlock, {\n                        at: [currentBlockIndex]\n                      });\n                    }) : (debug$4(\"Invalid\", validation), change$.next({\n                      type: \"invalidValue\",\n                      resolution: validation.resolution,\n                      value\n                    }), isValid = !1);\n                  }\n                });\n              });\n            });\n          });\n        });\n      }\n      if (!isValid) {\n        debug$4(\"Invalid value, returning\");\n        return;\n      }\n      if (isChanged) {\n        debug$4(\"Server value changed, syncing editor\");\n        try {\n          slateEditor.onChange();\n        } catch (err) {\n          console.error(err), change$.next({\n            type: \"invalidValue\",\n            resolution: null,\n            value\n          });\n          return;\n        }\n        hadSelection && !slateEditor.selection && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(slateEditor, {\n          anchor: { path: [0, 0], offset: 0 },\n          focus: { path: [0, 0], offset: 0 }\n        }), slateEditor.onChange()), change$.next({ type: \"value\", value });\n      } else\n        debug$4(\"Server value and editor value is equal, no need to sync.\");\n      previousValue.current = value;\n    };\n    return updateValueFunctionRef.current = updateFunction, updateFunction;\n  }, [\n    change$,\n    keyGenerator,\n    portableTextEditor,\n    readOnly,\n    schemaTypes,\n    slateEditor,\n    updateValueDebounced\n  ]);\n}\nfunction _replaceBlock(slateEditor, currentBlock, currentBlockIndex) {\n  const currentSelection = slateEditor.selection, selectionFocusOnBlock = currentSelection && currentSelection.focus.path[0] === currentBlockIndex;\n  selectionFocusOnBlock && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.deselect(slateEditor), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(slateEditor, { at: [currentBlockIndex] }), withPreserveKeys(slateEditor, () => {\n    slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(slateEditor, currentBlock, { at: [currentBlockIndex] });\n  }), slateEditor.onChange(), selectionFocusOnBlock && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(slateEditor, currentSelection);\n}\nfunction _updateBlock(slateEditor, currentBlock, oldBlock, currentBlockIndex) {\n  if (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(slateEditor, currentBlock, {\n    at: [currentBlockIndex]\n  }), slateEditor.isTextBlock(currentBlock) && slateEditor.isTextBlock(oldBlock)) {\n    const oldBlockChildrenLength = oldBlock.children.length;\n    currentBlock.children.length < oldBlockChildrenLength && Array.from(Array(oldBlockChildrenLength - currentBlock.children.length)).forEach(\n      (_, index) => {\n        const childIndex = oldBlockChildrenLength - 1 - index;\n        childIndex > 0 && (debug$4(\"Removing child\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(slateEditor, {\n          at: [currentBlockIndex, childIndex]\n        }));\n      }\n    ), currentBlock.children.forEach((currentBlockChild, currentBlockChildIndex) => {\n      const oldBlockChild = oldBlock.children[currentBlockChildIndex], isChildChanged = !lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(currentBlockChild, oldBlockChild), isTextChanged = !lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(currentBlockChild.text, oldBlockChild == null ? void 0 : oldBlockChild.text), path = [currentBlockIndex, currentBlockChildIndex];\n      if (isChildChanged)\n        if (currentBlockChild._key === (oldBlockChild == null ? void 0 : oldBlockChild._key)) {\n          debug$4(\"Updating changed child\", currentBlockChild, oldBlockChild), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(slateEditor, currentBlockChild, {\n            at: path\n          });\n          const isSpanNode = slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(currentBlockChild) && currentBlockChild._type === \"span\" && slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(oldBlockChild) && oldBlockChild._type === \"span\";\n          isSpanNode && isTextChanged ? (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.delete(slateEditor, {\n            at: { focus: { path, offset: 0 }, anchor: { path, offset: oldBlockChild.text.length } }\n          }), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertText(slateEditor, currentBlockChild.text, {\n            at: path\n          }), slateEditor.onChange()) : isSpanNode || (debug$4(\"Updating changed inline object child\", currentBlockChild), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.setNodes(\n            slateEditor,\n            { _key: VOID_CHILD_KEY },\n            {\n              at: [...path, 0],\n              voids: !0\n            }\n          ));\n        } else oldBlockChild ? (debug$4(\"Replacing child\", currentBlockChild), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.removeNodes(slateEditor, {\n          at: [currentBlockIndex, currentBlockChildIndex]\n        }), withPreserveKeys(slateEditor, () => {\n          slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(slateEditor, currentBlockChild, {\n            at: [currentBlockIndex, currentBlockChildIndex]\n          });\n        }), slateEditor.onChange()) : oldBlockChild || (debug$4(\"Inserting new child\", currentBlockChild), withPreserveKeys(slateEditor, () => {\n          slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(slateEditor, currentBlockChild, {\n            at: [currentBlockIndex, currentBlockChildIndex]\n          }), slateEditor.onChange();\n        }));\n    });\n  }\n}\nconst debug$3 = debugWithName(\"component:PortableTextEditor:Synchronizer\"), debugVerbose = debug$3.enabled && !1, FLUSH_PATCHES_THROTTLED_MS =  false ? 0 : 1e3;\nfunction Synchronizer(props) {\n  const { change$, portableTextEditor, onChange, keyGenerator, readOnly, value } = props, [selection, setSelection] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null), pendingPatches = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)([]), syncValue = useSyncValue({\n    keyGenerator,\n    onChange,\n    portableTextEditor,\n    readOnly\n  }), slateEditor = (0,slate_react__WEBPACK_IMPORTED_MODULE_21__.useSlate)();\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    IS_PROCESSING_LOCAL_CHANGES.set(slateEditor, !1);\n  }, [slateEditor]);\n  const onFlushPendingPatches = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    if (pendingPatches.current.length > 0) {\n      debug$3(\"Flushing pending patches\"), debugVerbose && debug$3(`Patches:\n${JSON.stringify(pendingPatches.current, null, 2)}`);\n      const snapshot = PortableTextEditor.getValue(portableTextEditor);\n      change$.next({ type: \"mutation\", patches: pendingPatches.current, snapshot }), pendingPatches.current = [];\n    }\n    IS_PROCESSING_LOCAL_CHANGES.set(slateEditor, !1);\n  }, [slateEditor, portableTextEditor, change$]), onFlushPendingPatchesThrottled = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => lodash_throttle_js__WEBPACK_IMPORTED_MODULE_16__(\n    () => {\n      if (slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isNormalizing(slateEditor)) {\n        onFlushPendingPatches();\n        return;\n      }\n      onFlushPendingPatchesThrottled();\n    },\n    FLUSH_PATCHES_THROTTLED_MS,\n    {\n      leading: !1,\n      trailing: !0\n    }\n  ), [onFlushPendingPatches, slateEditor]);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => () => {\n    onFlushPendingPatches();\n  }, [onFlushPendingPatches]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    debug$3(\"Subscribing to editor changes$\");\n    const sub = change$.subscribe((next) => {\n      switch (next.type) {\n        case \"patch\":\n          IS_PROCESSING_LOCAL_CHANGES.set(slateEditor, !0), pendingPatches.current.push(next.patch), onFlushPendingPatchesThrottled(), onChange(next);\n          break;\n        case \"selection\":\n          (0,react__WEBPACK_IMPORTED_MODULE_3__.startTransition)(() => {\n            debugVerbose && debug$3(\"Setting selection\"), setSelection(next.selection);\n          }), onChange(next);\n          break;\n        default:\n          onChange(next);\n      }\n    });\n    return () => {\n      debug$3(\"Unsubscribing to changes$\"), sub.unsubscribe();\n    };\n  }, [change$, onChange, onFlushPendingPatchesThrottled, slateEditor]);\n  const handleOnline = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    debug$3(\"Editor is online, syncing from props.value\"), change$.next({ type: \"connection\", value: \"online\" }), syncValue(value);\n  }, [change$, syncValue, value]), handleOffline = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    debug$3(\"Editor is offline\"), change$.next({ type: \"connection\", value: \"offline\" });\n  }, [change$]);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => (portableTextEditor.props.patches$ && (window.addEventListener(\"online\", handleOnline), window.addEventListener(\"offline\", handleOffline)), () => {\n    portableTextEditor.props.patches$ && (window.removeEventListener(\"online\", handleOnline), window.removeEventListener(\"offline\", handleOffline));\n  }));\n  const isInitialValueFromProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(!0);\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    debug$3(\"Value from props changed, syncing new value\"), syncValue(value), isInitialValueFromProps.current && (change$.next({ type: \"loading\", isLoading: !1 }), change$.next({ type: \"ready\" }), isInitialValueFromProps.current = !1);\n  }, [change$, syncValue, value]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PortableTextEditorKeyGeneratorContext.Provider, { value: keyGenerator, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PortableTextEditorContext.Provider, { value: portableTextEditor, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PortableTextEditorValueContext.Provider, { value, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PortableTextEditorReadOnlyContext.Provider, { value: readOnly, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PortableTextEditorSelectionContext.Provider, { value: selection, children: props.children }) }) }) }) });\n}\nvar __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nconst debug$2 = debugWithName(\"component:PortableTextEditor\");\nclass PortableTextEditor extends react__WEBPACK_IMPORTED_MODULE_3__.Component {\n  constructor(props) {\n    if (super(props), __publicField(this, \"change$\", new rxjs__WEBPACK_IMPORTED_MODULE_26__.Subject()), __publicField(this, \"schemaTypes\"), __publicField(this, \"editable\"), __publicField(this, \"setEditable\", (editable) => {\n      this.editable = { ...this.editable, ...editable };\n    }), !props.schemaType)\n      throw new Error('PortableTextEditor: missing \"type\" property');\n    props.incomingPatches$ && console.warn(\"The prop 'incomingPatches$' is deprecated and renamed to 'patches$'\"), this.change$.next({ type: \"loading\", isLoading: !0 }), this.schemaTypes = getPortableTextMemberSchemaTypes(\n      props.schemaType.hasOwnProperty(\"jsonType\") ? props.schemaType : compileType(props.schemaType)\n    );\n  }\n  componentDidUpdate(prevProps) {\n    this.props.schemaType !== prevProps.schemaType && (this.schemaTypes = getPortableTextMemberSchemaTypes(\n      this.props.schemaType.hasOwnProperty(\"jsonType\") ? this.props.schemaType : compileType(this.props.schemaType)\n    )), this.props.editorRef !== prevProps.editorRef && this.props.editorRef && (this.props.editorRef.current = this);\n  }\n  render() {\n    const { onChange, value, children, patches$, incomingPatches$ } = this.props, { change$ } = this, _patches$ = incomingPatches$ || patches$, maxBlocks = typeof this.props.maxBlocks > \"u\" ? void 0 : parseInt(this.props.maxBlocks.toString(), 10) || void 0, readOnly = !!this.props.readOnly, keyGenerator = this.props.keyGenerator || defaultKeyGenerator;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      SlateContainer,\n      {\n        keyGenerator,\n        maxBlocks,\n        patches$: _patches$,\n        portableTextEditor: this,\n        readOnly,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          Synchronizer,\n          {\n            change$,\n            keyGenerator,\n            onChange,\n            portableTextEditor: this,\n            readOnly,\n            value,\n            children\n          }\n        )\n      }\n    );\n  }\n}\n__publicField(PortableTextEditor, \"activeAnnotations\", (editor) => editor && editor.editable ? editor.editable.activeAnnotations() : []), __publicField(PortableTextEditor, \"isAnnotationActive\", (editor, annotationType) => editor && editor.editable ? editor.editable.isAnnotationActive(annotationType) : !1), __publicField(PortableTextEditor, \"addAnnotation\", (editor, type, value) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.addAnnotation(type, value);\n}), __publicField(PortableTextEditor, \"blur\", (editor) => {\n  var _a;\n  debug$2(\"Host blurred\"), (_a = editor.editable) == null || _a.blur();\n}), __publicField(PortableTextEditor, \"delete\", (editor, selection, options) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.delete(selection, options);\n}), __publicField(PortableTextEditor, \"findDOMNode\", (editor, element) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.findDOMNode(element);\n}), __publicField(PortableTextEditor, \"findByPath\", (editor, path) => {\n  var _a;\n  return ((_a = editor.editable) == null ? void 0 : _a.findByPath(path)) || [];\n}), __publicField(PortableTextEditor, \"focus\", (editor) => {\n  var _a;\n  debug$2(\"Host requesting focus\"), (_a = editor.editable) == null || _a.focus();\n}), __publicField(PortableTextEditor, \"focusBlock\", (editor) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.focusBlock();\n}), __publicField(PortableTextEditor, \"focusChild\", (editor) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.focusChild();\n}), __publicField(PortableTextEditor, \"getSelection\", (editor) => editor.editable ? editor.editable.getSelection() : null), __publicField(PortableTextEditor, \"getValue\", (editor) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.getValue();\n}), __publicField(PortableTextEditor, \"hasBlockStyle\", (editor, blockStyle) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.hasBlockStyle(blockStyle);\n}), __publicField(PortableTextEditor, \"hasListStyle\", (editor, listStyle) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.hasListStyle(listStyle);\n}), __publicField(PortableTextEditor, \"isCollapsedSelection\", (editor) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.isCollapsedSelection();\n}), __publicField(PortableTextEditor, \"isExpandedSelection\", (editor) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.isExpandedSelection();\n}), __publicField(PortableTextEditor, \"isMarkActive\", (editor, mark) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.isMarkActive(mark);\n}), __publicField(PortableTextEditor, \"insertChild\", (editor, type, value) => {\n  var _a;\n  return debug$2(\"Host inserting child\"), (_a = editor.editable) == null ? void 0 : _a.insertChild(type, value);\n}), __publicField(PortableTextEditor, \"insertBlock\", (editor, type, value) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.insertBlock(type, value);\n}), __publicField(PortableTextEditor, \"insertBreak\", (editor) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.insertBreak();\n}), __publicField(PortableTextEditor, \"isVoid\", (editor, element) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.isVoid(element);\n}), __publicField(PortableTextEditor, \"isObjectPath\", (editor, path) => {\n  if (!path || !Array.isArray(path)) return !1;\n  const isChildObjectEditPath = path.length > 3 && path[1] === \"children\";\n  return path.length > 1 && path[1] !== \"children\" || isChildObjectEditPath;\n}), __publicField(PortableTextEditor, \"marks\", (editor) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.marks();\n}), __publicField(PortableTextEditor, \"select\", (editor, selection) => {\n  var _a;\n  debug$2(\"Host setting selection\", selection), (_a = editor.editable) == null || _a.select(selection);\n}), __publicField(PortableTextEditor, \"removeAnnotation\", (editor, type) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.removeAnnotation(type);\n}), __publicField(PortableTextEditor, \"toggleBlockStyle\", (editor, blockStyle) => {\n  var _a;\n  return debug$2(\"Host is toggling block style\"), (_a = editor.editable) == null ? void 0 : _a.toggleBlockStyle(blockStyle);\n}), __publicField(PortableTextEditor, \"toggleList\", (editor, listStyle) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.toggleList(listStyle);\n}), __publicField(PortableTextEditor, \"toggleMark\", (editor, mark) => {\n  var _a;\n  debug$2(\"Host toggling mark\", mark), (_a = editor.editable) == null || _a.toggleMark(mark);\n}), __publicField(PortableTextEditor, \"getFragment\", (editor) => {\n  var _a;\n  return debug$2(\"Host getting fragment\"), (_a = editor.editable) == null ? void 0 : _a.getFragment();\n}), __publicField(PortableTextEditor, \"undo\", (editor) => {\n  var _a;\n  debug$2(\"Host undoing\"), (_a = editor.editable) == null || _a.undo();\n}), __publicField(PortableTextEditor, \"redo\", (editor) => {\n  var _a;\n  debug$2(\"Host redoing\"), (_a = editor.editable) == null || _a.redo();\n}), __publicField(PortableTextEditor, \"isSelectionsOverlapping\", (editor, selectionA, selectionB) => {\n  var _a;\n  return (_a = editor.editable) == null ? void 0 : _a.isSelectionsOverlapping(selectionA, selectionB);\n});\nconst debug$1 = debugWithName(\"components:Leaf\"), EMPTY_MARKS = [], Leaf = (props) => {\n  const { attributes, children, leaf, schemaTypes, renderChild, renderDecorator, renderAnnotation } = props, spanRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null), portableTextEditor = usePortableTextEditor(), blockSelected = (0,slate_react__WEBPACK_IMPORTED_MODULE_21__.useSelected)(), [focused, setFocused] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1), [selected, setSelected] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1), block = children.props.parent, path = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => block ? [{ _key: block == null ? void 0 : block._key }, \"children\", { _key: leaf._key }] : [],\n    [block, leaf._key]\n  ), decoratorValues = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => schemaTypes.decorators.map((dec) => dec.value),\n    [schemaTypes.decorators]\n  ), marks = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => lodash_uniq_js__WEBPACK_IMPORTED_MODULE_5__((leaf.marks || EMPTY_MARKS).filter((mark) => decoratorValues.includes(mark))),\n    [decoratorValues, leaf.marks]\n  ), annotationMarks = Array.isArray(leaf.marks) ? leaf.marks : EMPTY_MARKS, annotations = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => annotationMarks.map(\n      (mark) => {\n        var _a;\n        return !decoratorValues.includes(mark) && ((_a = block == null ? void 0 : block.markDefs) == null ? void 0 : _a.find((def) => def._key === mark));\n      }\n    ).filter(Boolean),\n    [annotationMarks, block, decoratorValues]\n  ), shouldTrackSelectionAndFocus = annotations.length > 0 && blockSelected;\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (!shouldTrackSelectionAndFocus) {\n      setFocused(!1);\n      return;\n    }\n    const sel = PortableTextEditor.getSelection(portableTextEditor);\n    sel && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(sel.focus.path, path) && PortableTextEditor.isCollapsedSelection(portableTextEditor) && (0,react__WEBPACK_IMPORTED_MODULE_3__.startTransition)(() => {\n      setFocused(!0);\n    });\n  }, [shouldTrackSelectionAndFocus, path, portableTextEditor]);\n  const setSelectedFromRange = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    if (!shouldTrackSelectionAndFocus)\n      return;\n    debug$1(\"Setting selection and focus from range\");\n    const winSelection = window.getSelection();\n    if (!winSelection) {\n      setSelected(!1);\n      return;\n    }\n    if (winSelection && winSelection.rangeCount > 0) {\n      const range = winSelection.getRangeAt(0);\n      spanRef.current && range.intersectsNode(spanRef.current) ? setSelected(!0) : setSelected(!1);\n    } else\n      setSelected(!1);\n  }, [shouldTrackSelectionAndFocus]);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (!shouldTrackSelectionAndFocus)\n      return;\n    const sub = portableTextEditor.change$.subscribe((next) => {\n      if (next.type === \"blur\") {\n        setFocused(!1), setSelected(!1);\n        return;\n      }\n      if (next.type === \"focus\") {\n        const sel = PortableTextEditor.getSelection(portableTextEditor);\n        sel && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(sel.focus.path, path) && PortableTextEditor.isCollapsedSelection(portableTextEditor) && setFocused(!0), setSelectedFromRange();\n        return;\n      }\n      next.type === \"selection\" && (next.selection && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(next.selection.focus.path, path) && PortableTextEditor.isCollapsedSelection(portableTextEditor) ? setFocused(!0) : setFocused(!1), setSelectedFromRange());\n    });\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [path, portableTextEditor, setSelectedFromRange, shouldTrackSelectionAndFocus]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => setSelectedFromRange(), [setSelectedFromRange]);\n  const content = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    let returnedChildren = children;\n    if (slate__WEBPACK_IMPORTED_MODULE_18__.Text.isText(leaf) && leaf._type === schemaTypes.span.name && (marks.forEach((mark) => {\n      const schemaType = schemaTypes.decorators.find((dec) => dec.value === mark);\n      if (schemaType && renderDecorator) {\n        const _props = Object.defineProperty(\n          {\n            children: returnedChildren,\n            editorElementRef: spanRef,\n            focused,\n            path,\n            selected,\n            schemaType,\n            value: mark\n          },\n          \"type\",\n          {\n            enumerable: !1,\n            get() {\n              return console.warn(\"Property 'type' is deprecated, use 'schemaType' instead.\"), schemaType;\n            }\n          }\n        );\n        returnedChildren = renderDecorator(_props);\n      }\n    }), block && annotations.length > 0 && annotations.forEach((annotation) => {\n      const schemaType = schemaTypes.annotations.find((t) => t.name === annotation._type);\n      if (schemaType)\n        if (renderAnnotation) {\n          const _props = Object.defineProperty(\n            {\n              block,\n              children: returnedChildren,\n              editorElementRef: spanRef,\n              focused,\n              path,\n              selected,\n              schemaType,\n              value: annotation\n            },\n            \"type\",\n            {\n              enumerable: !1,\n              get() {\n                return console.warn(\"Property 'type' is deprecated, use 'schemaType' instead.\"), schemaType;\n              }\n            }\n          );\n          returnedChildren = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { ref: spanRef, children: renderAnnotation(_props) });\n        } else\n          returnedChildren = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultAnnotation, { annotation, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { ref: spanRef, children: returnedChildren }) });\n    }), block && renderChild)) {\n      const child = block.children.find((_child) => _child._key === leaf._key);\n      if (child) {\n        const _props = Object.defineProperty(\n          {\n            annotations,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: returnedChildren }),\n            editorElementRef: spanRef,\n            focused,\n            path,\n            schemaType: schemaTypes.span,\n            selected,\n            value: child\n          },\n          \"type\",\n          {\n            enumerable: !1,\n            get() {\n              return console.warn(\"Property 'type' is deprecated, use 'schemaType' instead.\"), schemaTypes.span;\n            }\n          }\n        );\n        returnedChildren = renderChild(_props);\n      }\n    }\n    return returnedChildren;\n  }, [\n    annotations,\n    block,\n    children,\n    focused,\n    leaf,\n    marks,\n    path,\n    renderAnnotation,\n    renderChild,\n    renderDecorator,\n    schemaTypes.annotations,\n    schemaTypes.decorators,\n    schemaTypes.span,\n    selected\n  ]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { ...attributes, ref: spanRef, children: content }, leaf._key),\n    [leaf, attributes, content]\n  );\n}, debug = debugWithName(\"component:Editable\"), PLACEHOLDER_STYLE = {\n  position: \"absolute\",\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  left: 0,\n  right: 0\n}, EMPTY_DECORATIONS_STATE = [], PortableTextEditable = (0,react__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function(props, forwardedRef) {\n  const {\n    hotkeys,\n    onBlur,\n    onFocus,\n    onBeforeInput,\n    onPaste,\n    onCopy,\n    onClick,\n    rangeDecorations,\n    renderAnnotation,\n    renderBlock,\n    renderChild,\n    renderDecorator,\n    renderListItem,\n    renderPlaceholder,\n    renderStyle,\n    selection: propsSelection,\n    scrollSelectionIntoView,\n    spellCheck,\n    ...restProps\n  } = props, portableTextEditor = usePortableTextEditor(), readOnly = usePortableTextEditorReadOnlyStatus(), keyGenerator = usePortableTextEditorKeyGenerator(), ref = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null), [editableElement, setEditableElement] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null), [hasInvalidValue, setHasInvalidValue] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1), [rangeDecorationState, setRangeDecorationsState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(EMPTY_DECORATIONS_STATE);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useImperativeHandle)(forwardedRef, () => ref.current);\n  const rangeDecorationsRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(rangeDecorations), { change$, schemaTypes } = portableTextEditor, slateEditor = (0,slate_react__WEBPACK_IMPORTED_MODULE_21__.useSlate)(), blockTypeName = schemaTypes.block.name, withInsertData = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => createWithInsertData(change$, schemaTypes, keyGenerator),\n    [change$, keyGenerator, schemaTypes]\n  ), withHotKeys = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(\n    () => createWithHotkeys(schemaTypes, portableTextEditor, hotkeys),\n    [hotkeys, portableTextEditor, schemaTypes]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => readOnly ? (debug(\"Editable is in read only mode\"), withInsertData(slateEditor)) : (debug(\"Editable is in edit mode\"), withInsertData(withHotKeys(slateEditor))), [readOnly, slateEditor, withHotKeys, withInsertData]);\n  const renderElement = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (eProps) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Element,\n      {\n        ...eProps,\n        readOnly,\n        renderBlock,\n        renderChild,\n        renderListItem,\n        renderStyle,\n        schemaTypes,\n        spellCheck\n      }\n    ),\n    [schemaTypes, spellCheck, readOnly, renderBlock, renderChild, renderListItem, renderStyle]\n  ), renderLeaf = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (lProps) => {\n      if (lProps.leaf._type === \"span\") {\n        let rendered = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          Leaf,\n          {\n            ...lProps,\n            schemaTypes,\n            renderAnnotation,\n            renderChild,\n            renderDecorator,\n            readOnly\n          }\n        );\n        if (renderPlaceholder && lProps.leaf.placeholder && lProps.text.text === \"\")\n          return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { style: PLACEHOLDER_STYLE, contentEditable: !1, children: renderPlaceholder() }),\n            rendered\n          ] });\n        const decoration = lProps.leaf.rangeDecoration;\n        return decoration && (rendered = decoration.component({ children: rendered })), rendered;\n      }\n      return lProps.children;\n    },\n    [readOnly, renderAnnotation, renderChild, renderDecorator, renderPlaceholder, schemaTypes]\n  ), restoreSelectionFromProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    if (propsSelection) {\n      debug(`Selection from props ${JSON.stringify(propsSelection)}`);\n      const normalizedSelection = normalizeSelection(\n        propsSelection,\n        fromSlateValue(slateEditor.children, blockTypeName)\n      );\n      if (normalizedSelection !== null) {\n        debug(`Normalized selection from props ${JSON.stringify(normalizedSelection)}`);\n        const slateRange = toSlateRange(normalizedSelection, slateEditor);\n        slateRange && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(slateEditor, slateRange), slateEditor.operations.some((o) => o.type === \"set_selection\") || change$.next({ type: \"selection\", selection: normalizedSelection }), slateEditor.onChange());\n      }\n    }\n  }, [propsSelection, slateEditor, blockTypeName, change$]), syncRangeDecorations = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (operation) => {\n      if (rangeDecorations && rangeDecorations.length > 0) {\n        const newSlateRanges = [];\n        if (rangeDecorations.forEach((rangeDecorationItem) => {\n          const slateRange = toSlateRange(rangeDecorationItem.selection, slateEditor);\n          if (!slate__WEBPACK_IMPORTED_MODULE_18__.Range.isRange(slateRange)) {\n            rangeDecorationItem.onMoved && rangeDecorationItem.onMoved({\n              newSelection: null,\n              rangeDecoration: rangeDecorationItem,\n              origin: \"local\"\n            });\n            return;\n          }\n          let newRange;\n          if (operation && (newRange = moveRangeByOperation(slateRange, operation), newRange && newRange !== slateRange || newRange === null && slateRange)) {\n            const value = PortableTextEditor.getValue(portableTextEditor), newRangeSelection = toPortableTextRange(value, newRange, schemaTypes);\n            rangeDecorationItem.onMoved && rangeDecorationItem.onMoved({\n              newSelection: newRangeSelection,\n              rangeDecoration: rangeDecorationItem,\n              origin: \"local\"\n            });\n          }\n          newRange !== null && newSlateRanges.push({ ...newRange || slateRange, rangeDecoration: rangeDecorationItem });\n        }), newSlateRanges.length > 0) {\n          setRangeDecorationsState(newSlateRanges);\n          return;\n        }\n      }\n      setRangeDecorationsState(EMPTY_DECORATIONS_STATE);\n    },\n    [portableTextEditor, rangeDecorations, schemaTypes, slateEditor]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    const sub = change$.subscribe((next) => {\n      switch (next.type) {\n        case \"ready\":\n          restoreSelectionFromProps();\n          break;\n        case \"invalidValue\":\n          setHasInvalidValue(!0);\n          break;\n        case \"value\":\n          setHasInvalidValue(!1);\n          break;\n      }\n    });\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [change$, restoreSelectionFromProps]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    propsSelection && !hasInvalidValue && restoreSelectionFromProps();\n  }, [hasInvalidValue, propsSelection, restoreSelectionFromProps]);\n  const originalApply = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => slateEditor.apply, [slateEditor]), [syncedRangeDecorations, setSyncedRangeDecorations] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    syncedRangeDecorations || (setSyncedRangeDecorations(!0), syncRangeDecorations());\n  }, [syncRangeDecorations, syncedRangeDecorations]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(rangeDecorations, rangeDecorationsRef.current) || syncRangeDecorations(), rangeDecorationsRef.current = rangeDecorations;\n  }, [rangeDecorations, syncRangeDecorations]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => (slateEditor.apply = (op) => {\n    originalApply(op), op.type !== \"set_selection\" && syncRangeDecorations(op);\n  }, () => {\n    slateEditor.apply = originalApply;\n  }), [originalApply, slateEditor, syncRangeDecorations]);\n  const handleCopy = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      onCopy && onCopy(event) !== void 0 && event.preventDefault();\n    },\n    [onCopy]\n  ), handlePaste = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      if (event.preventDefault(), !!slateEditor.selection) {\n        if (!onPaste) {\n          debug(\"Pasting normally\"), slateEditor.insertData(event.clipboardData);\n          return;\n        }\n        new Promise((resolve) => {\n          const value = PortableTextEditor.getValue(portableTextEditor), ptRange = toPortableTextRange(value, slateEditor.selection, schemaTypes), path = (ptRange == null ? void 0 : ptRange.focus.path) || [];\n          resolve(\n            onPaste({\n              event,\n              value,\n              path,\n              schemaTypes\n            })\n          );\n        }).then((result) => {\n          if (debug(\"Custom paste function from client resolved\", result), change$.next({ type: \"loading\", isLoading: !0 }), !result || !result.insert) {\n            debug(\"No result from custom paste handler, pasting normally\"), slateEditor.insertData(event.clipboardData);\n            return;\n          }\n          if (result && result.insert) {\n            slateEditor.insertFragment(\n              toSlateValue(result.insert, { schemaTypes })\n            ), change$.next({ type: \"loading\", isLoading: !1 });\n            return;\n          }\n          console.warn(\"Your onPaste function returned something unexpected:\", result);\n        }).catch((error) => (change$.next({ type: \"loading\", isLoading: !1 }), console.error(error), error));\n      }\n    },\n    [change$, onPaste, portableTextEditor, schemaTypes, slateEditor]\n  ), handleOnFocus = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      if (onFocus && onFocus(event), !event.isDefaultPrevented()) {\n        const selection = PortableTextEditor.getSelection(portableTextEditor);\n        selection === null && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(slateEditor, slate__WEBPACK_IMPORTED_MODULE_18__.Editor.start(slateEditor, [])), slateEditor.onChange()), change$.next({ type: \"focus\", event });\n        const newSelection = PortableTextEditor.getSelection(portableTextEditor);\n        selection === newSelection && change$.next({\n          type: \"selection\",\n          selection\n        });\n      }\n    },\n    [onFocus, portableTextEditor, change$, slateEditor]\n  ), handleClick = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      if (onClick && onClick(event), slateEditor.selection && event.target === event.currentTarget) {\n        const [lastBlock, path] = slate__WEBPACK_IMPORTED_MODULE_18__.Node.last(slateEditor, []), focusPath = slateEditor.selection.focus.path.slice(0, 1), lastPath = path.slice(0, 1);\n        if (slate__WEBPACK_IMPORTED_MODULE_18__.Path.equals(focusPath, lastPath)) {\n          const node = slate__WEBPACK_IMPORTED_MODULE_18__.Node.descendant(slateEditor, path.slice(0, 1));\n          lastBlock && slate__WEBPACK_IMPORTED_MODULE_18__.Editor.isVoid(slateEditor, node) && (slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.insertNodes(slateEditor, slateEditor.pteCreateEmptyBlock()), slateEditor.onChange());\n        }\n      }\n    },\n    [onClick, slateEditor]\n  ), handleOnBlur = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      onBlur && onBlur(event), event.isPropagationStopped() || change$.next({ type: \"blur\", event });\n    },\n    [change$, onBlur]\n  ), handleOnBeforeInput = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      onBeforeInput && onBeforeInput(event);\n    },\n    [onBeforeInput]\n  ), validateSelection = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    if (!slateEditor.selection)\n      return;\n    const root = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.findDocumentOrShadowRoot(slateEditor), { activeElement } = root;\n    if (ref.current !== activeElement)\n      return;\n    const domSelection = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.getWindow(slateEditor).getSelection();\n    if (!domSelection || domSelection.rangeCount === 0)\n      return;\n    const existingDOMRange = domSelection.getRangeAt(0);\n    try {\n      const newDOMRange = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.toDOMRange(slateEditor, slateEditor.selection);\n      (newDOMRange.startOffset !== existingDOMRange.startOffset || newDOMRange.endOffset !== existingDOMRange.endOffset) && (debug(\"DOM range out of sync, validating selection\"), domSelection == null || domSelection.removeAllRanges(), domSelection.addRange(newDOMRange));\n    } catch {\n      debug(\"Could not resolve selection, selecting top document\"), slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.deselect(slateEditor), slateEditor.children.length > 0 && slate__WEBPACK_IMPORTED_MODULE_18__.Transforms.select(slateEditor, [0, 0]), slateEditor.onChange();\n    }\n  }, [ref, slateEditor]);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (editableElement) {\n      const mutationObserver = new MutationObserver(validateSelection);\n      return mutationObserver.observe(editableElement, {\n        attributeOldValue: !1,\n        attributes: !1,\n        characterData: !1,\n        childList: !0,\n        subtree: !0\n      }), () => {\n        mutationObserver.disconnect();\n      };\n    }\n  }, [validateSelection, editableElement]);\n  const handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    (event) => {\n      props.onKeyDown && props.onKeyDown(event), event.isDefaultPrevented() || slateEditor.pteWithHotKeys(event);\n    },\n    [props, slateEditor]\n  ), scrollSelectionIntoViewToSlate = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    if (scrollSelectionIntoView !== void 0)\n      return scrollSelectionIntoView === null ? lodash_noop_js__WEBPACK_IMPORTED_MODULE_2__ : (editor, domRange) => {\n        scrollSelectionIntoView(portableTextEditor, domRange);\n      };\n  }, [portableTextEditor, scrollSelectionIntoView]), decorate = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(\n    ([, path]) => {\n      if (isEqualToEmptyEditor(slateEditor.children, schemaTypes))\n        return [\n          {\n            anchor: {\n              path: [0, 0],\n              offset: 0\n            },\n            focus: {\n              path: [0, 0],\n              offset: 0\n            },\n            placeholder: !0\n          }\n        ];\n      if (path.length === 0)\n        return EMPTY_DECORATIONS_STATE;\n      const result = rangeDecorationState.filter((item) => slate__WEBPACK_IMPORTED_MODULE_18__.Range.isCollapsed(item) ? path.length !== 2 ? !1 : slate__WEBPACK_IMPORTED_MODULE_18__.Path.equals(item.focus.path, path) && slate__WEBPACK_IMPORTED_MODULE_18__.Path.equals(item.anchor.path, path) : slate__WEBPACK_IMPORTED_MODULE_18__.Range.intersection(item, { anchor: { path, offset: 0 }, focus: { path, offset: 0 } }) || slate__WEBPACK_IMPORTED_MODULE_18__.Range.includes(item, path));\n      return result.length > 0 ? result : EMPTY_DECORATIONS_STATE;\n    },\n    [slateEditor, schemaTypes, rangeDecorationState]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    ref.current = slate_react__WEBPACK_IMPORTED_MODULE_21__.ReactEditor.toDOMNode(slateEditor, slateEditor), setEditableElement(ref.current);\n  }, [slateEditor, ref]), portableTextEditor ? hasInvalidValue ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    slate_react__WEBPACK_IMPORTED_MODULE_21__.Editable,\n    {\n      ...restProps,\n      autoFocus: !1,\n      className: restProps.className || \"pt-editable\",\n      decorate,\n      onBlur: handleOnBlur,\n      onCopy: handleCopy,\n      onClick: handleClick,\n      onDOMBeforeInput: handleOnBeforeInput,\n      onFocus: handleOnFocus,\n      onKeyDown: handleKeyDown,\n      onPaste: handlePaste,\n      readOnly,\n      renderPlaceholder: void 0,\n      renderElement,\n      renderLeaf,\n      scrollSelectionIntoView: scrollSelectionIntoViewToSlate\n    }\n  ) : null;\n});\nfunction compactPatches(patches) {\n  const lastPatch = patches.slice(-1)[0];\n  if (lastPatch && lastPatch.type === \"unset\" && lastPatch.path.length === 0)\n    return [lastPatch];\n  let finalPatches = patches;\n  return finalPatches = finalPatches.filter((patch, index) => {\n    if (!patch)\n      return !1;\n    const nextPatch = finalPatches[index + 1];\n    return !(nextPatch && nextPatch.type === \"set\" && patch.type === \"set\" && lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_1__(patch.path, nextPatch.path));\n  }), finalPatches.length !== patches.length ? finalPatches : patches;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/portable-text-editor/lib/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/schema/lib/_chunks-es/resolve.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/schema/lib/_chunks-es/resolve.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_MAX_FIELD_DEPTH: () => (/* binding */ DEFAULT_MAX_FIELD_DEPTH),\n/* harmony export */   resolveSearchConfig: () => (/* binding */ resolveSearchConfig),\n/* harmony export */   resolveSearchConfigForBaseFieldPaths: () => (/* binding */ resolveSearchConfigForBaseFieldPaths)\n/* harmony export */ });\n/* harmony import */ var lodash_isFinite_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isFinite.js */ \"(ssr)/./node_modules/lodash/isFinite.js\");\n/* harmony import */ var lodash_uniqBy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/uniqBy.js */ \"(ssr)/./node_modules/lodash/uniqBy.js\");\n\n\nconst DEFAULT_MAX_FIELD_DEPTH = 5, stringFieldsSymbols = {}, getStringFieldSymbol = (maxDepth) => (stringFieldsSymbols[maxDepth] || (stringFieldsSymbols[maxDepth] = Symbol(`__cachedStringFields_${maxDepth}`)), stringFieldsSymbols[maxDepth]), isReference = (type) => type.type && type.type.name === \"reference\", portableTextFields = [\"style\", \"list\"], isPortableTextBlock = (type) => type.name === \"block\" || type.type && isPortableTextBlock(type.type), isPortableTextArray = (type) => type.jsonType === \"array\" && Array.isArray(type.of) && type.of.some(isPortableTextBlock);\nfunction reduceType(type, reducer, acc, path = [], maxDepth) {\n  if (maxDepth < 0)\n    return acc;\n  const accumulator = reducer(acc, type, path);\n  return type.jsonType === \"array\" && Array.isArray(type.of) ? reduceArray(type, reducer, accumulator, path, maxDepth) : type.jsonType === \"object\" && Array.isArray(type.fields) && !isReference(type) ? reduceObject(type, reducer, accumulator, path, maxDepth) : accumulator;\n}\nfunction reduceArray(arrayType, reducer, accumulator, path, maxDepth) {\n  return arrayType.of.reduce(\n    (acc, ofType) => reduceType(ofType, reducer, acc, path, maxDepth - 1),\n    accumulator\n  );\n}\nfunction reduceObject(objectType, reducer, accumulator, path, maxDepth) {\n  const isPtBlock = isPortableTextBlock(objectType);\n  return objectType.fields.reduce((acc, field) => {\n    if (isPtBlock && portableTextFields.includes(field.name))\n      return acc;\n    const segment = [field.name].concat(field.type.jsonType === \"array\" ? [[]] : []);\n    return reduceType(field.type, reducer, acc, path.concat(segment), maxDepth - 1);\n  }, accumulator);\n}\nconst BASE_WEIGHTS = [\n  { weight: 1, path: [\"_id\"] },\n  { weight: 1, path: [\"_type\"] }\n], PREVIEW_FIELD_WEIGHT_MAP = {\n  title: 10,\n  subtitle: 5,\n  description: 1.5\n};\nfunction deriveFromPreview(type, maxDepth) {\n  var _a;\n  const select = (_a = type == null ? void 0 : type.preview) == null ? void 0 : _a.select;\n  if (!select)\n    return [];\n  const fields = [];\n  for (const fieldName of Object.keys(select)) {\n    if (!(fieldName in PREVIEW_FIELD_WEIGHT_MAP))\n      continue;\n    const path = select[fieldName].split(\".\");\n    maxDepth > -1 && path.length - 1 > maxDepth || fields.push({\n      weight: PREVIEW_FIELD_WEIGHT_MAP[fieldName],\n      path\n    });\n  }\n  return fields;\n}\nfunction getCachedStringFieldPaths(type, maxDepth) {\n  const symbol = getStringFieldSymbol(maxDepth);\n  return type[symbol] || (type[symbol] = lodash_uniqBy_js__WEBPACK_IMPORTED_MODULE_1__(\n    [\n      ...BASE_WEIGHTS,\n      ...deriveFromPreview(type, maxDepth),\n      ...getStringFieldPaths(type, maxDepth).map((path) => ({ weight: 1, path })),\n      ...getPortableTextFieldPaths(type, maxDepth).map((path) => ({\n        weight: 1,\n        path,\n        mapWith: \"pt::text\"\n      }))\n    ],\n    (spec) => spec.path.join(\".\")\n  )), type[symbol];\n}\nfunction getCachedBaseFieldPaths(type, maxDepth) {\n  const symbol = getStringFieldSymbol(maxDepth);\n  return type[symbol] || (type[symbol] = lodash_uniqBy_js__WEBPACK_IMPORTED_MODULE_1__(\n    [...BASE_WEIGHTS, ...deriveFromPreview(type, maxDepth)],\n    (spec) => spec.path.join(\".\")\n  )), type[symbol];\n}\nfunction getStringFieldPaths(type, maxDepth) {\n  return reduceType(type, (accumulator, childType, path) => childType.jsonType === \"string\" ? [...accumulator, path] : accumulator, [], [], maxDepth);\n}\nfunction getPortableTextFieldPaths(type, maxDepth) {\n  return reduceType(type, (accumulator, childType, path) => isPortableTextArray(childType) ? [...accumulator, path] : accumulator, [], [], maxDepth);\n}\nfunction resolveSearchConfigForBaseFieldPaths(type, maxDepth) {\n  return getCachedBaseFieldPaths(type, normalizeMaxDepth(maxDepth));\n}\nfunction resolveSearchConfig(type, maxDepth) {\n  return getCachedStringFieldPaths(type, normalizeMaxDepth(maxDepth));\n}\nfunction normalizeMaxDepth(maxDepth) {\n  return !lodash_isFinite_js__WEBPACK_IMPORTED_MODULE_0__(maxDepth) || maxDepth < 1 || maxDepth > DEFAULT_MAX_FIELD_DEPTH ? DEFAULT_MAX_FIELD_DEPTH - 1 : maxDepth - 1;\n}\n\n//# sourceMappingURL=resolve.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9zY2hlbWEvbGliL19jaHVua3MtZXMvcmVzb2x2ZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEM7QUFDSjtBQUN0QywyREFBMkQseUlBQXlJLFNBQVM7QUFDN007QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLElBQUksMEJBQTBCO0FBQzlCLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyw2Q0FBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQSw4REFBOEQsaUJBQWlCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyw2Q0FBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwrQ0FBUTtBQUNsQjtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvc2NoZW1hL2xpYi9fY2h1bmtzLWVzL3Jlc29sdmUubWpzP2IxY2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGlzRmluaXRlIGZyb20gXCJsb2Rhc2gvaXNGaW5pdGUuanNcIjtcbmltcG9ydCB1bmlxQnkgZnJvbSBcImxvZGFzaC91bmlxQnkuanNcIjtcbmNvbnN0IERFRkFVTFRfTUFYX0ZJRUxEX0RFUFRIID0gNSwgc3RyaW5nRmllbGRzU3ltYm9scyA9IHt9LCBnZXRTdHJpbmdGaWVsZFN5bWJvbCA9IChtYXhEZXB0aCkgPT4gKHN0cmluZ0ZpZWxkc1N5bWJvbHNbbWF4RGVwdGhdIHx8IChzdHJpbmdGaWVsZHNTeW1ib2xzW21heERlcHRoXSA9IFN5bWJvbChgX19jYWNoZWRTdHJpbmdGaWVsZHNfJHttYXhEZXB0aH1gKSksIHN0cmluZ0ZpZWxkc1N5bWJvbHNbbWF4RGVwdGhdKSwgaXNSZWZlcmVuY2UgPSAodHlwZSkgPT4gdHlwZS50eXBlICYmIHR5cGUudHlwZS5uYW1lID09PSBcInJlZmVyZW5jZVwiLCBwb3J0YWJsZVRleHRGaWVsZHMgPSBbXCJzdHlsZVwiLCBcImxpc3RcIl0sIGlzUG9ydGFibGVUZXh0QmxvY2sgPSAodHlwZSkgPT4gdHlwZS5uYW1lID09PSBcImJsb2NrXCIgfHwgdHlwZS50eXBlICYmIGlzUG9ydGFibGVUZXh0QmxvY2sodHlwZS50eXBlKSwgaXNQb3J0YWJsZVRleHRBcnJheSA9ICh0eXBlKSA9PiB0eXBlLmpzb25UeXBlID09PSBcImFycmF5XCIgJiYgQXJyYXkuaXNBcnJheSh0eXBlLm9mKSAmJiB0eXBlLm9mLnNvbWUoaXNQb3J0YWJsZVRleHRCbG9jayk7XG5mdW5jdGlvbiByZWR1Y2VUeXBlKHR5cGUsIHJlZHVjZXIsIGFjYywgcGF0aCA9IFtdLCBtYXhEZXB0aCkge1xuICBpZiAobWF4RGVwdGggPCAwKVxuICAgIHJldHVybiBhY2M7XG4gIGNvbnN0IGFjY3VtdWxhdG9yID0gcmVkdWNlcihhY2MsIHR5cGUsIHBhdGgpO1xuICByZXR1cm4gdHlwZS5qc29uVHlwZSA9PT0gXCJhcnJheVwiICYmIEFycmF5LmlzQXJyYXkodHlwZS5vZikgPyByZWR1Y2VBcnJheSh0eXBlLCByZWR1Y2VyLCBhY2N1bXVsYXRvciwgcGF0aCwgbWF4RGVwdGgpIDogdHlwZS5qc29uVHlwZSA9PT0gXCJvYmplY3RcIiAmJiBBcnJheS5pc0FycmF5KHR5cGUuZmllbGRzKSAmJiAhaXNSZWZlcmVuY2UodHlwZSkgPyByZWR1Y2VPYmplY3QodHlwZSwgcmVkdWNlciwgYWNjdW11bGF0b3IsIHBhdGgsIG1heERlcHRoKSA6IGFjY3VtdWxhdG9yO1xufVxuZnVuY3Rpb24gcmVkdWNlQXJyYXkoYXJyYXlUeXBlLCByZWR1Y2VyLCBhY2N1bXVsYXRvciwgcGF0aCwgbWF4RGVwdGgpIHtcbiAgcmV0dXJuIGFycmF5VHlwZS5vZi5yZWR1Y2UoXG4gICAgKGFjYywgb2ZUeXBlKSA9PiByZWR1Y2VUeXBlKG9mVHlwZSwgcmVkdWNlciwgYWNjLCBwYXRoLCBtYXhEZXB0aCAtIDEpLFxuICAgIGFjY3VtdWxhdG9yXG4gICk7XG59XG5mdW5jdGlvbiByZWR1Y2VPYmplY3Qob2JqZWN0VHlwZSwgcmVkdWNlciwgYWNjdW11bGF0b3IsIHBhdGgsIG1heERlcHRoKSB7XG4gIGNvbnN0IGlzUHRCbG9jayA9IGlzUG9ydGFibGVUZXh0QmxvY2sob2JqZWN0VHlwZSk7XG4gIHJldHVybiBvYmplY3RUeXBlLmZpZWxkcy5yZWR1Y2UoKGFjYywgZmllbGQpID0+IHtcbiAgICBpZiAoaXNQdEJsb2NrICYmIHBvcnRhYmxlVGV4dEZpZWxkcy5pbmNsdWRlcyhmaWVsZC5uYW1lKSlcbiAgICAgIHJldHVybiBhY2M7XG4gICAgY29uc3Qgc2VnbWVudCA9IFtmaWVsZC5uYW1lXS5jb25jYXQoZmllbGQudHlwZS5qc29uVHlwZSA9PT0gXCJhcnJheVwiID8gW1tdXSA6IFtdKTtcbiAgICByZXR1cm4gcmVkdWNlVHlwZShmaWVsZC50eXBlLCByZWR1Y2VyLCBhY2MsIHBhdGguY29uY2F0KHNlZ21lbnQpLCBtYXhEZXB0aCAtIDEpO1xuICB9LCBhY2N1bXVsYXRvcik7XG59XG5jb25zdCBCQVNFX1dFSUdIVFMgPSBbXG4gIHsgd2VpZ2h0OiAxLCBwYXRoOiBbXCJfaWRcIl0gfSxcbiAgeyB3ZWlnaHQ6IDEsIHBhdGg6IFtcIl90eXBlXCJdIH1cbl0sIFBSRVZJRVdfRklFTERfV0VJR0hUX01BUCA9IHtcbiAgdGl0bGU6IDEwLFxuICBzdWJ0aXRsZTogNSxcbiAgZGVzY3JpcHRpb246IDEuNVxufTtcbmZ1bmN0aW9uIGRlcml2ZUZyb21QcmV2aWV3KHR5cGUsIG1heERlcHRoKSB7XG4gIHZhciBfYTtcbiAgY29uc3Qgc2VsZWN0ID0gKF9hID0gdHlwZSA9PSBudWxsID8gdm9pZCAwIDogdHlwZS5wcmV2aWV3KSA9PSBudWxsID8gdm9pZCAwIDogX2Euc2VsZWN0O1xuICBpZiAoIXNlbGVjdClcbiAgICByZXR1cm4gW107XG4gIGNvbnN0IGZpZWxkcyA9IFtdO1xuICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBvZiBPYmplY3Qua2V5cyhzZWxlY3QpKSB7XG4gICAgaWYgKCEoZmllbGROYW1lIGluIFBSRVZJRVdfRklFTERfV0VJR0hUX01BUCkpXG4gICAgICBjb250aW51ZTtcbiAgICBjb25zdCBwYXRoID0gc2VsZWN0W2ZpZWxkTmFtZV0uc3BsaXQoXCIuXCIpO1xuICAgIG1heERlcHRoID4gLTEgJiYgcGF0aC5sZW5ndGggLSAxID4gbWF4RGVwdGggfHwgZmllbGRzLnB1c2goe1xuICAgICAgd2VpZ2h0OiBQUkVWSUVXX0ZJRUxEX1dFSUdIVF9NQVBbZmllbGROYW1lXSxcbiAgICAgIHBhdGhcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gZmllbGRzO1xufVxuZnVuY3Rpb24gZ2V0Q2FjaGVkU3RyaW5nRmllbGRQYXRocyh0eXBlLCBtYXhEZXB0aCkge1xuICBjb25zdCBzeW1ib2wgPSBnZXRTdHJpbmdGaWVsZFN5bWJvbChtYXhEZXB0aCk7XG4gIHJldHVybiB0eXBlW3N5bWJvbF0gfHwgKHR5cGVbc3ltYm9sXSA9IHVuaXFCeShcbiAgICBbXG4gICAgICAuLi5CQVNFX1dFSUdIVFMsXG4gICAgICAuLi5kZXJpdmVGcm9tUHJldmlldyh0eXBlLCBtYXhEZXB0aCksXG4gICAgICAuLi5nZXRTdHJpbmdGaWVsZFBhdGhzKHR5cGUsIG1heERlcHRoKS5tYXAoKHBhdGgpID0+ICh7IHdlaWdodDogMSwgcGF0aCB9KSksXG4gICAgICAuLi5nZXRQb3J0YWJsZVRleHRGaWVsZFBhdGhzKHR5cGUsIG1heERlcHRoKS5tYXAoKHBhdGgpID0+ICh7XG4gICAgICAgIHdlaWdodDogMSxcbiAgICAgICAgcGF0aCxcbiAgICAgICAgbWFwV2l0aDogXCJwdDo6dGV4dFwiXG4gICAgICB9KSlcbiAgICBdLFxuICAgIChzcGVjKSA9PiBzcGVjLnBhdGguam9pbihcIi5cIilcbiAgKSksIHR5cGVbc3ltYm9sXTtcbn1cbmZ1bmN0aW9uIGdldENhY2hlZEJhc2VGaWVsZFBhdGhzKHR5cGUsIG1heERlcHRoKSB7XG4gIGNvbnN0IHN5bWJvbCA9IGdldFN0cmluZ0ZpZWxkU3ltYm9sKG1heERlcHRoKTtcbiAgcmV0dXJuIHR5cGVbc3ltYm9sXSB8fCAodHlwZVtzeW1ib2xdID0gdW5pcUJ5KFxuICAgIFsuLi5CQVNFX1dFSUdIVFMsIC4uLmRlcml2ZUZyb21QcmV2aWV3KHR5cGUsIG1heERlcHRoKV0sXG4gICAgKHNwZWMpID0+IHNwZWMucGF0aC5qb2luKFwiLlwiKVxuICApKSwgdHlwZVtzeW1ib2xdO1xufVxuZnVuY3Rpb24gZ2V0U3RyaW5nRmllbGRQYXRocyh0eXBlLCBtYXhEZXB0aCkge1xuICByZXR1cm4gcmVkdWNlVHlwZSh0eXBlLCAoYWNjdW11bGF0b3IsIGNoaWxkVHlwZSwgcGF0aCkgPT4gY2hpbGRUeXBlLmpzb25UeXBlID09PSBcInN0cmluZ1wiID8gWy4uLmFjY3VtdWxhdG9yLCBwYXRoXSA6IGFjY3VtdWxhdG9yLCBbXSwgW10sIG1heERlcHRoKTtcbn1cbmZ1bmN0aW9uIGdldFBvcnRhYmxlVGV4dEZpZWxkUGF0aHModHlwZSwgbWF4RGVwdGgpIHtcbiAgcmV0dXJuIHJlZHVjZVR5cGUodHlwZSwgKGFjY3VtdWxhdG9yLCBjaGlsZFR5cGUsIHBhdGgpID0+IGlzUG9ydGFibGVUZXh0QXJyYXkoY2hpbGRUeXBlKSA/IFsuLi5hY2N1bXVsYXRvciwgcGF0aF0gOiBhY2N1bXVsYXRvciwgW10sIFtdLCBtYXhEZXB0aCk7XG59XG5mdW5jdGlvbiByZXNvbHZlU2VhcmNoQ29uZmlnRm9yQmFzZUZpZWxkUGF0aHModHlwZSwgbWF4RGVwdGgpIHtcbiAgcmV0dXJuIGdldENhY2hlZEJhc2VGaWVsZFBhdGhzKHR5cGUsIG5vcm1hbGl6ZU1heERlcHRoKG1heERlcHRoKSk7XG59XG5mdW5jdGlvbiByZXNvbHZlU2VhcmNoQ29uZmlnKHR5cGUsIG1heERlcHRoKSB7XG4gIHJldHVybiBnZXRDYWNoZWRTdHJpbmdGaWVsZFBhdGhzKHR5cGUsIG5vcm1hbGl6ZU1heERlcHRoKG1heERlcHRoKSk7XG59XG5mdW5jdGlvbiBub3JtYWxpemVNYXhEZXB0aChtYXhEZXB0aCkge1xuICByZXR1cm4gIWlzRmluaXRlKG1heERlcHRoKSB8fCBtYXhEZXB0aCA8IDEgfHwgbWF4RGVwdGggPiBERUZBVUxUX01BWF9GSUVMRF9ERVBUSCA/IERFRkFVTFRfTUFYX0ZJRUxEX0RFUFRIIC0gMSA6IG1heERlcHRoIC0gMTtcbn1cbmV4cG9ydCB7XG4gIERFRkFVTFRfTUFYX0ZJRUxEX0RFUFRILFxuICByZXNvbHZlU2VhcmNoQ29uZmlnLFxuICByZXNvbHZlU2VhcmNoQ29uZmlnRm9yQmFzZUZpZWxkUGF0aHNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNvbHZlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/schema/lib/_chunks-es/resolve.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/schema/lib/_internal.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@sanity/schema/lib/_internal.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_MAX_FIELD_DEPTH: () => (/* reexport safe */ _chunks_es_resolve_mjs__WEBPACK_IMPORTED_MODULE_11__.DEFAULT_MAX_FIELD_DEPTH),\n/* harmony export */   extractSchema: () => (/* binding */ extractSchema),\n/* harmony export */   groupProblems: () => (/* binding */ groupProblems),\n/* harmony export */   isActionEnabled: () => (/* binding */ isActionEnabled),\n/* harmony export */   resolveSearchConfig: () => (/* reexport safe */ _chunks_es_resolve_mjs__WEBPACK_IMPORTED_MODULE_11__.resolveSearchConfig),\n/* harmony export */   resolveSearchConfigForBaseFieldPaths: () => (/* reexport safe */ _chunks_es_resolve_mjs__WEBPACK_IMPORTED_MODULE_11__.resolveSearchConfigForBaseFieldPaths),\n/* harmony export */   validateSchema: () => (/* binding */ validateSchema)\n/* harmony export */ });\n/* harmony import */ var lodash_difference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/difference.js */ \"(ssr)/./node_modules/lodash/difference.js\");\n/* harmony import */ var _chunks_es_resolve_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./_chunks-es/resolve.mjs */ \"(ssr)/./node_modules/@sanity/schema/lib/_chunks-es/resolve.mjs\");\n/* harmony import */ var groq_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! groq-js */ \"(ssr)/./node_modules/groq-js/dist/1.mjs\");\n/* harmony import */ var lodash_flatten_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/flatten.js */ \"(ssr)/./node_modules/lodash/flatten.js\");\n/* harmony import */ var lodash_get_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/get.js */ \"(ssr)/./node_modules/lodash/get.js\");\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/uniq.js */ \"(ssr)/./node_modules/lodash/uniq.js\");\n/* harmony import */ var humanize_list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! humanize-list */ \"(ssr)/./node_modules/humanize-list/index.js\");\n/* harmony import */ var lodash_partition_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/partition.js */ \"(ssr)/./node_modules/lodash/partition.js\");\n/* harmony import */ var lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/isPlainObject.js */ \"(ssr)/./node_modules/lodash/isPlainObject.js\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/omit.js */ \"(ssr)/./node_modules/lodash/omit.js\");\n/* harmony import */ var leven__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! leven */ \"(ssr)/./node_modules/leven/index.js\");\n/* harmony import */ var object_inspect__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! object-inspect */ \"(ssr)/./node_modules/object-inspect/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst ACTIONS_FLAG = \"__experimental_actions\", DEFAULT_ACTIONS = [\"create\", \"update\", \"delete\", \"publish\"], VALID_ACTIONS = DEFAULT_ACTIONS, readActions = (schemaType) => ACTIONS_FLAG in schemaType ? schemaType[ACTIONS_FLAG] : DEFAULT_ACTIONS, validateActions = (typeName, actions) => {\n  if (!Array.isArray(actions))\n    throw new Error(\n      `The value of <type>.${ACTIONS_FLAG} should be an array with any of the actions ${VALID_ACTIONS.join(\n        \", \"\n      )}`\n    );\n  const invalid = lodash_difference_js__WEBPACK_IMPORTED_MODULE_0__(actions, VALID_ACTIONS);\n  if (invalid.length > 0)\n    throw new Error(\n      `Invalid action${invalid.length > 1 ? \"s\" : \"\"} configured for schema type \"${typeName}\": ${invalid.join(\n        \", \"\n      )}. Valid actions are: ${VALID_ACTIONS.join(\", \")}`\n    );\n  return actions;\n}, resolveEnabledActions = (schemaType) => validateActions(schemaType.name, readActions(schemaType)), isActionEnabled = (schemaType, action) => resolveEnabledActions(schemaType).includes(action), documentDefaultFields = (typeName) => ({\n  _id: {\n    type: \"objectAttribute\",\n    value: { type: \"string\" }\n  },\n  _type: {\n    type: \"objectAttribute\",\n    value: { type: \"string\", value: typeName }\n  },\n  _createdAt: {\n    type: \"objectAttribute\",\n    value: { type: \"string\" }\n  },\n  _updatedAt: {\n    type: \"objectAttribute\",\n    value: { type: \"string\" }\n  },\n  _rev: {\n    type: \"objectAttribute\",\n    value: { type: \"string\" }\n  }\n}), typesMap = /* @__PURE__ */ new Map([\n  [\"text\", { type: \"string\" }],\n  [\"url\", { type: \"string\" }],\n  [\"datetime\", { type: \"string\" }],\n  [\"date\", { type: \"string\" }],\n  [\"boolean\", { type: \"boolean\" }],\n  [\"email\", { type: \"string\" }]\n]);\nfunction extractSchema(schemaDef, extractOptions = {}) {\n  const inlineFields = /* @__PURE__ */ new Set(), schema = [];\n  sortByDependencies(schemaDef).forEach((typeName) => {\n    const schemaType = schemaDef.get(typeName);\n    if (schemaType === void 0)\n      return;\n    const base = convertBaseType(schemaType);\n    base !== null && (base.type === \"type\" && inlineFields.add(schemaType), schema.push(base));\n  });\n  function convertBaseType(schemaType) {\n    let typeName;\n    if (schemaType.type ? typeName = schemaType.type.name : \"jsonType\" in schemaType && (typeName = schemaType.jsonType), typeName === \"document\" && isObjectType(schemaType)) {\n      const defaultAttributes = documentDefaultFields(schemaType.name), object2 = createObject(schemaType);\n      return object2.type === \"unknown\" ? null : {\n        name: schemaType.name,\n        type: \"document\",\n        attributes: {\n          ...defaultAttributes,\n          ...object2.attributes\n        }\n      };\n    }\n    const value = convertSchemaType(schemaType);\n    return value.type === \"unknown\" ? null : value.type === \"object\" ? {\n      name: schemaType.name,\n      type: \"type\",\n      value: {\n        type: \"object\",\n        attributes: {\n          _type: {\n            type: \"objectAttribute\",\n            value: {\n              type: \"string\",\n              value: schemaType.name\n            }\n          },\n          ...value.attributes\n        }\n      }\n    } : {\n      name: schemaType.name,\n      type: \"type\",\n      value\n    };\n  }\n  function convertSchemaType(schemaType) {\n    var _a, _b, _c;\n    if (((_a = lastType(schemaType)) == null ? void 0 : _a.name) === \"document\")\n      return (0,groq_js__WEBPACK_IMPORTED_MODULE_9__.createReferenceTypeNode)(schemaType.name);\n    if (inlineFields.has(schemaType.type))\n      return { type: \"inline\", name: schemaType.type.name };\n    if (((_c = (_b = schemaType.type) == null ? void 0 : _b.type) == null ? void 0 : _c.name) === \"object\")\n      return { type: \"inline\", name: schemaType.type.name };\n    if (isStringType(schemaType))\n      return createStringTypeNodeDefintion(schemaType);\n    if (isNumberType(schemaType))\n      return createNumberTypeNodeDefintion(schemaType);\n    if (schemaType.type && typesMap.has(schemaType.type.name))\n      return typesMap.get(schemaType.type.name);\n    if (isCrossDatasetReferenceType(schemaType))\n      return { type: \"unknown\" };\n    if (isReferenceType(schemaType))\n      return createReferenceTypeNodeDefintion(schemaType);\n    if (isArrayType(schemaType))\n      return createArray(schemaType);\n    if (isObjectType(schemaType))\n      return createObject(schemaType);\n    throw new Error(`Type \"${schemaType.name}\" not found`);\n  }\n  function createObject(schemaType) {\n    var _a;\n    const attributes = {}, fields = gatherFields(schemaType);\n    for (const field of fields) {\n      const fieldIsRequired = isFieldRequired(field), value = convertSchemaType(field.type);\n      if (value === null)\n        continue;\n      hasAssetRequired(field) && value.type === \"object\" && (value.attributes.asset.optional = !1);\n      const optional = extractOptions.enforceRequiredFields ? fieldIsRequired === !1 : !0;\n      attributes[field.name] = {\n        type: \"objectAttribute\",\n        value,\n        optional\n      };\n    }\n    return Object.keys(attributes).length === 0 ? { type: \"unknown\" } : (((_a = schemaType.type) == null ? void 0 : _a.name) !== \"document\" && schemaType.name !== \"object\" && (attributes._type = {\n      type: \"objectAttribute\",\n      value: {\n        type: \"string\",\n        value: schemaType.name\n      }\n    }), {\n      type: \"object\",\n      attributes\n    });\n  }\n  function createArray(arraySchemaType) {\n    const of = [];\n    for (const item of arraySchemaType.of) {\n      const field = convertSchemaType(item);\n      field.type === \"inline\" ? of.push({\n        type: \"object\",\n        attributes: {\n          _key: createKeyField()\n        },\n        rest: field\n      }) : (field.type === \"object\" && (field.rest = {\n        type: \"object\",\n        attributes: {\n          _key: createKeyField()\n        }\n      }), of.push(field));\n    }\n    return of.length === 0 ? { type: \"null\" } : {\n      type: \"array\",\n      of: of.length > 1 ? {\n        type: \"union\",\n        of\n      } : of[0]\n    };\n  }\n  return schema;\n}\nfunction createKeyField() {\n  return {\n    type: \"objectAttribute\",\n    value: {\n      type: \"string\"\n    }\n  };\n}\nfunction isFieldRequired(field) {\n  const { validation } = field.type;\n  if (!validation)\n    return !1;\n  const rules = Array.isArray(validation) ? validation : [validation];\n  for (const rule of rules) {\n    let required = !1;\n    const proxy = new Proxy(\n      {},\n      {\n        get: (target, methodName) => () => (methodName === \"required\" && (required = !0), proxy)\n      }\n    );\n    if (typeof rule == \"function\" && (rule(proxy), required) || typeof rule == \"object\" && rule !== null && \"_required\" in rule && rule._required === \"required\")\n      return !0;\n  }\n  return !1;\n}\nfunction hasAssetRequired(field) {\n  const { validation } = field.type;\n  if (!validation)\n    return !1;\n  const rules = Array.isArray(validation) ? validation : [validation];\n  for (const rule of rules) {\n    let assetRequired = !1;\n    const proxy = new Proxy(\n      {},\n      {\n        get: (target, methodName) => () => (methodName === \"assetRequired\" && (assetRequired = !0), proxy)\n      }\n    );\n    if (typeof rule == \"function\" && (rule(proxy), assetRequired) || typeof rule == \"object\" && rule !== null && \"_rules\" in rule && Array.isArray(rule._rules) && rule._rules.some((r) => r.flag === \"assetRequired\"))\n      return !0;\n  }\n  return !1;\n}\nfunction isObjectType(typeDef) {\n  return isType(typeDef, \"object\") || typeDef.jsonType === \"object\" || \"fields\" in typeDef;\n}\nfunction isArrayType(typeDef) {\n  return isType(typeDef, \"array\");\n}\nfunction isReferenceType(typeDef) {\n  return isType(typeDef, \"reference\");\n}\nfunction isCrossDatasetReferenceType(typeDef) {\n  return isType(typeDef, \"crossDatasetReference\");\n}\nfunction isStringType(typeDef) {\n  return isType(typeDef, \"string\");\n}\nfunction isNumberType(typeDef) {\n  return isType(typeDef, \"number\");\n}\nfunction createStringTypeNodeDefintion(stringSchemaType) {\n  var _a;\n  const listOptions = (_a = stringSchemaType.options) == null ? void 0 : _a.list;\n  return listOptions && Array.isArray(listOptions) ? {\n    type: \"union\",\n    of: listOptions.map((v) => ({\n      type: \"string\",\n      value: typeof v == \"string\" ? v : v.value\n    }))\n  } : {\n    type: \"string\"\n  };\n}\nfunction createNumberTypeNodeDefintion(numberSchemaType) {\n  var _a;\n  const listOptions = (_a = numberSchemaType.options) == null ? void 0 : _a.list;\n  return listOptions && Array.isArray(listOptions) ? {\n    type: \"union\",\n    of: listOptions.map((v) => ({\n      type: \"number\",\n      value: typeof v == \"number\" ? v : v.value\n    }))\n  } : {\n    type: \"number\"\n  };\n}\nfunction createReferenceTypeNodeDefintion(reference2) {\n  const references = gatherReferenceNames(reference2);\n  return references.length === 1 ? (0,groq_js__WEBPACK_IMPORTED_MODULE_9__.createReferenceTypeNode)(references[0]) : {\n    type: \"union\",\n    of: references.map((name) => (0,groq_js__WEBPACK_IMPORTED_MODULE_9__.createReferenceTypeNode)(name))\n  };\n}\nfunction gatherReferenceNames(type) {\n  const allReferences = gatherReferenceTypes(type);\n  return [.../* @__PURE__ */ new Set([...allReferences.map((ref) => ref.name)])];\n}\nfunction gatherReferenceTypes(type) {\n  const refTo = \"to\" in type ? type.to : [];\n  return \"type\" in type && isReferenceType(type.type) ? [...gatherReferenceTypes(type.type), ...refTo] : refTo;\n}\nfunction gatherFields(type) {\n  return \"fields\" in type ? type.type ? gatherFields(type.type).concat(type.fields) : type.fields : [];\n}\nfunction isType(typeDef, typeName) {\n  let type = typeDef;\n  for (; type; ) {\n    if (type.name === typeName || type.type && type.type.name === typeName)\n      return !0;\n    type = type.type;\n  }\n  return !1;\n}\nfunction lastType(typeDef) {\n  let type = typeDef;\n  for (; type; ) {\n    if (!type.type)\n      return type;\n    type = type.type;\n  }\n}\nfunction sortByDependencies(compiledSchema) {\n  const seen = /* @__PURE__ */ new Set();\n  function walkDependencies(schemaType, dependencies) {\n    if (!seen.has(schemaType)) {\n      if (seen.add(schemaType), \"fields\" in schemaType)\n        for (const field of gatherFields(schemaType)) {\n          const last = lastType(field.type);\n          if (last.name === \"document\") {\n            dependencies.add(last);\n            continue;\n          }\n          let schemaTypeName;\n          schemaType.type.type ? schemaTypeName = field.type.type.name : \"jsonType\" in schemaType.type && (schemaTypeName = field.type.jsonType), (schemaTypeName === \"object\" || schemaTypeName === \"block\") && (isReferenceType(field.type) ? field.type.to.forEach((ref) => dependencies.add(ref.type)) : dependencies.add(field.type)), walkDependencies(field.type, dependencies);\n        }\n      else if (\"of\" in schemaType)\n        for (const item of schemaType.of)\n          walkDependencies(item, dependencies);\n    }\n  }\n  const dependencyMap = /* @__PURE__ */ new Map();\n  compiledSchema.getTypeNames().forEach((typeName) => {\n    const schemaType = compiledSchema.get(typeName);\n    if (schemaType === void 0 || schemaType.type === null)\n      return;\n    const dependencies = /* @__PURE__ */ new Set();\n    walkDependencies(schemaType, dependencies), dependencyMap.set(schemaType, dependencies), seen.clear();\n  });\n  const typeNames = [], currentlyVisiting = /* @__PURE__ */ new Set(), visited = /* @__PURE__ */ new Set();\n  function visit(type) {\n    if (visited.has(type) || currentlyVisiting.has(type))\n      return;\n    currentlyVisiting.add(type);\n    const deps = dependencyMap.get(type);\n    deps !== void 0 && deps.forEach((dep) => visit(dep)), currentlyVisiting.delete(type), visited.add(type), typeNames.includes(type.name) || typeNames.unshift(type.name);\n  }\n  for (const [type] of dependencyMap)\n    visit(type);\n  return typeNames;\n}\nconst HELP_IDS = {\n  TYPE_INVALID: \"schema-type-invalid\",\n  TYPE_IS_ESM_MODULE: \"schema-type-is-esm-module\",\n  TYPE_NAME_RESERVED: \"schema-type-name-reserved\",\n  TYPE_MISSING_NAME: \"schema-type-missing-name-or-type\",\n  TYPE_MISSING_TYPE: \"schema-type-missing-name-or-type\",\n  TYPE_TITLE_RECOMMENDED: \"schema-type-title-is-recommended\",\n  TYPE_TITLE_INVALID: \"schema-type-title-is-recommended\",\n  OBJECT_FIELDS_INVALID: \"schema-object-fields-invalid\",\n  OBJECT_FIELD_NOT_UNIQUE: \"schema-object-fields-invalid\",\n  OBJECT_FIELD_NAME_INVALID: \"schema-object-fields-invalid\",\n  OBJECT_FIELD_DEFINITION_INVALID_TYPE: \"schema-object-fields-invalid\",\n  ARRAY_PREDEFINED_CHOICES_INVALID: \"schema-predefined-choices-invalid\",\n  ARRAY_OF_ARRAY: \"schema-array-of-array\",\n  ARRAY_OF_INVALID: \"schema-array-of-invalid\",\n  ARRAY_OF_NOT_UNIQUE: \"schema-array-of-invalid\",\n  ARRAY_OF_TYPE_GLOBAL_TYPE_CONFLICT: \"schema-array-of-type-global-type-conflict\",\n  ARRAY_OF_TYPE_BUILTIN_TYPE_CONFLICT: \"schema-array-of-type-builtin-type-conflict\",\n  REFERENCE_TO_INVALID: \"schema-reference-to-invalid\",\n  REFERENCE_TO_NOT_UNIQUE: \"schema-reference-to-invalid\",\n  REFERENCE_INVALID_OPTIONS: \"schema-reference-invalid-options\",\n  REFERENCE_INVALID_OPTIONS_LOCATION: \"schema-reference-options-nesting\",\n  REFERENCE_INVALID_FILTER_PARAMS_COMBINATION: \"schema-reference-filter-params-combination\",\n  SLUG_SLUGIFY_FN_RENAMED: \"slug-slugifyfn-renamed\",\n  ASSET_METADATA_FIELD_INVALID: \"asset-metadata-field-invalid\",\n  CROSS_DATASET_REFERENCE_INVALID: \"cross-dataset-reference-invalid\",\n  DEPRECATED_BLOCKEDITOR_KEY: \"schema-deprecated-blockeditor-key\",\n  STANDALONE_BLOCK_TYPE: \"schema-standalone-block-type\"\n};\nfunction createValidationResult(severity, message, helpId) {\n  if (helpId && !Object.keys(HELP_IDS).some((id) => HELP_IDS[id] === helpId))\n    throw new Error(\n      `Used the unknown helpId \"${helpId}\", please add it to the array in createValidationResult.js`\n    );\n  return {\n    severity,\n    message,\n    helpId\n  };\n}\nconst error = (message, helpId) => createValidationResult(\"error\", message, helpId), warning = (message, helpId) => createValidationResult(\"warning\", message, helpId);\nfunction groupProblems(types) {\n  return lodash_flatten_js__WEBPACK_IMPORTED_MODULE_1__(types.map((type) => getTypeProblems(type))).filter(\n    (type) => type.problems.length > 0\n  );\n}\nfunction createTypeWithMembersProblemsAccessor(memberPropertyName, getMembers = (type) => lodash_get_js__WEBPACK_IMPORTED_MODULE_2__(type, memberPropertyName)) {\n  return function(type, parentPath) {\n    const currentPath = [\n      ...parentPath,\n      { kind: \"type\", type: type.type, name: type.name }\n    ], members = getMembers(type) || [], memberProblems = Array.isArray(members) ? members.map((memberType) => {\n      const propertySegment = {\n        kind: \"property\",\n        name: memberPropertyName\n      }, memberPath = [...currentPath, propertySegment];\n      return getTypeProblems(memberType, memberPath);\n    }) : [\n      [\n        {\n          path: currentPath,\n          problems: [error(`Member declaration (${memberPropertyName}) is not an array`)]\n        }\n      ]\n    ];\n    return [\n      {\n        path: currentPath,\n        problems: type._problems || []\n      },\n      ...lodash_flatten_js__WEBPACK_IMPORTED_MODULE_1__(memberProblems)\n    ];\n  };\n}\nconst arrify = (val) => Array.isArray(val) ? val : typeof val > \"u\" && [] || [val], getObjectProblems = createTypeWithMembersProblemsAccessor(\"fields\"), getImageProblems = createTypeWithMembersProblemsAccessor(\"fields\"), getFileProblems = createTypeWithMembersProblemsAccessor(\"fields\"), getArrayProblems = createTypeWithMembersProblemsAccessor(\"of\"), getReferenceProblems = createTypeWithMembersProblemsAccessor(\n  \"to\",\n  (type) => \"to\" in type ? arrify(type.to) : []\n), getBlockAnnotationProblems = createTypeWithMembersProblemsAccessor(\"marks.annotations\"), getBlockMemberProblems = createTypeWithMembersProblemsAccessor(\"of\"), getBlockProblems = (type, problems) => [\n  ...getBlockAnnotationProblems(type, problems),\n  ...getBlockMemberProblems(type, problems)\n];\nfunction getDefaultProblems(type, path = []) {\n  return [\n    {\n      path: [...path, { kind: \"type\", type: type.type, name: type.name }],\n      problems: type._problems || []\n    }\n  ];\n}\nfunction getTypeProblems(type, path = []) {\n  switch (type.type) {\n    case \"object\":\n      return getObjectProblems(type, path);\n    case \"document\":\n      return getObjectProblems(type, path);\n    case \"array\":\n      return getArrayProblems(type, path);\n    case \"reference\":\n      return getReferenceProblems(type, path);\n    case \"block\":\n      return getBlockProblems(type, path);\n    case \"image\":\n      return getImageProblems(type, path);\n    case \"file\":\n      return getFileProblems(type, path);\n    default:\n      return getDefaultProblems(type, path);\n  }\n}\nfunction getDupes(array2, selector = (v) => v) {\n  const dupes = array2.reduce((acc, item) => {\n    const key = selector(item);\n    return acc[key] || (acc[key] = []), acc[key].push(item), acc;\n  }, {});\n  return Object.keys(dupes).map((key) => dupes[key].length > 1 ? dupes[key] : null).filter(Boolean);\n}\nconst NOOP_VISITOR = (typeDef) => typeDef, TYPE_TYPE = { name: \"type\", type: null }, FUTURE_RESERVED = [\"any\", \"time\", \"date\"];\nfunction traverseSchema(types = [], coreTypes2 = [], visitor = NOOP_VISITOR) {\n  const coreTypesRegistry = /* @__PURE__ */ Object.create(null), registry = /* @__PURE__ */ Object.create(null), coreTypeNames2 = coreTypes2.map((typeDef) => typeDef.name), reservedTypeNames = FUTURE_RESERVED.concat(coreTypeNames2), typeNames = types.map((typeDef) => typeDef && typeDef.name).filter(Boolean);\n  coreTypes2.forEach((coreType) => {\n    coreTypesRegistry[coreType.name] = coreType;\n  }), types.forEach((type, i) => {\n    registry[type && type.name || `__unnamed_${i}`] = {};\n  });\n  function getType(typeName) {\n    return typeName === \"type\" ? TYPE_TYPE : coreTypesRegistry[typeName] || registry[typeName] || null;\n  }\n  const duplicateNames = lodash_uniq_js__WEBPACK_IMPORTED_MODULE_3__(lodash_flatten_js__WEBPACK_IMPORTED_MODULE_1__(getDupes(typeNames)));\n  function isDuplicate(typeName) {\n    return duplicateNames.includes(typeName);\n  }\n  function getTypeNames() {\n    return typeNames.concat(coreTypeNames2);\n  }\n  function isReserved(typeName) {\n    return typeName === \"type\" || reservedTypeNames.includes(typeName);\n  }\n  const visitType = (isRoot) => (typeDef, index) => visitor(typeDef, {\n    visit: visitType(!1),\n    isRoot,\n    getType,\n    getTypeNames,\n    isReserved,\n    isDuplicate,\n    index\n  });\n  return coreTypes2.forEach((coreTypeDef) => {\n    Object.assign(coreTypesRegistry[coreTypeDef.name], visitType(coreTypeDef));\n  }), types.forEach((typeDef, i) => {\n    Object.assign(\n      registry[typeDef && typeDef.name || `__unnamed_${i}`],\n      visitType(!0)(typeDef, i)\n    );\n  }), {\n    get(typeName) {\n      const res = registry[typeName] || coreTypesRegistry[typeName];\n      if (res)\n        return res;\n      throw new Error(`No such type: ${typeName}`);\n    },\n    has(typeName) {\n      return typeName in registry || typeName in coreTypesRegistry;\n    },\n    getTypeNames() {\n      return Object.keys(registry);\n    },\n    getTypes() {\n      return this.getTypeNames().map(this.get);\n    },\n    toJSON() {\n      return this.getTypes();\n    }\n  };\n}\nconst coreTypes = [\n  { name: \"array\", jsonType: \"array\", type: \"type\" },\n  { name: \"block\", jsonType: \"object\", type: \"type\" },\n  { name: \"boolean\", jsonType: \"boolean\", type: \"type\" },\n  { name: \"datetime\", jsonType: \"string\", type: \"type\" },\n  { name: \"date\", jsonType: \"string\", type: \"type\" },\n  { name: \"document\", jsonType: \"object\", type: \"type\" },\n  { name: \"email\", jsonType: \"string\", type: \"type\" },\n  { name: \"file\", jsonType: \"object\", type: \"type\" },\n  { name: \"geopoint\", jsonType: \"object\", type: \"type\" },\n  { name: \"image\", jsonType: \"object\", type: \"type\" },\n  { name: \"number\", jsonType: \"number\", type: \"type\" },\n  { name: \"object\", jsonType: \"object\", type: \"type\" },\n  { name: \"reference\", jsonType: \"object\", type: \"type\" },\n  { name: \"crossDatasetReference\", jsonType: \"object\", type: \"type\" },\n  { name: \"slug\", jsonType: \"object\", type: \"type\" },\n  { name: \"span\", jsonType: \"object\", type: \"type\" },\n  { name: \"string\", jsonType: \"string\", type: \"type\" },\n  { name: \"telephone\", jsonType: \"string\", type: \"type\" },\n  { name: \"text\", jsonType: \"string\", type: \"type\" },\n  { name: \"url\", jsonType: \"string\", type: \"type\" }\n], coreTypeNames = coreTypes.map((t) => t.name);\nfunction traverseSanitySchema(schemaTypes, visitor) {\n  return traverseSchema(schemaTypes, coreTypes, visitor);\n}\nfunction isPrimitiveTypeName(typeName) {\n  return typeName === \"string\" || typeName === \"number\" || typeName === \"boolean\";\n}\nfunction isAssignable(typeName, type) {\n  return (typeof type.name == \"string\" ? type.name : type.type) === typeName;\n}\nfunction quote$2(n) {\n  return `\"${n}\"`;\n}\nfunction pluralize(arr, suf = \"s\") {\n  return arr.length === 1 ? \"\" : suf;\n}\nfunction format(value) {\n  return Array.isArray(value) ? `array with ${value.length} entries` : typeof value == \"object\" && value !== null ? `object with keys ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(Object.keys(value).map(quote$2))}` : quote$2(value);\n}\nvar array = (typeDef, visitorContext) => {\n  var _a, _b, _c;\n  const ofIsArray = Array.isArray(typeDef.of);\n  if (ofIsArray) {\n    const invalid = typeDef.of.reduce((errs, def, idx) => {\n      if (typeof def.name == \"string\" && // specifying the same name as the type is redundant, but should not be a hard error at this point\n      // Consider showing a warning for this and deprecate this ability eventually\n      def.name !== def.type && coreTypeNames.includes(def.name))\n        return errs.concat(\n          error(\n            `Found array member declaration with the same type name as a built-in type (\"${def.name}\"). Array members can not be given the same name as a built-in type.`,\n            HELP_IDS.ARRAY_OF_TYPE_BUILTIN_TYPE_CONFLICT\n          )\n        );\n      if (def.type === \"object\" && def.name && visitorContext.getType(def.name))\n        return errs.concat(\n          warning(\n            `Found array member declaration with the same name as the global schema type \"${def.name}\". It's recommended to use a unique name to avoid possibly incompatible data types that shares the same name.`,\n            HELP_IDS.ARRAY_OF_TYPE_GLOBAL_TYPE_CONFLICT\n          )\n        );\n      if (def.type === \"array\")\n        return errs.concat(\n          error(\n            'Found array member declaration of type \"array\" - multidimensional arrays are not currently supported by Sanity',\n            HELP_IDS.ARRAY_OF_ARRAY\n          )\n        );\n      if (def)\n        return errs;\n      const err = `Found ${def === null ? \"null\" : typeof def}, expected member declaration`;\n      return errs.concat(\n        error(\n          `Found invalid type member declaration in array at index ${idx}: ${err}`,\n          HELP_IDS.ARRAY_OF_INVALID\n        )\n      );\n    }, []);\n    if (invalid.length > 0)\n      return {\n        ...typeDef,\n        of: [],\n        _problems: invalid\n      };\n  }\n  const problems = lodash_flatten_js__WEBPACK_IMPORTED_MODULE_1__([\n    ofIsArray ? getDupes(typeDef.of, (t) => `${t.name};${t.type}`).map(\n      (dupes) => error(\n        `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in array. This makes it impossible to tell their values apart and you should consider naming them`,\n        HELP_IDS.ARRAY_OF_NOT_UNIQUE\n      )\n    ) : error(\n      'The array type is missing or having an invalid value for the required \"of\" property',\n      HELP_IDS.ARRAY_OF_INVALID\n    )\n  ]), of = ofIsArray ? typeDef.of : [], hasObjectTypesWithoutName = of.some(\n    (type) => type.type === \"object\" && typeof type.name > \"u\"\n  );\n  of.some((ofType) => ofType.type === \"block\") && hasObjectTypesWithoutName && problems.push(\n    error(\n      \"The array type's 'of' property can't have an object type without a 'name' property as member, when the 'block' type is also a member of that array.\",\n      HELP_IDS.ARRAY_OF_INVALID\n    )\n  );\n  const [primitiveTypes, objectTypes] = lodash_partition_js__WEBPACK_IMPORTED_MODULE_5__(\n    of,\n    (ofType) => {\n      var _a2;\n      return isPrimitiveTypeName(ofType.type) || isPrimitiveTypeName((_a2 = visitorContext.getType(ofType.type)) == null ? void 0 : _a2.jsonType);\n    }\n  ), isMixedArray = primitiveTypes.length > 0 && objectTypes.length > 0;\n  if (isMixedArray) {\n    const primitiveTypeNames = primitiveTypes.map((t) => t.type), objectTypeNames = objectTypes.map((t) => t.type);\n    problems.push(\n      error(\n        `The array type's 'of' property can't have both object types and primitive types (found primitive type ${pluralize(\n          primitiveTypeNames\n        )} ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(primitiveTypeNames.map(quote$2))} and object type${pluralize(\n          objectTypeNames\n        )} ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(objectTypeNames.map(quote$2))})`,\n        HELP_IDS.ARRAY_OF_INVALID\n      )\n    );\n  }\n  const list = (_a = typeDef == null ? void 0 : typeDef.options) == null ? void 0 : _a.list;\n  return !isMixedArray && Array.isArray(list) && (primitiveTypes.length > 0 ? list.forEach((option) => {\n    var _a2;\n    const value = (_a2 = option == null ? void 0 : option.value) != null ? _a2 : option;\n    if (!primitiveTypes.some((primitiveType) => typeof value === visitorContext.getType(primitiveType.type).jsonType)) {\n      const formattedTypeList = humanize_list__WEBPACK_IMPORTED_MODULE_4__(\n        primitiveTypes.map((t) => t.name || t.type),\n        { conjunction: \"or\" }\n      );\n      problems.push(\n        error(\n          `An invalid entry found in options.list: ${format(\n            value\n          )}. Must be either a value of type ${formattedTypeList}, or an object with {title: string, value: ${formattedTypeList}}`,\n          HELP_IDS.ARRAY_PREDEFINED_CHOICES_INVALID\n        )\n      );\n    }\n  }) : list.forEach((option) => {\n    const optionTypeName = option._type || \"object\";\n    objectTypes.some(\n      (validObjectType) => isAssignable(optionTypeName, validObjectType)\n    ) || problems.push(\n      error(\n        `An invalid entry found in options.list: ${format(\n          option\n        )}. Must be an object with \"_type\" set to ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(\n          objectTypes.map((t) => t.name || t.type).map((t) => t === \"object\" ? \"undefined\" : quote$2(t)),\n          { conjunction: \"or\" }\n        )}`,\n        HELP_IDS.ARRAY_PREDEFINED_CHOICES_INVALID\n      )\n    );\n  })), (_b = typeDef == null ? void 0 : typeDef.options) != null && _b.list && ((_c = typeDef == null ? void 0 : typeDef.options) == null ? void 0 : _c.layout) === \"tags\" && problems.push(\n    warning(\n      \"Found array member declaration with both tags layout and a list of predefined values. If you want to display a list of predefined values, remove the tags layout from `options`.\"\n    )\n  ), {\n    ...typeDef,\n    of: of.map(visitorContext.visit),\n    _problems: problems\n  };\n};\nfunction isJSONTypeOf(type, jsonType, visitorContext) {\n  if (\"jsonType\" in type)\n    return type.jsonType === jsonType;\n  const parentType = visitorContext.getType(type.type);\n  if (!parentType)\n    throw new Error(`Could not resolve jsonType of ${type.name}. No parent type found`);\n  return isJSONTypeOf(parentType, jsonType, visitorContext);\n}\nconst getTypeOf = (thing) => Array.isArray(thing) ? \"array\" : typeof thing, quote$1 = (str) => `\"${str}\"`, allowedKeys = [\n  \"components\",\n  \"lists\",\n  \"marks\",\n  \"name\",\n  \"of\",\n  \"options\",\n  \"styles\",\n  \"title\",\n  \"type\",\n  \"validation\"\n], allowedMarkKeys = [\"decorators\", \"annotations\"], allowedStyleKeys = [\"blockEditor\", \"title\", \"value\", \"icon\", \"component\"], allowedDecoratorKeys = [\"blockEditor\", \"title\", \"value\", \"icon\", \"component\"], allowedListKeys = [\"title\", \"value\", \"icon\", \"component\"], supportedBuiltInObjectTypes = [\"file\", \"image\", \"object\", \"reference\"];\nfunction validateBlockType(typeDef, visitorContext) {\n  const problems = [];\n  let styles = typeDef.styles, lists = typeDef.lists, marks = typeDef.marks, members = typeDef.of;\n  const disallowedKeys = Object.keys(typeDef).filter(\n    (key) => !allowedKeys.includes(key) && !key.startsWith(\"_\")\n  );\n  return disallowedKeys.length > 0 && problems.push(\n    error(\n      `Found unknown properties for block declaration: ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(\n        disallowedKeys.map(quote$1)\n      )}`\n    )\n  ), marks && (marks = validateMarks(typeDef.marks, visitorContext, problems)), styles && (styles = validateStyles(styles, visitorContext, problems)), lists && (lists = validateLists(lists, visitorContext, problems)), members && (members = validateMembers(members, visitorContext, problems)), {\n    ...lodash_omit_js__WEBPACK_IMPORTED_MODULE_7__(typeDef, disallowedKeys),\n    marks,\n    styles,\n    name: typeDef.name || typeDef.type,\n    of: members,\n    _problems: problems\n  };\n}\nfunction validateMarks(marks, visitorContext, problems) {\n  let decorators = marks.decorators, annotations = marks.annotations;\n  if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(marks))\n    return problems.push(error(`\"marks\" declaration should be an object, got ${getTypeOf(marks)}`)), problems;\n  const disallowedMarkKeys = Object.keys(marks).filter(\n    (key) => !allowedMarkKeys.includes(key) && !key.startsWith(\"_\")\n  );\n  return disallowedMarkKeys.length > 0 && problems.push(\n    error(\n      `Found unknown properties for block declaration: ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(\n        disallowedMarkKeys.map(quote$1)\n      )}`\n    )\n  ), decorators && !Array.isArray(decorators) ? problems.push(\n    error(`\"marks.decorators\" declaration should be an array, got ${getTypeOf(decorators)}`)\n  ) : decorators && (decorators.filter((dec) => !!dec.blockEditor).forEach((dec) => {\n    dec.icon = dec.blockEditor.icon, dec.component = dec.blockEditor.render;\n  }), decorators = validateDecorators(decorators, visitorContext, problems)), annotations && !Array.isArray(annotations) ? problems.push(\n    error(`\"marks.annotations\" declaration should be an array, got ${getTypeOf(annotations)}`)\n  ) : annotations && (annotations = validateAnnotations(annotations, visitorContext, problems)), { ...marks, decorators, annotations };\n}\nfunction validateLists(lists, visitorContext, problems) {\n  return Array.isArray(lists) ? (lists.forEach((list, index) => {\n    if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(list)) {\n      problems.push(error(`List must be an object, got ${getTypeOf(list)}`));\n      return;\n    }\n    const name = list.value || `#${index}`, disallowedKeys = Object.keys(list).filter(\n      (key) => !allowedListKeys.includes(key) && !key.startsWith(\"_\")\n    );\n    disallowedKeys.length > 0 && problems.push(\n      error(\n        `Found unknown properties for list ${name}: ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(disallowedKeys.map(quote$1))}`\n      )\n    ), list.value ? typeof list.value != \"string\" ? problems.push(\n      error(\n        `List type #${index} has an invalid \"value\" property, expected string, got ${getTypeOf(\n          list.value\n        )}`\n      )\n    ) : list.title || problems.push(warning(`List type ${name} is missing recommended \"title\" property`)) : problems.push(error(`List #${index} is missing required \"value\" property`));\n  }), lists) : (problems.push(error(`\"lists\" declaration should be an array, got ${getTypeOf(lists)}`)), problems);\n}\nfunction validateStyles(styles, visitorContext, problems) {\n  return Array.isArray(styles) ? (styles.forEach((style, index) => {\n    if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(style)) {\n      problems.push(error(`Style must be an object, got ${getTypeOf(style)}`));\n      return;\n    }\n    const name = style.value || `#${index}`, disallowedKeys = Object.keys(style).filter(\n      (key) => !allowedStyleKeys.includes(key) && !key.startsWith(\"_\")\n    );\n    disallowedKeys.length > 0 && problems.push(\n      error(\n        `Found unknown properties for style ${name}: ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(disallowedKeys.map(quote$1))}`\n      )\n    ), style.value ? typeof style.value != \"string\" ? problems.push(\n      error(\n        `Style #${index} has an invalid \"value\" property, expected string, got ${getTypeOf(\n          style.value\n        )}`\n      )\n    ) : style.title || problems.push(warning(`Style ${name} is missing recommended \"title\" property`)) : problems.push(error(`Style #${index} is missing required \"value\" property`)), typeof style.blockEditor < \"u\" && (problems.push(\n      warning(\n        'Style has deprecated key \"blockEditor\", please refer to the documentation on how to configure the block type for version 3.',\n        HELP_IDS.DEPRECATED_BLOCKEDITOR_KEY\n      )\n    ), style.component = style.component || style.blockEditor.render);\n  }), styles) : (problems.push(error(`\"styles\" declaration should be an array, got ${getTypeOf(styles)}`)), problems);\n}\nfunction validateDecorators(decorators, visitorContext, problems) {\n  return decorators.forEach((decorator, index) => {\n    if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(decorator)) {\n      problems.push(error(`Annotation must be an object, got ${getTypeOf(decorator)}`));\n      return;\n    }\n    const name = decorator.value || `#${index}`, disallowedKeys = Object.keys(decorator).filter(\n      (key) => !allowedDecoratorKeys.includes(key) && !key.startsWith(\"_\")\n    );\n    disallowedKeys.length > 0 && problems.push(\n      error(\n        `Found unknown properties for decorator ${name}: ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(\n          disallowedKeys.map(quote$1)\n        )}`\n      )\n    ), decorator.value ? typeof decorator.value != \"string\" ? problems.push(\n      error(\n        `Decorator #${index} has an invalid \"value\" property, expected string, got ${getTypeOf(\n          decorator.value\n        )}`\n      )\n    ) : decorator.title || problems.push(warning(`Decorator ${name} is missing recommended \"title\" property`)) : problems.push(error(`Decorator #${index} is missing required \"value\" property`)), typeof decorator.blockEditor < \"u\" && (problems.push(\n      warning(\n        `Decorator \"${name}\" has deprecated key \"blockEditor\", please refer to the documentation on how to configure the block type for version 3.`,\n        HELP_IDS.DEPRECATED_BLOCKEDITOR_KEY\n      )\n    ), decorator.icon = decorator.icon || decorator.blockEditor.icon, decorator.component = decorator.component || decorator.blockEditor.render);\n  }), decorators;\n}\nfunction validateAnnotations(annotations, visitorContext, problems) {\n  return annotations.map((annotation) => {\n    var _a, _b;\n    if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(annotation))\n      return {\n        ...annotation,\n        _problems: [error(`Annotation must be an object, got ${getTypeOf(annotation)}`)]\n      };\n    const { _problems } = visitorContext.visit(annotation, visitorContext), targetType = annotation.type && visitorContext.getType(annotation.type);\n    return targetType && !isJSONTypeOf(targetType, \"object\", visitorContext) && _problems.push(\n      error(\n        `Annotation cannot have type \"${annotation.type}\" - annotation types must inherit from object`\n      )\n    ), typeof annotation.blockEditor < \"u\" && (problems.push(\n      warning(\n        'Annotation has deprecated key \"blockEditor\", please refer to the documentation on how to configure the block type for version 3.',\n        HELP_IDS.DEPRECATED_BLOCKEDITOR_KEY\n      )\n    ), annotation.icon = annotation.icon || annotation.blockEditor.icon, (_a = annotation.blockEditor) != null && _a.render && !((_b = annotation.components) != null && _b.annotation) && (annotation.components = annotation.components || {}, annotation.components.annotation = annotation.components.annotation || annotation.blockEditor.render)), { ...annotation, _problems };\n  });\n}\nfunction validateMembers(members, visitorContext, problems) {\n  if (!Array.isArray(members)) {\n    problems.push(error(`\"of\" declaration should be an array, got ${getTypeOf(members)}`));\n    return;\n  }\n  return members.map((member) => {\n    const { _problems } = visitorContext.visit(member, visitorContext);\n    if (member.type === \"object\" && member.name && visitorContext.getType(member.name))\n      return {\n        ...member,\n        _problems: [\n          warning(\n            `Found array member declaration with the same name as the global schema type \"${member.name}\". It's recommended to use a unique name to avoid possibly incompatible data types that shares the same name.`,\n            HELP_IDS.ARRAY_OF_TYPE_GLOBAL_TYPE_CONFLICT\n          )\n        ]\n      };\n    let type = member;\n    for (; type && !type.jsonType; )\n      type = visitorContext.getType(type.type);\n    const nonObjectCoreTypes = coreTypeNames.filter((n) => !supportedBuiltInObjectTypes.includes(n));\n    return (\n      // Must be object-like type (to validate hoisted types)\n      type && type.jsonType !== \"object\" || // Can't be a core type, or core object type that isn't supported (like 'span')\n      nonObjectCoreTypes.some((coreName) => coreName === member.type) ? {\n        ...member,\n        _problems: [\n          error(\n            `Block member types must be a supported object-like type. The following built-in types are supported: '${supportedBuiltInObjectTypes.join(\n              \"', '\"\n            )}'. You can also use shorthands for previously defined object types like {type: 'myObjectType'}`,\n            HELP_IDS.ARRAY_OF_TYPE_BUILTIN_TYPE_CONFLICT\n          )\n        ]\n      } : { ...member, _problems }\n    );\n  });\n}\nfunction validateNonObjectFieldsProp(typeDef, visitorContext) {\n  if (!(\"fields\" in typeDef))\n    return [];\n  let type = typeDef;\n  for (; type && !type.jsonType; )\n    type = visitorContext.getType(type.type);\n  return type && type.jsonType !== \"object\" ? [error('Type has propery \"fields\", but is not an object/document type.')] : [];\n}\nconst quote = (str) => `\"${str}\"`;\nfunction validateTypeName(typeName, visitorContext) {\n  const possibleTypeNames = visitorContext.getTypeNames();\n  if (!typeName)\n    return [error(\"Type is missing a type.\", HELP_IDS.TYPE_MISSING_TYPE)];\n  if (typeof typeName != \"string\")\n    return [\n      error(\n        'Type has an invalid \"type\"-property - should be a string.',\n        HELP_IDS.TYPE_MISSING_TYPE\n      )\n    ];\n  if (!possibleTypeNames.includes(typeName)) {\n    const suggestions = possibleTypeNames.map((possibleTypeName) => [leven__WEBPACK_IMPORTED_MODULE_8__(typeName, possibleTypeName), possibleTypeName]).filter(([distance]) => distance < 3).map(([_, name]) => name), suggestion = suggestions.length > 0 ? ` Did you mean ${humanize_list__WEBPACK_IMPORTED_MODULE_4__(suggestions.map(quote), { conjunction: \"or\" })}?` : \"\";\n    return [error(`Unknown type: ${typeName}.${suggestion}`)];\n  }\n  return [];\n}\nfunction validateDeprecatedProperties(type) {\n  var _a, _b, _c;\n  const warnings = [];\n  return type != null && type.inputComponent && warnings.push(\n    warning('The \"inputComponent\" property is deprecated. Use \"components.input\" instead.')\n  ), (_a = type == null ? void 0 : type.preview) != null && _a.component && warnings.push(\n    warning('The \"preview.component\" property is deprecated. Use \"components.preview\" instead.')\n  ), type != null && type.diffComponent && warnings.push(\n    warning('The \"diffComponent\" property is deprecated. Use \"components.diff\" instead.')\n  ), (_b = type == null ? void 0 : type.options) != null && _b.editModal && warnings.push(\n    warning('The \"options.editModal\" property is deprecated. Use \"options.modal\" instead.')\n  ), (_c = type == null ? void 0 : type.options) != null && _c.isHighlighted && warnings.push(\n    warning(\n      'The \"options.isHighlighted\" property is deprecated. You can put fields behind a collapsed fieldset if you want to hide them from plain sight.'\n    )\n  ), warnings;\n}\nvar common = (typeDef, visitorContext) => ({\n  ...typeDef,\n  _problems: [\n    ...validateTypeName(typeDef.type, visitorContext),\n    ...validateNonObjectFieldsProp(typeDef, visitorContext),\n    ...validateDeprecatedProperties(typeDef)\n  ].filter(Boolean)\n});\nfunction normalizeToProp$1(typeDef) {\n  return Array.isArray(typeDef.to) ? typeDef.to : typeDef.to ? [typeDef.to] : typeDef.to;\n}\nconst VALID_DATASET = /^[a-z0-9~][-_a-z0-9]+$/;\nfunction isValidDatasetName(name) {\n  return name.length >= 2 && name.toLowerCase() === name && VALID_DATASET.test(name) || `The provided dataset \"${name}\" doesn't look like a valid dataset. Dataset names must be more than 2 characters, can only contain lowercase characters, numbers, underscores and dashes and can not start with a dash or an underscore`;\n}\nvar crossDatasetReference = (typeDef, visitorContext) => {\n  const isValidTo = Array.isArray(typeDef.to) || lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(typeDef.to), normalizedTo = normalizeToProp$1(typeDef), problems = lodash_flatten_js__WEBPACK_IMPORTED_MODULE_1__([\n    isValidTo ? getDupes(normalizedTo, (t) => `${t.name};${t.type}`).map(\n      (dupes) => error(\n        `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in reference. This makes it impossible to tell their values apart and you should consider naming them`,\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n      )\n    ) : error(\n      'The cross dataset reference type is missing or having an invalid value for the required \"to\" property. It should be an array of accepted types.',\n      HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n    )\n  ]);\n  if (isValidTo && normalizedTo.length === 0 && problems.push(\n    error(\n      'The cross dataset reference type should define at least one referenced type. Please check the \"to\" property.',\n      HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n    )\n  ), normalizedTo.forEach((crossDatasetTypeDef, index) => {\n    crossDatasetTypeDef.type || problems.push(\n      error(\n        `The referenced type at index ${index} must be named. Specify the name of the type you want to create references to.`,\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n      )\n    ), lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(crossDatasetTypeDef.preview) || problems.push(\n      error(\n        `Missing required preview config for the referenced type \"${crossDatasetTypeDef.type || \"<unknown type>\"}\"`,\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n      )\n    );\n  }), typeof typeDef.dataset == \"string\") {\n    const datasetValidation = isValidDatasetName(typeDef.dataset);\n    datasetValidation !== !0 && problems.push(error(datasetValidation, HELP_IDS.CROSS_DATASET_REFERENCE_INVALID));\n  } else\n    problems.push(\n      error(\n        \"A cross dataset reference must specify a `dataset`\",\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n      )\n    );\n  return typeDef.studioUrl && typeof typeDef.studioUrl != \"function\" && problems.push(\n    error(\n      'The \"studioUrl\" property on a cross dataset reference must be a function taking \"{id, type}\" as argument and returning a studio url.',\n      HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n    )\n  ), problems.push(...getOptionErrors$1(typeDef)), {\n    ...typeDef,\n    _problems: problems\n  };\n};\nfunction getOptionErrors$1(typeDef) {\n  const { options } = typeDef, problems = [];\n  return problems.push(\n    ...[\"filter\", \"filterParams\"].filter((key) => key in typeDef).map(\n      (key) => error(\n        `\\`${key}\\` is not allowed on a reference type definition - did you mean \\`options.${key}\\`?`,\n        HELP_IDS.REFERENCE_INVALID_OPTIONS_LOCATION\n      )\n    )\n  ), options ? lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(options) ? typeof options.filter == \"function\" && typeof options.filterParams < \"u\" ? problems.concat(\n    error(\n      \"`filterParams` cannot be used if `filter` is a function. Either statically define `filter` as a string, or return `params` from the `filter`-function.\",\n      HELP_IDS.REFERENCE_INVALID_FILTER_PARAMS_COMBINATION\n    )\n  ) : typeof options.filter == \"function\" || !options.filter && !options.filterParams ? problems : typeof options.filter != \"string\" ? problems.concat(\n    error(`If set, \\`filter\\` must be a string. Got ${typeof options.filter}`)\n  ) : typeof options.filterParams < \"u\" && !lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(options.filterParams) ? problems.concat(error(\"If set, `filterParams` must be an object.\")) : options.filterParams ? problems.concat(\n    Object.keys(options.filterParams).filter((key) => key.startsWith(\"__\") || key.startsWith(\"$\")).map((key) => error(`Filter parameter cannot be prefixed with \"$\" or \"__\". Got ${key}\".`))\n  ) : problems : problems.concat(\n    error(\n      \"The reference type expects `options` to be an object\",\n      HELP_IDS.REFERENCE_INVALID_OPTIONS\n    )\n  ) : problems;\n}\nconst REACT_SYM_RE = /^Symbol\\(react\\..+\\)$/;\nfunction isComponentLike(value) {\n  return typeof value == \"function\" || typeof (value == null ? void 0 : value.$$typeof) == \"symbol\" && REACT_SYM_RE.test(String(value == null ? void 0 : value.$$typeof));\n}\nfunction validateComponent(typeDef) {\n  const components = \"components\" in typeDef ? typeDef.components : !1;\n  if (!components)\n    return [];\n  const warnings = [];\n  return components.input && !isComponentLike(components.input) && warnings.push(\n    warning(\n      `The \\`components.input\\` property is set but does not appear to be a valid React component (expected a function, but saw ${object_inspect__WEBPACK_IMPORTED_MODULE_10__(\n        components.input\n      )}). If you have imported a custom input component, please verify that you have imported the correct named/default export.`\n    )\n  ), components.field && !isComponentLike(components.field) && warnings.push(\n    warning(\n      `The \\`components.field\\` property is set but does not appear to be a valid React component (expected a function, but saw ${object_inspect__WEBPACK_IMPORTED_MODULE_10__(\n        components.field\n      )}). If you have imported a custom field component, please verify that you have imported the correct named/default export.`\n    )\n  ), components.item && !isComponentLike(components.item) && warnings.push(\n    warning(\n      `The \\`components.item\\` property is set but does not appear to be a valid React component (expected a function, but saw ${object_inspect__WEBPACK_IMPORTED_MODULE_10__(\n        components.item\n      )}). If you have imported a custom item component, please verify that you have imported the correct named/default export.`\n    )\n  ), components.preview && !isComponentLike(components.preview) && warnings.push(\n    warning(\n      `The \\`components.preview\\` property is set but does not appear to be a valid React component (expected a function, but saw ${object_inspect__WEBPACK_IMPORTED_MODULE_10__(\n        components.preview\n      )}). If you have imported a custom preview component, please verify that you have imported the correct named/default export.`\n    )\n  ), warnings;\n}\nconst VALID_FIELD_RE = /^[A-Za-z]+[0-9A-Za-z_]*$/, CONVENTIONAL_FIELD_RE = /^[A-Za-z_]+[0-9A-Za-z_]*$/;\nfunction validateFieldName(name) {\n  return typeof name != \"string\" ? [\n    error(\n      `Field names must be strings. Saw \"${object_inspect__WEBPACK_IMPORTED_MODULE_10__(name)}\"`,\n      HELP_IDS.OBJECT_FIELD_NAME_INVALID\n    )\n  ] : name.startsWith(\"_\") ? [\n    error(\n      `Invalid field name \"${name}\". Field names cannot start with underscores \"_\" as it's reserved for system fields.`,\n      HELP_IDS.OBJECT_FIELD_NAME_INVALID\n    )\n  ] : VALID_FIELD_RE.test(name) ? CONVENTIONAL_FIELD_RE.test(name) ? [] : [\n    warning(\n      \"Thats an interesting field name for sure! But it is... how to put it... a bit... unconventional? It may be wise to keep special characters out of field names for easier access later on.\"\n    ),\n    HELP_IDS.OBJECT_FIELD_NAME_INVALID\n  ] : [\n    error(\n      `Invalid field name: \"${name}\". Fields can only contain characters from A-Z, numbers and underscores and should not start with a number (must pass the regular expression ${String(\n        VALID_FIELD_RE\n      )}).`,\n      HELP_IDS.OBJECT_FIELD_NAME_INVALID\n    )\n  ];\n}\nfunction validateField(field, _visitorContext) {\n  if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(field))\n    return [\n      error(\n        `Incorrect type for field definition - should be an object, saw ${object_inspect__WEBPACK_IMPORTED_MODULE_10__(field)}`,\n        HELP_IDS.OBJECT_FIELD_DEFINITION_INVALID_TYPE\n      )\n    ];\n  const problems = [];\n  return problems.push(\n    ...\"name\" in field ? validateFieldName(field.name) : [error(\"Missing field name\", HELP_IDS.OBJECT_FIELD_NAME_INVALID)]\n  ), problems.push(...validateComponent(field)), problems;\n}\nfunction getDuplicateFields(array2) {\n  const dupes = {};\n  return array2.forEach((field) => {\n    dupes[field.name] || (dupes[field.name] = []), dupes[field.name].push(field);\n  }), Object.keys(dupes).map((fieldName) => dupes[fieldName].length > 1 ? dupes[fieldName] : null).filter(Boolean);\n}\nfunction validateFields(fields, options = { allowEmpty: !1 }) {\n  const problems = [];\n  if (!Array.isArray(fields))\n    return [\n      error(\n        `The \"fields\" property must be an array of fields. Instead saw \"${typeof fields}\"`,\n        HELP_IDS.OBJECT_FIELDS_INVALID\n      )\n    ];\n  const fieldsWithNames = fields.filter((field) => typeof field.name == \"string\");\n  getDuplicateFields(fieldsWithNames).forEach((dupes) => {\n    problems.push(\n      error(\n        `Found ${dupes.length} fields with name \"${dupes[0].name}\" in object`,\n        HELP_IDS.OBJECT_FIELD_NOT_UNIQUE\n      )\n    );\n  }), fields.length === 0 && !options.allowEmpty && problems.push(error(\"Object should have at least one field\", HELP_IDS.OBJECT_FIELDS_INVALID));\n  const standaloneBlockFields = fields.filter((field) => field.type === \"block\").map((field) => `\"${field.name}\"`);\n  if (standaloneBlockFields.length > 0) {\n    const fmtFields = standaloneBlockFields.join(\", \");\n    problems.push(\n      error(\n        `Invalid standalone block field(s) ${fmtFields}. Block content must be defined as an array of blocks`,\n        HELP_IDS.STANDALONE_BLOCK_TYPE\n      )\n    );\n  }\n  return problems;\n}\nfunction validatePreview(preview) {\n  return lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(preview) ? typeof preview.prepare < \"u\" && typeof preview.prepare != \"function\" ? [\n    error(\n      `The \"preview.prepare\" property must be a function, instead saw \"${typeof preview.prepare}\"`\n    )\n  ] : preview.select ? lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(preview.select) ? Object.keys(preview.select).reduce((errs, key) => typeof preview.select[key] == \"string\" ? errs : errs.concat(\n    error(\n      `The key \"${key}\" of \"preview.select\" must be a string, instead saw \"${typeof preview.select[key]}\"`\n    )\n  ), []) : [\n    error(\n      `The \"preview.select\" property must be an object, instead saw \"${typeof preview.prepare}\"`\n    )\n  ] : [] : [error(`The \"preview\" property must be an object, instead saw \"${typeof preview}\"`)];\n}\nvar object = (typeDef, visitorContext) => {\n  let problems = validateFields(typeDef.fields), preview = typeDef.preview;\n  if (preview) {\n    const previewErrors = validatePreview(typeDef.preview);\n    problems = problems.concat(previewErrors), preview = previewErrors.some((err) => err.severity === \"error\") ? {} : preview;\n  }\n  return typeDef.type !== \"document\" && typeDef.type !== \"object\" && typeof typeDef.initialValue < \"u\" && problems.push(\n    error('The \"initialValue\" property is currently only supported for document & object types.')\n  ), {\n    ...typeDef,\n    preview,\n    fields: (Array.isArray(typeDef.fields) ? typeDef.fields : []).map((field, index) => {\n      const { name, ...fieldTypeDef } = field, { _problems, ...fieldType } = visitorContext.visit(fieldTypeDef, index);\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field).concat(_problems || [])\n      };\n    }),\n    _problems: problems\n  };\n}, documentVisitor = (typeDefinition, visitorContext) => {\n  const typeDef = object(typeDefinition, visitorContext), { initialValue, initialValues } = typeDef;\n  return typeof initialValue < \"u\" && !lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(initialValue) && typeof initialValue != \"function\" && typeDef._problems.push(\n    error('The \"initialValue\" property must be either a plain object or a function')\n  ), typeof initialValues < \"u\" && typeDef._problems.push(error('Found property \"initialValues\" - did you mean \"initialValue\"?')), typeDef;\n}, file = (typeDef, visitorContext) => {\n  const problems = [], fields = typeDef.fields;\n  fields && problems.push(...validateFields(fields, { allowEmpty: !0 }));\n  const invalidFieldNames = Array.isArray(fields) ? fields == null ? void 0 : fields.filter((field) => field.name === \"asset\") : [];\n  return typeDef.options && typeof typeDef.options.metadata < \"u\" && !Array.isArray(typeDef.options.metadata) ? problems.push(\n    error(\n      \"Invalid type for file `metadata` field - must be an array of strings\",\n      HELP_IDS.ASSET_METADATA_FIELD_INVALID\n    )\n  ) : invalidFieldNames.length > 0 && problems.push(error(\"The name `asset` is not a valid field name for type `file`.\")), {\n    ...typeDef,\n    fields: (Array.isArray(fields) ? fields : []).map((field, index) => {\n      const { name, ...fieldTypeDef } = field, { _problems, ...fieldType } = visitorContext.visit(fieldTypeDef, index);\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field).concat(_problems || [])\n      };\n    }),\n    _problems: problems\n  };\n};\nconst autoMeta = [\"dimensions\", \"hasAlpha\", \"isOpaque\"];\nvar image = (typeDef, visitorContext) => {\n  const problems = [], fields = typeDef.fields;\n  fields && problems.push(...validateFields(fields, { allowEmpty: !0 }));\n  let options = typeDef.options;\n  const metadata = options == null ? void 0 : options.metadata, superfluousMeta = Array.isArray(metadata) ? metadata.filter((meta) => autoMeta.includes(meta)) : [], invalidFieldNames = [\"asset\", \"hotspot\", \"crop\"], fieldsWithInvalidName = Array.isArray(fields) ? fields == null ? void 0 : fields.filter((field) => invalidFieldNames.includes(field.name)) : [];\n  return typeof metadata < \"u\" && !Array.isArray(metadata) ? problems.push(\n    error(\n      \"Invalid type for image `metadata` field - must be an array of strings\",\n      HELP_IDS.ASSET_METADATA_FIELD_INVALID\n    )\n  ) : superfluousMeta.length > 0 ? (problems.push(\n    warning(\n      `Image \\`metadata\\` field contains superfluous properties (they are always included): ${superfluousMeta.join(\n        \", \"\n      )}`\n    )\n  ), options = { ...options, metadata: metadata.filter((meta) => !autoMeta.includes(meta)) }) : fieldsWithInvalidName.length > 0 && problems.push(\n    error(\n      `The names \\`${invalidFieldNames.join(\n        \"`, `\"\n      )}\\` are invalid field names for type \\`image\\`.`\n    )\n  ), {\n    ...typeDef,\n    options,\n    fields: (Array.isArray(fields) ? fields : []).map((field, index) => {\n      const { name, ...fieldTypeDef } = field, { _problems, ...fieldType } = visitorContext.visit(fieldTypeDef, index);\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field).concat(_problems || [])\n      };\n    }),\n    _problems: problems\n  };\n};\nfunction normalizeToProp(typeDef) {\n  return Array.isArray(typeDef.to) ? typeDef.to : typeDef.to ? [typeDef.to] : typeDef.to;\n}\nvar reference = (typeDef, visitorContext) => {\n  const isValidTo = Array.isArray(typeDef.to) || lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(typeDef.to), normalizedTo = normalizeToProp(typeDef), problems = lodash_flatten_js__WEBPACK_IMPORTED_MODULE_1__([\n    isValidTo ? getDupes(normalizedTo, (t) => `${t.name};${t.type}`).map(\n      (dupes) => error(\n        `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in reference. This makes it impossible to tell their values apart and you should consider naming them`,\n        HELP_IDS.REFERENCE_TO_INVALID\n      )\n    ) : error(\n      'The reference type is missing or having an invalid value for the required \"to\" property. It should be an array of accepted types.',\n      HELP_IDS.REFERENCE_TO_INVALID\n    )\n  ]);\n  return isValidTo && normalizedTo.length === 0 && problems.push(\n    error(\n      'The reference type should define at least one accepted type. Please check the \"to\" property.',\n      HELP_IDS.REFERENCE_TO_INVALID\n    )\n  ), problems.push(...getOptionErrors(typeDef)), {\n    ...typeDef,\n    to: (isValidTo ? normalizedTo : []).map(visitorContext.visit),\n    _problems: problems\n  };\n};\nfunction getOptionErrors(typeDef) {\n  const { options } = typeDef, problems = [];\n  return problems.push(\n    ...[\"filter\", \"filterParams\"].filter((key) => key in typeDef).map(\n      (key) => error(\n        `\\`${key}\\` is not allowed on a reference type definition - did you mean \\`options.${key}\\`?`,\n        HELP_IDS.REFERENCE_INVALID_OPTIONS_LOCATION\n      )\n    )\n  ), options ? lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(options) ? typeof options.filter == \"function\" && typeof options.filterParams < \"u\" ? problems.concat(\n    error(\n      \"`filterParams` cannot be used if `filter` is a function. Either statically define `filter` as a string, or return `params` from the `filter`-function.\",\n      HELP_IDS.REFERENCE_INVALID_FILTER_PARAMS_COMBINATION\n    )\n  ) : typeof options.filter == \"function\" || !options.filter && !options.filterParams ? problems : typeof options.filter != \"string\" ? problems.concat(\n    error(`If set, \\`filter\\` must be a string. Got ${typeof options.filter}`)\n  ) : typeof options.filterParams < \"u\" && !lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_6__(options.filterParams) ? problems.concat(error(\"If set, `filterParams` must be an object.\")) : options.filterParams ? problems.concat(\n    Object.keys(options.filterParams).filter((key) => key.startsWith(\"__\") || key.startsWith(\"$\")).map((key) => error(`Filter parameter cannot be prefixed with \"$\" or \"__\". Got ${key}\".`))\n  ) : problems : problems.concat(\n    error(\n      \"The reference type expects `options` to be an object\",\n      HELP_IDS.REFERENCE_INVALID_OPTIONS\n    )\n  ) : problems;\n}\nvar rootType = (typeDef, visitorContext) => {\n  const hasName = !!typeDef.name;\n  if (!hasName && Object.keys(typeDef).length === 1)\n    return {\n      ...typeDef,\n      _problems: [\n        error(\n          \"Invalid/undefined type declaration, check declaration or the import/export of the schema type.\",\n          HELP_IDS.TYPE_INVALID\n        )\n      ]\n    };\n  const problems = [];\n  return looksLikeEsmModule(typeDef) ? problems.push(\n    error(\n      \"Type appears to be an ES6 module imported through CommonJS require - use an import statement or access the `.default` property\",\n      HELP_IDS.TYPE_IS_ESM_MODULE\n    )\n  ) : hasName ? visitorContext.isReserved(typeDef.name) && problems.push(\n    error(\n      `Invalid type name: \"${typeDef.name}\" is a reserved name.`,\n      HELP_IDS.TYPE_NAME_RESERVED\n    )\n  ) : problems.push(error(\"Missing type name\", HELP_IDS.TYPE_MISSING_NAME)), visitorContext.isDuplicate(typeDef.name) && problems.push(\n    error(\n      `Invalid type name: A type with name \"${typeDef.name}\" is already defined in the schema.`\n    )\n  ), problems.push(...validateComponent(typeDef)), \"title\" in typeDef && typeof typeDef.title != \"string\" && problems.push(warning(\"Type title is not a string.\", HELP_IDS.TYPE_TITLE_INVALID)), {\n    ...typeDef,\n    _problems: problems\n  };\n};\nfunction looksLikeEsmModule(typeDef) {\n  return !typeDef.name && typeDef.default && (typeDef.default.name || typeDef.default.title);\n}\nvar slug = (typeDef, visitorContext) => {\n  const problems = [];\n  return typeDef.options && typeDef.options.slugifyFn && (problems.push(\n    warning(\n      'Heads up! The \"slugifyFn\" option has been renamed to \"slugify\".',\n      HELP_IDS.SLUG_SLUGIFY_FN_RENAMED\n    )\n  ), typeDef.options.slugify = typeDef.options.slugifyFn), {\n    ...typeDef,\n    _problems: problems\n  };\n};\nconst typeVisitors = {\n  array,\n  object,\n  slug,\n  file,\n  image,\n  block: validateBlockType,\n  document: documentVisitor,\n  reference,\n  crossDatasetReference\n}, getNoopVisitor = (visitorContext) => (schemaDef) => ({\n  name: `<unnamed_type_@_index_${visitorContext.index}>`,\n  ...schemaDef,\n  _problems: []\n});\nfunction combine(...visitors) {\n  return (schemaType, visitorContext) => visitors.reduce(\n    (result, visitor) => {\n      const res = visitor(result, visitorContext);\n      return {\n        ...res,\n        _problems: result._problems.concat(res._problems)\n      };\n    },\n    { _problems: [], ...schemaType }\n  );\n}\nfunction validateSchema(schemaTypes) {\n  return traverseSanitySchema(schemaTypes, (schemaDef, visitorContext) => {\n    const typeVisitor = schemaDef && schemaDef.type && typeVisitors[schemaDef.type] || getNoopVisitor(visitorContext);\n    return visitorContext.isRoot ? combine(rootType, common, typeVisitor)(schemaDef, visitorContext) : combine(common, typeVisitor)(schemaDef, visitorContext);\n  });\n}\n\n//# sourceMappingURL=_internal.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/schema/lib/_internal.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/schema/lib/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@sanity/schema/lib/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Schema: () => (/* binding */ Schema2),\n/* harmony export */   \"default\": () => (/* binding */ DeprecatedDefaultSchema)\n/* harmony export */ });\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/omit.js */ \"(ssr)/./node_modules/lodash/omit.js\");\n/* harmony import */ var lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/pick.js */ \"(ssr)/./node_modules/lodash/pick.js\");\n/* harmony import */ var arrify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! arrify */ \"(ssr)/./node_modules/arrify/index.js\");\n/* harmony import */ var lodash_isUndefined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isUndefined.js */ \"(ssr)/./node_modules/lodash/isUndefined.js\");\n/* harmony import */ var lodash_omitBy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/omitBy.js */ \"(ssr)/./node_modules/lodash/omitBy.js\");\n/* harmony import */ var lodash_capitalize_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/capitalize.js */ \"(ssr)/./node_modules/lodash/capitalize.js\");\n/* harmony import */ var _chunks_es_resolve_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./_chunks-es/resolve.mjs */ \"(ssr)/./node_modules/@sanity/schema/lib/_chunks-es/resolve.mjs\");\n/* harmony import */ var lodash_castArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/castArray.js */ \"(ssr)/./node_modules/lodash/castArray.js\");\n/* harmony import */ var lodash_flatMap_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/flatMap.js */ \"(ssr)/./node_modules/lodash/flatMap.js\");\n/* harmony import */ var lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/startCase.js */ \"(ssr)/./node_modules/lodash/startCase.js\");\n/* harmony import */ var lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/isPlainObject.js */ \"(ssr)/./node_modules/lodash/isPlainObject.js\");\n/* harmony import */ var lodash_toPath_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lodash/toPath.js */ \"(ssr)/./node_modules/lodash/toPath.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_OVERRIDEABLE_FIELDS = [\n  \"jsonType\",\n  \"type\",\n  \"name\",\n  \"title\",\n  \"description\",\n  \"options\",\n  \"fieldsets\",\n  \"validation\",\n  \"readOnly\",\n  \"hidden\",\n  \"components\",\n  \"diffComponent\",\n  \"initialValue\",\n  \"deprecated\"\n], OVERRIDABLE_FIELDS$e = [...DEFAULT_OVERRIDEABLE_FIELDS], ANY_CORE = {\n  name: \"any\",\n  type: null,\n  jsonType: \"any\"\n}, AnyType = {\n  get() {\n    return ANY_CORE;\n  },\n  extend(subTypeDef, extendMember) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(ANY_CORE, OVERRIDABLE_FIELDS$e), subTypeDef, {\n      type: ANY_CORE,\n      of: subTypeDef.of.map((fieldDef) => ({\n        name: fieldDef.name,\n        type: extendMember(lodash_omit_js__WEBPACK_IMPORTED_MODULE_0__(fieldDef, \"name\"))\n      }))\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of)\n            throw new Error('Cannot override `of` property of subtypes of \"array\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$e), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n};\nfunction lazyGetter(target, key, getter, config = {}) {\n  return Object.defineProperty(target, key, {\n    configurable: !0,\n    enumerable: config.enumerable !== !1,\n    get() {\n      const val = getter();\n      return Object.defineProperty(target, key, {\n        value: val,\n        writable: !!config.writable,\n        configurable: !1\n      }), val;\n    }\n  }), target;\n}\nconst OVERRIDABLE_FIELDS$d = [...DEFAULT_OVERRIDEABLE_FIELDS], ARRAY_CORE = {\n  name: \"array\",\n  type: null,\n  jsonType: \"array\",\n  of: []\n}, ArrayType = {\n  get() {\n    return ARRAY_CORE;\n  },\n  extend(subTypeDef, createMemberType) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(ARRAY_CORE, OVERRIDABLE_FIELDS$d), subTypeDef, {\n      type: ARRAY_CORE\n    });\n    return lazyGetter(parsed, \"of\", () => subTypeDef.of.map((ofTypeDef) => createMemberType(ofTypeDef))), subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of)\n            throw new Error('Cannot override `of` property of subtypes of \"array\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$d), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n};\nfunction warnIfPreviewOnOptions(type) {\n  type.options && type.options.preview && console.warn(`Heads up! The preview config is no longer defined on \"options\", but instead on the type/field itself.\nPlease move {options: {preview: ...}} to {..., preview: ...} on the type/field definition of \"${type.name}\".\n`);\n}\nfunction warnIfPreviewHasFields(type) {\n  const preview = type.preview || (type.options || {}).preview;\n  preview && \"fields\" in preview && console.warn(`Heads up! \"preview.fields\" should be renamed to \"preview.select\". Please update the preview config for \"${type.name}\".\n`);\n}\nfunction isEmpty(object) {\n  for (const key in object)\n    if (object.hasOwnProperty(key))\n      return !1;\n  return !0;\n}\nfunction _stringify(value, options, depth) {\n  if (depth > options.maxDepth)\n    return \"...\";\n  if (Array.isArray(value)) {\n    if (value.length === 0)\n      return \"[empty]\";\n    const capLength = Math.max(value.length - options.maxBreadth), asString2 = value.slice(0, options.maxBreadth).map((item, index) => _stringify(item, options, depth + 1)).concat(capLength > 0 ? `\\u2026+${capLength}` : []).join(\", \");\n    return depth === 0 ? asString2 : `[${asString2}]`;\n  }\n  if (typeof value == \"object\" && value !== null) {\n    const keys = Object.keys(value).filter(\n      (key) => !options.ignoreKeys.includes(key) && typeof value[key] < \"u\"\n    );\n    if (isEmpty(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(value, keys)))\n      return \"{empty}\";\n    const asString2 = keys.slice(0, options.maxBreadth).map((key) => `${key}: ${_stringify(value[key], options, depth + 1)}`).join(\", \");\n    return depth === 0 ? asString2 : `{${asString2}}`;\n  }\n  const asString = String(value);\n  return asString === \"\" ? '\"\"' : asString;\n}\nfunction stringify(value, options = {}) {\n  const opts = {\n    maxDepth: \"maxDepth\" in options ? options.maxDepth : 2,\n    maxBreadth: \"maxBreadth\" in options ? options.maxBreadth : 2,\n    ignoreKeys: \"ignoreKeys\" in options ? options.ignoreKeys : []\n  };\n  return _stringify(value, opts, 0);\n}\nconst OPTIONS = {\n  maxEntries: 2,\n  maxDepth: 2,\n  maxBreadth: 2,\n  ignoreKeys: [\"_id\", \"_type\", \"_key\", \"_ref\"]\n};\nfunction createFallbackPrepare(fieldNames) {\n  return (value) => ({\n    title: stringify(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(value, fieldNames), OPTIONS)\n  });\n}\nfunction isBlockField(field) {\n  return field.type === \"array\" && field.of && field.of.some((member) => member.type === \"block\") || !1;\n}\nconst TITLE_CANDIDATES = [\"title\", \"name\", \"label\", \"heading\", \"header\", \"caption\"], DESCRIPTION_CANDIDATES = [\"description\", ...TITLE_CANDIDATES];\nfunction fieldHasReferenceTo(fieldDef, refType) {\n  return arrify__WEBPACK_IMPORTED_MODULE_2__(fieldDef.to || []).some((memberTypeDef) => memberTypeDef.type === refType);\n}\nfunction isImageAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, \"sanity.imageAsset\");\n}\nfunction resolveImageAssetPath(typeDef) {\n  const fields = typeDef.fields || [], imageAssetField = fields.find(isImageAssetField);\n  if (imageAssetField)\n    return imageAssetField.name;\n  const fieldWithImageAsset = fields.find(\n    (fieldDef) => (fieldDef.fields || []).some(isImageAssetField)\n  );\n  return fieldWithImageAsset ? `${fieldWithImageAsset.name}.asset` : void 0;\n}\nfunction isFileAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, \"sanity.fileAsset\");\n}\nfunction resolveFileAssetPath(typeDef) {\n  const fields = typeDef.fields || [], assetField = fields.find(isFileAssetField);\n  if (assetField)\n    return assetField.name;\n  const fieldWithFileAsset = fields.find(\n    (fieldDef) => (fieldDef.fields || []).some(isFileAssetField)\n  );\n  return fieldWithFileAsset ? `${fieldWithFileAsset.name}.asset` : void 0;\n}\nfunction guessPreviewFields(rawObjectTypeDef) {\n  const objectTypeDef = { fields: [], ...rawObjectTypeDef }, stringFieldNames = objectTypeDef.fields.filter((field) => field.type === \"string\").map((field) => field.name), blockFieldNames = objectTypeDef.fields.filter(isBlockField).map((field) => field.name);\n  let titleField = TITLE_CANDIDATES.find(\n    (candidate) => stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate)\n  ), descField = DESCRIPTION_CANDIDATES.find(\n    (candidate) => candidate !== titleField && (stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate))\n  );\n  titleField || (titleField = stringFieldNames[0] || blockFieldNames[0], descField = stringFieldNames[1] || blockFieldNames[1]);\n  const mediaField = objectTypeDef.fields.find((field) => field.type === \"image\"), imageAssetPath = resolveImageAssetPath(objectTypeDef);\n  if (!titleField) {\n    const fileAssetPath = resolveFileAssetPath(objectTypeDef);\n    fileAssetPath && (titleField = `${fileAssetPath}.originalFilename`), imageAssetPath && (titleField = `${imageAssetPath}.originalFilename`);\n  }\n  if (!titleField && !imageAssetPath) {\n    const fieldNames = objectTypeDef.fields.map((field) => field.name);\n    return {\n      select: fieldNames.reduce((acc, fieldName) => (acc[fieldName] = fieldName, acc), {}),\n      prepare: createFallbackPrepare(fieldNames)\n    };\n  }\n  return {\n    select: lodash_omitBy_js__WEBPACK_IMPORTED_MODULE_4__(\n      {\n        title: titleField,\n        description: descField,\n        media: mediaField ? mediaField.name : imageAssetPath\n      },\n      lodash_isUndefined_js__WEBPACK_IMPORTED_MODULE_3__\n    )\n  };\n}\nfunction parseSelection(selection) {\n  return selection.reduce((acc, field) => (acc[field] = field, acc), {});\n}\nfunction parsePreview(preview) {\n  if (!preview)\n    return preview;\n  const select = preview.select || preview.fields || {};\n  return Array.isArray(select) ? {\n    ...lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(preview, [\"prepare\", \"component\"]),\n    select: parseSelection(select)\n  } : {\n    ...lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(preview, [\"prepare\", \"component\"]),\n    select\n  };\n}\nfunction createPreviewGetter(objectTypeDef) {\n  return function() {\n    return warnIfPreviewOnOptions(objectTypeDef), warnIfPreviewHasFields(objectTypeDef), parsePreview(objectTypeDef.preview || (objectTypeDef.options || {}).preview) || guessPreviewFields(objectTypeDef);\n  };\n}\nconst DEFAULT_LINK_ANNOTATION = {\n  type: \"object\",\n  name: \"link\",\n  title: \"Link\",\n  i18nTitleKey: \"inputs.portable-text.annotation.link\",\n  options: {\n    modal: { type: \"popover\" }\n  },\n  fields: [\n    {\n      name: \"href\",\n      type: \"url\",\n      title: \"Link\",\n      description: \"A valid web, email, phone, or relative link.\",\n      validation: (Rule) => Rule.uri({\n        scheme: [\"http\", \"https\", \"tel\", \"mailto\"],\n        allowRelative: !0\n      })\n    }\n  ]\n}, DEFAULT_TEXT_FIELD = {\n  type: \"text\",\n  name: \"text\",\n  title: \"Text\"\n}, DEFAULT_MARKS_FIELD = {\n  name: \"marks\",\n  type: \"array\",\n  of: [{ type: \"string\" }],\n  title: \"Marks\"\n}, LIST_TYPES = {\n  bullet: {\n    title: \"Bulleted list\",\n    value: \"bullet\",\n    i18nTitleKey: \"inputs.portable-text.list-type.bullet\"\n  },\n  numbered: {\n    title: \"Numbered list\",\n    value: \"number\",\n    i18nTitleKey: \"inputs.portable-text.list-type.number\"\n  }\n}, DEFAULT_LIST_TYPES = [LIST_TYPES.bullet, LIST_TYPES.numbered], BLOCK_STYLES = {\n  normal: { title: \"Normal\", value: \"normal\", i18nTitleKey: \"inputs.portable-text.style.normal\" },\n  h1: { title: \"Heading 1\", value: \"h1\", i18nTitleKey: \"inputs.portable-text.style.h1\" },\n  h2: { title: \"Heading 2\", value: \"h2\", i18nTitleKey: \"inputs.portable-text.style.h2\" },\n  h3: { title: \"Heading 3\", value: \"h3\", i18nTitleKey: \"inputs.portable-text.style.h3\" },\n  h4: { title: \"Heading 4\", value: \"h4\", i18nTitleKey: \"inputs.portable-text.style.h4\" },\n  h5: { title: \"Heading 5\", value: \"h5\", i18nTitleKey: \"inputs.portable-text.style.h5\" },\n  h6: { title: \"Heading 6\", value: \"h6\", i18nTitleKey: \"inputs.portable-text.style.h6\" },\n  blockquote: {\n    title: \"Quote\",\n    value: \"blockquote\",\n    i18nTitleKey: \"inputs.portable-text.style.quote\"\n  }\n}, DEFAULT_BLOCK_STYLES = [\n  BLOCK_STYLES.normal,\n  BLOCK_STYLES.h1,\n  BLOCK_STYLES.h2,\n  BLOCK_STYLES.h3,\n  BLOCK_STYLES.h4,\n  BLOCK_STYLES.h5,\n  BLOCK_STYLES.h6,\n  BLOCK_STYLES.blockquote\n], DECORATOR_STRONG = {\n  title: \"Strong\",\n  value: \"strong\",\n  i18nTitleKey: \"inputs.portable-text.decorator.strong\"\n}, DECORATOR_EMPHASIS = {\n  title: \"Italic\",\n  value: \"em\",\n  i18nTitleKey: \"inputs.portable-text.decorator.emphasis\"\n}, DECORATOR_CODE = {\n  title: \"Code\",\n  value: \"code\",\n  i18nTitleKey: \"inputs.portable-text.decorator.code\"\n}, DECORATOR_UNDERLINE = {\n  title: \"Underline\",\n  value: \"underline\",\n  i18nTitleKey: \"inputs.portable-text.decorator.underline\"\n}, DECORATOR_STRIKE = {\n  title: \"Strike\",\n  value: \"strike-through\",\n  i18nTitleKey: \"inputs.portable-text.decorator.strike-through\"\n}, DECORATORS = {\n  strong: DECORATOR_STRONG,\n  em: DECORATOR_EMPHASIS,\n  code: DECORATOR_CODE,\n  underline: DECORATOR_UNDERLINE,\n  strikeThrough: DECORATOR_STRIKE\n}, DEFAULT_DECORATORS = [\n  DECORATORS.strong,\n  DECORATORS.em,\n  DECORATORS.code,\n  DECORATORS.underline,\n  DECORATORS.strikeThrough\n], INHERITED_FIELDS$1 = [\n  \"type\",\n  \"name\",\n  \"title\",\n  \"jsonType\",\n  \"description\",\n  \"options\",\n  \"fieldsets\",\n  \"icon\"\n], BLOCK_CORE = {\n  name: \"block\",\n  title: \"Block\",\n  type: null,\n  jsonType: \"object\"\n}, DEFAULT_OPTIONS$3 = {}, BlockType = {\n  get() {\n    return BLOCK_CORE;\n  },\n  extend(subTypeDef, extendMember) {\n    const options = { ...subTypeDef.options || DEFAULT_OPTIONS$3 }, { marks, styles, lists, of, ...rest } = subTypeDef, childrenField = createChildrenField(marks, of), styleField = createStyleField(styles), listItemField = createListItemField(lists), markDefsField = {\n      name: \"markDefs\",\n      title: \"Mark definitions\",\n      type: \"array\",\n      of: (marks == null ? void 0 : marks.annotations) || DEFAULT_ANNOTATIONS\n    }, fields = [childrenField, styleField, listItemField, markDefsField, {\n      name: \"level\",\n      title: \"Indentation\",\n      type: \"number\"\n    }].concat(\n      subTypeDef.fields || []\n    ), parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(BLOCK_CORE, INHERITED_FIELDS$1), rest, {\n      type: BLOCK_CORE,\n      options\n    });\n    return lazyGetter(parsed, \"fields\", () => fields.map((fieldDef) => {\n      const { name, ...type } = fieldDef;\n      return {\n        name,\n        type: extendMember(type)\n      };\n    })), lazyGetter(parsed, \"preview\", createPreviewGetter(subTypeDef)), subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields)\n            throw new Error('Cannot override `fields` of subtypes of \"block\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, INHERITED_FIELDS$1), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n};\nfunction ensureNormalStyle(styles) {\n  return styles.some((style) => style.value === \"normal\") ? styles : [BLOCK_STYLES.normal, ...styles];\n}\nfunction createStyleField(styles) {\n  return {\n    name: \"style\",\n    title: \"Style\",\n    type: \"string\",\n    options: {\n      list: ensureNormalStyle(styles || DEFAULT_BLOCK_STYLES)\n    }\n  };\n}\nfunction createListItemField(lists) {\n  return {\n    name: \"listItem\",\n    title: \"List type\",\n    type: \"string\",\n    options: {\n      list: lists || DEFAULT_LIST_TYPES\n    }\n  };\n}\nconst DEFAULT_ANNOTATIONS = [DEFAULT_LINK_ANNOTATION];\nfunction createChildrenField(marks, of = []) {\n  return {\n    name: \"children\",\n    title: \"Content\",\n    type: \"array\",\n    of: [\n      {\n        type: \"span\",\n        fields: [DEFAULT_TEXT_FIELD, DEFAULT_MARKS_FIELD],\n        annotations: marks && marks.annotations ? marks.annotations : DEFAULT_ANNOTATIONS,\n        decorators: marks && marks.decorators ? marks.decorators : DEFAULT_DECORATORS\n      },\n      ...of.filter((memberType) => memberType.type !== \"span\")\n    ]\n  };\n}\nconst INHERITED_FIELDS = [\n  \"type\",\n  \"name\",\n  \"title\",\n  \"jsonType\",\n  \"description\",\n  \"options\",\n  \"fieldsets\",\n  \"icon\"\n], SPAN_CORE = {\n  name: \"span\",\n  title: \"Span\",\n  type: null,\n  jsonType: \"object\"\n}, MARKS_FIELD = {\n  name: \"marks\",\n  title: \"Marks\",\n  type: \"array\",\n  of: [{ type: \"string\" }]\n}, TEXT_FIELD = {\n  name: \"text\",\n  title: \"Text\",\n  type: \"string\"\n}, DEFAULT_OPTIONS$2 = {}, SpanType = {\n  get() {\n    return SPAN_CORE;\n  },\n  extend(subTypeDef, extendMember) {\n    const options = { ...subTypeDef.options || DEFAULT_OPTIONS$2 }, { annotations = [], marks = [] } = subTypeDef, fields = [MARKS_FIELD, TEXT_FIELD], parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(SPAN_CORE, INHERITED_FIELDS), subTypeDef, {\n      type: SPAN_CORE,\n      options\n    });\n    return lazyGetter(parsed, \"fields\", () => fields.map((fieldDef) => {\n      const { name, ...type } = fieldDef;\n      return {\n        name,\n        type: extendMember(type)\n      };\n    })), lazyGetter(parsed, \"annotations\", () => annotations.map(extendMember)), lazyGetter(parsed, \"marks\", () => marks.map(extendMember)), lazyGetter(parsed, \"preview\", createPreviewGetter(subTypeDef)), subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields)\n            throw new Error('Cannot override `fields` of subtypes of \"span\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, INHERITED_FIELDS), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n};\nvar primitivePreview = {\n  prepare: (val) => ({ title: String(val) })\n};\nconst OVERRIDABLE_FIELDS$c = [...DEFAULT_OVERRIDEABLE_FIELDS], BOOLEAN_CORE = {\n  name: \"boolean\",\n  title: \"Boolean\",\n  type: null,\n  jsonType: \"boolean\"\n}, BooleanType = {\n  get() {\n    return BOOLEAN_CORE;\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(BOOLEAN_CORE, OVERRIDABLE_FIELDS$c), subTypeDef, {\n      type: BOOLEAN_CORE,\n      preview: primitivePreview\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$c), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, REF_FIELD$1 = {\n  name: \"_ref\",\n  title: \"Referenced document ID\",\n  type: \"string\"\n}, WEAK_FIELD$1 = {\n  name: \"_weak\",\n  title: \"Weak reference marker\",\n  type: \"boolean\"\n}, DATASET_FIELD = {\n  name: \"_dataset\",\n  title: \"Target dataset\",\n  type: \"string\"\n}, PROJECT_ID_FIELD = {\n  name: \"_projectId\",\n  title: \"Target project ID\",\n  type: \"string\",\n  hidden: !0\n}, REFERENCE_FIELDS$1 = [REF_FIELD$1, WEAK_FIELD$1, DATASET_FIELD, PROJECT_ID_FIELD], OVERRIDABLE_FIELDS$b = [...DEFAULT_OVERRIDEABLE_FIELDS], CROSS_DATASET_REFERENCE_CORE = {\n  name: \"crossDatasetReference\",\n  type: null,\n  jsonType: \"object\"\n};\nfunction humanize$1(arr, conjunction) {\n  const len = arr.length;\n  if (len === 1)\n    return arr[0];\n  const first = arr.slice(0, len - 1), last = arr[len - 1];\n  return `${first.join(\", \")} ${conjunction} ${last}`;\n}\nfunction buildTitle$1(type) {\n  return !type.to || type.to.length === 0 ? \"Cross dataset Reference\" : `Cross dataset reference to ${humanize$1(\n    arrify__WEBPACK_IMPORTED_MODULE_2__(type.to).map((toType) => toType.title || lodash_capitalize_js__WEBPACK_IMPORTED_MODULE_5__(toType.type)),\n    \"or\"\n  ).toLowerCase()}`;\n}\nconst CrossDatasetReferenceType = {\n  get() {\n    return CROSS_DATASET_REFERENCE_CORE;\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to)\n      throw new Error(\n        `Missing \"to\" field in cross dataset reference definition. Check the type ${subTypeDef.name}`\n      );\n    const parsed = Object.assign(\n      lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(CROSS_DATASET_REFERENCE_CORE, OVERRIDABLE_FIELDS$b),\n      subTypeDef,\n      {\n        type: CROSS_DATASET_REFERENCE_CORE\n      }\n    );\n    return lazyGetter(parsed, \"fields\", () => REFERENCE_FIELDS$1.map((fieldDef) => {\n      const { name, ...type } = fieldDef;\n      return {\n        name,\n        type: createMemberType(type)\n      };\n    })), lazyGetter(parsed, \"to\", () => arrify__WEBPACK_IMPORTED_MODULE_2__(subTypeDef.to).map((toType) => ({\n      ...toType,\n      // eslint-disable-next-line camelcase\n      __experimental_search: (0,_chunks_es_resolve_mjs__WEBPACK_IMPORTED_MODULE_11__.resolveSearchConfigForBaseFieldPaths)(toType)\n    }))), lazyGetter(parsed, \"title\", () => subTypeDef.title || buildTitle$1(parsed)), subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of)\n            throw new Error('Cannot override `of` of subtypes of \"reference\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$b), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, OVERRIDABLE_FIELDS$a = [...DEFAULT_OVERRIDEABLE_FIELDS], DATE_CORE = {\n  name: \"date\",\n  title: \"Datetime\",\n  type: null,\n  jsonType: \"string\"\n}, DateType = {\n  get() {\n    return DATE_CORE;\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(DATE_CORE, OVERRIDABLE_FIELDS$a), subTypeDef, {\n      type: DATE_CORE,\n      preview: primitivePreview\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$a), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, OVERRIDABLE_FIELDS$9 = [...DEFAULT_OVERRIDEABLE_FIELDS], DATETIME_CORE = {\n  name: \"datetime\",\n  title: \"Datetime\",\n  type: null,\n  jsonType: \"string\"\n}, DateTimeType = {\n  get() {\n    return DATETIME_CORE;\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(DATETIME_CORE, OVERRIDABLE_FIELDS$9), subTypeDef, {\n      type: DATETIME_CORE,\n      preview: primitivePreview\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$9), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, CANDIDATES = [\"title\", \"name\", \"label\", \"heading\", \"header\", \"caption\", \"description\"], PRIMITIVES = [\"string\", \"boolean\", \"number\"], isPrimitive = (field) => PRIMITIVES.includes(field.type);\nfunction guessOrderingConfig(objectTypeDef) {\n  let candidates = CANDIDATES.filter(\n    (candidate) => objectTypeDef.fields.some((field) => isPrimitive(field) && field.name === candidate)\n  );\n  return candidates.length === 0 && (candidates = objectTypeDef.fields.filter(isPrimitive).map((field) => field.name)), candidates.map(\n    (name) => ({\n      name,\n      i18n: {\n        title: { key: `default-orderings.${name}`, ns: \"studio\" }\n      },\n      title: lodash_capitalize_js__WEBPACK_IMPORTED_MODULE_5__(lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(name)),\n      by: [{ field: name, direction: \"asc\" }]\n    })\n  );\n}\nfunction normalizeSearchConfigs(configs) {\n  if (!Array.isArray(configs))\n    throw new Error(\n      \"The search config of a document type must be an array of search config objects\"\n    );\n  return configs.map((conf) => {\n    if (conf === \"defaults\")\n      return conf;\n    if (!lodash_isPlainObject_js__WEBPACK_IMPORTED_MODULE_9__(conf))\n      throw new Error(\"Search config must be an object of {path: string, weight: number}\");\n    return {\n      weight: \"weight\" in conf ? conf.weight : 1,\n      path: lodash_toPath_js__WEBPACK_IMPORTED_MODULE_10__(conf.path),\n      mapWith: typeof conf.mapWith == \"string\" ? conf.mapWith : void 0\n    };\n  });\n}\nconst OVERRIDABLE_FIELDS$8 = [\n  ...DEFAULT_OVERRIDEABLE_FIELDS,\n  \"orderings\",\n  \"__experimental_search\",\n  \"blockEditor\",\n  \"icon\"\n], ObjectType = {\n  get() {\n    return {\n      name: \"object\",\n      title: \"Object\",\n      type: null,\n      jsonType: \"object\"\n    };\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const subTypeDef = { fields: [], ...rawSubTypeDef }, options = { ...subTypeDef.options || {} }, parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(this.get(), OVERRIDABLE_FIELDS$8), subTypeDef, {\n      type: this.get(),\n      title: subTypeDef.title || (subTypeDef.name ? lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(subTypeDef.name) : \"Object\"),\n      options,\n      orderings: subTypeDef.orderings || guessOrderingConfig(subTypeDef),\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const { name, fieldset, group, ...rest } = fieldDef;\n        return lazyGetter({\n          name,\n          group,\n          fieldset\n        }, \"type\", () => createMemberType({\n          ...rest,\n          title: fieldDef.title || lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(name)\n        }));\n      })\n    });\n    return lazyGetter(parsed, \"fieldsets\", () => createFieldsets(subTypeDef, parsed.fields)), lazyGetter(parsed, \"groups\", () => createFieldsGroups(subTypeDef, parsed.fields)), lazyGetter(parsed, \"preview\", createPreviewGetter(subTypeDef)), lazyGetter(\n      parsed,\n      \"__experimental_search\",\n      () => {\n        const userProvidedSearchConfig = subTypeDef.__experimental_search ? normalizeSearchConfigs(subTypeDef.__experimental_search) : null;\n        return userProvidedSearchConfig ? userProvidedSearchConfig.map(\n          (entry) => entry === \"defaults\" ? normalizeSearchConfigs(subTypeDef) : entry\n        ) : (0,_chunks_es_resolve_mjs__WEBPACK_IMPORTED_MODULE_11__.resolveSearchConfig)(parsed);\n      },\n      {\n        enumerable: !1\n      }\n    ), subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields)\n            throw new Error('Cannot override `fields` of subtypes of \"object\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$8), {\n            title: extensionDef.title || subTypeDef.title || (subTypeDef.name ? lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(subTypeDef.name) : \"Object\"),\n            type: parent\n          });\n          return lazyGetter(current, \"__experimental_search\", () => parent.__experimental_search), subtype(current);\n        }\n      };\n    }\n  }\n};\nfunction createFieldsets(typeDef, fields) {\n  const fieldsetsByName = {};\n  for (const fieldset of typeDef.fieldsets || []) {\n    if (fieldsetsByName[fieldset.name])\n      throw new Error(\n        `Duplicate fieldset name \"${fieldset.name}\" found for type '${typeDef.title ? typeDef.title : lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(typeDef.name)}'`\n      );\n    fieldsetsByName[fieldset.name] = { title: lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(fieldset.name), ...fieldset, fields: [] };\n  }\n  const fieldsets = /* @__PURE__ */ new Set();\n  for (const field of fields) {\n    if (!field.fieldset) {\n      fieldsets.add({ single: !0, field });\n      continue;\n    }\n    const fieldset = fieldsetsByName[field.fieldset];\n    if (!fieldset)\n      throw new Error(\n        `Fieldset '${field.fieldset}' is not defined in schema for type '${typeDef.name}'`\n      );\n    fieldset.fields.push(field), fieldsets.add(fieldset);\n  }\n  return Array.from(fieldsets);\n}\nfunction createFieldsGroups(typeDef, fields) {\n  const groupsByName = {};\n  let numDefaultGroups = 0;\n  for (const group of typeDef.groups || []) {\n    if (groupsByName[group.name])\n      throw new Error(\n        `Duplicate group name \"${group.name}\" found for type '${typeDef.title ? typeDef.title : lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(typeDef.name)}'`\n      );\n    if (groupsByName[group.name] = { title: lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(group.name), ...group, fields: [] }, group.default && ++numDefaultGroups > 1)\n      throw new Error(\n        `More than one field group defined as default for type '${typeDef.title ? typeDef.title : lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(typeDef.name)}' - only 1 is supported`\n      );\n  }\n  return fields.forEach((field) => {\n    const fieldGroupNames = lodash_castArray_js__WEBPACK_IMPORTED_MODULE_6__(field.group || []);\n    fieldGroupNames.length !== 0 && fieldGroupNames.forEach((fieldGroupName) => {\n      const currentGroup = groupsByName[fieldGroupName];\n      if (!currentGroup)\n        throw new Error(\n          `Field group '${fieldGroupName}' is not defined in schema for type '${typeDef.title ? typeDef.name : lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(typeDef.name)}'`\n        );\n      currentGroup.fields.push(field);\n    });\n  }), lodash_flatMap_js__WEBPACK_IMPORTED_MODULE_7__(groupsByName).filter((group) => group.fields.length > 0);\n}\nconst DOCUMENT_CORE = {\n  name: \"document\",\n  title: \"Document\",\n  type: null,\n  jsonType: \"object\"\n}, DocumentType = {\n  get() {\n    return DOCUMENT_CORE;\n  },\n  extend: ObjectType.extend\n}, OVERRIDABLE_FIELDS$7 = [...DEFAULT_OVERRIDEABLE_FIELDS], EMAIL_CORE = {\n  name: \"email\",\n  title: \"Email\",\n  type: null,\n  jsonType: \"string\"\n}, EmailType = {\n  get() {\n    return EMAIL_CORE;\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(EMAIL_CORE, OVERRIDABLE_FIELDS$7), subTypeDef, {\n      type: EMAIL_CORE,\n      preview: primitivePreview\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$7), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, ASSET_FIELD$1 = {\n  name: \"asset\",\n  type: \"reference\",\n  to: { type: \"sanity.fileAsset\" }\n}, OVERRIDABLE_FIELDS$6 = [...DEFAULT_OVERRIDEABLE_FIELDS], FILE_CORE = {\n  name: \"file\",\n  title: \"File\",\n  type: null,\n  jsonType: \"object\"\n}, DEFAULT_OPTIONS$1 = {\n  accept: \"\"\n}, FileType = {\n  get() {\n    return FILE_CORE;\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const options = { ...rawSubTypeDef.options || DEFAULT_OPTIONS$1 }, fields = [ASSET_FIELD$1, ...rawSubTypeDef.fields || []], subTypeDef = { ...rawSubTypeDef, fields }, parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(FILE_CORE, OVERRIDABLE_FIELDS$6), subTypeDef, {\n      type: FILE_CORE,\n      title: subTypeDef.title || (subTypeDef.name ? lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(subTypeDef.name) : FILE_CORE.title),\n      options,\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const { name, fieldset, ...rest } = fieldDef, compiledField = {\n          name,\n          fieldset,\n          isCustomized: !!rawSubTypeDef.fields\n        };\n        return lazyGetter(compiledField, \"type\", () => createMemberType({\n          ...rest,\n          title: fieldDef.title || lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(name)\n        }));\n      })\n    });\n    return lazyGetter(parsed, \"fieldsets\", () => createFieldsets(subTypeDef, parsed.fields)), lazyGetter(parsed, \"preview\", createPreviewGetter(Object.assign({}, subTypeDef, { fields }))), subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields)\n            throw new Error('Cannot override `fields` of subtypes of \"file\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$6), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, ASSET_FIELD = {\n  name: \"asset\",\n  type: \"reference\",\n  to: [{ type: \"sanity.imageAsset\" }]\n}, HOTSPOT_FIELD = {\n  name: \"hotspot\",\n  type: \"sanity.imageHotspot\"\n}, CROP_FIELD = {\n  name: \"crop\",\n  type: \"sanity.imageCrop\"\n}, OVERRIDABLE_FIELDS$5 = [...DEFAULT_OVERRIDEABLE_FIELDS], IMAGE_CORE = {\n  name: \"image\",\n  title: \"Image\",\n  type: null,\n  jsonType: \"object\"\n}, DEFAULT_OPTIONS = {}, ImageType = {\n  get() {\n    return IMAGE_CORE;\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const options = { ...rawSubTypeDef.options || DEFAULT_OPTIONS };\n    let hotspotFields = [HOTSPOT_FIELD, CROP_FIELD];\n    options.hotspot || (hotspotFields = hotspotFields.map((field) => ({ ...field, hidden: !0 })));\n    const fields = [ASSET_FIELD, ...hotspotFields, ...rawSubTypeDef.fields || []], subTypeDef = { ...rawSubTypeDef, fields }, parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(this.get(), OVERRIDABLE_FIELDS$5), subTypeDef, {\n      type: IMAGE_CORE,\n      title: subTypeDef.title || (subTypeDef.name ? lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(subTypeDef.name) : IMAGE_CORE.title),\n      options,\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const { name, fieldset, ...rest } = fieldDef, compiledField = {\n          name,\n          fieldset,\n          isCustomized: !!rawSubTypeDef.fields\n        };\n        return lazyGetter(compiledField, \"type\", () => createMemberType({\n          ...rest,\n          title: fieldDef.title || lodash_startCase_js__WEBPACK_IMPORTED_MODULE_8__(name)\n        }));\n      })\n    });\n    return lazyGetter(parsed, \"fieldsets\", () => createFieldsets(subTypeDef, parsed.fields)), lazyGetter(parsed, \"preview\", createPreviewGetter(Object.assign({}, subTypeDef, { fields }))), subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields)\n            throw new Error('Cannot override `fields` of subtypes of \"image\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$5), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, OVERRIDABLE_FIELDS$4 = [...DEFAULT_OVERRIDEABLE_FIELDS], NUMBER_CORE = {\n  name: \"number\",\n  title: \"Number\",\n  type: null,\n  jsonType: \"number\"\n}, NumberType = {\n  get() {\n    return NUMBER_CORE;\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(NUMBER_CORE, OVERRIDABLE_FIELDS$4), subTypeDef, {\n      type: NUMBER_CORE,\n      preview: primitivePreview\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$4), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, REF_FIELD = {\n  name: \"_ref\",\n  title: \"Referenced document ID\",\n  type: \"string\"\n}, WEAK_FIELD = {\n  name: \"_weak\",\n  title: \"Weak reference\",\n  type: \"boolean\"\n}, REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD], OVERRIDABLE_FIELDS$3 = [...DEFAULT_OVERRIDEABLE_FIELDS], REFERENCE_CORE = {\n  name: \"reference\",\n  title: \"Reference\",\n  type: null,\n  jsonType: \"object\"\n};\nfunction humanize(arr, conjunction) {\n  const len = arr.length;\n  if (len === 1)\n    return arr[0];\n  const first = arr.slice(0, len - 1), last = arr[len - 1];\n  return `${first.join(\", \")} ${conjunction} ${last}`;\n}\nfunction buildTitle(type) {\n  return !type.to || type.to.length === 0 ? \"Reference\" : `Reference to ${humanize(\n    arrify__WEBPACK_IMPORTED_MODULE_2__(type.to).map((toType) => toType.title),\n    \"or\"\n  ).toLowerCase()}`;\n}\nconst ReferenceType = {\n  get() {\n    return REFERENCE_CORE;\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to)\n      throw new Error(\n        `Missing \"to\" field in reference definition. Check the type ${subTypeDef.name}`\n      );\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(REFERENCE_CORE, OVERRIDABLE_FIELDS$3), subTypeDef, {\n      type: REFERENCE_CORE\n    });\n    return lazyGetter(parsed, \"fields\", () => REFERENCE_FIELDS.map((fieldDef) => {\n      const { name, ...type } = fieldDef;\n      return {\n        name,\n        type: createMemberType(type)\n      };\n    })), lazyGetter(parsed, \"fieldsets\", () => createFieldsets(subTypeDef, parsed.fields)), lazyGetter(parsed, \"to\", () => arrify__WEBPACK_IMPORTED_MODULE_2__(subTypeDef.to).map((toType) => createMemberType(toType))), lazyGetter(parsed, \"title\", () => subTypeDef.title || buildTitle(parsed)), subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of)\n            throw new Error('Cannot override `of` of subtypes of \"reference\"');\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$3), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, OVERRIDABLE_FIELDS$2 = [...DEFAULT_OVERRIDEABLE_FIELDS], STRING_CORE = {\n  name: \"string\",\n  title: \"String\",\n  type: null,\n  jsonType: \"string\"\n}, StringType = {\n  get() {\n    return STRING_CORE;\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(STRING_CORE, OVERRIDABLE_FIELDS$2), subTypeDef, {\n      type: STRING_CORE,\n      preview: primitivePreview\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$2), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, OVERRIDABLE_FIELDS$1 = [...DEFAULT_OVERRIDEABLE_FIELDS, \"rows\"], TEXT_CORE = {\n  name: \"text\",\n  title: \"Text\",\n  type: null,\n  jsonType: \"string\"\n}, TextType = {\n  get() {\n    return TEXT_CORE;\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(TEXT_CORE, OVERRIDABLE_FIELDS$1), subTypeDef, {\n      type: TEXT_CORE,\n      preview: primitivePreview\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS$1), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n}, OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS], URL_CORE = {\n  name: \"url\",\n  title: \"Url\",\n  type: null,\n  jsonType: \"string\"\n}, UrlType = {\n  get() {\n    return URL_CORE;\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(URL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: URL_CORE,\n      preview: primitivePreview\n    });\n    return subtype(parsed);\n    function subtype(parent) {\n      return {\n        get() {\n          return parent;\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, lodash_pick_js__WEBPACK_IMPORTED_MODULE_1__(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent\n          });\n          return subtype(current);\n        }\n      };\n    }\n  }\n};\nvar types = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  any: AnyType,\n  array: ArrayType,\n  block: BlockType,\n  boolean: BooleanType,\n  crossDatasetReference: CrossDatasetReferenceType,\n  date: DateType,\n  datetime: DateTimeType,\n  document: DocumentType,\n  email: EmailType,\n  file: FileType,\n  image: ImageType,\n  number: NumberType,\n  object: ObjectType,\n  reference: ReferenceType,\n  span: SpanType,\n  string: StringType,\n  text: TextType,\n  url: UrlType\n}), __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nfunction compileRegistry(schemaDef) {\n  const registry = Object.assign(/* @__PURE__ */ Object.create(null), types), defsByName = schemaDef.types.reduce((acc, def) => {\n    if (acc[def.name])\n      throw new Error(`Duplicate type name added to schema: ${def.name}`);\n    return acc[def.name] = def, acc;\n  }, {});\n  return schemaDef.types.forEach(add), registry;\n  function ensure(typeName) {\n    if (!registry[typeName]) {\n      if (!defsByName[typeName])\n        throw new Error(`Unknown type: ${typeName}`);\n      add(defsByName[typeName]);\n    }\n  }\n  function extendMember(memberDef) {\n    return ensure(memberDef.type), registry[memberDef.type].extend(memberDef, extendMember).get();\n  }\n  function add(typeDef) {\n    ensure(typeDef.type), !registry[typeDef.name] && (registry[typeDef.name] = registry[typeDef.type].extend(typeDef, extendMember));\n  }\n}\nlet Schema$1 = class Schema {\n  constructor(schemaDef) {\n    __publicField(this, \"_original\"), __publicField(this, \"_registry\"), this._original = schemaDef, this._registry = compileRegistry(schemaDef);\n  }\n  static compile(schemaDef) {\n    return new Schema(schemaDef);\n  }\n  get name() {\n    return this._original.name;\n  }\n  get(name) {\n    return this._registry[name] && this._registry[name].get();\n  }\n  has(name) {\n    return name in this._registry;\n  }\n  getTypeNames() {\n    return Object.keys(this._registry);\n  }\n};\nclass DeprecatedDefaultSchema extends Schema$1 {\n  static compile(schemaDef) {\n    return new DeprecatedDefaultSchema(schemaDef);\n  }\n  constructor(schemaDef) {\n    super(schemaDef);\n    const stack = new Error(\n      'The default export of `@sanity/schema` is deprecated. Use `import {Schema} from \"@sanity/schema\"` instead.'\n    ).stack.replace(/^Error/, \"Warning\");\n    console.warn(stack);\n  }\n}\nconst Schema2 = Schema$1;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9zY2hlbWEvbGliL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFrQztBQUNBO0FBQ047QUFDb0I7QUFDVjtBQUNRO0FBQ3VEO0FBQ3pEO0FBQ0o7QUFDSTtBQUNRO0FBQ2Q7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlDQUFpQywyQ0FBSTtBQUNyQztBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMkNBQUk7QUFDL0IsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxVQUFVLDJDQUFJO0FBQ3hEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxpQ0FBaUMsMkNBQUk7QUFDckM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsVUFBVSwyQ0FBSTtBQUN4RDtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxVQUFVLGVBQWUsSUFBSSxtQkFBbUIsbUNBQW1DLFVBQVU7QUFDMUc7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JELDRKQUE0SixVQUFVO0FBQ3RLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4TUFBOE0sVUFBVTtBQUN4Tix5Q0FBeUMsVUFBVTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDJDQUFJO0FBQ3BCLGVBQWUsTUFBTTtBQUNyQix3RUFBd0UsSUFBSSxJQUFJLDJDQUEyQztBQUMzSCx1Q0FBdUMsRUFBRSxXQUFXO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwyQ0FBSTtBQUN6QixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxtQ0FBTTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseUJBQXlCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsd0JBQXdCO0FBQ3pEO0FBQ0E7QUFDQSwwQkFBMEIsaUNBQWlDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxjQUFjLHdEQUF3RCxlQUFlO0FBQzNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUZBQXlGO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2Q0FBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNLGtEQUFXO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sMkNBQUk7QUFDWDtBQUNBLElBQUk7QUFDSixPQUFPLDJDQUFJO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJKQUEySjtBQUMzSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLFNBQVMsZ0JBQWdCO0FBQ3pCO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsWUFBWSxxRkFBcUY7QUFDakcsUUFBUSxnRkFBZ0Y7QUFDeEYsUUFBUSxnRkFBZ0Y7QUFDeEYsUUFBUSxnRkFBZ0Y7QUFDeEYsUUFBUSxnRkFBZ0Y7QUFDeEYsUUFBUSxnRkFBZ0Y7QUFDeEYsUUFBUSxnRkFBZ0Y7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdCQUF3QjtBQUN6QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0Esc0JBQXNCLDRDQUE0QyxJQUFJLG9DQUFvQztBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIsMkNBQUk7QUFDbEM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxVQUFVLDJDQUFJO0FBQ3hEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFNBQVMsZ0JBQWdCO0FBQ3pCLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdCQUF3QjtBQUN6QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0Esc0JBQXNCLDRDQUE0QyxJQUFJLCtCQUErQix5RUFBeUUsMkNBQUk7QUFDbEw7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxVQUFVLDJDQUFJO0FBQ3hEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlDQUFpQywyQ0FBSTtBQUNyQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwwQ0FBMEMsVUFBVSwyQ0FBSTtBQUN4RDtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0JBQWtCLEVBQUUsYUFBYSxFQUFFLEtBQUs7QUFDcEQ7QUFDQTtBQUNBLHNHQUFzRztBQUN0RyxJQUFJLG1DQUFNLDBDQUEwQyxpREFBVTtBQUM5RDtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxvRkFBb0YsZ0JBQWdCO0FBQ3BHO0FBQ0E7QUFDQSxNQUFNLDJDQUFJO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLG1DQUFtQyxtQ0FBTTtBQUM5QztBQUNBO0FBQ0EsNkJBQTZCLDZGQUFvQztBQUNqRSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFVBQVUsMkNBQUk7QUFDeEQ7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsaUNBQWlDLDJDQUFJO0FBQ3JDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLDBDQUEwQyxVQUFVLDJDQUFJO0FBQ3hEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlDQUFpQywyQ0FBSTtBQUNyQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwwQ0FBMEMsVUFBVSwyQ0FBSTtBQUN4RDtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsMEJBQTBCLEtBQUs7QUFDaEQsT0FBTztBQUNQLGFBQWEsaURBQVUsQ0FBQyxnREFBUztBQUNqQyxhQUFhLCtCQUErQjtBQUM1QyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLG9EQUFhO0FBQ3RCLDJEQUEyRCw2QkFBNkI7QUFDeEY7QUFDQTtBQUNBLFlBQVksOENBQU07QUFDbEI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSx5QkFBeUIsOEJBQThCLGNBQWMsNkJBQTZCLHlCQUF5QiwyQ0FBSTtBQUMvSDtBQUNBLG9EQUFvRCxnREFBUztBQUM3RDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUNBQWlDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsbUNBQW1DLGdEQUFTO0FBQzVDLFNBQVM7QUFDVCxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw0RUFBbUI7QUFDL0IsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFVBQVUsMkNBQUk7QUFDeEQsZ0ZBQWdGLGdEQUFTO0FBQ3pGO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsY0FBYyxvQkFBb0IsZ0NBQWdDLGdEQUFTLGVBQWU7QUFDOUg7QUFDQSx1Q0FBdUMsT0FBTyxnREFBUztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtQkFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixlQUFlLHVDQUF1QyxhQUFhO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsV0FBVyxvQkFBb0IsZ0NBQWdDLGdEQUFTLGVBQWU7QUFDeEg7QUFDQSxxQ0FBcUMsT0FBTyxnREFBUyxvQ0FBb0M7QUFDekY7QUFDQSxrRUFBa0UsZ0NBQWdDLGdEQUFTLGVBQWU7QUFDMUg7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGdEQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGVBQWUsdUNBQXVDLCtCQUErQixnREFBUyxlQUFlO0FBQ3ZJO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRyxHQUFHLDhDQUFPO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlDQUFpQywyQ0FBSTtBQUNyQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwwQ0FBMEMsVUFBVSwyQ0FBSTtBQUN4RDtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQkFBc0IsK0NBQStDLDBFQUEwRSwwQkFBMEIseUJBQXlCLDJDQUFJO0FBQ3RNO0FBQ0Esb0RBQW9ELGdEQUFTO0FBQzdEO0FBQ0E7QUFDQSxnQkFBZ0IsMEJBQTBCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnREFBUztBQUM1QyxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTCxnS0FBZ0ssZ0JBQWdCLFFBQVE7QUFDeEw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFVBQVUsMkNBQUk7QUFDeEQ7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsU0FBUywyQkFBMkI7QUFDcEMsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0JBQXNCO0FBQ3ZCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSx3RUFBd0Usc0JBQXNCO0FBQzlGLGtHQUFrRywwQkFBMEIseUJBQXlCLDJDQUFJO0FBQ3pKO0FBQ0Esb0RBQW9ELGdEQUFTO0FBQzdEO0FBQ0E7QUFDQSxnQkFBZ0IsMEJBQTBCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnREFBUztBQUM1QyxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTCxnS0FBZ0ssZ0JBQWdCLFFBQVE7QUFDeEw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFVBQVUsMkNBQUk7QUFDeEQ7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsaUNBQWlDLDJDQUFJO0FBQ3JDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLDBDQUEwQyxVQUFVLDJDQUFJO0FBQ3hEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0JBQWtCLEVBQUUsYUFBYSxFQUFFLEtBQUs7QUFDcEQ7QUFDQTtBQUNBLDBFQUEwRTtBQUMxRSxJQUFJLG1DQUFNO0FBQ1Y7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLGdCQUFnQjtBQUN0RjtBQUNBLGlDQUFpQywyQ0FBSTtBQUNyQztBQUNBLEtBQUs7QUFDTDtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxzSEFBc0gsbUNBQU07QUFDakk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFVBQVUsMkNBQUk7QUFDeEQ7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsaUNBQWlDLDJDQUFJO0FBQ3JDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLDBDQUEwQyxVQUFVLDJDQUFJO0FBQ3hEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlDQUFpQywyQ0FBSTtBQUNyQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwwQ0FBMEMsVUFBVSwyQ0FBSTtBQUN4RDtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxpQ0FBaUMsMkNBQUk7QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsMENBQTBDLFVBQVUsMkNBQUk7QUFDeEQ7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0hBQWdILHVEQUF1RDtBQUN4SztBQUNBO0FBQ0E7QUFDQSw4REFBOEQsU0FBUztBQUN2RTtBQUNBLEdBQUcsSUFBSTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLFNBQVM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsUUFBUTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvdGVsLW1hbmFnZW1lbnQvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9zY2hlbWEvbGliL2luZGV4Lm1qcz9kNTE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBvbWl0IGZyb20gXCJsb2Rhc2gvb21pdC5qc1wiO1xuaW1wb3J0IHBpY2sgZnJvbSBcImxvZGFzaC9waWNrLmpzXCI7XG5pbXBvcnQgYXJyaWZ5IGZyb20gXCJhcnJpZnlcIjtcbmltcG9ydCBpc1VuZGVmaW5lZCBmcm9tIFwibG9kYXNoL2lzVW5kZWZpbmVkLmpzXCI7XG5pbXBvcnQgb21pdEJ5IGZyb20gXCJsb2Rhc2gvb21pdEJ5LmpzXCI7XG5pbXBvcnQgY2FwaXRhbGl6ZSBmcm9tIFwibG9kYXNoL2NhcGl0YWxpemUuanNcIjtcbmltcG9ydCB7IHJlc29sdmVTZWFyY2hDb25maWdGb3JCYXNlRmllbGRQYXRocywgcmVzb2x2ZVNlYXJjaENvbmZpZyB9IGZyb20gXCIuL19jaHVua3MtZXMvcmVzb2x2ZS5tanNcIjtcbmltcG9ydCBjYXN0QXJyYXkgZnJvbSBcImxvZGFzaC9jYXN0QXJyYXkuanNcIjtcbmltcG9ydCBmbGF0TWFwIGZyb20gXCJsb2Rhc2gvZmxhdE1hcC5qc1wiO1xuaW1wb3J0IHN0YXJ0Q2FzZSBmcm9tIFwibG9kYXNoL3N0YXJ0Q2FzZS5qc1wiO1xuaW1wb3J0IGlzUGxhaW5PYmplY3QgZnJvbSBcImxvZGFzaC9pc1BsYWluT2JqZWN0LmpzXCI7XG5pbXBvcnQgdG9QYXRoIGZyb20gXCJsb2Rhc2gvdG9QYXRoLmpzXCI7XG5jb25zdCBERUZBVUxUX09WRVJSSURFQUJMRV9GSUVMRFMgPSBbXG4gIFwianNvblR5cGVcIixcbiAgXCJ0eXBlXCIsXG4gIFwibmFtZVwiLFxuICBcInRpdGxlXCIsXG4gIFwiZGVzY3JpcHRpb25cIixcbiAgXCJvcHRpb25zXCIsXG4gIFwiZmllbGRzZXRzXCIsXG4gIFwidmFsaWRhdGlvblwiLFxuICBcInJlYWRPbmx5XCIsXG4gIFwiaGlkZGVuXCIsXG4gIFwiY29tcG9uZW50c1wiLFxuICBcImRpZmZDb21wb25lbnRcIixcbiAgXCJpbml0aWFsVmFsdWVcIixcbiAgXCJkZXByZWNhdGVkXCJcbl0sIE9WRVJSSURBQkxFX0ZJRUxEUyRlID0gWy4uLkRFRkFVTFRfT1ZFUlJJREVBQkxFX0ZJRUxEU10sIEFOWV9DT1JFID0ge1xuICBuYW1lOiBcImFueVwiLFxuICB0eXBlOiBudWxsLFxuICBqc29uVHlwZTogXCJhbnlcIlxufSwgQW55VHlwZSA9IHtcbiAgZ2V0KCkge1xuICAgIHJldHVybiBBTllfQ09SRTtcbiAgfSxcbiAgZXh0ZW5kKHN1YlR5cGVEZWYsIGV4dGVuZE1lbWJlcikge1xuICAgIGNvbnN0IHBhcnNlZCA9IE9iamVjdC5hc3NpZ24ocGljayhBTllfQ09SRSwgT1ZFUlJJREFCTEVfRklFTERTJGUpLCBzdWJUeXBlRGVmLCB7XG4gICAgICB0eXBlOiBBTllfQ09SRSxcbiAgICAgIG9mOiBzdWJUeXBlRGVmLm9mLm1hcCgoZmllbGREZWYpID0+ICh7XG4gICAgICAgIG5hbWU6IGZpZWxkRGVmLm5hbWUsXG4gICAgICAgIHR5cGU6IGV4dGVuZE1lbWJlcihvbWl0KGZpZWxkRGVmLCBcIm5hbWVcIikpXG4gICAgICB9KSlcbiAgICB9KTtcbiAgICByZXR1cm4gc3VidHlwZShwYXJzZWQpO1xuICAgIGZ1bmN0aW9uIHN1YnR5cGUocGFyZW50KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZXh0ZW5kOiAoZXh0ZW5zaW9uRGVmKSA9PiB7XG4gICAgICAgICAgaWYgKGV4dGVuc2lvbkRlZi5vZilcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IG92ZXJyaWRlIGBvZmAgcHJvcGVydHkgb2Ygc3VidHlwZXMgb2YgXCJhcnJheVwiJyk7XG4gICAgICAgICAgY29uc3QgY3VycmVudCA9IE9iamVjdC5hc3NpZ24oe30sIHBhcmVudCwgcGljayhleHRlbnNpb25EZWYsIE9WRVJSSURBQkxFX0ZJRUxEUyRlKSwge1xuICAgICAgICAgICAgdHlwZTogcGFyZW50XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuIHN1YnR5cGUoY3VycmVudCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9XG59O1xuZnVuY3Rpb24gbGF6eUdldHRlcih0YXJnZXQsIGtleSwgZ2V0dGVyLCBjb25maWcgPSB7fSkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCB7XG4gICAgY29uZmlndXJhYmxlOiAhMCxcbiAgICBlbnVtZXJhYmxlOiBjb25maWcuZW51bWVyYWJsZSAhPT0gITEsXG4gICAgZ2V0KCkge1xuICAgICAgY29uc3QgdmFsID0gZ2V0dGVyKCk7XG4gICAgICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCB7XG4gICAgICAgIHZhbHVlOiB2YWwsXG4gICAgICAgIHdyaXRhYmxlOiAhIWNvbmZpZy53cml0YWJsZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiAhMVxuICAgICAgfSksIHZhbDtcbiAgICB9XG4gIH0pLCB0YXJnZXQ7XG59XG5jb25zdCBPVkVSUklEQUJMRV9GSUVMRFMkZCA9IFsuLi5ERUZBVUxUX09WRVJSSURFQUJMRV9GSUVMRFNdLCBBUlJBWV9DT1JFID0ge1xuICBuYW1lOiBcImFycmF5XCIsXG4gIHR5cGU6IG51bGwsXG4gIGpzb25UeXBlOiBcImFycmF5XCIsXG4gIG9mOiBbXVxufSwgQXJyYXlUeXBlID0ge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIEFSUkFZX0NPUkU7XG4gIH0sXG4gIGV4dGVuZChzdWJUeXBlRGVmLCBjcmVhdGVNZW1iZXJUeXBlKSB7XG4gICAgY29uc3QgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKEFSUkFZX0NPUkUsIE9WRVJSSURBQkxFX0ZJRUxEUyRkKSwgc3ViVHlwZURlZiwge1xuICAgICAgdHlwZTogQVJSQVlfQ09SRVxuICAgIH0pO1xuICAgIHJldHVybiBsYXp5R2V0dGVyKHBhcnNlZCwgXCJvZlwiLCAoKSA9PiBzdWJUeXBlRGVmLm9mLm1hcCgob2ZUeXBlRGVmKSA9PiBjcmVhdGVNZW1iZXJUeXBlKG9mVHlwZURlZikpKSwgc3VidHlwZShwYXJzZWQpO1xuICAgIGZ1bmN0aW9uIHN1YnR5cGUocGFyZW50KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZXh0ZW5kOiAoZXh0ZW5zaW9uRGVmKSA9PiB7XG4gICAgICAgICAgaWYgKGV4dGVuc2lvbkRlZi5vZilcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IG92ZXJyaWRlIGBvZmAgcHJvcGVydHkgb2Ygc3VidHlwZXMgb2YgXCJhcnJheVwiJyk7XG4gICAgICAgICAgY29uc3QgY3VycmVudCA9IE9iamVjdC5hc3NpZ24oe30sIHBhcmVudCwgcGljayhleHRlbnNpb25EZWYsIE9WRVJSSURBQkxFX0ZJRUxEUyRkKSwge1xuICAgICAgICAgICAgdHlwZTogcGFyZW50XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuIHN1YnR5cGUoY3VycmVudCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9XG59O1xuZnVuY3Rpb24gd2FybklmUHJldmlld09uT3B0aW9ucyh0eXBlKSB7XG4gIHR5cGUub3B0aW9ucyAmJiB0eXBlLm9wdGlvbnMucHJldmlldyAmJiBjb25zb2xlLndhcm4oYEhlYWRzIHVwISBUaGUgcHJldmlldyBjb25maWcgaXMgbm8gbG9uZ2VyIGRlZmluZWQgb24gXCJvcHRpb25zXCIsIGJ1dCBpbnN0ZWFkIG9uIHRoZSB0eXBlL2ZpZWxkIGl0c2VsZi5cblBsZWFzZSBtb3ZlIHtvcHRpb25zOiB7cHJldmlldzogLi4ufX0gdG8gey4uLiwgcHJldmlldzogLi4ufSBvbiB0aGUgdHlwZS9maWVsZCBkZWZpbml0aW9uIG9mIFwiJHt0eXBlLm5hbWV9XCIuXG5gKTtcbn1cbmZ1bmN0aW9uIHdhcm5JZlByZXZpZXdIYXNGaWVsZHModHlwZSkge1xuICBjb25zdCBwcmV2aWV3ID0gdHlwZS5wcmV2aWV3IHx8ICh0eXBlLm9wdGlvbnMgfHwge30pLnByZXZpZXc7XG4gIHByZXZpZXcgJiYgXCJmaWVsZHNcIiBpbiBwcmV2aWV3ICYmIGNvbnNvbGUud2FybihgSGVhZHMgdXAhIFwicHJldmlldy5maWVsZHNcIiBzaG91bGQgYmUgcmVuYW1lZCB0byBcInByZXZpZXcuc2VsZWN0XCIuIFBsZWFzZSB1cGRhdGUgdGhlIHByZXZpZXcgY29uZmlnIGZvciBcIiR7dHlwZS5uYW1lfVwiLlxuYCk7XG59XG5mdW5jdGlvbiBpc0VtcHR5KG9iamVjdCkge1xuICBmb3IgKGNvbnN0IGtleSBpbiBvYmplY3QpXG4gICAgaWYgKG9iamVjdC5oYXNPd25Qcm9wZXJ0eShrZXkpKVxuICAgICAgcmV0dXJuICExO1xuICByZXR1cm4gITA7XG59XG5mdW5jdGlvbiBfc3RyaW5naWZ5KHZhbHVlLCBvcHRpb25zLCBkZXB0aCkge1xuICBpZiAoZGVwdGggPiBvcHRpb25zLm1heERlcHRoKVxuICAgIHJldHVybiBcIi4uLlwiO1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKVxuICAgICAgcmV0dXJuIFwiW2VtcHR5XVwiO1xuICAgIGNvbnN0IGNhcExlbmd0aCA9IE1hdGgubWF4KHZhbHVlLmxlbmd0aCAtIG9wdGlvbnMubWF4QnJlYWR0aCksIGFzU3RyaW5nMiA9IHZhbHVlLnNsaWNlKDAsIG9wdGlvbnMubWF4QnJlYWR0aCkubWFwKChpdGVtLCBpbmRleCkgPT4gX3N0cmluZ2lmeShpdGVtLCBvcHRpb25zLCBkZXB0aCArIDEpKS5jb25jYXQoY2FwTGVuZ3RoID4gMCA/IGBcXHUyMDI2KyR7Y2FwTGVuZ3RofWAgOiBbXSkuam9pbihcIiwgXCIpO1xuICAgIHJldHVybiBkZXB0aCA9PT0gMCA/IGFzU3RyaW5nMiA6IGBbJHthc1N0cmluZzJ9XWA7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiICYmIHZhbHVlICE9PSBudWxsKSB7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKS5maWx0ZXIoXG4gICAgICAoa2V5KSA9PiAhb3B0aW9ucy5pZ25vcmVLZXlzLmluY2x1ZGVzKGtleSkgJiYgdHlwZW9mIHZhbHVlW2tleV0gPCBcInVcIlxuICAgICk7XG4gICAgaWYgKGlzRW1wdHkocGljayh2YWx1ZSwga2V5cykpKVxuICAgICAgcmV0dXJuIFwie2VtcHR5fVwiO1xuICAgIGNvbnN0IGFzU3RyaW5nMiA9IGtleXMuc2xpY2UoMCwgb3B0aW9ucy5tYXhCcmVhZHRoKS5tYXAoKGtleSkgPT4gYCR7a2V5fTogJHtfc3RyaW5naWZ5KHZhbHVlW2tleV0sIG9wdGlvbnMsIGRlcHRoICsgMSl9YCkuam9pbihcIiwgXCIpO1xuICAgIHJldHVybiBkZXB0aCA9PT0gMCA/IGFzU3RyaW5nMiA6IGB7JHthc1N0cmluZzJ9fWA7XG4gIH1cbiAgY29uc3QgYXNTdHJpbmcgPSBTdHJpbmcodmFsdWUpO1xuICByZXR1cm4gYXNTdHJpbmcgPT09IFwiXCIgPyAnXCJcIicgOiBhc1N0cmluZztcbn1cbmZ1bmN0aW9uIHN0cmluZ2lmeSh2YWx1ZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IG9wdHMgPSB7XG4gICAgbWF4RGVwdGg6IFwibWF4RGVwdGhcIiBpbiBvcHRpb25zID8gb3B0aW9ucy5tYXhEZXB0aCA6IDIsXG4gICAgbWF4QnJlYWR0aDogXCJtYXhCcmVhZHRoXCIgaW4gb3B0aW9ucyA/IG9wdGlvbnMubWF4QnJlYWR0aCA6IDIsXG4gICAgaWdub3JlS2V5czogXCJpZ25vcmVLZXlzXCIgaW4gb3B0aW9ucyA/IG9wdGlvbnMuaWdub3JlS2V5cyA6IFtdXG4gIH07XG4gIHJldHVybiBfc3RyaW5naWZ5KHZhbHVlLCBvcHRzLCAwKTtcbn1cbmNvbnN0IE9QVElPTlMgPSB7XG4gIG1heEVudHJpZXM6IDIsXG4gIG1heERlcHRoOiAyLFxuICBtYXhCcmVhZHRoOiAyLFxuICBpZ25vcmVLZXlzOiBbXCJfaWRcIiwgXCJfdHlwZVwiLCBcIl9rZXlcIiwgXCJfcmVmXCJdXG59O1xuZnVuY3Rpb24gY3JlYXRlRmFsbGJhY2tQcmVwYXJlKGZpZWxkTmFtZXMpIHtcbiAgcmV0dXJuICh2YWx1ZSkgPT4gKHtcbiAgICB0aXRsZTogc3RyaW5naWZ5KHBpY2sodmFsdWUsIGZpZWxkTmFtZXMpLCBPUFRJT05TKVxuICB9KTtcbn1cbmZ1bmN0aW9uIGlzQmxvY2tGaWVsZChmaWVsZCkge1xuICByZXR1cm4gZmllbGQudHlwZSA9PT0gXCJhcnJheVwiICYmIGZpZWxkLm9mICYmIGZpZWxkLm9mLnNvbWUoKG1lbWJlcikgPT4gbWVtYmVyLnR5cGUgPT09IFwiYmxvY2tcIikgfHwgITE7XG59XG5jb25zdCBUSVRMRV9DQU5ESURBVEVTID0gW1widGl0bGVcIiwgXCJuYW1lXCIsIFwibGFiZWxcIiwgXCJoZWFkaW5nXCIsIFwiaGVhZGVyXCIsIFwiY2FwdGlvblwiXSwgREVTQ1JJUFRJT05fQ0FORElEQVRFUyA9IFtcImRlc2NyaXB0aW9uXCIsIC4uLlRJVExFX0NBTkRJREFURVNdO1xuZnVuY3Rpb24gZmllbGRIYXNSZWZlcmVuY2VUbyhmaWVsZERlZiwgcmVmVHlwZSkge1xuICByZXR1cm4gYXJyaWZ5KGZpZWxkRGVmLnRvIHx8IFtdKS5zb21lKChtZW1iZXJUeXBlRGVmKSA9PiBtZW1iZXJUeXBlRGVmLnR5cGUgPT09IHJlZlR5cGUpO1xufVxuZnVuY3Rpb24gaXNJbWFnZUFzc2V0RmllbGQoZmllbGREZWYpIHtcbiAgcmV0dXJuIGZpZWxkSGFzUmVmZXJlbmNlVG8oZmllbGREZWYsIFwic2FuaXR5LmltYWdlQXNzZXRcIik7XG59XG5mdW5jdGlvbiByZXNvbHZlSW1hZ2VBc3NldFBhdGgodHlwZURlZikge1xuICBjb25zdCBmaWVsZHMgPSB0eXBlRGVmLmZpZWxkcyB8fCBbXSwgaW1hZ2VBc3NldEZpZWxkID0gZmllbGRzLmZpbmQoaXNJbWFnZUFzc2V0RmllbGQpO1xuICBpZiAoaW1hZ2VBc3NldEZpZWxkKVxuICAgIHJldHVybiBpbWFnZUFzc2V0RmllbGQubmFtZTtcbiAgY29uc3QgZmllbGRXaXRoSW1hZ2VBc3NldCA9IGZpZWxkcy5maW5kKFxuICAgIChmaWVsZERlZikgPT4gKGZpZWxkRGVmLmZpZWxkcyB8fCBbXSkuc29tZShpc0ltYWdlQXNzZXRGaWVsZClcbiAgKTtcbiAgcmV0dXJuIGZpZWxkV2l0aEltYWdlQXNzZXQgPyBgJHtmaWVsZFdpdGhJbWFnZUFzc2V0Lm5hbWV9LmFzc2V0YCA6IHZvaWQgMDtcbn1cbmZ1bmN0aW9uIGlzRmlsZUFzc2V0RmllbGQoZmllbGREZWYpIHtcbiAgcmV0dXJuIGZpZWxkSGFzUmVmZXJlbmNlVG8oZmllbGREZWYsIFwic2FuaXR5LmZpbGVBc3NldFwiKTtcbn1cbmZ1bmN0aW9uIHJlc29sdmVGaWxlQXNzZXRQYXRoKHR5cGVEZWYpIHtcbiAgY29uc3QgZmllbGRzID0gdHlwZURlZi5maWVsZHMgfHwgW10sIGFzc2V0RmllbGQgPSBmaWVsZHMuZmluZChpc0ZpbGVBc3NldEZpZWxkKTtcbiAgaWYgKGFzc2V0RmllbGQpXG4gICAgcmV0dXJuIGFzc2V0RmllbGQubmFtZTtcbiAgY29uc3QgZmllbGRXaXRoRmlsZUFzc2V0ID0gZmllbGRzLmZpbmQoXG4gICAgKGZpZWxkRGVmKSA9PiAoZmllbGREZWYuZmllbGRzIHx8IFtdKS5zb21lKGlzRmlsZUFzc2V0RmllbGQpXG4gICk7XG4gIHJldHVybiBmaWVsZFdpdGhGaWxlQXNzZXQgPyBgJHtmaWVsZFdpdGhGaWxlQXNzZXQubmFtZX0uYXNzZXRgIDogdm9pZCAwO1xufVxuZnVuY3Rpb24gZ3Vlc3NQcmV2aWV3RmllbGRzKHJhd09iamVjdFR5cGVEZWYpIHtcbiAgY29uc3Qgb2JqZWN0VHlwZURlZiA9IHsgZmllbGRzOiBbXSwgLi4ucmF3T2JqZWN0VHlwZURlZiB9LCBzdHJpbmdGaWVsZE5hbWVzID0gb2JqZWN0VHlwZURlZi5maWVsZHMuZmlsdGVyKChmaWVsZCkgPT4gZmllbGQudHlwZSA9PT0gXCJzdHJpbmdcIikubWFwKChmaWVsZCkgPT4gZmllbGQubmFtZSksIGJsb2NrRmllbGROYW1lcyA9IG9iamVjdFR5cGVEZWYuZmllbGRzLmZpbHRlcihpc0Jsb2NrRmllbGQpLm1hcCgoZmllbGQpID0+IGZpZWxkLm5hbWUpO1xuICBsZXQgdGl0bGVGaWVsZCA9IFRJVExFX0NBTkRJREFURVMuZmluZChcbiAgICAoY2FuZGlkYXRlKSA9PiBzdHJpbmdGaWVsZE5hbWVzLmluY2x1ZGVzKGNhbmRpZGF0ZSkgfHwgYmxvY2tGaWVsZE5hbWVzLmluY2x1ZGVzKGNhbmRpZGF0ZSlcbiAgKSwgZGVzY0ZpZWxkID0gREVTQ1JJUFRJT05fQ0FORElEQVRFUy5maW5kKFxuICAgIChjYW5kaWRhdGUpID0+IGNhbmRpZGF0ZSAhPT0gdGl0bGVGaWVsZCAmJiAoc3RyaW5nRmllbGROYW1lcy5pbmNsdWRlcyhjYW5kaWRhdGUpIHx8IGJsb2NrRmllbGROYW1lcy5pbmNsdWRlcyhjYW5kaWRhdGUpKVxuICApO1xuICB0aXRsZUZpZWxkIHx8ICh0aXRsZUZpZWxkID0gc3RyaW5nRmllbGROYW1lc1swXSB8fCBibG9ja0ZpZWxkTmFtZXNbMF0sIGRlc2NGaWVsZCA9IHN0cmluZ0ZpZWxkTmFtZXNbMV0gfHwgYmxvY2tGaWVsZE5hbWVzWzFdKTtcbiAgY29uc3QgbWVkaWFGaWVsZCA9IG9iamVjdFR5cGVEZWYuZmllbGRzLmZpbmQoKGZpZWxkKSA9PiBmaWVsZC50eXBlID09PSBcImltYWdlXCIpLCBpbWFnZUFzc2V0UGF0aCA9IHJlc29sdmVJbWFnZUFzc2V0UGF0aChvYmplY3RUeXBlRGVmKTtcbiAgaWYgKCF0aXRsZUZpZWxkKSB7XG4gICAgY29uc3QgZmlsZUFzc2V0UGF0aCA9IHJlc29sdmVGaWxlQXNzZXRQYXRoKG9iamVjdFR5cGVEZWYpO1xuICAgIGZpbGVBc3NldFBhdGggJiYgKHRpdGxlRmllbGQgPSBgJHtmaWxlQXNzZXRQYXRofS5vcmlnaW5hbEZpbGVuYW1lYCksIGltYWdlQXNzZXRQYXRoICYmICh0aXRsZUZpZWxkID0gYCR7aW1hZ2VBc3NldFBhdGh9Lm9yaWdpbmFsRmlsZW5hbWVgKTtcbiAgfVxuICBpZiAoIXRpdGxlRmllbGQgJiYgIWltYWdlQXNzZXRQYXRoKSB7XG4gICAgY29uc3QgZmllbGROYW1lcyA9IG9iamVjdFR5cGVEZWYuZmllbGRzLm1hcCgoZmllbGQpID0+IGZpZWxkLm5hbWUpO1xuICAgIHJldHVybiB7XG4gICAgICBzZWxlY3Q6IGZpZWxkTmFtZXMucmVkdWNlKChhY2MsIGZpZWxkTmFtZSkgPT4gKGFjY1tmaWVsZE5hbWVdID0gZmllbGROYW1lLCBhY2MpLCB7fSksXG4gICAgICBwcmVwYXJlOiBjcmVhdGVGYWxsYmFja1ByZXBhcmUoZmllbGROYW1lcylcbiAgICB9O1xuICB9XG4gIHJldHVybiB7XG4gICAgc2VsZWN0OiBvbWl0QnkoXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiB0aXRsZUZpZWxkLFxuICAgICAgICBkZXNjcmlwdGlvbjogZGVzY0ZpZWxkLFxuICAgICAgICBtZWRpYTogbWVkaWFGaWVsZCA/IG1lZGlhRmllbGQubmFtZSA6IGltYWdlQXNzZXRQYXRoXG4gICAgICB9LFxuICAgICAgaXNVbmRlZmluZWRcbiAgICApXG4gIH07XG59XG5mdW5jdGlvbiBwYXJzZVNlbGVjdGlvbihzZWxlY3Rpb24pIHtcbiAgcmV0dXJuIHNlbGVjdGlvbi5yZWR1Y2UoKGFjYywgZmllbGQpID0+IChhY2NbZmllbGRdID0gZmllbGQsIGFjYyksIHt9KTtcbn1cbmZ1bmN0aW9uIHBhcnNlUHJldmlldyhwcmV2aWV3KSB7XG4gIGlmICghcHJldmlldylcbiAgICByZXR1cm4gcHJldmlldztcbiAgY29uc3Qgc2VsZWN0ID0gcHJldmlldy5zZWxlY3QgfHwgcHJldmlldy5maWVsZHMgfHwge307XG4gIHJldHVybiBBcnJheS5pc0FycmF5KHNlbGVjdCkgPyB7XG4gICAgLi4ucGljayhwcmV2aWV3LCBbXCJwcmVwYXJlXCIsIFwiY29tcG9uZW50XCJdKSxcbiAgICBzZWxlY3Q6IHBhcnNlU2VsZWN0aW9uKHNlbGVjdClcbiAgfSA6IHtcbiAgICAuLi5waWNrKHByZXZpZXcsIFtcInByZXBhcmVcIiwgXCJjb21wb25lbnRcIl0pLFxuICAgIHNlbGVjdFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUHJldmlld0dldHRlcihvYmplY3RUeXBlRGVmKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gd2FybklmUHJldmlld09uT3B0aW9ucyhvYmplY3RUeXBlRGVmKSwgd2FybklmUHJldmlld0hhc0ZpZWxkcyhvYmplY3RUeXBlRGVmKSwgcGFyc2VQcmV2aWV3KG9iamVjdFR5cGVEZWYucHJldmlldyB8fCAob2JqZWN0VHlwZURlZi5vcHRpb25zIHx8IHt9KS5wcmV2aWV3KSB8fCBndWVzc1ByZXZpZXdGaWVsZHMob2JqZWN0VHlwZURlZik7XG4gIH07XG59XG5jb25zdCBERUZBVUxUX0xJTktfQU5OT1RBVElPTiA9IHtcbiAgdHlwZTogXCJvYmplY3RcIixcbiAgbmFtZTogXCJsaW5rXCIsXG4gIHRpdGxlOiBcIkxpbmtcIixcbiAgaTE4blRpdGxlS2V5OiBcImlucHV0cy5wb3J0YWJsZS10ZXh0LmFubm90YXRpb24ubGlua1wiLFxuICBvcHRpb25zOiB7XG4gICAgbW9kYWw6IHsgdHlwZTogXCJwb3BvdmVyXCIgfVxuICB9LFxuICBmaWVsZHM6IFtcbiAgICB7XG4gICAgICBuYW1lOiBcImhyZWZcIixcbiAgICAgIHR5cGU6IFwidXJsXCIsXG4gICAgICB0aXRsZTogXCJMaW5rXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJBIHZhbGlkIHdlYiwgZW1haWwsIHBob25lLCBvciByZWxhdGl2ZSBsaW5rLlwiLFxuICAgICAgdmFsaWRhdGlvbjogKFJ1bGUpID0+IFJ1bGUudXJpKHtcbiAgICAgICAgc2NoZW1lOiBbXCJodHRwXCIsIFwiaHR0cHNcIiwgXCJ0ZWxcIiwgXCJtYWlsdG9cIl0sXG4gICAgICAgIGFsbG93UmVsYXRpdmU6ICEwXG4gICAgICB9KVxuICAgIH1cbiAgXVxufSwgREVGQVVMVF9URVhUX0ZJRUxEID0ge1xuICB0eXBlOiBcInRleHRcIixcbiAgbmFtZTogXCJ0ZXh0XCIsXG4gIHRpdGxlOiBcIlRleHRcIlxufSwgREVGQVVMVF9NQVJLU19GSUVMRCA9IHtcbiAgbmFtZTogXCJtYXJrc1wiLFxuICB0eXBlOiBcImFycmF5XCIsXG4gIG9mOiBbeyB0eXBlOiBcInN0cmluZ1wiIH1dLFxuICB0aXRsZTogXCJNYXJrc1wiXG59LCBMSVNUX1RZUEVTID0ge1xuICBidWxsZXQ6IHtcbiAgICB0aXRsZTogXCJCdWxsZXRlZCBsaXN0XCIsXG4gICAgdmFsdWU6IFwiYnVsbGV0XCIsXG4gICAgaTE4blRpdGxlS2V5OiBcImlucHV0cy5wb3J0YWJsZS10ZXh0Lmxpc3QtdHlwZS5idWxsZXRcIlxuICB9LFxuICBudW1iZXJlZDoge1xuICAgIHRpdGxlOiBcIk51bWJlcmVkIGxpc3RcIixcbiAgICB2YWx1ZTogXCJudW1iZXJcIixcbiAgICBpMThuVGl0bGVLZXk6IFwiaW5wdXRzLnBvcnRhYmxlLXRleHQubGlzdC10eXBlLm51bWJlclwiXG4gIH1cbn0sIERFRkFVTFRfTElTVF9UWVBFUyA9IFtMSVNUX1RZUEVTLmJ1bGxldCwgTElTVF9UWVBFUy5udW1iZXJlZF0sIEJMT0NLX1NUWUxFUyA9IHtcbiAgbm9ybWFsOiB7IHRpdGxlOiBcIk5vcm1hbFwiLCB2YWx1ZTogXCJub3JtYWxcIiwgaTE4blRpdGxlS2V5OiBcImlucHV0cy5wb3J0YWJsZS10ZXh0LnN0eWxlLm5vcm1hbFwiIH0sXG4gIGgxOiB7IHRpdGxlOiBcIkhlYWRpbmcgMVwiLCB2YWx1ZTogXCJoMVwiLCBpMThuVGl0bGVLZXk6IFwiaW5wdXRzLnBvcnRhYmxlLXRleHQuc3R5bGUuaDFcIiB9LFxuICBoMjogeyB0aXRsZTogXCJIZWFkaW5nIDJcIiwgdmFsdWU6IFwiaDJcIiwgaTE4blRpdGxlS2V5OiBcImlucHV0cy5wb3J0YWJsZS10ZXh0LnN0eWxlLmgyXCIgfSxcbiAgaDM6IHsgdGl0bGU6IFwiSGVhZGluZyAzXCIsIHZhbHVlOiBcImgzXCIsIGkxOG5UaXRsZUtleTogXCJpbnB1dHMucG9ydGFibGUtdGV4dC5zdHlsZS5oM1wiIH0sXG4gIGg0OiB7IHRpdGxlOiBcIkhlYWRpbmcgNFwiLCB2YWx1ZTogXCJoNFwiLCBpMThuVGl0bGVLZXk6IFwiaW5wdXRzLnBvcnRhYmxlLXRleHQuc3R5bGUuaDRcIiB9LFxuICBoNTogeyB0aXRsZTogXCJIZWFkaW5nIDVcIiwgdmFsdWU6IFwiaDVcIiwgaTE4blRpdGxlS2V5OiBcImlucHV0cy5wb3J0YWJsZS10ZXh0LnN0eWxlLmg1XCIgfSxcbiAgaDY6IHsgdGl0bGU6IFwiSGVhZGluZyA2XCIsIHZhbHVlOiBcImg2XCIsIGkxOG5UaXRsZUtleTogXCJpbnB1dHMucG9ydGFibGUtdGV4dC5zdHlsZS5oNlwiIH0sXG4gIGJsb2NrcXVvdGU6IHtcbiAgICB0aXRsZTogXCJRdW90ZVwiLFxuICAgIHZhbHVlOiBcImJsb2NrcXVvdGVcIixcbiAgICBpMThuVGl0bGVLZXk6IFwiaW5wdXRzLnBvcnRhYmxlLXRleHQuc3R5bGUucXVvdGVcIlxuICB9XG59LCBERUZBVUxUX0JMT0NLX1NUWUxFUyA9IFtcbiAgQkxPQ0tfU1RZTEVTLm5vcm1hbCxcbiAgQkxPQ0tfU1RZTEVTLmgxLFxuICBCTE9DS19TVFlMRVMuaDIsXG4gIEJMT0NLX1NUWUxFUy5oMyxcbiAgQkxPQ0tfU1RZTEVTLmg0LFxuICBCTE9DS19TVFlMRVMuaDUsXG4gIEJMT0NLX1NUWUxFUy5oNixcbiAgQkxPQ0tfU1RZTEVTLmJsb2NrcXVvdGVcbl0sIERFQ09SQVRPUl9TVFJPTkcgPSB7XG4gIHRpdGxlOiBcIlN0cm9uZ1wiLFxuICB2YWx1ZTogXCJzdHJvbmdcIixcbiAgaTE4blRpdGxlS2V5OiBcImlucHV0cy5wb3J0YWJsZS10ZXh0LmRlY29yYXRvci5zdHJvbmdcIlxufSwgREVDT1JBVE9SX0VNUEhBU0lTID0ge1xuICB0aXRsZTogXCJJdGFsaWNcIixcbiAgdmFsdWU6IFwiZW1cIixcbiAgaTE4blRpdGxlS2V5OiBcImlucHV0cy5wb3J0YWJsZS10ZXh0LmRlY29yYXRvci5lbXBoYXNpc1wiXG59LCBERUNPUkFUT1JfQ09ERSA9IHtcbiAgdGl0bGU6IFwiQ29kZVwiLFxuICB2YWx1ZTogXCJjb2RlXCIsXG4gIGkxOG5UaXRsZUtleTogXCJpbnB1dHMucG9ydGFibGUtdGV4dC5kZWNvcmF0b3IuY29kZVwiXG59LCBERUNPUkFUT1JfVU5ERVJMSU5FID0ge1xuICB0aXRsZTogXCJVbmRlcmxpbmVcIixcbiAgdmFsdWU6IFwidW5kZXJsaW5lXCIsXG4gIGkxOG5UaXRsZUtleTogXCJpbnB1dHMucG9ydGFibGUtdGV4dC5kZWNvcmF0b3IudW5kZXJsaW5lXCJcbn0sIERFQ09SQVRPUl9TVFJJS0UgPSB7XG4gIHRpdGxlOiBcIlN0cmlrZVwiLFxuICB2YWx1ZTogXCJzdHJpa2UtdGhyb3VnaFwiLFxuICBpMThuVGl0bGVLZXk6IFwiaW5wdXRzLnBvcnRhYmxlLXRleHQuZGVjb3JhdG9yLnN0cmlrZS10aHJvdWdoXCJcbn0sIERFQ09SQVRPUlMgPSB7XG4gIHN0cm9uZzogREVDT1JBVE9SX1NUUk9ORyxcbiAgZW06IERFQ09SQVRPUl9FTVBIQVNJUyxcbiAgY29kZTogREVDT1JBVE9SX0NPREUsXG4gIHVuZGVybGluZTogREVDT1JBVE9SX1VOREVSTElORSxcbiAgc3RyaWtlVGhyb3VnaDogREVDT1JBVE9SX1NUUklLRVxufSwgREVGQVVMVF9ERUNPUkFUT1JTID0gW1xuICBERUNPUkFUT1JTLnN0cm9uZyxcbiAgREVDT1JBVE9SUy5lbSxcbiAgREVDT1JBVE9SUy5jb2RlLFxuICBERUNPUkFUT1JTLnVuZGVybGluZSxcbiAgREVDT1JBVE9SUy5zdHJpa2VUaHJvdWdoXG5dLCBJTkhFUklURURfRklFTERTJDEgPSBbXG4gIFwidHlwZVwiLFxuICBcIm5hbWVcIixcbiAgXCJ0aXRsZVwiLFxuICBcImpzb25UeXBlXCIsXG4gIFwiZGVzY3JpcHRpb25cIixcbiAgXCJvcHRpb25zXCIsXG4gIFwiZmllbGRzZXRzXCIsXG4gIFwiaWNvblwiXG5dLCBCTE9DS19DT1JFID0ge1xuICBuYW1lOiBcImJsb2NrXCIsXG4gIHRpdGxlOiBcIkJsb2NrXCIsXG4gIHR5cGU6IG51bGwsXG4gIGpzb25UeXBlOiBcIm9iamVjdFwiXG59LCBERUZBVUxUX09QVElPTlMkMyA9IHt9LCBCbG9ja1R5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gQkxPQ0tfQ09SRTtcbiAgfSxcbiAgZXh0ZW5kKHN1YlR5cGVEZWYsIGV4dGVuZE1lbWJlcikge1xuICAgIGNvbnN0IG9wdGlvbnMgPSB7IC4uLnN1YlR5cGVEZWYub3B0aW9ucyB8fCBERUZBVUxUX09QVElPTlMkMyB9LCB7IG1hcmtzLCBzdHlsZXMsIGxpc3RzLCBvZiwgLi4ucmVzdCB9ID0gc3ViVHlwZURlZiwgY2hpbGRyZW5GaWVsZCA9IGNyZWF0ZUNoaWxkcmVuRmllbGQobWFya3MsIG9mKSwgc3R5bGVGaWVsZCA9IGNyZWF0ZVN0eWxlRmllbGQoc3R5bGVzKSwgbGlzdEl0ZW1GaWVsZCA9IGNyZWF0ZUxpc3RJdGVtRmllbGQobGlzdHMpLCBtYXJrRGVmc0ZpZWxkID0ge1xuICAgICAgbmFtZTogXCJtYXJrRGVmc1wiLFxuICAgICAgdGl0bGU6IFwiTWFyayBkZWZpbml0aW9uc1wiLFxuICAgICAgdHlwZTogXCJhcnJheVwiLFxuICAgICAgb2Y6IChtYXJrcyA9PSBudWxsID8gdm9pZCAwIDogbWFya3MuYW5ub3RhdGlvbnMpIHx8IERFRkFVTFRfQU5OT1RBVElPTlNcbiAgICB9LCBmaWVsZHMgPSBbY2hpbGRyZW5GaWVsZCwgc3R5bGVGaWVsZCwgbGlzdEl0ZW1GaWVsZCwgbWFya0RlZnNGaWVsZCwge1xuICAgICAgbmFtZTogXCJsZXZlbFwiLFxuICAgICAgdGl0bGU6IFwiSW5kZW50YXRpb25cIixcbiAgICAgIHR5cGU6IFwibnVtYmVyXCJcbiAgICB9XS5jb25jYXQoXG4gICAgICBzdWJUeXBlRGVmLmZpZWxkcyB8fCBbXVxuICAgICksIHBhcnNlZCA9IE9iamVjdC5hc3NpZ24ocGljayhCTE9DS19DT1JFLCBJTkhFUklURURfRklFTERTJDEpLCByZXN0LCB7XG4gICAgICB0eXBlOiBCTE9DS19DT1JFLFxuICAgICAgb3B0aW9uc1xuICAgIH0pO1xuICAgIHJldHVybiBsYXp5R2V0dGVyKHBhcnNlZCwgXCJmaWVsZHNcIiwgKCkgPT4gZmllbGRzLm1hcCgoZmllbGREZWYpID0+IHtcbiAgICAgIGNvbnN0IHsgbmFtZSwgLi4udHlwZSB9ID0gZmllbGREZWY7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lLFxuICAgICAgICB0eXBlOiBleHRlbmRNZW1iZXIodHlwZSlcbiAgICAgIH07XG4gICAgfSkpLCBsYXp5R2V0dGVyKHBhcnNlZCwgXCJwcmV2aWV3XCIsIGNyZWF0ZVByZXZpZXdHZXR0ZXIoc3ViVHlwZURlZikpLCBzdWJ0eXBlKHBhcnNlZCk7XG4gICAgZnVuY3Rpb24gc3VidHlwZShwYXJlbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gcGFyZW50O1xuICAgICAgICB9LFxuICAgICAgICBleHRlbmQ6IChleHRlbnNpb25EZWYpID0+IHtcbiAgICAgICAgICBpZiAoZXh0ZW5zaW9uRGVmLmZpZWxkcylcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IG92ZXJyaWRlIGBmaWVsZHNgIG9mIHN1YnR5cGVzIG9mIFwiYmxvY2tcIicpO1xuICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSBPYmplY3QuYXNzaWduKHt9LCBwYXJlbnQsIHBpY2soZXh0ZW5zaW9uRGVmLCBJTkhFUklURURfRklFTERTJDEpLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn07XG5mdW5jdGlvbiBlbnN1cmVOb3JtYWxTdHlsZShzdHlsZXMpIHtcbiAgcmV0dXJuIHN0eWxlcy5zb21lKChzdHlsZSkgPT4gc3R5bGUudmFsdWUgPT09IFwibm9ybWFsXCIpID8gc3R5bGVzIDogW0JMT0NLX1NUWUxFUy5ub3JtYWwsIC4uLnN0eWxlc107XG59XG5mdW5jdGlvbiBjcmVhdGVTdHlsZUZpZWxkKHN0eWxlcykge1xuICByZXR1cm4ge1xuICAgIG5hbWU6IFwic3R5bGVcIixcbiAgICB0aXRsZTogXCJTdHlsZVwiLFxuICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgb3B0aW9uczoge1xuICAgICAgbGlzdDogZW5zdXJlTm9ybWFsU3R5bGUoc3R5bGVzIHx8IERFRkFVTFRfQkxPQ0tfU1RZTEVTKVxuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUxpc3RJdGVtRmllbGQobGlzdHMpIHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBcImxpc3RJdGVtXCIsXG4gICAgdGl0bGU6IFwiTGlzdCB0eXBlXCIsXG4gICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICBvcHRpb25zOiB7XG4gICAgICBsaXN0OiBsaXN0cyB8fCBERUZBVUxUX0xJU1RfVFlQRVNcbiAgICB9XG4gIH07XG59XG5jb25zdCBERUZBVUxUX0FOTk9UQVRJT05TID0gW0RFRkFVTFRfTElOS19BTk5PVEFUSU9OXTtcbmZ1bmN0aW9uIGNyZWF0ZUNoaWxkcmVuRmllbGQobWFya3MsIG9mID0gW10pIHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBcImNoaWxkcmVuXCIsXG4gICAgdGl0bGU6IFwiQ29udGVudFwiLFxuICAgIHR5cGU6IFwiYXJyYXlcIixcbiAgICBvZjogW1xuICAgICAge1xuICAgICAgICB0eXBlOiBcInNwYW5cIixcbiAgICAgICAgZmllbGRzOiBbREVGQVVMVF9URVhUX0ZJRUxELCBERUZBVUxUX01BUktTX0ZJRUxEXSxcbiAgICAgICAgYW5ub3RhdGlvbnM6IG1hcmtzICYmIG1hcmtzLmFubm90YXRpb25zID8gbWFya3MuYW5ub3RhdGlvbnMgOiBERUZBVUxUX0FOTk9UQVRJT05TLFxuICAgICAgICBkZWNvcmF0b3JzOiBtYXJrcyAmJiBtYXJrcy5kZWNvcmF0b3JzID8gbWFya3MuZGVjb3JhdG9ycyA6IERFRkFVTFRfREVDT1JBVE9SU1xuICAgICAgfSxcbiAgICAgIC4uLm9mLmZpbHRlcigobWVtYmVyVHlwZSkgPT4gbWVtYmVyVHlwZS50eXBlICE9PSBcInNwYW5cIilcbiAgICBdXG4gIH07XG59XG5jb25zdCBJTkhFUklURURfRklFTERTID0gW1xuICBcInR5cGVcIixcbiAgXCJuYW1lXCIsXG4gIFwidGl0bGVcIixcbiAgXCJqc29uVHlwZVwiLFxuICBcImRlc2NyaXB0aW9uXCIsXG4gIFwib3B0aW9uc1wiLFxuICBcImZpZWxkc2V0c1wiLFxuICBcImljb25cIlxuXSwgU1BBTl9DT1JFID0ge1xuICBuYW1lOiBcInNwYW5cIixcbiAgdGl0bGU6IFwiU3BhblwiLFxuICB0eXBlOiBudWxsLFxuICBqc29uVHlwZTogXCJvYmplY3RcIlxufSwgTUFSS1NfRklFTEQgPSB7XG4gIG5hbWU6IFwibWFya3NcIixcbiAgdGl0bGU6IFwiTWFya3NcIixcbiAgdHlwZTogXCJhcnJheVwiLFxuICBvZjogW3sgdHlwZTogXCJzdHJpbmdcIiB9XVxufSwgVEVYVF9GSUVMRCA9IHtcbiAgbmFtZTogXCJ0ZXh0XCIsXG4gIHRpdGxlOiBcIlRleHRcIixcbiAgdHlwZTogXCJzdHJpbmdcIlxufSwgREVGQVVMVF9PUFRJT05TJDIgPSB7fSwgU3BhblR5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gU1BBTl9DT1JFO1xuICB9LFxuICBleHRlbmQoc3ViVHlwZURlZiwgZXh0ZW5kTWVtYmVyKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHsgLi4uc3ViVHlwZURlZi5vcHRpb25zIHx8IERFRkFVTFRfT1BUSU9OUyQyIH0sIHsgYW5ub3RhdGlvbnMgPSBbXSwgbWFya3MgPSBbXSB9ID0gc3ViVHlwZURlZiwgZmllbGRzID0gW01BUktTX0ZJRUxELCBURVhUX0ZJRUxEXSwgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKFNQQU5fQ09SRSwgSU5IRVJJVEVEX0ZJRUxEUyksIHN1YlR5cGVEZWYsIHtcbiAgICAgIHR5cGU6IFNQQU5fQ09SRSxcbiAgICAgIG9wdGlvbnNcbiAgICB9KTtcbiAgICByZXR1cm4gbGF6eUdldHRlcihwYXJzZWQsIFwiZmllbGRzXCIsICgpID0+IGZpZWxkcy5tYXAoKGZpZWxkRGVmKSA9PiB7XG4gICAgICBjb25zdCB7IG5hbWUsIC4uLnR5cGUgfSA9IGZpZWxkRGVmO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdHlwZTogZXh0ZW5kTWVtYmVyKHR5cGUpXG4gICAgICB9O1xuICAgIH0pKSwgbGF6eUdldHRlcihwYXJzZWQsIFwiYW5ub3RhdGlvbnNcIiwgKCkgPT4gYW5ub3RhdGlvbnMubWFwKGV4dGVuZE1lbWJlcikpLCBsYXp5R2V0dGVyKHBhcnNlZCwgXCJtYXJrc1wiLCAoKSA9PiBtYXJrcy5tYXAoZXh0ZW5kTWVtYmVyKSksIGxhenlHZXR0ZXIocGFyc2VkLCBcInByZXZpZXdcIiwgY3JlYXRlUHJldmlld0dldHRlcihzdWJUeXBlRGVmKSksIHN1YnR5cGUocGFyc2VkKTtcbiAgICBmdW5jdGlvbiBzdWJ0eXBlKHBhcmVudCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIGV4dGVuZDogKGV4dGVuc2lvbkRlZikgPT4ge1xuICAgICAgICAgIGlmIChleHRlbnNpb25EZWYuZmllbGRzKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3Qgb3ZlcnJpZGUgYGZpZWxkc2Agb2Ygc3VidHlwZXMgb2YgXCJzcGFuXCInKTtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgSU5IRVJJVEVEX0ZJRUxEUyksIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcmVudFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBzdWJ0eXBlKGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxufTtcbnZhciBwcmltaXRpdmVQcmV2aWV3ID0ge1xuICBwcmVwYXJlOiAodmFsKSA9PiAoeyB0aXRsZTogU3RyaW5nKHZhbCkgfSlcbn07XG5jb25zdCBPVkVSUklEQUJMRV9GSUVMRFMkYyA9IFsuLi5ERUZBVUxUX09WRVJSSURFQUJMRV9GSUVMRFNdLCBCT09MRUFOX0NPUkUgPSB7XG4gIG5hbWU6IFwiYm9vbGVhblwiLFxuICB0aXRsZTogXCJCb29sZWFuXCIsXG4gIHR5cGU6IG51bGwsXG4gIGpzb25UeXBlOiBcImJvb2xlYW5cIlxufSwgQm9vbGVhblR5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gQk9PTEVBTl9DT1JFO1xuICB9LFxuICBleHRlbmQoc3ViVHlwZURlZikge1xuICAgIGNvbnN0IHBhcnNlZCA9IE9iamVjdC5hc3NpZ24ocGljayhCT09MRUFOX0NPUkUsIE9WRVJSSURBQkxFX0ZJRUxEUyRjKSwgc3ViVHlwZURlZiwge1xuICAgICAgdHlwZTogQk9PTEVBTl9DT1JFLFxuICAgICAgcHJldmlldzogcHJpbWl0aXZlUHJldmlld1xuICAgIH0pO1xuICAgIHJldHVybiBzdWJ0eXBlKHBhcnNlZCk7XG4gICAgZnVuY3Rpb24gc3VidHlwZShwYXJlbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gcGFyZW50O1xuICAgICAgICB9LFxuICAgICAgICBleHRlbmQ6IChleHRlbnNpb25EZWYpID0+IHtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgT1ZFUlJJREFCTEVfRklFTERTJGMpLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn0sIFJFRl9GSUVMRCQxID0ge1xuICBuYW1lOiBcIl9yZWZcIixcbiAgdGl0bGU6IFwiUmVmZXJlbmNlZCBkb2N1bWVudCBJRFwiLFxuICB0eXBlOiBcInN0cmluZ1wiXG59LCBXRUFLX0ZJRUxEJDEgPSB7XG4gIG5hbWU6IFwiX3dlYWtcIixcbiAgdGl0bGU6IFwiV2VhayByZWZlcmVuY2UgbWFya2VyXCIsXG4gIHR5cGU6IFwiYm9vbGVhblwiXG59LCBEQVRBU0VUX0ZJRUxEID0ge1xuICBuYW1lOiBcIl9kYXRhc2V0XCIsXG4gIHRpdGxlOiBcIlRhcmdldCBkYXRhc2V0XCIsXG4gIHR5cGU6IFwic3RyaW5nXCJcbn0sIFBST0pFQ1RfSURfRklFTEQgPSB7XG4gIG5hbWU6IFwiX3Byb2plY3RJZFwiLFxuICB0aXRsZTogXCJUYXJnZXQgcHJvamVjdCBJRFwiLFxuICB0eXBlOiBcInN0cmluZ1wiLFxuICBoaWRkZW46ICEwXG59LCBSRUZFUkVOQ0VfRklFTERTJDEgPSBbUkVGX0ZJRUxEJDEsIFdFQUtfRklFTEQkMSwgREFUQVNFVF9GSUVMRCwgUFJPSkVDVF9JRF9GSUVMRF0sIE9WRVJSSURBQkxFX0ZJRUxEUyRiID0gWy4uLkRFRkFVTFRfT1ZFUlJJREVBQkxFX0ZJRUxEU10sIENST1NTX0RBVEFTRVRfUkVGRVJFTkNFX0NPUkUgPSB7XG4gIG5hbWU6IFwiY3Jvc3NEYXRhc2V0UmVmZXJlbmNlXCIsXG4gIHR5cGU6IG51bGwsXG4gIGpzb25UeXBlOiBcIm9iamVjdFwiXG59O1xuZnVuY3Rpb24gaHVtYW5pemUkMShhcnIsIGNvbmp1bmN0aW9uKSB7XG4gIGNvbnN0IGxlbiA9IGFyci5sZW5ndGg7XG4gIGlmIChsZW4gPT09IDEpXG4gICAgcmV0dXJuIGFyclswXTtcbiAgY29uc3QgZmlyc3QgPSBhcnIuc2xpY2UoMCwgbGVuIC0gMSksIGxhc3QgPSBhcnJbbGVuIC0gMV07XG4gIHJldHVybiBgJHtmaXJzdC5qb2luKFwiLCBcIil9ICR7Y29uanVuY3Rpb259ICR7bGFzdH1gO1xufVxuZnVuY3Rpb24gYnVpbGRUaXRsZSQxKHR5cGUpIHtcbiAgcmV0dXJuICF0eXBlLnRvIHx8IHR5cGUudG8ubGVuZ3RoID09PSAwID8gXCJDcm9zcyBkYXRhc2V0IFJlZmVyZW5jZVwiIDogYENyb3NzIGRhdGFzZXQgcmVmZXJlbmNlIHRvICR7aHVtYW5pemUkMShcbiAgICBhcnJpZnkodHlwZS50bykubWFwKCh0b1R5cGUpID0+IHRvVHlwZS50aXRsZSB8fCBjYXBpdGFsaXplKHRvVHlwZS50eXBlKSksXG4gICAgXCJvclwiXG4gICkudG9Mb3dlckNhc2UoKX1gO1xufVxuY29uc3QgQ3Jvc3NEYXRhc2V0UmVmZXJlbmNlVHlwZSA9IHtcbiAgZ2V0KCkge1xuICAgIHJldHVybiBDUk9TU19EQVRBU0VUX1JFRkVSRU5DRV9DT1JFO1xuICB9LFxuICBleHRlbmQoc3ViVHlwZURlZiwgY3JlYXRlTWVtYmVyVHlwZSkge1xuICAgIGlmICghc3ViVHlwZURlZi50bylcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYE1pc3NpbmcgXCJ0b1wiIGZpZWxkIGluIGNyb3NzIGRhdGFzZXQgcmVmZXJlbmNlIGRlZmluaXRpb24uIENoZWNrIHRoZSB0eXBlICR7c3ViVHlwZURlZi5uYW1lfWBcbiAgICAgICk7XG4gICAgY29uc3QgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihcbiAgICAgIHBpY2soQ1JPU1NfREFUQVNFVF9SRUZFUkVOQ0VfQ09SRSwgT1ZFUlJJREFCTEVfRklFTERTJGIpLFxuICAgICAgc3ViVHlwZURlZixcbiAgICAgIHtcbiAgICAgICAgdHlwZTogQ1JPU1NfREFUQVNFVF9SRUZFUkVOQ0VfQ09SRVxuICAgICAgfVxuICAgICk7XG4gICAgcmV0dXJuIGxhenlHZXR0ZXIocGFyc2VkLCBcImZpZWxkc1wiLCAoKSA9PiBSRUZFUkVOQ0VfRklFTERTJDEubWFwKChmaWVsZERlZikgPT4ge1xuICAgICAgY29uc3QgeyBuYW1lLCAuLi50eXBlIH0gPSBmaWVsZERlZjtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIHR5cGU6IGNyZWF0ZU1lbWJlclR5cGUodHlwZSlcbiAgICAgIH07XG4gICAgfSkpLCBsYXp5R2V0dGVyKHBhcnNlZCwgXCJ0b1wiLCAoKSA9PiBhcnJpZnkoc3ViVHlwZURlZi50bykubWFwKCh0b1R5cGUpID0+ICh7XG4gICAgICAuLi50b1R5cGUsXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2FtZWxjYXNlXG4gICAgICBfX2V4cGVyaW1lbnRhbF9zZWFyY2g6IHJlc29sdmVTZWFyY2hDb25maWdGb3JCYXNlRmllbGRQYXRocyh0b1R5cGUpXG4gICAgfSkpKSwgbGF6eUdldHRlcihwYXJzZWQsIFwidGl0bGVcIiwgKCkgPT4gc3ViVHlwZURlZi50aXRsZSB8fCBidWlsZFRpdGxlJDEocGFyc2VkKSksIHN1YnR5cGUocGFyc2VkKTtcbiAgICBmdW5jdGlvbiBzdWJ0eXBlKHBhcmVudCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIGV4dGVuZDogKGV4dGVuc2lvbkRlZikgPT4ge1xuICAgICAgICAgIGlmIChleHRlbnNpb25EZWYub2YpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBvdmVycmlkZSBgb2ZgIG9mIHN1YnR5cGVzIG9mIFwicmVmZXJlbmNlXCInKTtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgT1ZFUlJJREFCTEVfRklFTERTJGIpLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn0sIE9WRVJSSURBQkxFX0ZJRUxEUyRhID0gWy4uLkRFRkFVTFRfT1ZFUlJJREVBQkxFX0ZJRUxEU10sIERBVEVfQ09SRSA9IHtcbiAgbmFtZTogXCJkYXRlXCIsXG4gIHRpdGxlOiBcIkRhdGV0aW1lXCIsXG4gIHR5cGU6IG51bGwsXG4gIGpzb25UeXBlOiBcInN0cmluZ1wiXG59LCBEYXRlVHlwZSA9IHtcbiAgZ2V0KCkge1xuICAgIHJldHVybiBEQVRFX0NPUkU7XG4gIH0sXG4gIGV4dGVuZChzdWJUeXBlRGVmKSB7XG4gICAgY29uc3QgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKERBVEVfQ09SRSwgT1ZFUlJJREFCTEVfRklFTERTJGEpLCBzdWJUeXBlRGVmLCB7XG4gICAgICB0eXBlOiBEQVRFX0NPUkUsXG4gICAgICBwcmV2aWV3OiBwcmltaXRpdmVQcmV2aWV3XG4gICAgfSk7XG4gICAgcmV0dXJuIHN1YnR5cGUocGFyc2VkKTtcbiAgICBmdW5jdGlvbiBzdWJ0eXBlKHBhcmVudCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIGV4dGVuZDogKGV4dGVuc2lvbkRlZikgPT4ge1xuICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSBPYmplY3QuYXNzaWduKHt9LCBwYXJlbnQsIHBpY2soZXh0ZW5zaW9uRGVmLCBPVkVSUklEQUJMRV9GSUVMRFMkYSksIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcmVudFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBzdWJ0eXBlKGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxufSwgT1ZFUlJJREFCTEVfRklFTERTJDkgPSBbLi4uREVGQVVMVF9PVkVSUklERUFCTEVfRklFTERTXSwgREFURVRJTUVfQ09SRSA9IHtcbiAgbmFtZTogXCJkYXRldGltZVwiLFxuICB0aXRsZTogXCJEYXRldGltZVwiLFxuICB0eXBlOiBudWxsLFxuICBqc29uVHlwZTogXCJzdHJpbmdcIlxufSwgRGF0ZVRpbWVUeXBlID0ge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIERBVEVUSU1FX0NPUkU7XG4gIH0sXG4gIGV4dGVuZChzdWJUeXBlRGVmKSB7XG4gICAgY29uc3QgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKERBVEVUSU1FX0NPUkUsIE9WRVJSSURBQkxFX0ZJRUxEUyQ5KSwgc3ViVHlwZURlZiwge1xuICAgICAgdHlwZTogREFURVRJTUVfQ09SRSxcbiAgICAgIHByZXZpZXc6IHByaW1pdGl2ZVByZXZpZXdcbiAgICB9KTtcbiAgICByZXR1cm4gc3VidHlwZShwYXJzZWQpO1xuICAgIGZ1bmN0aW9uIHN1YnR5cGUocGFyZW50KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZXh0ZW5kOiAoZXh0ZW5zaW9uRGVmKSA9PiB7XG4gICAgICAgICAgY29uc3QgY3VycmVudCA9IE9iamVjdC5hc3NpZ24oe30sIHBhcmVudCwgcGljayhleHRlbnNpb25EZWYsIE9WRVJSSURBQkxFX0ZJRUxEUyQ5KSwge1xuICAgICAgICAgICAgdHlwZTogcGFyZW50XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuIHN1YnR5cGUoY3VycmVudCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9XG59LCBDQU5ESURBVEVTID0gW1widGl0bGVcIiwgXCJuYW1lXCIsIFwibGFiZWxcIiwgXCJoZWFkaW5nXCIsIFwiaGVhZGVyXCIsIFwiY2FwdGlvblwiLCBcImRlc2NyaXB0aW9uXCJdLCBQUklNSVRJVkVTID0gW1wic3RyaW5nXCIsIFwiYm9vbGVhblwiLCBcIm51bWJlclwiXSwgaXNQcmltaXRpdmUgPSAoZmllbGQpID0+IFBSSU1JVElWRVMuaW5jbHVkZXMoZmllbGQudHlwZSk7XG5mdW5jdGlvbiBndWVzc09yZGVyaW5nQ29uZmlnKG9iamVjdFR5cGVEZWYpIHtcbiAgbGV0IGNhbmRpZGF0ZXMgPSBDQU5ESURBVEVTLmZpbHRlcihcbiAgICAoY2FuZGlkYXRlKSA9PiBvYmplY3RUeXBlRGVmLmZpZWxkcy5zb21lKChmaWVsZCkgPT4gaXNQcmltaXRpdmUoZmllbGQpICYmIGZpZWxkLm5hbWUgPT09IGNhbmRpZGF0ZSlcbiAgKTtcbiAgcmV0dXJuIGNhbmRpZGF0ZXMubGVuZ3RoID09PSAwICYmIChjYW5kaWRhdGVzID0gb2JqZWN0VHlwZURlZi5maWVsZHMuZmlsdGVyKGlzUHJpbWl0aXZlKS5tYXAoKGZpZWxkKSA9PiBmaWVsZC5uYW1lKSksIGNhbmRpZGF0ZXMubWFwKFxuICAgIChuYW1lKSA9PiAoe1xuICAgICAgbmFtZSxcbiAgICAgIGkxOG46IHtcbiAgICAgICAgdGl0bGU6IHsga2V5OiBgZGVmYXVsdC1vcmRlcmluZ3MuJHtuYW1lfWAsIG5zOiBcInN0dWRpb1wiIH1cbiAgICAgIH0sXG4gICAgICB0aXRsZTogY2FwaXRhbGl6ZShzdGFydENhc2UobmFtZSkpLFxuICAgICAgYnk6IFt7IGZpZWxkOiBuYW1lLCBkaXJlY3Rpb246IFwiYXNjXCIgfV1cbiAgICB9KVxuICApO1xufVxuZnVuY3Rpb24gbm9ybWFsaXplU2VhcmNoQ29uZmlncyhjb25maWdzKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShjb25maWdzKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlRoZSBzZWFyY2ggY29uZmlnIG9mIGEgZG9jdW1lbnQgdHlwZSBtdXN0IGJlIGFuIGFycmF5IG9mIHNlYXJjaCBjb25maWcgb2JqZWN0c1wiXG4gICAgKTtcbiAgcmV0dXJuIGNvbmZpZ3MubWFwKChjb25mKSA9PiB7XG4gICAgaWYgKGNvbmYgPT09IFwiZGVmYXVsdHNcIilcbiAgICAgIHJldHVybiBjb25mO1xuICAgIGlmICghaXNQbGFpbk9iamVjdChjb25mKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlNlYXJjaCBjb25maWcgbXVzdCBiZSBhbiBvYmplY3Qgb2Yge3BhdGg6IHN0cmluZywgd2VpZ2h0OiBudW1iZXJ9XCIpO1xuICAgIHJldHVybiB7XG4gICAgICB3ZWlnaHQ6IFwid2VpZ2h0XCIgaW4gY29uZiA/IGNvbmYud2VpZ2h0IDogMSxcbiAgICAgIHBhdGg6IHRvUGF0aChjb25mLnBhdGgpLFxuICAgICAgbWFwV2l0aDogdHlwZW9mIGNvbmYubWFwV2l0aCA9PSBcInN0cmluZ1wiID8gY29uZi5tYXBXaXRoIDogdm9pZCAwXG4gICAgfTtcbiAgfSk7XG59XG5jb25zdCBPVkVSUklEQUJMRV9GSUVMRFMkOCA9IFtcbiAgLi4uREVGQVVMVF9PVkVSUklERUFCTEVfRklFTERTLFxuICBcIm9yZGVyaW5nc1wiLFxuICBcIl9fZXhwZXJpbWVudGFsX3NlYXJjaFwiLFxuICBcImJsb2NrRWRpdG9yXCIsXG4gIFwiaWNvblwiXG5dLCBPYmplY3RUeXBlID0ge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IFwib2JqZWN0XCIsXG4gICAgICB0aXRsZTogXCJPYmplY3RcIixcbiAgICAgIHR5cGU6IG51bGwsXG4gICAgICBqc29uVHlwZTogXCJvYmplY3RcIlxuICAgIH07XG4gIH0sXG4gIGV4dGVuZChyYXdTdWJUeXBlRGVmLCBjcmVhdGVNZW1iZXJUeXBlKSB7XG4gICAgY29uc3Qgc3ViVHlwZURlZiA9IHsgZmllbGRzOiBbXSwgLi4ucmF3U3ViVHlwZURlZiB9LCBvcHRpb25zID0geyAuLi5zdWJUeXBlRGVmLm9wdGlvbnMgfHwge30gfSwgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKHRoaXMuZ2V0KCksIE9WRVJSSURBQkxFX0ZJRUxEUyQ4KSwgc3ViVHlwZURlZiwge1xuICAgICAgdHlwZTogdGhpcy5nZXQoKSxcbiAgICAgIHRpdGxlOiBzdWJUeXBlRGVmLnRpdGxlIHx8IChzdWJUeXBlRGVmLm5hbWUgPyBzdGFydENhc2Uoc3ViVHlwZURlZi5uYW1lKSA6IFwiT2JqZWN0XCIpLFxuICAgICAgb3B0aW9ucyxcbiAgICAgIG9yZGVyaW5nczogc3ViVHlwZURlZi5vcmRlcmluZ3MgfHwgZ3Vlc3NPcmRlcmluZ0NvbmZpZyhzdWJUeXBlRGVmKSxcbiAgICAgIGZpZWxkczogc3ViVHlwZURlZi5maWVsZHMubWFwKChmaWVsZERlZikgPT4ge1xuICAgICAgICBjb25zdCB7IG5hbWUsIGZpZWxkc2V0LCBncm91cCwgLi4ucmVzdCB9ID0gZmllbGREZWY7XG4gICAgICAgIHJldHVybiBsYXp5R2V0dGVyKHtcbiAgICAgICAgICBuYW1lLFxuICAgICAgICAgIGdyb3VwLFxuICAgICAgICAgIGZpZWxkc2V0XG4gICAgICAgIH0sIFwidHlwZVwiLCAoKSA9PiBjcmVhdGVNZW1iZXJUeXBlKHtcbiAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgIHRpdGxlOiBmaWVsZERlZi50aXRsZSB8fCBzdGFydENhc2UobmFtZSlcbiAgICAgICAgfSkpO1xuICAgICAgfSlcbiAgICB9KTtcbiAgICByZXR1cm4gbGF6eUdldHRlcihwYXJzZWQsIFwiZmllbGRzZXRzXCIsICgpID0+IGNyZWF0ZUZpZWxkc2V0cyhzdWJUeXBlRGVmLCBwYXJzZWQuZmllbGRzKSksIGxhenlHZXR0ZXIocGFyc2VkLCBcImdyb3Vwc1wiLCAoKSA9PiBjcmVhdGVGaWVsZHNHcm91cHMoc3ViVHlwZURlZiwgcGFyc2VkLmZpZWxkcykpLCBsYXp5R2V0dGVyKHBhcnNlZCwgXCJwcmV2aWV3XCIsIGNyZWF0ZVByZXZpZXdHZXR0ZXIoc3ViVHlwZURlZikpLCBsYXp5R2V0dGVyKFxuICAgICAgcGFyc2VkLFxuICAgICAgXCJfX2V4cGVyaW1lbnRhbF9zZWFyY2hcIixcbiAgICAgICgpID0+IHtcbiAgICAgICAgY29uc3QgdXNlclByb3ZpZGVkU2VhcmNoQ29uZmlnID0gc3ViVHlwZURlZi5fX2V4cGVyaW1lbnRhbF9zZWFyY2ggPyBub3JtYWxpemVTZWFyY2hDb25maWdzKHN1YlR5cGVEZWYuX19leHBlcmltZW50YWxfc2VhcmNoKSA6IG51bGw7XG4gICAgICAgIHJldHVybiB1c2VyUHJvdmlkZWRTZWFyY2hDb25maWcgPyB1c2VyUHJvdmlkZWRTZWFyY2hDb25maWcubWFwKFxuICAgICAgICAgIChlbnRyeSkgPT4gZW50cnkgPT09IFwiZGVmYXVsdHNcIiA/IG5vcm1hbGl6ZVNlYXJjaENvbmZpZ3Moc3ViVHlwZURlZikgOiBlbnRyeVxuICAgICAgICApIDogcmVzb2x2ZVNlYXJjaENvbmZpZyhwYXJzZWQpO1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgZW51bWVyYWJsZTogITFcbiAgICAgIH1cbiAgICApLCBzdWJ0eXBlKHBhcnNlZCk7XG4gICAgZnVuY3Rpb24gc3VidHlwZShwYXJlbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gcGFyZW50O1xuICAgICAgICB9LFxuICAgICAgICBleHRlbmQ6IChleHRlbnNpb25EZWYpID0+IHtcbiAgICAgICAgICBpZiAoZXh0ZW5zaW9uRGVmLmZpZWxkcylcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IG92ZXJyaWRlIGBmaWVsZHNgIG9mIHN1YnR5cGVzIG9mIFwib2JqZWN0XCInKTtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgT1ZFUlJJREFCTEVfRklFTERTJDgpLCB7XG4gICAgICAgICAgICB0aXRsZTogZXh0ZW5zaW9uRGVmLnRpdGxlIHx8IHN1YlR5cGVEZWYudGl0bGUgfHwgKHN1YlR5cGVEZWYubmFtZSA/IHN0YXJ0Q2FzZShzdWJUeXBlRGVmLm5hbWUpIDogXCJPYmplY3RcIiksXG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gbGF6eUdldHRlcihjdXJyZW50LCBcIl9fZXhwZXJpbWVudGFsX3NlYXJjaFwiLCAoKSA9PiBwYXJlbnQuX19leHBlcmltZW50YWxfc2VhcmNoKSwgc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn07XG5mdW5jdGlvbiBjcmVhdGVGaWVsZHNldHModHlwZURlZiwgZmllbGRzKSB7XG4gIGNvbnN0IGZpZWxkc2V0c0J5TmFtZSA9IHt9O1xuICBmb3IgKGNvbnN0IGZpZWxkc2V0IG9mIHR5cGVEZWYuZmllbGRzZXRzIHx8IFtdKSB7XG4gICAgaWYgKGZpZWxkc2V0c0J5TmFtZVtmaWVsZHNldC5uYW1lXSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYER1cGxpY2F0ZSBmaWVsZHNldCBuYW1lIFwiJHtmaWVsZHNldC5uYW1lfVwiIGZvdW5kIGZvciB0eXBlICcke3R5cGVEZWYudGl0bGUgPyB0eXBlRGVmLnRpdGxlIDogc3RhcnRDYXNlKHR5cGVEZWYubmFtZSl9J2BcbiAgICAgICk7XG4gICAgZmllbGRzZXRzQnlOYW1lW2ZpZWxkc2V0Lm5hbWVdID0geyB0aXRsZTogc3RhcnRDYXNlKGZpZWxkc2V0Lm5hbWUpLCAuLi5maWVsZHNldCwgZmllbGRzOiBbXSB9O1xuICB9XG4gIGNvbnN0IGZpZWxkc2V0cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG4gIGZvciAoY29uc3QgZmllbGQgb2YgZmllbGRzKSB7XG4gICAgaWYgKCFmaWVsZC5maWVsZHNldCkge1xuICAgICAgZmllbGRzZXRzLmFkZCh7IHNpbmdsZTogITAsIGZpZWxkIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGNvbnN0IGZpZWxkc2V0ID0gZmllbGRzZXRzQnlOYW1lW2ZpZWxkLmZpZWxkc2V0XTtcbiAgICBpZiAoIWZpZWxkc2V0KVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgRmllbGRzZXQgJyR7ZmllbGQuZmllbGRzZXR9JyBpcyBub3QgZGVmaW5lZCBpbiBzY2hlbWEgZm9yIHR5cGUgJyR7dHlwZURlZi5uYW1lfSdgXG4gICAgICApO1xuICAgIGZpZWxkc2V0LmZpZWxkcy5wdXNoKGZpZWxkKSwgZmllbGRzZXRzLmFkZChmaWVsZHNldCk7XG4gIH1cbiAgcmV0dXJuIEFycmF5LmZyb20oZmllbGRzZXRzKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUZpZWxkc0dyb3Vwcyh0eXBlRGVmLCBmaWVsZHMpIHtcbiAgY29uc3QgZ3JvdXBzQnlOYW1lID0ge307XG4gIGxldCBudW1EZWZhdWx0R3JvdXBzID0gMDtcbiAgZm9yIChjb25zdCBncm91cCBvZiB0eXBlRGVmLmdyb3VwcyB8fCBbXSkge1xuICAgIGlmIChncm91cHNCeU5hbWVbZ3JvdXAubmFtZV0pXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBEdXBsaWNhdGUgZ3JvdXAgbmFtZSBcIiR7Z3JvdXAubmFtZX1cIiBmb3VuZCBmb3IgdHlwZSAnJHt0eXBlRGVmLnRpdGxlID8gdHlwZURlZi50aXRsZSA6IHN0YXJ0Q2FzZSh0eXBlRGVmLm5hbWUpfSdgXG4gICAgICApO1xuICAgIGlmIChncm91cHNCeU5hbWVbZ3JvdXAubmFtZV0gPSB7IHRpdGxlOiBzdGFydENhc2UoZ3JvdXAubmFtZSksIC4uLmdyb3VwLCBmaWVsZHM6IFtdIH0sIGdyb3VwLmRlZmF1bHQgJiYgKytudW1EZWZhdWx0R3JvdXBzID4gMSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYE1vcmUgdGhhbiBvbmUgZmllbGQgZ3JvdXAgZGVmaW5lZCBhcyBkZWZhdWx0IGZvciB0eXBlICcke3R5cGVEZWYudGl0bGUgPyB0eXBlRGVmLnRpdGxlIDogc3RhcnRDYXNlKHR5cGVEZWYubmFtZSl9JyAtIG9ubHkgMSBpcyBzdXBwb3J0ZWRgXG4gICAgICApO1xuICB9XG4gIHJldHVybiBmaWVsZHMuZm9yRWFjaCgoZmllbGQpID0+IHtcbiAgICBjb25zdCBmaWVsZEdyb3VwTmFtZXMgPSBjYXN0QXJyYXkoZmllbGQuZ3JvdXAgfHwgW10pO1xuICAgIGZpZWxkR3JvdXBOYW1lcy5sZW5ndGggIT09IDAgJiYgZmllbGRHcm91cE5hbWVzLmZvckVhY2goKGZpZWxkR3JvdXBOYW1lKSA9PiB7XG4gICAgICBjb25zdCBjdXJyZW50R3JvdXAgPSBncm91cHNCeU5hbWVbZmllbGRHcm91cE5hbWVdO1xuICAgICAgaWYgKCFjdXJyZW50R3JvdXApXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgRmllbGQgZ3JvdXAgJyR7ZmllbGRHcm91cE5hbWV9JyBpcyBub3QgZGVmaW5lZCBpbiBzY2hlbWEgZm9yIHR5cGUgJyR7dHlwZURlZi50aXRsZSA/IHR5cGVEZWYubmFtZSA6IHN0YXJ0Q2FzZSh0eXBlRGVmLm5hbWUpfSdgXG4gICAgICAgICk7XG4gICAgICBjdXJyZW50R3JvdXAuZmllbGRzLnB1c2goZmllbGQpO1xuICAgIH0pO1xuICB9KSwgZmxhdE1hcChncm91cHNCeU5hbWUpLmZpbHRlcigoZ3JvdXApID0+IGdyb3VwLmZpZWxkcy5sZW5ndGggPiAwKTtcbn1cbmNvbnN0IERPQ1VNRU5UX0NPUkUgPSB7XG4gIG5hbWU6IFwiZG9jdW1lbnRcIixcbiAgdGl0bGU6IFwiRG9jdW1lbnRcIixcbiAgdHlwZTogbnVsbCxcbiAganNvblR5cGU6IFwib2JqZWN0XCJcbn0sIERvY3VtZW50VHlwZSA9IHtcbiAgZ2V0KCkge1xuICAgIHJldHVybiBET0NVTUVOVF9DT1JFO1xuICB9LFxuICBleHRlbmQ6IE9iamVjdFR5cGUuZXh0ZW5kXG59LCBPVkVSUklEQUJMRV9GSUVMRFMkNyA9IFsuLi5ERUZBVUxUX09WRVJSSURFQUJMRV9GSUVMRFNdLCBFTUFJTF9DT1JFID0ge1xuICBuYW1lOiBcImVtYWlsXCIsXG4gIHRpdGxlOiBcIkVtYWlsXCIsXG4gIHR5cGU6IG51bGwsXG4gIGpzb25UeXBlOiBcInN0cmluZ1wiXG59LCBFbWFpbFR5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gRU1BSUxfQ09SRTtcbiAgfSxcbiAgZXh0ZW5kKHN1YlR5cGVEZWYpIHtcbiAgICBjb25zdCBwYXJzZWQgPSBPYmplY3QuYXNzaWduKHBpY2soRU1BSUxfQ09SRSwgT1ZFUlJJREFCTEVfRklFTERTJDcpLCBzdWJUeXBlRGVmLCB7XG4gICAgICB0eXBlOiBFTUFJTF9DT1JFLFxuICAgICAgcHJldmlldzogcHJpbWl0aXZlUHJldmlld1xuICAgIH0pO1xuICAgIHJldHVybiBzdWJ0eXBlKHBhcnNlZCk7XG4gICAgZnVuY3Rpb24gc3VidHlwZShwYXJlbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gcGFyZW50O1xuICAgICAgICB9LFxuICAgICAgICBleHRlbmQ6IChleHRlbnNpb25EZWYpID0+IHtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgT1ZFUlJJREFCTEVfRklFTERTJDcpLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn0sIEFTU0VUX0ZJRUxEJDEgPSB7XG4gIG5hbWU6IFwiYXNzZXRcIixcbiAgdHlwZTogXCJyZWZlcmVuY2VcIixcbiAgdG86IHsgdHlwZTogXCJzYW5pdHkuZmlsZUFzc2V0XCIgfVxufSwgT1ZFUlJJREFCTEVfRklFTERTJDYgPSBbLi4uREVGQVVMVF9PVkVSUklERUFCTEVfRklFTERTXSwgRklMRV9DT1JFID0ge1xuICBuYW1lOiBcImZpbGVcIixcbiAgdGl0bGU6IFwiRmlsZVwiLFxuICB0eXBlOiBudWxsLFxuICBqc29uVHlwZTogXCJvYmplY3RcIlxufSwgREVGQVVMVF9PUFRJT05TJDEgPSB7XG4gIGFjY2VwdDogXCJcIlxufSwgRmlsZVR5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gRklMRV9DT1JFO1xuICB9LFxuICBleHRlbmQocmF3U3ViVHlwZURlZiwgY3JlYXRlTWVtYmVyVHlwZSkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSB7IC4uLnJhd1N1YlR5cGVEZWYub3B0aW9ucyB8fCBERUZBVUxUX09QVElPTlMkMSB9LCBmaWVsZHMgPSBbQVNTRVRfRklFTEQkMSwgLi4ucmF3U3ViVHlwZURlZi5maWVsZHMgfHwgW11dLCBzdWJUeXBlRGVmID0geyAuLi5yYXdTdWJUeXBlRGVmLCBmaWVsZHMgfSwgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKEZJTEVfQ09SRSwgT1ZFUlJJREFCTEVfRklFTERTJDYpLCBzdWJUeXBlRGVmLCB7XG4gICAgICB0eXBlOiBGSUxFX0NPUkUsXG4gICAgICB0aXRsZTogc3ViVHlwZURlZi50aXRsZSB8fCAoc3ViVHlwZURlZi5uYW1lID8gc3RhcnRDYXNlKHN1YlR5cGVEZWYubmFtZSkgOiBGSUxFX0NPUkUudGl0bGUpLFxuICAgICAgb3B0aW9ucyxcbiAgICAgIGZpZWxkczogc3ViVHlwZURlZi5maWVsZHMubWFwKChmaWVsZERlZikgPT4ge1xuICAgICAgICBjb25zdCB7IG5hbWUsIGZpZWxkc2V0LCAuLi5yZXN0IH0gPSBmaWVsZERlZiwgY29tcGlsZWRGaWVsZCA9IHtcbiAgICAgICAgICBuYW1lLFxuICAgICAgICAgIGZpZWxkc2V0LFxuICAgICAgICAgIGlzQ3VzdG9taXplZDogISFyYXdTdWJUeXBlRGVmLmZpZWxkc1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbGF6eUdldHRlcihjb21waWxlZEZpZWxkLCBcInR5cGVcIiwgKCkgPT4gY3JlYXRlTWVtYmVyVHlwZSh7XG4gICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICB0aXRsZTogZmllbGREZWYudGl0bGUgfHwgc3RhcnRDYXNlKG5hbWUpXG4gICAgICAgIH0pKTtcbiAgICAgIH0pXG4gICAgfSk7XG4gICAgcmV0dXJuIGxhenlHZXR0ZXIocGFyc2VkLCBcImZpZWxkc2V0c1wiLCAoKSA9PiBjcmVhdGVGaWVsZHNldHMoc3ViVHlwZURlZiwgcGFyc2VkLmZpZWxkcykpLCBsYXp5R2V0dGVyKHBhcnNlZCwgXCJwcmV2aWV3XCIsIGNyZWF0ZVByZXZpZXdHZXR0ZXIoT2JqZWN0LmFzc2lnbih7fSwgc3ViVHlwZURlZiwgeyBmaWVsZHMgfSkpKSwgc3VidHlwZShwYXJzZWQpO1xuICAgIGZ1bmN0aW9uIHN1YnR5cGUocGFyZW50KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZXh0ZW5kOiAoZXh0ZW5zaW9uRGVmKSA9PiB7XG4gICAgICAgICAgaWYgKGV4dGVuc2lvbkRlZi5maWVsZHMpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBvdmVycmlkZSBgZmllbGRzYCBvZiBzdWJ0eXBlcyBvZiBcImZpbGVcIicpO1xuICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSBPYmplY3QuYXNzaWduKHt9LCBwYXJlbnQsIHBpY2soZXh0ZW5zaW9uRGVmLCBPVkVSUklEQUJMRV9GSUVMRFMkNiksIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcmVudFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBzdWJ0eXBlKGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxufSwgQVNTRVRfRklFTEQgPSB7XG4gIG5hbWU6IFwiYXNzZXRcIixcbiAgdHlwZTogXCJyZWZlcmVuY2VcIixcbiAgdG86IFt7IHR5cGU6IFwic2FuaXR5LmltYWdlQXNzZXRcIiB9XVxufSwgSE9UU1BPVF9GSUVMRCA9IHtcbiAgbmFtZTogXCJob3RzcG90XCIsXG4gIHR5cGU6IFwic2FuaXR5LmltYWdlSG90c3BvdFwiXG59LCBDUk9QX0ZJRUxEID0ge1xuICBuYW1lOiBcImNyb3BcIixcbiAgdHlwZTogXCJzYW5pdHkuaW1hZ2VDcm9wXCJcbn0sIE9WRVJSSURBQkxFX0ZJRUxEUyQ1ID0gWy4uLkRFRkFVTFRfT1ZFUlJJREVBQkxFX0ZJRUxEU10sIElNQUdFX0NPUkUgPSB7XG4gIG5hbWU6IFwiaW1hZ2VcIixcbiAgdGl0bGU6IFwiSW1hZ2VcIixcbiAgdHlwZTogbnVsbCxcbiAganNvblR5cGU6IFwib2JqZWN0XCJcbn0sIERFRkFVTFRfT1BUSU9OUyA9IHt9LCBJbWFnZVR5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gSU1BR0VfQ09SRTtcbiAgfSxcbiAgZXh0ZW5kKHJhd1N1YlR5cGVEZWYsIGNyZWF0ZU1lbWJlclR5cGUpIHtcbiAgICBjb25zdCBvcHRpb25zID0geyAuLi5yYXdTdWJUeXBlRGVmLm9wdGlvbnMgfHwgREVGQVVMVF9PUFRJT05TIH07XG4gICAgbGV0IGhvdHNwb3RGaWVsZHMgPSBbSE9UU1BPVF9GSUVMRCwgQ1JPUF9GSUVMRF07XG4gICAgb3B0aW9ucy5ob3RzcG90IHx8IChob3RzcG90RmllbGRzID0gaG90c3BvdEZpZWxkcy5tYXAoKGZpZWxkKSA9PiAoeyAuLi5maWVsZCwgaGlkZGVuOiAhMCB9KSkpO1xuICAgIGNvbnN0IGZpZWxkcyA9IFtBU1NFVF9GSUVMRCwgLi4uaG90c3BvdEZpZWxkcywgLi4ucmF3U3ViVHlwZURlZi5maWVsZHMgfHwgW11dLCBzdWJUeXBlRGVmID0geyAuLi5yYXdTdWJUeXBlRGVmLCBmaWVsZHMgfSwgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKHRoaXMuZ2V0KCksIE9WRVJSSURBQkxFX0ZJRUxEUyQ1KSwgc3ViVHlwZURlZiwge1xuICAgICAgdHlwZTogSU1BR0VfQ09SRSxcbiAgICAgIHRpdGxlOiBzdWJUeXBlRGVmLnRpdGxlIHx8IChzdWJUeXBlRGVmLm5hbWUgPyBzdGFydENhc2Uoc3ViVHlwZURlZi5uYW1lKSA6IElNQUdFX0NPUkUudGl0bGUpLFxuICAgICAgb3B0aW9ucyxcbiAgICAgIGZpZWxkczogc3ViVHlwZURlZi5maWVsZHMubWFwKChmaWVsZERlZikgPT4ge1xuICAgICAgICBjb25zdCB7IG5hbWUsIGZpZWxkc2V0LCAuLi5yZXN0IH0gPSBmaWVsZERlZiwgY29tcGlsZWRGaWVsZCA9IHtcbiAgICAgICAgICBuYW1lLFxuICAgICAgICAgIGZpZWxkc2V0LFxuICAgICAgICAgIGlzQ3VzdG9taXplZDogISFyYXdTdWJUeXBlRGVmLmZpZWxkc1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbGF6eUdldHRlcihjb21waWxlZEZpZWxkLCBcInR5cGVcIiwgKCkgPT4gY3JlYXRlTWVtYmVyVHlwZSh7XG4gICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICB0aXRsZTogZmllbGREZWYudGl0bGUgfHwgc3RhcnRDYXNlKG5hbWUpXG4gICAgICAgIH0pKTtcbiAgICAgIH0pXG4gICAgfSk7XG4gICAgcmV0dXJuIGxhenlHZXR0ZXIocGFyc2VkLCBcImZpZWxkc2V0c1wiLCAoKSA9PiBjcmVhdGVGaWVsZHNldHMoc3ViVHlwZURlZiwgcGFyc2VkLmZpZWxkcykpLCBsYXp5R2V0dGVyKHBhcnNlZCwgXCJwcmV2aWV3XCIsIGNyZWF0ZVByZXZpZXdHZXR0ZXIoT2JqZWN0LmFzc2lnbih7fSwgc3ViVHlwZURlZiwgeyBmaWVsZHMgfSkpKSwgc3VidHlwZShwYXJzZWQpO1xuICAgIGZ1bmN0aW9uIHN1YnR5cGUocGFyZW50KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZXh0ZW5kOiAoZXh0ZW5zaW9uRGVmKSA9PiB7XG4gICAgICAgICAgaWYgKGV4dGVuc2lvbkRlZi5maWVsZHMpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBvdmVycmlkZSBgZmllbGRzYCBvZiBzdWJ0eXBlcyBvZiBcImltYWdlXCInKTtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgT1ZFUlJJREFCTEVfRklFTERTJDUpLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn0sIE9WRVJSSURBQkxFX0ZJRUxEUyQ0ID0gWy4uLkRFRkFVTFRfT1ZFUlJJREVBQkxFX0ZJRUxEU10sIE5VTUJFUl9DT1JFID0ge1xuICBuYW1lOiBcIm51bWJlclwiLFxuICB0aXRsZTogXCJOdW1iZXJcIixcbiAgdHlwZTogbnVsbCxcbiAganNvblR5cGU6IFwibnVtYmVyXCJcbn0sIE51bWJlclR5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gTlVNQkVSX0NPUkU7XG4gIH0sXG4gIGV4dGVuZChzdWJUeXBlRGVmKSB7XG4gICAgY29uc3QgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKE5VTUJFUl9DT1JFLCBPVkVSUklEQUJMRV9GSUVMRFMkNCksIHN1YlR5cGVEZWYsIHtcbiAgICAgIHR5cGU6IE5VTUJFUl9DT1JFLFxuICAgICAgcHJldmlldzogcHJpbWl0aXZlUHJldmlld1xuICAgIH0pO1xuICAgIHJldHVybiBzdWJ0eXBlKHBhcnNlZCk7XG4gICAgZnVuY3Rpb24gc3VidHlwZShwYXJlbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gcGFyZW50O1xuICAgICAgICB9LFxuICAgICAgICBleHRlbmQ6IChleHRlbnNpb25EZWYpID0+IHtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgT1ZFUlJJREFCTEVfRklFTERTJDQpLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn0sIFJFRl9GSUVMRCA9IHtcbiAgbmFtZTogXCJfcmVmXCIsXG4gIHRpdGxlOiBcIlJlZmVyZW5jZWQgZG9jdW1lbnQgSURcIixcbiAgdHlwZTogXCJzdHJpbmdcIlxufSwgV0VBS19GSUVMRCA9IHtcbiAgbmFtZTogXCJfd2Vha1wiLFxuICB0aXRsZTogXCJXZWFrIHJlZmVyZW5jZVwiLFxuICB0eXBlOiBcImJvb2xlYW5cIlxufSwgUkVGRVJFTkNFX0ZJRUxEUyA9IFtSRUZfRklFTEQsIFdFQUtfRklFTERdLCBPVkVSUklEQUJMRV9GSUVMRFMkMyA9IFsuLi5ERUZBVUxUX09WRVJSSURFQUJMRV9GSUVMRFNdLCBSRUZFUkVOQ0VfQ09SRSA9IHtcbiAgbmFtZTogXCJyZWZlcmVuY2VcIixcbiAgdGl0bGU6IFwiUmVmZXJlbmNlXCIsXG4gIHR5cGU6IG51bGwsXG4gIGpzb25UeXBlOiBcIm9iamVjdFwiXG59O1xuZnVuY3Rpb24gaHVtYW5pemUoYXJyLCBjb25qdW5jdGlvbikge1xuICBjb25zdCBsZW4gPSBhcnIubGVuZ3RoO1xuICBpZiAobGVuID09PSAxKVxuICAgIHJldHVybiBhcnJbMF07XG4gIGNvbnN0IGZpcnN0ID0gYXJyLnNsaWNlKDAsIGxlbiAtIDEpLCBsYXN0ID0gYXJyW2xlbiAtIDFdO1xuICByZXR1cm4gYCR7Zmlyc3Quam9pbihcIiwgXCIpfSAke2Nvbmp1bmN0aW9ufSAke2xhc3R9YDtcbn1cbmZ1bmN0aW9uIGJ1aWxkVGl0bGUodHlwZSkge1xuICByZXR1cm4gIXR5cGUudG8gfHwgdHlwZS50by5sZW5ndGggPT09IDAgPyBcIlJlZmVyZW5jZVwiIDogYFJlZmVyZW5jZSB0byAke2h1bWFuaXplKFxuICAgIGFycmlmeSh0eXBlLnRvKS5tYXAoKHRvVHlwZSkgPT4gdG9UeXBlLnRpdGxlKSxcbiAgICBcIm9yXCJcbiAgKS50b0xvd2VyQ2FzZSgpfWA7XG59XG5jb25zdCBSZWZlcmVuY2VUeXBlID0ge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIFJFRkVSRU5DRV9DT1JFO1xuICB9LFxuICBleHRlbmQoc3ViVHlwZURlZiwgY3JlYXRlTWVtYmVyVHlwZSkge1xuICAgIGlmICghc3ViVHlwZURlZi50bylcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYE1pc3NpbmcgXCJ0b1wiIGZpZWxkIGluIHJlZmVyZW5jZSBkZWZpbml0aW9uLiBDaGVjayB0aGUgdHlwZSAke3N1YlR5cGVEZWYubmFtZX1gXG4gICAgICApO1xuICAgIGNvbnN0IHBhcnNlZCA9IE9iamVjdC5hc3NpZ24ocGljayhSRUZFUkVOQ0VfQ09SRSwgT1ZFUlJJREFCTEVfRklFTERTJDMpLCBzdWJUeXBlRGVmLCB7XG4gICAgICB0eXBlOiBSRUZFUkVOQ0VfQ09SRVxuICAgIH0pO1xuICAgIHJldHVybiBsYXp5R2V0dGVyKHBhcnNlZCwgXCJmaWVsZHNcIiwgKCkgPT4gUkVGRVJFTkNFX0ZJRUxEUy5tYXAoKGZpZWxkRGVmKSA9PiB7XG4gICAgICBjb25zdCB7IG5hbWUsIC4uLnR5cGUgfSA9IGZpZWxkRGVmO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdHlwZTogY3JlYXRlTWVtYmVyVHlwZSh0eXBlKVxuICAgICAgfTtcbiAgICB9KSksIGxhenlHZXR0ZXIocGFyc2VkLCBcImZpZWxkc2V0c1wiLCAoKSA9PiBjcmVhdGVGaWVsZHNldHMoc3ViVHlwZURlZiwgcGFyc2VkLmZpZWxkcykpLCBsYXp5R2V0dGVyKHBhcnNlZCwgXCJ0b1wiLCAoKSA9PiBhcnJpZnkoc3ViVHlwZURlZi50bykubWFwKCh0b1R5cGUpID0+IGNyZWF0ZU1lbWJlclR5cGUodG9UeXBlKSkpLCBsYXp5R2V0dGVyKHBhcnNlZCwgXCJ0aXRsZVwiLCAoKSA9PiBzdWJUeXBlRGVmLnRpdGxlIHx8IGJ1aWxkVGl0bGUocGFyc2VkKSksIHN1YnR5cGUocGFyc2VkKTtcbiAgICBmdW5jdGlvbiBzdWJ0eXBlKHBhcmVudCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIGV4dGVuZDogKGV4dGVuc2lvbkRlZikgPT4ge1xuICAgICAgICAgIGlmIChleHRlbnNpb25EZWYub2YpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBvdmVycmlkZSBgb2ZgIG9mIHN1YnR5cGVzIG9mIFwicmVmZXJlbmNlXCInKTtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgT1ZFUlJJREFCTEVfRklFTERTJDMpLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn0sIE9WRVJSSURBQkxFX0ZJRUxEUyQyID0gWy4uLkRFRkFVTFRfT1ZFUlJJREVBQkxFX0ZJRUxEU10sIFNUUklOR19DT1JFID0ge1xuICBuYW1lOiBcInN0cmluZ1wiLFxuICB0aXRsZTogXCJTdHJpbmdcIixcbiAgdHlwZTogbnVsbCxcbiAganNvblR5cGU6IFwic3RyaW5nXCJcbn0sIFN0cmluZ1R5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gU1RSSU5HX0NPUkU7XG4gIH0sXG4gIGV4dGVuZChzdWJUeXBlRGVmKSB7XG4gICAgY29uc3QgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKFNUUklOR19DT1JFLCBPVkVSUklEQUJMRV9GSUVMRFMkMiksIHN1YlR5cGVEZWYsIHtcbiAgICAgIHR5cGU6IFNUUklOR19DT1JFLFxuICAgICAgcHJldmlldzogcHJpbWl0aXZlUHJldmlld1xuICAgIH0pO1xuICAgIHJldHVybiBzdWJ0eXBlKHBhcnNlZCk7XG4gICAgZnVuY3Rpb24gc3VidHlwZShwYXJlbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gcGFyZW50O1xuICAgICAgICB9LFxuICAgICAgICBleHRlbmQ6IChleHRlbnNpb25EZWYpID0+IHtcbiAgICAgICAgICBjb25zdCBjdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50LCBwaWNrKGV4dGVuc2lvbkRlZiwgT1ZFUlJJREFCTEVfRklFTERTJDIpLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gc3VidHlwZShjdXJyZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn0sIE9WRVJSSURBQkxFX0ZJRUxEUyQxID0gWy4uLkRFRkFVTFRfT1ZFUlJJREVBQkxFX0ZJRUxEUywgXCJyb3dzXCJdLCBURVhUX0NPUkUgPSB7XG4gIG5hbWU6IFwidGV4dFwiLFxuICB0aXRsZTogXCJUZXh0XCIsXG4gIHR5cGU6IG51bGwsXG4gIGpzb25UeXBlOiBcInN0cmluZ1wiXG59LCBUZXh0VHlwZSA9IHtcbiAgZ2V0KCkge1xuICAgIHJldHVybiBURVhUX0NPUkU7XG4gIH0sXG4gIGV4dGVuZChzdWJUeXBlRGVmKSB7XG4gICAgY29uc3QgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKFRFWFRfQ09SRSwgT1ZFUlJJREFCTEVfRklFTERTJDEpLCBzdWJUeXBlRGVmLCB7XG4gICAgICB0eXBlOiBURVhUX0NPUkUsXG4gICAgICBwcmV2aWV3OiBwcmltaXRpdmVQcmV2aWV3XG4gICAgfSk7XG4gICAgcmV0dXJuIHN1YnR5cGUocGFyc2VkKTtcbiAgICBmdW5jdGlvbiBzdWJ0eXBlKHBhcmVudCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIGV4dGVuZDogKGV4dGVuc2lvbkRlZikgPT4ge1xuICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSBPYmplY3QuYXNzaWduKHt9LCBwYXJlbnQsIHBpY2soZXh0ZW5zaW9uRGVmLCBPVkVSUklEQUJMRV9GSUVMRFMkMSksIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcmVudFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBzdWJ0eXBlKGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxufSwgT1ZFUlJJREFCTEVfRklFTERTID0gWy4uLkRFRkFVTFRfT1ZFUlJJREVBQkxFX0ZJRUxEU10sIFVSTF9DT1JFID0ge1xuICBuYW1lOiBcInVybFwiLFxuICB0aXRsZTogXCJVcmxcIixcbiAgdHlwZTogbnVsbCxcbiAganNvblR5cGU6IFwic3RyaW5nXCJcbn0sIFVybFR5cGUgPSB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gVVJMX0NPUkU7XG4gIH0sXG4gIGV4dGVuZChzdWJUeXBlRGVmKSB7XG4gICAgY29uc3QgcGFyc2VkID0gT2JqZWN0LmFzc2lnbihwaWNrKFVSTF9DT1JFLCBPVkVSUklEQUJMRV9GSUVMRFMpLCBzdWJUeXBlRGVmLCB7XG4gICAgICB0eXBlOiBVUkxfQ09SRSxcbiAgICAgIHByZXZpZXc6IHByaW1pdGl2ZVByZXZpZXdcbiAgICB9KTtcbiAgICByZXR1cm4gc3VidHlwZShwYXJzZWQpO1xuICAgIGZ1bmN0aW9uIHN1YnR5cGUocGFyZW50KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZXh0ZW5kOiAoZXh0ZW5zaW9uRGVmKSA9PiB7XG4gICAgICAgICAgY29uc3QgY3VycmVudCA9IE9iamVjdC5hc3NpZ24oe30sIHBhcmVudCwgcGljayhleHRlbnNpb25EZWYsIE9WRVJSSURBQkxFX0ZJRUxEUyksIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcmVudFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBzdWJ0eXBlKGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxufTtcbnZhciB0eXBlcyA9IC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBhbnk6IEFueVR5cGUsXG4gIGFycmF5OiBBcnJheVR5cGUsXG4gIGJsb2NrOiBCbG9ja1R5cGUsXG4gIGJvb2xlYW46IEJvb2xlYW5UeXBlLFxuICBjcm9zc0RhdGFzZXRSZWZlcmVuY2U6IENyb3NzRGF0YXNldFJlZmVyZW5jZVR5cGUsXG4gIGRhdGU6IERhdGVUeXBlLFxuICBkYXRldGltZTogRGF0ZVRpbWVUeXBlLFxuICBkb2N1bWVudDogRG9jdW1lbnRUeXBlLFxuICBlbWFpbDogRW1haWxUeXBlLFxuICBmaWxlOiBGaWxlVHlwZSxcbiAgaW1hZ2U6IEltYWdlVHlwZSxcbiAgbnVtYmVyOiBOdW1iZXJUeXBlLFxuICBvYmplY3Q6IE9iamVjdFR5cGUsXG4gIHJlZmVyZW5jZTogUmVmZXJlbmNlVHlwZSxcbiAgc3BhbjogU3BhblR5cGUsXG4gIHN0cmluZzogU3RyaW5nVHlwZSxcbiAgdGV4dDogVGV4dFR5cGUsXG4gIHVybDogVXJsVHlwZVxufSksIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWUsIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5mdW5jdGlvbiBjb21waWxlUmVnaXN0cnkoc2NoZW1hRGVmKSB7XG4gIGNvbnN0IHJlZ2lzdHJ5ID0gT2JqZWN0LmFzc2lnbigvKiBAX19QVVJFX18gKi8gT2JqZWN0LmNyZWF0ZShudWxsKSwgdHlwZXMpLCBkZWZzQnlOYW1lID0gc2NoZW1hRGVmLnR5cGVzLnJlZHVjZSgoYWNjLCBkZWYpID0+IHtcbiAgICBpZiAoYWNjW2RlZi5uYW1lXSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRHVwbGljYXRlIHR5cGUgbmFtZSBhZGRlZCB0byBzY2hlbWE6ICR7ZGVmLm5hbWV9YCk7XG4gICAgcmV0dXJuIGFjY1tkZWYubmFtZV0gPSBkZWYsIGFjYztcbiAgfSwge30pO1xuICByZXR1cm4gc2NoZW1hRGVmLnR5cGVzLmZvckVhY2goYWRkKSwgcmVnaXN0cnk7XG4gIGZ1bmN0aW9uIGVuc3VyZSh0eXBlTmFtZSkge1xuICAgIGlmICghcmVnaXN0cnlbdHlwZU5hbWVdKSB7XG4gICAgICBpZiAoIWRlZnNCeU5hbWVbdHlwZU5hbWVdKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdHlwZTogJHt0eXBlTmFtZX1gKTtcbiAgICAgIGFkZChkZWZzQnlOYW1lW3R5cGVOYW1lXSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGV4dGVuZE1lbWJlcihtZW1iZXJEZWYpIHtcbiAgICByZXR1cm4gZW5zdXJlKG1lbWJlckRlZi50eXBlKSwgcmVnaXN0cnlbbWVtYmVyRGVmLnR5cGVdLmV4dGVuZChtZW1iZXJEZWYsIGV4dGVuZE1lbWJlcikuZ2V0KCk7XG4gIH1cbiAgZnVuY3Rpb24gYWRkKHR5cGVEZWYpIHtcbiAgICBlbnN1cmUodHlwZURlZi50eXBlKSwgIXJlZ2lzdHJ5W3R5cGVEZWYubmFtZV0gJiYgKHJlZ2lzdHJ5W3R5cGVEZWYubmFtZV0gPSByZWdpc3RyeVt0eXBlRGVmLnR5cGVdLmV4dGVuZCh0eXBlRGVmLCBleHRlbmRNZW1iZXIpKTtcbiAgfVxufVxubGV0IFNjaGVtYSQxID0gY2xhc3MgU2NoZW1hIHtcbiAgY29uc3RydWN0b3Ioc2NoZW1hRGVmKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl9vcmlnaW5hbFwiKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl9yZWdpc3RyeVwiKSwgdGhpcy5fb3JpZ2luYWwgPSBzY2hlbWFEZWYsIHRoaXMuX3JlZ2lzdHJ5ID0gY29tcGlsZVJlZ2lzdHJ5KHNjaGVtYURlZik7XG4gIH1cbiAgc3RhdGljIGNvbXBpbGUoc2NoZW1hRGVmKSB7XG4gICAgcmV0dXJuIG5ldyBTY2hlbWEoc2NoZW1hRGVmKTtcbiAgfVxuICBnZXQgbmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fb3JpZ2luYWwubmFtZTtcbiAgfVxuICBnZXQobmFtZSkge1xuICAgIHJldHVybiB0aGlzLl9yZWdpc3RyeVtuYW1lXSAmJiB0aGlzLl9yZWdpc3RyeVtuYW1lXS5nZXQoKTtcbiAgfVxuICBoYXMobmFtZSkge1xuICAgIHJldHVybiBuYW1lIGluIHRoaXMuX3JlZ2lzdHJ5O1xuICB9XG4gIGdldFR5cGVOYW1lcygpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5fcmVnaXN0cnkpO1xuICB9XG59O1xuY2xhc3MgRGVwcmVjYXRlZERlZmF1bHRTY2hlbWEgZXh0ZW5kcyBTY2hlbWEkMSB7XG4gIHN0YXRpYyBjb21waWxlKHNjaGVtYURlZikge1xuICAgIHJldHVybiBuZXcgRGVwcmVjYXRlZERlZmF1bHRTY2hlbWEoc2NoZW1hRGVmKTtcbiAgfVxuICBjb25zdHJ1Y3RvcihzY2hlbWFEZWYpIHtcbiAgICBzdXBlcihzY2hlbWFEZWYpO1xuICAgIGNvbnN0IHN0YWNrID0gbmV3IEVycm9yKFxuICAgICAgJ1RoZSBkZWZhdWx0IGV4cG9ydCBvZiBgQHNhbml0eS9zY2hlbWFgIGlzIGRlcHJlY2F0ZWQuIFVzZSBgaW1wb3J0IHtTY2hlbWF9IGZyb20gXCJAc2FuaXR5L3NjaGVtYVwiYCBpbnN0ZWFkLidcbiAgICApLnN0YWNrLnJlcGxhY2UoL15FcnJvci8sIFwiV2FybmluZ1wiKTtcbiAgICBjb25zb2xlLndhcm4oc3RhY2spO1xuICB9XG59XG5jb25zdCBTY2hlbWEyID0gU2NoZW1hJDE7XG5leHBvcnQge1xuICBTY2hlbWEyIGFzIFNjaGVtYSxcbiAgRGVwcmVjYXRlZERlZmF1bHRTY2hlbWEgYXMgZGVmYXVsdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/schema/lib/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/telemetry/dist/_chunks/noopLogger-b5b1676e.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sanity/telemetry/dist/_chunks/noopLogger-b5b1676e.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noopLogger: () => (/* binding */ noopLogger),\n/* harmony export */   onPageHide: () => (/* binding */ onPageHide),\n/* harmony export */   onVisibilityHidden: () => (/* binding */ onVisibilityHidden),\n/* harmony export */   registerLifecycleEvents: () => (/* binding */ registerLifecycleEvents)\n/* harmony export */ });\nconst capture = {\n  capture: true\n};\nfunction listen(target, type, cb) {\n  target.addEventListener(type, cb, capture);\n  return () => target.removeEventListener(type, cb, capture);\n}\nfunction onPageHide(listener) {\n  if (\"onpagehide\" in window) {\n    return listen(window, \"pagehide\", listener);\n  }\n  const cleanupUnload = listen(window, \"unload\", listener);\n  const cleanupBeforeUnload = listen(window, \"unload\", listener);\n  return () => {\n    cleanupUnload();\n    cleanupBeforeUnload();\n  };\n}\nfunction onVisibilityHidden(cb) {\n  return listen(document, \"visibilitychange\", () => {\n    if (document.visibilityState === \"hidden\") {\n      cb();\n    }\n  });\n}\nfunction registerLifecycleEvents(store) {\n  const unregisterVisibilityHidden = onVisibilityHidden(() => store.flush());\n  const unregisterPageHide = onPageHide(() => store.endWithBeacon());\n  return () => {\n    unregisterPageHide();\n    unregisterVisibilityHidden();\n  };\n}\nfunction createNoopLogger() {\n  const logger = {\n    updateUserProperties() {},\n    trace,\n    log\n  };\n  function trace(telemetryTrace) {\n    return {\n      start() {},\n      log(data) {},\n      complete() {},\n      newContext(name) {\n        return logger;\n      },\n      error(error) {},\n      await: promise => promise\n    };\n  }\n  function log(event, data) {}\n  return logger;\n}\nconst noopLogger = createNoopLogger();\n\n//# sourceMappingURL=noopLogger-b5b1676e.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS90ZWxlbWV0cnkvZGlzdC9fY2h1bmtzL25vb3BMb2dnZXItYjViMTY3NmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLE9BQU87QUFDUCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDK0U7QUFDL0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdGVsZW1ldHJ5L2Rpc3QvX2NodW5rcy9ub29wTG9nZ2VyLWI1YjE2NzZlLmpzPzVkYjciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2FwdHVyZSA9IHtcbiAgY2FwdHVyZTogdHJ1ZVxufTtcbmZ1bmN0aW9uIGxpc3Rlbih0YXJnZXQsIHR5cGUsIGNiKSB7XG4gIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGNiLCBjYXB0dXJlKTtcbiAgcmV0dXJuICgpID0+IHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGNiLCBjYXB0dXJlKTtcbn1cbmZ1bmN0aW9uIG9uUGFnZUhpZGUobGlzdGVuZXIpIHtcbiAgaWYgKFwib25wYWdlaGlkZVwiIGluIHdpbmRvdykge1xuICAgIHJldHVybiBsaXN0ZW4od2luZG93LCBcInBhZ2VoaWRlXCIsIGxpc3RlbmVyKTtcbiAgfVxuICBjb25zdCBjbGVhbnVwVW5sb2FkID0gbGlzdGVuKHdpbmRvdywgXCJ1bmxvYWRcIiwgbGlzdGVuZXIpO1xuICBjb25zdCBjbGVhbnVwQmVmb3JlVW5sb2FkID0gbGlzdGVuKHdpbmRvdywgXCJ1bmxvYWRcIiwgbGlzdGVuZXIpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGNsZWFudXBVbmxvYWQoKTtcbiAgICBjbGVhbnVwQmVmb3JlVW5sb2FkKCk7XG4gIH07XG59XG5mdW5jdGlvbiBvblZpc2liaWxpdHlIaWRkZW4oY2IpIHtcbiAgcmV0dXJuIGxpc3Rlbihkb2N1bWVudCwgXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsICgpID0+IHtcbiAgICBpZiAoZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlID09PSBcImhpZGRlblwiKSB7XG4gICAgICBjYigpO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiByZWdpc3RlckxpZmVjeWNsZUV2ZW50cyhzdG9yZSkge1xuICBjb25zdCB1bnJlZ2lzdGVyVmlzaWJpbGl0eUhpZGRlbiA9IG9uVmlzaWJpbGl0eUhpZGRlbigoKSA9PiBzdG9yZS5mbHVzaCgpKTtcbiAgY29uc3QgdW5yZWdpc3RlclBhZ2VIaWRlID0gb25QYWdlSGlkZSgoKSA9PiBzdG9yZS5lbmRXaXRoQmVhY29uKCkpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIHVucmVnaXN0ZXJQYWdlSGlkZSgpO1xuICAgIHVucmVnaXN0ZXJWaXNpYmlsaXR5SGlkZGVuKCk7XG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVOb29wTG9nZ2VyKCkge1xuICBjb25zdCBsb2dnZXIgPSB7XG4gICAgdXBkYXRlVXNlclByb3BlcnRpZXMoKSB7fSxcbiAgICB0cmFjZSxcbiAgICBsb2dcbiAgfTtcbiAgZnVuY3Rpb24gdHJhY2UodGVsZW1ldHJ5VHJhY2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhcnQoKSB7fSxcbiAgICAgIGxvZyhkYXRhKSB7fSxcbiAgICAgIGNvbXBsZXRlKCkge30sXG4gICAgICBuZXdDb250ZXh0KG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIGxvZ2dlcjtcbiAgICAgIH0sXG4gICAgICBlcnJvcihlcnJvcikge30sXG4gICAgICBhd2FpdDogcHJvbWlzZSA9PiBwcm9taXNlXG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBsb2coZXZlbnQsIGRhdGEpIHt9XG4gIHJldHVybiBsb2dnZXI7XG59XG5jb25zdCBub29wTG9nZ2VyID0gY3JlYXRlTm9vcExvZ2dlcigpO1xuZXhwb3J0IHsgbm9vcExvZ2dlciwgb25QYWdlSGlkZSwgb25WaXNpYmlsaXR5SGlkZGVuLCByZWdpc3RlckxpZmVjeWNsZUV2ZW50cyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9vcExvZ2dlci1iNWIxNjc2ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/telemetry/dist/_chunks/noopLogger-b5b1676e.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/telemetry/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@sanity/telemetry/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBatchedStore: () => (/* binding */ createBatchedStore),\n/* harmony export */   createSessionId: () => (/* binding */ createSessionId),\n/* harmony export */   defineEvent: () => (/* binding */ defineEvent),\n/* harmony export */   defineTrace: () => (/* binding */ defineTrace),\n/* harmony export */   noopLogger: () => (/* reexport safe */ _chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_0__.noopLogger),\n/* harmony export */   onPageHide: () => (/* reexport safe */ _chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_0__.onPageHide),\n/* harmony export */   onVisibilityHidden: () => (/* reexport safe */ _chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_0__.onVisibilityHidden),\n/* harmony export */   registerLifecycleEvents: () => (/* reexport safe */ _chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_0__.registerLifecycleEvents)\n/* harmony export */ });\n/* harmony import */ var typeid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! typeid-js */ \"(ssr)/./node_modules/typeid-js/dist/chunk-FOHWUNKU.mjs\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/tap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/throttle.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var _chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_chunks/noopLogger-b5b1676e.js */ \"(ssr)/./node_modules/@sanity/telemetry/dist/_chunks/noopLogger-b5b1676e.js\");\n\n\n\nfunction createSessionId() {\n  return (0,typeid_js__WEBPACK_IMPORTED_MODULE_1__.typeid)(\"session\").toString();\n}\nfunction createTraceId() {\n  return (0,typeid_js__WEBPACK_IMPORTED_MODULE_1__.typeid)(\"trace\").toString();\n}\nfunction splitAt(str, index) {\n  return index < 1 ? [str, \"\"] : [str.substring(0, index), str.substring(index)];\n}\nconst MAX_LENGTH = 1024;\nfunction trimErrorMessage(errorMessage) {\n  const newLineIndex = errorMessage.indexOf(\"\\n\");\n  const splitIndex = newLineIndex === -1 ? MAX_LENGTH : Math.min(newLineIndex, MAX_LENGTH);\n  const [first, rest] = splitAt(errorMessage, splitIndex);\n  return first + (rest ? \"\\u2026 (+\".concat(rest.length, \")\") : \"\");\n}\nfunction createStore(sessionId) {\n  const logEntries$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();\n  function pushTraceError(traceId, telemetryTrace, error, context) {\n    logEntries$.next({\n      sessionId,\n      type: \"trace.error\",\n      traceId,\n      name: telemetryTrace.name,\n      version: telemetryTrace.version,\n      data: {\n        message: trimErrorMessage(error.message)\n      },\n      context,\n      createdAt: /* @__PURE__ */new Date().toISOString()\n    });\n  }\n  function pushTraceEntry(type, traceId, telemetryTrace, data, context) {\n    logEntries$.next({\n      sessionId,\n      type,\n      traceId,\n      name: telemetryTrace.name,\n      version: telemetryTrace.version,\n      data,\n      context,\n      createdAt: /* @__PURE__ */new Date().toISOString()\n    });\n  }\n  function pushLogEntry(type, event, data) {\n    logEntries$.next({\n      sessionId,\n      type,\n      version: event.version,\n      name: event.name,\n      data,\n      createdAt: /* @__PURE__ */new Date().toISOString()\n    });\n  }\n  function pushUserPropertiesEntry(properties) {\n    logEntries$.next({\n      sessionId,\n      type: \"userProperties\",\n      properties,\n      createdAt: /* @__PURE__ */new Date().toISOString()\n    });\n  }\n  function createTrace(traceId, traceDef, context) {\n    return {\n      start() {\n        pushTraceEntry(\"trace.start\", traceId, traceDef, void 0, context);\n      },\n      newContext(name) {\n        return {\n          trace(innerTraceDef) {\n            return createTrace(\"\".concat(traceId, \".\").concat(name), innerTraceDef, context);\n          },\n          updateUserProperties() {},\n          log\n        };\n      },\n      log(data) {\n        pushTraceEntry(\"trace.log\", traceId, traceDef, data, context);\n      },\n      complete() {\n        pushTraceEntry(\"trace.complete\", traceId, traceDef, void 0, context);\n      },\n      error(error) {\n        pushTraceError(traceId, traceDef, error, context);\n      },\n      await(promise, data) {\n        this.start();\n        promise.then(result => {\n          this.log(data ? data : result);\n          this.complete();\n          return result;\n        }, error => {\n          this.error(error);\n          throw error;\n        });\n        return promise;\n      }\n    };\n  }\n  function log(event, data) {\n    pushLogEntry(\"log\", event, data);\n  }\n  return {\n    events$: logEntries$.asObservable(),\n    logger: {\n      updateUserProperties(properties) {\n        pushUserPropertiesEntry(properties);\n      },\n      trace: (traceDef, context) => {\n        const traceId = createTraceId();\n        return createTrace(traceId, traceDef, context);\n      },\n      log\n    }\n  };\n}\nconst unrefTimer = ms => new rxjs__WEBPACK_IMPORTED_MODULE_3__.Observable(subscriber => {\n  const timeout = setTimeout(() => {\n    subscriber.next();\n    subscriber.complete();\n  }, ms);\n  if (typeof timeout.unref === \"function\") {\n    timeout.unref();\n  }\n  return () => clearTimeout(timeout);\n});\nfunction createBatchedStore(sessionId, options) {\n  var _a;\n  const store = createStore(sessionId);\n  function resolveConsent() {\n    return options.resolveConsent().catch(err => (\n    // if we for some reason can't fetch consent we treat it as \"undetermined\", and try again at next flush\n    {\n      status: \"undetermined\"\n    }));\n  }\n  const _buffer = [];\n  function consume() {\n    const buf = _buffer.slice();\n    _buffer.length = 0;\n    return buf;\n  }\n  function submit() {\n    const pending = consume();\n    if (pending.length === 0) {\n      return rxjs__WEBPACK_IMPORTED_MODULE_4__.EMPTY;\n    }\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_6__.of)(pending), resolveConsent()]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.mergeMap)(_ref => {\n      let [events, consent] = _ref;\n      if (events.length === 0 || consent.status !== \"granted\") {\n        return rxjs__WEBPACK_IMPORTED_MODULE_4__.EMPTY;\n      }\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.from)(options.sendEvents(events)).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_9__.catchError)(err => {\n        _buffer.unshift(...events);\n        return rxjs__WEBPACK_IMPORTED_MODULE_4__.EMPTY;\n      }));\n    }));\n  }\n  const flushInterval = (_a = options.flushInterval) != null ? _a : 3e4;\n  const flush$ = store.events$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_10__.tap)(ev => _buffer.push(ev)), (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.map)(() => {}),\n  // void to avoid accidental use of events further down the pipe\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.throttle)(() => unrefTimer(flushInterval), {\n    leading: false,\n    trailing: true\n  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.concatMap)(() => submit()));\n  function flush() {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.lastValueFrom)(submit(), {\n      defaultValue: void 0\n    }).then(() => {});\n  }\n  const subscription = flush$.subscribe();\n  function endWithBeacon() {\n    if (!options.sendBeacon) {\n      end();\n      return true;\n    }\n    const events = consume();\n    subscription.unsubscribe();\n    return events.length > 0 ? options.sendBeacon(events) : true;\n  }\n  function end() {\n    return flush().then(() => {},\n    // void promise\n    () => {}\n    // ignore errors\n    ).finally(() => {\n      subscription.unsubscribe();\n    });\n  }\n  return {\n    end,\n    endWithBeacon,\n    // Note: flush may fail\n    flush,\n    logger: store.logger\n  };\n}\nfunction defineEvent(options) {\n  return {\n    type: \"log\",\n    name: options.name,\n    version: options.version,\n    description: options.description,\n    schema: void 0\n  };\n}\nfunction defineTrace(options) {\n  return {\n    type: \"trace\",\n    name: options.name,\n    version: options.version,\n    description: options.description,\n    schema: void 0,\n    context: void 0\n  };\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/telemetry/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/telemetry/dist/react/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@sanity/telemetry/dist/react/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TelemetryProvider: () => (/* binding */ TelemetryProvider),\n/* harmony export */   useTelemetry: () => (/* binding */ useTelemetry),\n/* harmony export */   useTelemetryStoreLifeCycleEvents: () => (/* binding */ useTelemetryStoreLifeCycleEvents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_chunks/noopLogger-b5b1676e.js */ \"(ssr)/./node_modules/@sanity/telemetry/dist/_chunks/noopLogger-b5b1676e.js\");\n\n\n\nfunction useTelemetryStoreLifeCycleEvents(store) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (0,_chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_2__.onVisibilityHidden)(store.flush), [store.flush]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (0,_chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_2__.onPageHide)(store.endWithBeacon), [store.endWithBeacon]);\n}\nconst TelemetryLoggerContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(_chunks_noopLogger_b5b1676e_js__WEBPACK_IMPORTED_MODULE_2__.noopLogger);\nfunction TelemetryProvider(_ref) {\n  let {\n    children,\n    store\n  } = _ref;\n  useTelemetryStoreLifeCycleEvents(store);\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TelemetryLoggerContext.Provider, {\n    value: store.logger,\n    children\n  });\n}\nfunction useTelemetry() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(TelemetryLoggerContext);\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS90ZWxlbWV0cnkvZGlzdC9yZWFjdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNkQ7QUFDckI7QUFDdUQ7QUFDL0Y7QUFDQSxFQUFFLGdEQUFTLE9BQU8sa0ZBQWtCO0FBQ3BDLEVBQUUsZ0RBQVMsT0FBTywwRUFBVTtBQUM1QjtBQUNBLCtCQUErQixvREFBYSxDQUFDLHNFQUFVO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0Esd0JBQXdCLHNEQUFHO0FBQzNCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLFNBQVMsaURBQVU7QUFDbkI7QUFDNkU7QUFDN0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdGVsZW1ldHJ5L2Rpc3QvcmVhY3QvaW5kZXguanM/ZmYwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdyZWFjdC9qc3gtcnVudGltZSc7XG5pbXBvcnQgeyBvblZpc2liaWxpdHlIaWRkZW4sIG9uUGFnZUhpZGUsIG5vb3BMb2dnZXIgfSBmcm9tICcuLi9fY2h1bmtzL25vb3BMb2dnZXItYjViMTY3NmUuanMnO1xuZnVuY3Rpb24gdXNlVGVsZW1ldHJ5U3RvcmVMaWZlQ3ljbGVFdmVudHMoc3RvcmUpIHtcbiAgdXNlRWZmZWN0KCgpID0+IG9uVmlzaWJpbGl0eUhpZGRlbihzdG9yZS5mbHVzaCksIFtzdG9yZS5mbHVzaF0pO1xuICB1c2VFZmZlY3QoKCkgPT4gb25QYWdlSGlkZShzdG9yZS5lbmRXaXRoQmVhY29uKSwgW3N0b3JlLmVuZFdpdGhCZWFjb25dKTtcbn1cbmNvbnN0IFRlbGVtZXRyeUxvZ2dlckNvbnRleHQgPSBjcmVhdGVDb250ZXh0KG5vb3BMb2dnZXIpO1xuZnVuY3Rpb24gVGVsZW1ldHJ5UHJvdmlkZXIoX3JlZikge1xuICBsZXQge1xuICAgIGNoaWxkcmVuLFxuICAgIHN0b3JlXG4gIH0gPSBfcmVmO1xuICB1c2VUZWxlbWV0cnlTdG9yZUxpZmVDeWNsZUV2ZW50cyhzdG9yZSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi9qc3goVGVsZW1ldHJ5TG9nZ2VyQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBzdG9yZS5sb2dnZXIsXG4gICAgY2hpbGRyZW5cbiAgfSk7XG59XG5mdW5jdGlvbiB1c2VUZWxlbWV0cnkoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KFRlbGVtZXRyeUxvZ2dlckNvbnRleHQpO1xufVxuZXhwb3J0IHsgVGVsZW1ldHJ5UHJvdmlkZXIsIHVzZVRlbGVtZXRyeSwgdXNlVGVsZW1ldHJ5U3RvcmVMaWZlQ3ljbGVFdmVudHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/telemetry/dist/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/types/lib/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/types/lib/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defineArrayMember: () => (/* binding */ defineArrayMember),\n/* harmony export */   defineField: () => (/* binding */ defineField),\n/* harmony export */   defineType: () => (/* binding */ defineType),\n/* harmony export */   isArrayOfBlocksSchemaType: () => (/* binding */ isArrayOfBlocksSchemaType),\n/* harmony export */   isArrayOfObjectsSchemaType: () => (/* binding */ isArrayOfObjectsSchemaType),\n/* harmony export */   isArrayOfPrimitivesSchemaType: () => (/* binding */ isArrayOfPrimitivesSchemaType),\n/* harmony export */   isArraySchemaType: () => (/* binding */ isArraySchemaType),\n/* harmony export */   isBlockChildrenObjectField: () => (/* binding */ isBlockChildrenObjectField),\n/* harmony export */   isBlockListObjectField: () => (/* binding */ isBlockListObjectField),\n/* harmony export */   isBlockSchemaType: () => (/* binding */ isBlockSchemaType),\n/* harmony export */   isBlockStyleObjectField: () => (/* binding */ isBlockStyleObjectField),\n/* harmony export */   isBooleanSchemaType: () => (/* binding */ isBooleanSchemaType),\n/* harmony export */   isCreateIfNotExistsMutation: () => (/* binding */ isCreateIfNotExistsMutation),\n/* harmony export */   isCreateMutation: () => (/* binding */ isCreateMutation),\n/* harmony export */   isCreateOrReplaceMutation: () => (/* binding */ isCreateOrReplaceMutation),\n/* harmony export */   isCreateSquashedMutation: () => (/* binding */ isCreateSquashedMutation),\n/* harmony export */   isCrossDatasetReference: () => (/* binding */ isCrossDatasetReference),\n/* harmony export */   isCrossDatasetReferenceSchemaType: () => (/* binding */ isCrossDatasetReferenceSchemaType),\n/* harmony export */   isDeleteMutation: () => (/* binding */ isDeleteMutation),\n/* harmony export */   isDeprecatedSchemaType: () => (/* binding */ isDeprecatedSchemaType),\n/* harmony export */   isDeprecationConfiguration: () => (/* binding */ isDeprecationConfiguration),\n/* harmony export */   isDocumentSchemaType: () => (/* binding */ isDocumentSchemaType),\n/* harmony export */   isImage: () => (/* binding */ isImage),\n/* harmony export */   isIndexSegment: () => (/* binding */ isIndexSegment),\n/* harmony export */   isIndexTuple: () => (/* binding */ isIndexTuple),\n/* harmony export */   isKeySegment: () => (/* binding */ isKeySegment),\n/* harmony export */   isKeyedObject: () => (/* binding */ isKeyedObject),\n/* harmony export */   isNumberSchemaType: () => (/* binding */ isNumberSchemaType),\n/* harmony export */   isObjectSchemaType: () => (/* binding */ isObjectSchemaType),\n/* harmony export */   isPatchMutation: () => (/* binding */ isPatchMutation),\n/* harmony export */   isPortableTextListBlock: () => (/* binding */ isPortableTextListBlock),\n/* harmony export */   isPortableTextSpan: () => (/* binding */ isPortableTextSpan),\n/* harmony export */   isPortableTextTextBlock: () => (/* binding */ isPortableTextTextBlock),\n/* harmony export */   isPrimitiveSchemaType: () => (/* binding */ isPrimitiveSchemaType),\n/* harmony export */   isReference: () => (/* binding */ isReference),\n/* harmony export */   isReferenceSchemaType: () => (/* binding */ isReferenceSchemaType),\n/* harmony export */   isSanityDocument: () => (/* binding */ isSanityDocument),\n/* harmony export */   isSlug: () => (/* binding */ isSlug),\n/* harmony export */   isSpanSchemaType: () => (/* binding */ isSpanSchemaType),\n/* harmony export */   isStringSchemaType: () => (/* binding */ isStringSchemaType),\n/* harmony export */   isTitledListValue: () => (/* binding */ isTitledListValue),\n/* harmony export */   isTypedObject: () => (/* binding */ isTypedObject),\n/* harmony export */   isValidationError: () => (/* binding */ isValidationError),\n/* harmony export */   isValidationErrorMarker: () => (/* binding */ isValidationErrorMarker),\n/* harmony export */   isValidationInfo: () => (/* binding */ isValidationInfo),\n/* harmony export */   isValidationInfoMarker: () => (/* binding */ isValidationInfoMarker),\n/* harmony export */   isValidationWarning: () => (/* binding */ isValidationWarning),\n/* harmony export */   isValidationWarningMarker: () => (/* binding */ isValidationWarningMarker),\n/* harmony export */   typed: () => (/* binding */ typed)\n/* harmony export */ });\nfunction isObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction isReference(reference) {\n  return isObject(reference) && typeof reference._ref == \"string\";\n}\nfunction isImage(value) {\n  return isObject(value) && isReference(value.asset) && value.asset._ref.startsWith(\"image-\");\n}\nfunction isCrossDatasetReference(reference) {\n  return isObject(reference) && typeof reference._ref == \"string\" && typeof reference._dataset == \"string\" && typeof reference._projectId == \"string\";\n}\nfunction isSanityDocument(document) {\n  return isObject(document) && typeof document._id == \"string\" && typeof document._type == \"string\";\n}\nfunction isTypedObject(obj) {\n  return isObject(obj) && typeof obj._type == \"string\";\n}\nfunction isKeyedObject(obj) {\n  return isObject(obj) && typeof obj._key == \"string\";\n}\nfunction isValidationErrorMarker(marker) {\n  return marker.level === \"error\";\n}\nfunction isValidationWarningMarker(marker) {\n  return marker.level === \"warning\";\n}\nfunction isValidationInfoMarker(marker) {\n  return marker.level === \"info\";\n}\nfunction isCreateMutation(mutation) {\n  return \"create\" in mutation;\n}\nfunction isCreateIfNotExistsMutation(mutation) {\n  return \"createIfNotExists\" in mutation;\n}\nfunction isCreateOrReplaceMutation(mutation) {\n  return \"createOrReplace\" in mutation;\n}\nfunction isDeleteMutation(mutation) {\n  return \"delete\" in mutation;\n}\nfunction isPatchMutation(mutation) {\n  return \"patch\" in mutation;\n}\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction isRecord$1(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction isPortableTextTextBlock(value) {\n  return isRecord$1(value) && typeof value._type == \"string\" && // block types can be named, so expect anything here.\n  Array.isArray(value.children) && value.children.every((child) => isRecord$1(child)) && (\"markDefs\" in value ? Array.isArray(value.markDefs) && value.markDefs.every((def) => isRecord$1(def)) : !0) && (\"style\" in value ? typeof value.style == \"string\" : !0);\n}\nfunction isPortableTextSpan(value) {\n  return isRecord$1(value) && value._type === \"span\" && typeof value.text == \"string\" && (\"marks\" in value ? Array.isArray(value.marks) && value.marks.every((mark) => typeof mark == \"string\") : !0);\n}\nfunction isPortableTextListBlock(value) {\n  return isPortableTextTextBlock(value) && \"listItem\" in value && typeof value.listItem == \"string\" && \"level\" in value && Number.isInteger(value.level);\n}\nfunction isRecord(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction isDocumentSchemaType(type) {\n  if (!isObjectSchemaType(type))\n    return !1;\n  let current = type;\n  for (; current; ) {\n    if (current.name === \"document\")\n      return !0;\n    current = current.type;\n  }\n  return !1;\n}\nfunction isObjectSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"object\" : !1;\n}\nfunction isArraySchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"array\" : !1;\n}\nfunction isArrayOfBlocksSchemaType(type) {\n  return isArraySchemaType(type) && type.of.some((memberType) => isBlockSchemaType(memberType));\n}\nfunction isArrayOfObjectsSchemaType(type) {\n  return isArraySchemaType(type) && type.of.every((memberType) => isObjectSchemaType(memberType));\n}\nfunction isArrayOfPrimitivesSchemaType(type) {\n  return isArraySchemaType(type) && type.of.every((memberType) => isPrimitiveSchemaType(memberType));\n}\nfunction isBooleanSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"boolean\" : !1;\n}\nfunction isStringSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"string\" : !1;\n}\nfunction isNumberSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"number\" : !1;\n}\nfunction isPrimitiveSchemaType(type) {\n  return isBooleanSchemaType(type) || isStringSchemaType(type) || isNumberSchemaType(type);\n}\nfunction isReferenceSchemaType(type) {\n  return isRecord(type) && (type.name === \"reference\" || isReferenceSchemaType(type.type));\n}\nfunction isDeprecatedSchemaType(type) {\n  return isRecord(type) ? typeof type.deprecated < \"u\" : !1;\n}\nfunction isDeprecationConfiguration(type) {\n  return isRecord(type) ? typeof type.deprecated < \"u\" : !1;\n}\nfunction isCrossDatasetReferenceSchemaType(type) {\n  return isRecord(type) && (type.name === \"crossDatasetReference\" || isCrossDatasetReferenceSchemaType(type.type));\n}\nfunction isTitledListValue(item) {\n  return typeof item == \"object\" && item !== null && \"title\" in item && \"value\" in item;\n}\nfunction isSpanSchemaType(type) {\n  return isRecord(type) ? Array.isArray(type.annotations) && Array.isArray(type.decorators) : !1;\n}\nfunction isBlockSchemaType(type) {\n  if (!isRecord(type) || !Array.isArray(type.fields)) return !1;\n  const maybeSpanChildren = type.fields.find(isBlockChildrenObjectField), maybeStyle = type.fields.find(isBlockStyleObjectField), maybeList = type.fields.find(isBlockListObjectField);\n  return isBlockChildrenObjectField(maybeSpanChildren) && isBlockStyleObjectField(maybeStyle) && isBlockListObjectField(maybeList);\n}\nfunction isBlockStyleObjectField(field) {\n  return !isRecord(field) || field.name !== \"style\" ? !1 : isRecord(field.type) && field.type.jsonType === \"string\";\n}\nfunction isBlockListObjectField(field) {\n  return !isRecord(field) || field.name !== \"listItem\" ? !1 : isRecord(field.type) && field.type.jsonType === \"string\";\n}\nfunction isBlockChildrenObjectField(field) {\n  return !isRecord(field) || field.name !== \"children\" || !isArraySchemaType(field.type) ? !1 : field.type.of.some(isSpanSchemaType);\n}\nfunction defineType(schemaDefinition, defineOptions) {\n  return schemaDefinition;\n}\nfunction defineField(schemaField, defineOptions) {\n  return schemaField;\n}\nfunction defineArrayMember(arrayOfSchema, defineOptions) {\n  return arrayOfSchema;\n}\nfunction typed(input) {\n  return input;\n}\nfunction isSlug(thing) {\n  return isObject(thing) && typeof thing.current == \"string\";\n}\nfunction isCreateSquashedMutation(mutation) {\n  return \"createSquashed\" in mutation;\n}\nfunction isValidationError(node) {\n  return node.level === \"error\";\n}\nfunction isValidationWarning(node) {\n  return node.level === \"warning\";\n}\nfunction isValidationInfo(node) {\n  return node.level === \"info\";\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/types/lib/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/getTheme_v2.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/ui/dist/_chunks-es/getTheme_v2.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultThemeConfig: () => (/* binding */ defaultThemeConfig),\n/* harmony export */   getTheme_v2: () => (/* binding */ getTheme_v2),\n/* harmony export */   themeColor_v0_v2: () => (/* binding */ themeColor_v0_v2)\n/* harmony export */ });\nconst defaultThemeConfig = {\n  _version: 2,\n  avatar: {\n    sizes: [\n      { distance: -4, size: 19 },\n      { distance: -4, size: 25 },\n      { distance: -8, size: 33 },\n      { distance: -12, size: 49 }\n    ],\n    focusRing: { offset: 1, width: 1 }\n  },\n  button: {\n    textWeight: \"medium\",\n    border: { width: 1 },\n    focusRing: { offset: -1, width: 1 }\n  },\n  card: {\n    border: { width: 1 },\n    focusRing: { offset: -1, width: 1 },\n    shadow: { outline: 0.5 }\n  },\n  container: [320, 640, 960, 1280, 1600, 1920],\n  media: [360, 600, 900, 1200, 1800, 2400],\n  layer: {\n    dialog: { zOffset: 600 },\n    popover: { zOffset: 400 },\n    tooltip: { zOffset: 200 }\n  },\n  radius: [0, 1, 3, 6, 9, 12, 21],\n  shadow: [\n    null,\n    { umbra: [0, 0, 0, 0], penumbra: [0, 0, 0, 0], ambient: [0, 0, 0, 0] },\n    { umbra: [0, 3, 5, -2], penumbra: [0, 6, 10, 0], ambient: [0, 1, 18, 1] },\n    { umbra: [0, 7, 8, -4], penumbra: [0, 12, 17, 2], ambient: [0, 5, 22, 4] },\n    { umbra: [0, 9, 11, -5], penumbra: [0, 18, 28, 2], ambient: [0, 7, 34, 6] },\n    { umbra: [0, 11, 15, -7], penumbra: [0, 24, 38, 3], ambient: [0, 9, 46, 8] }\n  ],\n  space: [0, 4, 8, 12, 20, 32, 52, 84, 136, 220],\n  input: {\n    border: {\n      width: 1\n    },\n    checkbox: {\n      size: 17,\n      focusRing: { offset: -1, width: 1 }\n    },\n    radio: {\n      size: 17,\n      markSize: 9,\n      focusRing: { offset: -1, width: 1 }\n    },\n    switch: {\n      width: 25,\n      height: 17,\n      padding: 5,\n      transitionDurationMs: 150,\n      transitionTimingFunction: \"ease-out\",\n      focusRing: { offset: 1, width: 1 }\n    },\n    select: {\n      focusRing: { offset: -1, width: 1 }\n    },\n    text: {\n      focusRing: { offset: -1, width: 1 }\n    }\n  },\n  style: {\n    button: {\n      root: {\n        transition: \"background-color 100ms,border-color 100ms,color 100ms\"\n      }\n    }\n    // card: {\n    //   root: {\n    //     transition: 'background-color 100ms,border-color 100ms,color 100ms',\n    //   },\n    // },\n  }\n}, cache$1 = /* @__PURE__ */ new WeakMap();\nfunction themeColor_v0_v2(color_v0) {\n  var _a, _b, _c;\n  const cached_v2 = cache$1.get(color_v0);\n  if (cached_v2) return cached_v2;\n  const base = stateThemeColor_v0_v2(color_v0, color_v0.card.enabled), color_v2 = {\n    _blend: color_v0._blend || (color_v0.dark ? \"screen\" : \"multiply\"),\n    _dark: color_v0.dark,\n    accent: base.accent,\n    avatar: base.avatar,\n    backdrop: color_v0.base.shadow.ambient,\n    badge: base.badge,\n    bg: color_v0.base.bg,\n    border: color_v0.base.border,\n    button: {\n      default: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.default),\n      ghost: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.ghost),\n      bleed: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.bleed)\n    },\n    code: base.code,\n    fg: color_v0.base.fg,\n    focusRing: color_v0.base.focusRing,\n    icon: base.muted.fg,\n    input: {\n      default: inputStatesThemeColor_v0_v2(color_v0.input.default),\n      invalid: inputStatesThemeColor_v0_v2(color_v0.input.invalid)\n    },\n    kbd: base.kbd,\n    link: base.link,\n    muted: {\n      ...base.muted,\n      bg: ((_a = color_v0.selectable) == null ? void 0 : _a.default.enabled.bg2) || color_v0.base.bg\n    },\n    selectable: stateTonesThemeColor_v0_v2(color_v0, color_v0.selectable || color_v0.muted),\n    shadow: color_v0.base.shadow,\n    skeleton: {\n      from: ((_b = color_v0.skeleton) == null ? void 0 : _b.from) || color_v0.base.border,\n      to: ((_c = color_v0.skeleton) == null ? void 0 : _c.to) || color_v0.base.border\n    },\n    syntax: color_v0.syntax\n  };\n  return cache$1.set(color_v0, color_v2), color_v2;\n}\nfunction stateTonesThemeColor_v0_v2(v0, t) {\n  return {\n    default: {\n      enabled: stateThemeColor_v0_v2(v0, t.default.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.default.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.default.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.default.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.default.disabled)\n    },\n    primary: {\n      enabled: stateThemeColor_v0_v2(v0, t.primary.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.primary.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.primary.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.primary.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.primary.disabled)\n    },\n    positive: {\n      enabled: stateThemeColor_v0_v2(v0, t.positive.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.positive.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.positive.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.positive.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.positive.disabled)\n    },\n    caution: {\n      enabled: stateThemeColor_v0_v2(v0, t.caution.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.caution.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.caution.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.caution.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.caution.disabled)\n    },\n    critical: {\n      enabled: stateThemeColor_v0_v2(v0, t.critical.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.critical.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.critical.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.critical.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.critical.disabled)\n    }\n  };\n}\nfunction stateThemeColor_v0_v2(v0, state) {\n  var _a, _b;\n  return {\n    ...state,\n    avatar: {\n      gray: {\n        bg: v0.spot.gray,\n        fg: v0.base.bg\n      },\n      blue: {\n        bg: v0.spot.blue,\n        fg: v0.base.bg\n      },\n      purple: {\n        bg: v0.spot.purple,\n        fg: v0.base.bg\n      },\n      magenta: {\n        bg: v0.spot.magenta,\n        fg: v0.base.bg\n      },\n      red: {\n        bg: v0.spot.red,\n        fg: v0.base.bg\n      },\n      orange: {\n        bg: v0.spot.orange,\n        fg: v0.base.bg\n      },\n      yellow: {\n        bg: v0.spot.yellow,\n        fg: v0.base.bg\n      },\n      green: {\n        bg: v0.spot.green,\n        fg: v0.base.bg\n      },\n      cyan: {\n        bg: v0.spot.cyan,\n        fg: v0.base.bg\n      }\n    },\n    badge: {\n      default: {\n        bg: v0.muted.default.enabled.bg,\n        fg: v0.muted.default.enabled.fg,\n        dot: v0.muted.default.enabled.muted.fg,\n        icon: v0.muted.default.enabled.muted.fg\n      },\n      primary: {\n        bg: v0.muted.primary.enabled.bg,\n        fg: v0.muted.primary.enabled.fg,\n        dot: v0.muted.primary.enabled.muted.fg,\n        icon: v0.muted.primary.enabled.muted.fg\n      },\n      positive: {\n        bg: v0.muted.positive.enabled.bg,\n        fg: v0.muted.positive.enabled.fg,\n        dot: v0.muted.positive.enabled.muted.fg,\n        icon: v0.muted.positive.enabled.muted.fg\n      },\n      caution: {\n        bg: v0.muted.caution.enabled.bg,\n        fg: v0.muted.caution.enabled.fg,\n        dot: v0.muted.caution.enabled.muted.fg,\n        icon: v0.muted.caution.enabled.muted.fg\n      },\n      critical: {\n        bg: v0.muted.critical.enabled.bg,\n        fg: v0.muted.critical.enabled.fg,\n        dot: v0.muted.critical.enabled.muted.fg,\n        icon: v0.muted.critical.enabled.muted.fg\n      }\n    },\n    kbd: {\n      bg: v0.muted.default.enabled.bg,\n      fg: v0.muted.default.enabled.fg,\n      border: v0.muted.default.enabled.border\n    },\n    muted: {\n      ...v0.muted.default.enabled.muted,\n      bg: state.bg2 || state.bg\n    },\n    skeleton: {\n      from: ((_a = state.skeleton) == null ? void 0 : _a.from) || state.border,\n      to: ((_b = state.skeleton) == null ? void 0 : _b.to) || state.border\n    }\n  };\n}\nfunction inputStatesThemeColor_v0_v2(states) {\n  return {\n    enabled: inputStateThemeColor_v0_v2(states.enabled),\n    disabled: inputStateThemeColor_v0_v2(states.disabled),\n    readOnly: inputStateThemeColor_v0_v2(states.readOnly),\n    hovered: inputStateThemeColor_v0_v2(states.hovered)\n  };\n}\nfunction inputStateThemeColor_v0_v2(state) {\n  return {\n    bg: state.bg,\n    border: state.border,\n    fg: state.fg,\n    muted: {\n      bg: state.bg2\n    },\n    placeholder: state.placeholder\n  };\n}\nconst cache = /* @__PURE__ */ new WeakMap();\nfunction getTheme_v2(theme) {\n  var _a, _b;\n  if ((_a = theme.sanity.v2) != null && _a._resolved) return theme.sanity.v2;\n  const cached_v2 = cache.get(theme);\n  if (cached_v2) return cached_v2;\n  const v2 = {\n    _version: 2,\n    _resolved: !0,\n    avatar: {\n      ...defaultThemeConfig.avatar,\n      ...theme.sanity.avatar\n    },\n    button: {\n      ...defaultThemeConfig.button,\n      ...theme.sanity.button\n    },\n    card: defaultThemeConfig.card,\n    color: themeColor_v0_v2(theme.sanity.color),\n    container: theme.sanity.container,\n    font: theme.sanity.fonts,\n    input: {\n      ...defaultThemeConfig.input,\n      ...theme.sanity.input,\n      checkbox: {\n        ...defaultThemeConfig.input.checkbox,\n        ...theme.sanity.input.checkbox\n      },\n      radio: {\n        ...defaultThemeConfig.input.radio,\n        ...theme.sanity.input.radio\n      },\n      switch: {\n        ...defaultThemeConfig.input.switch,\n        ...theme.sanity.input.switch\n      }\n    },\n    layer: (_b = theme.sanity.layer) != null ? _b : defaultThemeConfig.layer,\n    media: theme.sanity.media,\n    radius: theme.sanity.radius,\n    shadow: theme.sanity.shadows,\n    space: theme.sanity.space,\n    style: theme.sanity.styles\n  };\n  return cache.set(theme, v2), v2;\n}\n\n//# sourceMappingURL=getTheme_v2.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/getTheme_v2.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/ui/dist/index.mjs":
/*!************************************************!*\
  !*** ./node_modules/@sanity/ui/dist/index.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arrow: () => (/* binding */ Arrow),\n/* harmony export */   Autocomplete: () => (/* binding */ Autocomplete),\n/* harmony export */   Avatar: () => (/* binding */ Avatar),\n/* harmony export */   AvatarCounter: () => (/* binding */ AvatarCounter),\n/* harmony export */   AvatarStack: () => (/* binding */ AvatarStack),\n/* harmony export */   Badge: () => (/* binding */ Badge),\n/* harmony export */   BoundaryElementProvider: () => (/* binding */ BoundaryElementProvider),\n/* harmony export */   Box: () => (/* binding */ Box),\n/* harmony export */   Breadcrumbs: () => (/* binding */ Breadcrumbs),\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   Card: () => (/* binding */ Card),\n/* harmony export */   Checkbox: () => (/* binding */ Checkbox),\n/* harmony export */   Code: () => (/* binding */ Code),\n/* harmony export */   CodeSkeleton: () => (/* binding */ CodeSkeleton),\n/* harmony export */   ConditionalWrapper: () => (/* binding */ ConditionalWrapper),\n/* harmony export */   Container: () => (/* binding */ Container),\n/* harmony export */   Dialog: () => (/* binding */ Dialog),\n/* harmony export */   DialogContext: () => (/* binding */ DialogContext),\n/* harmony export */   DialogProvider: () => (/* binding */ DialogProvider),\n/* harmony export */   ElementQuery: () => (/* binding */ ElementQuery),\n/* harmony export */   ErrorBoundary: () => (/* binding */ ErrorBoundary),\n/* harmony export */   Flex: () => (/* binding */ Flex),\n/* harmony export */   Grid: () => (/* binding */ Grid),\n/* harmony export */   Heading: () => (/* binding */ Heading),\n/* harmony export */   HeadingSkeleton: () => (/* binding */ HeadingSkeleton),\n/* harmony export */   Hotkeys: () => (/* binding */ Hotkeys),\n/* harmony export */   Inline: () => (/* binding */ Inline),\n/* harmony export */   KBD: () => (/* binding */ KBD),\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   LabelSkeleton: () => (/* binding */ LabelSkeleton),\n/* harmony export */   Layer: () => (/* binding */ Layer),\n/* harmony export */   LayerProvider: () => (/* binding */ LayerProvider),\n/* harmony export */   Menu: () => (/* binding */ Menu),\n/* harmony export */   MenuButton: () => (/* binding */ MenuButton),\n/* harmony export */   MenuDivider: () => (/* binding */ MenuDivider),\n/* harmony export */   MenuGroup: () => (/* binding */ MenuGroup),\n/* harmony export */   MenuItem: () => (/* binding */ MenuItem),\n/* harmony export */   Popover: () => (/* binding */ Popover),\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   PortalProvider: () => (/* binding */ PortalProvider),\n/* harmony export */   Radio: () => (/* binding */ Radio),\n/* harmony export */   Select: () => (/* binding */ Select),\n/* harmony export */   Skeleton: () => (/* binding */ Skeleton),\n/* harmony export */   Spinner: () => (/* binding */ Spinner),\n/* harmony export */   SrOnly: () => (/* binding */ SrOnly),\n/* harmony export */   Stack: () => (/* binding */ Stack),\n/* harmony export */   Switch: () => (/* binding */ Switch),\n/* harmony export */   Tab: () => (/* binding */ Tab),\n/* harmony export */   TabList: () => (/* binding */ TabList),\n/* harmony export */   TabPanel: () => (/* binding */ TabPanel),\n/* harmony export */   Text: () => (/* binding */ Text),\n/* harmony export */   TextArea: () => (/* binding */ TextArea),\n/* harmony export */   TextInput: () => (/* binding */ TextInput),\n/* harmony export */   TextSkeleton: () => (/* binding */ TextSkeleton),\n/* harmony export */   ThemeColorProvider: () => (/* binding */ ThemeColorProvider),\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider),\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   Tooltip: () => (/* binding */ Tooltip),\n/* harmony export */   TooltipDelayGroupContext: () => (/* binding */ TooltipDelayGroupContext),\n/* harmony export */   TooltipDelayGroupProvider: () => (/* binding */ TooltipDelayGroupProvider),\n/* harmony export */   Tree: () => (/* binding */ Tree),\n/* harmony export */   TreeItem: () => (/* binding */ TreeItem),\n/* harmony export */   VirtualList: () => (/* binding */ VirtualList),\n/* harmony export */   _ResizeObserver: () => (/* binding */ _ResizeObserver),\n/* harmony export */   _elementSizeObserver: () => (/* binding */ _elementSizeObserver),\n/* harmony export */   _fillCSSObject: () => (/* binding */ _fillCSSObject),\n/* harmony export */   _getArrayProp: () => (/* binding */ _getArrayProp),\n/* harmony export */   _getResponsiveSpace: () => (/* binding */ _getResponsiveSpace),\n/* harmony export */   _hasFocus: () => (/* binding */ _hasFocus),\n/* harmony export */   _isEnterToClickElement: () => (/* binding */ _isEnterToClickElement),\n/* harmony export */   _isScrollable: () => (/* binding */ _isScrollable),\n/* harmony export */   _raf: () => (/* binding */ _raf),\n/* harmony export */   _raf2: () => (/* binding */ _raf2),\n/* harmony export */   _responsive: () => (/* binding */ _responsive),\n/* harmony export */   attemptFocus: () => (/* binding */ attemptFocus),\n/* harmony export */   containsOrEqualsElement: () => (/* binding */ containsOrEqualsElement),\n/* harmony export */   createColorTheme: () => (/* binding */ createColorTheme),\n/* harmony export */   focusFirstDescendant: () => (/* binding */ focusFirstDescendant),\n/* harmony export */   focusLastDescendant: () => (/* binding */ focusLastDescendant),\n/* harmony export */   hexToRgb: () => (/* binding */ hexToRgb),\n/* harmony export */   hslToRgb: () => (/* binding */ hslToRgb),\n/* harmony export */   isFocusable: () => (/* binding */ isFocusable),\n/* harmony export */   isHTMLAnchorElement: () => (/* binding */ isHTMLAnchorElement),\n/* harmony export */   isHTMLButtonElement: () => (/* binding */ isHTMLButtonElement),\n/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),\n/* harmony export */   isHTMLInputElement: () => (/* binding */ isHTMLInputElement),\n/* harmony export */   isHTMLSelectElement: () => (/* binding */ isHTMLSelectElement),\n/* harmony export */   isHTMLTextAreaElement: () => (/* binding */ isHTMLTextAreaElement),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   parseColor: () => (/* binding */ parseColor),\n/* harmony export */   rem: () => (/* binding */ rem),\n/* harmony export */   responsiveCodeFontStyle: () => (/* binding */ responsiveCodeFontStyle),\n/* harmony export */   responsiveHeadingFont: () => (/* binding */ responsiveHeadingFont),\n/* harmony export */   responsiveLabelFont: () => (/* binding */ responsiveLabelFont),\n/* harmony export */   responsiveTextAlignStyle: () => (/* binding */ responsiveTextAlignStyle),\n/* harmony export */   responsiveTextFont: () => (/* binding */ responsiveTextFont),\n/* harmony export */   rgbToHex: () => (/* binding */ rgbToHex),\n/* harmony export */   rgbToHsl: () => (/* binding */ rgbToHsl),\n/* harmony export */   rgba: () => (/* binding */ rgba),\n/* harmony export */   screen: () => (/* binding */ screen),\n/* harmony export */   studioTheme: () => (/* binding */ studioTheme),\n/* harmony export */   useArrayProp: () => (/* binding */ useArrayProp),\n/* harmony export */   useBoundaryElement: () => (/* binding */ useBoundaryElement),\n/* harmony export */   useClickOutside: () => (/* binding */ useClickOutside),\n/* harmony export */   useCustomValidity: () => (/* binding */ useCustomValidity),\n/* harmony export */   useDialog: () => (/* binding */ useDialog),\n/* harmony export */   useElementRect: () => (/* binding */ useElementRect),\n/* harmony export */   useElementSize: () => (/* binding */ useElementSize),\n/* harmony export */   useForwardedRef: () => (/* binding */ useForwardedRef),\n/* harmony export */   useGlobalKeyDown: () => (/* binding */ useGlobalKeyDown),\n/* harmony export */   useLayer: () => (/* binding */ useLayer),\n/* harmony export */   useMediaIndex: () => (/* binding */ useMediaIndex),\n/* harmony export */   usePortal: () => (/* binding */ usePortal),\n/* harmony export */   usePrefersDark: () => (/* binding */ usePrefersDark),\n/* harmony export */   usePrefersReducedMotion: () => (/* binding */ usePrefersReducedMotion),\n/* harmony export */   useRootTheme: () => (/* binding */ useRootTheme),\n/* harmony export */   useTheme: () => (/* binding */ useTheme),\n/* harmony export */   useTheme_v2: () => (/* binding */ useTheme_v2),\n/* harmony export */   useToast: () => (/* binding */ useToast),\n/* harmony export */   useTooltipDelayGroup: () => (/* binding */ useTooltipDelayGroup),\n/* harmony export */   useTree: () => (/* binding */ useTree)\n/* harmony export */ });\n/* harmony import */ var _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/ui/theme */ \"(ssr)/./node_modules/@sanity/ui/dist/theme.mjs\");\n/* harmony import */ var _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_chunks-es/getTheme_v2.mjs */ \"(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/getTheme_v2.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-is */ \"(ssr)/./node_modules/react-is/index.js\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! styled-components */ \"(ssr)/./node_modules/styled-components/dist/styled-components.esm.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sanity/icons */ \"(ssr)/./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var react_refractor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-refractor */ \"(ssr)/./node_modules/react-refractor/lib/Refractor.js\");\n/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @floating-ui/react-dom */ \"(ssr)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @floating-ui/react-dom */ \"(ssr)/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! framer-motion */ \"(ssr)/./node_modules/framer-motion/dist/es/render/dom/motion.mjs\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! framer-motion */ \"(ssr)/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst createColorTheme = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.createColorTheme, hexToRgb = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.hexToRgb, hslToRgb = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.hslToRgb, multiply = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.multiply, parseColor = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.parseColor, rgbToHex = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.rgbToHex, rgbToHsl = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.rgbToHsl, rgba = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.rgba, screen = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.screen, studioTheme = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.buildTheme)(), EMPTY_ARRAY = [], EMPTY_RECORD = {}, POPOVER_MOTION_CONTENT_OPACITY_PROPERTY = \"--motion-content-opacity\", POPOVER_MOTION_PROPS = {\n  initial: {\n    opacity: 0.5,\n    [POPOVER_MOTION_CONTENT_OPACITY_PROPERTY]: 0,\n    scale: 0.97,\n    willChange: \"transform\"\n  },\n  animate: {\n    opacity: [null, 1, 1],\n    [POPOVER_MOTION_CONTENT_OPACITY_PROPERTY]: [null, null, 1],\n    scale: 1\n  },\n  exit: {\n    // @ts-expect-error -- passing null a second time is valid: https://github.com/framer/motion/blob/b9ce4c42914c3916ea523609c5b032dfc72718bb/packages/framer-motion/src/animation/utils/keyframes.ts#L34C22-L34C22\n    opacity: [null, null, 0],\n    [POPOVER_MOTION_CONTENT_OPACITY_PROPERTY]: [null, 0, 0],\n    scale: 0.97\n  },\n  transition: { duration: 0.4, type: \"spring\" }\n};\nfunction _fillCSSObject(keys, value) {\n  return keys.reduce((style, key2) => (style[key2] = value, style), {});\n}\nfunction rem(pixelValue) {\n  return pixelValue === 0 ? 0 : `${pixelValue / 16}rem`;\n}\nfunction _responsive(media, values, callback) {\n  return ((values == null ? void 0 : values.map(callback)) || []).map((statement, mediaIndex) => mediaIndex === 0 ? statement : { [`@media screen and (min-width: ${media[mediaIndex - 1]}px)`]: statement });\n}\nfunction _getArrayProp(val, defaultVal) {\n  return val === void 0 ? defaultVal || EMPTY_ARRAY : Array.isArray(val) ? val : [val];\n}\nfunction _getResponsiveSpace(theme, props, spaceIndexes = EMPTY_ARRAY) {\n  if (!Array.isArray(spaceIndexes))\n    throw new Error(\"the property must be array of numbers\");\n  if (spaceIndexes.length === 0)\n    return null;\n  const { media, space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(theme);\n  return _responsive(\n    media,\n    spaceIndexes,\n    (spaceIndex) => _fillCSSObject(props, rem(space[spaceIndex]))\n  );\n}\nfunction responsiveFont(fontKey, props) {\n  const { $size, $weight } = props, { font, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), { family, sizes, weights } = font[fontKey], fontWeight = $weight && weights[$weight] || weights.regular, defaultSize = sizes[2], base = {\n    position: \"relative\",\n    fontFamily: family,\n    fontWeight,\n    padding: \"1px 0\",\n    margin: 0,\n    \"&:before\": {\n      content: '\"\"',\n      display: \"block\",\n      height: 0\n    },\n    \"&:after\": {\n      content: '\"\"',\n      display: \"block\",\n      height: 0\n    },\n    \"& > code, & > span\": {\n      display: \"block\"\n    },\n    \"&:not([hidden])\": {\n      display: \"block\"\n    }\n  };\n  if (!$size)\n    return responsiveFont.warned || (console.warn(\"No size specified for responsive font\", { fontKey, $size, props, base }), responsiveFont.warned = !0), [base];\n  const resp = _responsive(media, $size, (sizeIndex) => fontSize(sizes[sizeIndex] || defaultSize));\n  return [base, ...resp];\n}\nfunction fontSize(size2) {\n  const { ascenderHeight, descenderHeight, fontSize: fontSize2, iconSize, letterSpacing, lineHeight } = size2, negHeight = ascenderHeight + descenderHeight, capHeight = lineHeight - negHeight, iconOffset = (capHeight - iconSize) / 2, customIconSize = Math.floor(fontSize2 * 1.125 / 2) * 2 + 1, customIconOffset = (capHeight - customIconSize) / 2;\n  return {\n    fontSize: rem(fontSize2),\n    lineHeight: `calc(${lineHeight} / ${fontSize2})`,\n    letterSpacing: rem(letterSpacing),\n    transform: `translateY(${rem(descenderHeight)})`,\n    \"&:before\": {\n      marginTop: `calc(${rem(0 - negHeight)} - 1px)`\n    },\n    \"&:after\": {\n      marginBottom: \"-1px\"\n    },\n    \"& svg:not([data-sanity-icon])\": {\n      fontSize: `calc(${customIconSize} / 16 * 1rem)`,\n      margin: rem(customIconOffset)\n    },\n    \"& [data-sanity-icon]\": {\n      fontSize: `calc(${iconSize} / 16 * 1rem)`,\n      margin: rem(iconOffset)\n    }\n  };\n}\nfunction responsiveCodeFontStyle(props) {\n  return responsiveFont(\"code\", props);\n}\nfunction responsiveHeadingFont(props) {\n  return responsiveFont(\"heading\", props);\n}\nfunction responsiveLabelFont(props) {\n  return responsiveFont(\"label\", props);\n}\nfunction responsiveTextAlignStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$align, (textAlign) => ({ textAlign }));\n}\nfunction responsiveTextFont(props) {\n  return responsiveFont(\"text\", props);\n}\nfunction useArrayProp(val, defaultVal) {\n  const __perf_hash__ = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => JSON.stringify(val != null ? val : defaultVal), [defaultVal, val]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => _getArrayProp(val, defaultVal),\n    // Improve performance: Keep object identify for a given hash of the value\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [__perf_hash__]\n  );\n}\nfunction _getElements(element, elementsArg) {\n  const ret = [element];\n  for (const el of elementsArg)\n    Array.isArray(el) ? ret.push(...el) : ret.push(el);\n  return ret.filter(Boolean);\n}\nfunction useClickOutside(listener, elementsArg = EMPTY_ARRAY, boundaryElement) {\n  const [element, setElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [elements, setElements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(() => _getElements(element, elementsArg)), elementsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(elements);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const prevElements = elementsRef.current, nextElements = _getElements(element, elementsArg);\n    if (prevElements.length !== nextElements.length) {\n      setElements(nextElements), elementsRef.current = nextElements;\n      return;\n    }\n    for (const el of prevElements)\n      if (!nextElements.includes(el)) {\n        setElements(nextElements), elementsRef.current = nextElements;\n        return;\n      }\n    for (const el of nextElements)\n      if (!prevElements.includes(el)) {\n        setElements(nextElements), elementsRef.current = nextElements;\n        return;\n      }\n  }, [element, elementsArg]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!listener) return;\n    const handleWindowMouseDown = (evt) => {\n      const target = evt.target;\n      if (target instanceof Node && !(boundaryElement && !boundaryElement.contains(target))) {\n        for (const el of elements)\n          if (target === el || el.contains(target))\n            return;\n        listener(evt);\n      }\n    };\n    return window.addEventListener(\"mousedown\", handleWindowMouseDown), () => {\n      window.removeEventListener(\"mousedown\", handleWindowMouseDown);\n    };\n  }, [boundaryElement, listener, elements]), setElement;\n}\nvar resizeObservers = [], hasActiveObservations = function() {\n  return resizeObservers.some(function(ro) {\n    return ro.activeTargets.length > 0;\n  });\n}, hasSkippedObservations = function() {\n  return resizeObservers.some(function(ro) {\n    return ro.skippedTargets.length > 0;\n  });\n}, msg = \"ResizeObserver loop completed with undelivered notifications.\", deliverResizeLoopError = function() {\n  var event;\n  typeof ErrorEvent == \"function\" ? event = new ErrorEvent(\"error\", {\n    message: msg\n  }) : (event = document.createEvent(\"Event\"), event.initEvent(\"error\", !1, !1), event.message = msg), window.dispatchEvent(event);\n}, ResizeObserverBoxOptions;\n(function(ResizeObserverBoxOptions2) {\n  ResizeObserverBoxOptions2.BORDER_BOX = \"border-box\", ResizeObserverBoxOptions2.CONTENT_BOX = \"content-box\", ResizeObserverBoxOptions2.DEVICE_PIXEL_CONTENT_BOX = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nvar freeze = function(obj) {\n  return Object.freeze(obj);\n}, ResizeObserverSize = /* @__PURE__ */ function() {\n  function ResizeObserverSize2(inlineSize, blockSize) {\n    this.inlineSize = inlineSize, this.blockSize = blockSize, freeze(this);\n  }\n  return ResizeObserverSize2;\n}(), DOMRectReadOnly = function() {\n  function DOMRectReadOnly2(x, y, width, height) {\n    return this.x = x, this.y = y, this.width = width, this.height = height, this.top = this.y, this.left = this.x, this.bottom = this.top + this.height, this.right = this.left + this.width, freeze(this);\n  }\n  return DOMRectReadOnly2.prototype.toJSON = function() {\n    var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n    return { x, y, top, right, bottom, left, width, height };\n  }, DOMRectReadOnly2.fromRect = function(rectangle) {\n    return new DOMRectReadOnly2(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  }, DOMRectReadOnly2;\n}(), isSVG = function(target) {\n  return target instanceof SVGElement && \"getBBox\" in target;\n}, isHidden = function(target) {\n  if (isSVG(target)) {\n    var _a = target.getBBox(), width = _a.width, height = _a.height;\n    return !width && !height;\n  }\n  var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n  return !(offsetWidth || offsetHeight || target.getClientRects().length);\n}, isElement = function(obj) {\n  var _a;\n  if (obj instanceof Element)\n    return !0;\n  var scope = (_a = obj == null ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n  return !!(scope && obj instanceof scope.Element);\n}, isReplacedElement = function(target) {\n  switch (target.tagName) {\n    case \"INPUT\":\n      if (target.type !== \"image\")\n        break;\n    case \"VIDEO\":\n    case \"AUDIO\":\n    case \"EMBED\":\n    case \"OBJECT\":\n    case \"CANVAS\":\n    case \"IFRAME\":\n    case \"IMG\":\n      return !0;\n  }\n  return !1;\n}, global$1 = typeof window < \"u\" ? window : {}, cache = /* @__PURE__ */ new WeakMap(), scrollRegexp = /auto|scroll/, verticalRegexp = /^tb|vertical/, IE = /msie|trident/i.test(global$1.navigator && global$1.navigator.userAgent), parseDimension = function(pixel) {\n  return parseFloat(pixel || \"0\");\n}, size$1 = function(inlineSize, blockSize, switchSizes) {\n  return inlineSize === void 0 && (inlineSize = 0), blockSize === void 0 && (blockSize = 0), switchSizes === void 0 && (switchSizes = !1), new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n}, zeroBoxes = freeze({\n  devicePixelContentBoxSize: size$1(),\n  borderBoxSize: size$1(),\n  contentBoxSize: size$1(),\n  contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n}), calculateBoxSizes = function(target, forceRecalculation) {\n  if (forceRecalculation === void 0 && (forceRecalculation = !1), cache.has(target) && !forceRecalculation)\n    return cache.get(target);\n  if (isHidden(target))\n    return cache.set(target, zeroBoxes), zeroBoxes;\n  var cs = getComputedStyle(target), svg = isSVG(target) && target.ownerSVGElement && target.getBBox(), removePadding = !IE && cs.boxSizing === \"border-box\", switchSizes = verticalRegexp.test(cs.writingMode || \"\"), canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || \"\"), canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || \"\"), paddingTop = svg ? 0 : parseDimension(cs.paddingTop), paddingRight = svg ? 0 : parseDimension(cs.paddingRight), paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom), paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft), borderTop2 = svg ? 0 : parseDimension(cs.borderTopWidth), borderRight2 = svg ? 0 : parseDimension(cs.borderRightWidth), borderBottom2 = svg ? 0 : parseDimension(cs.borderBottomWidth), borderLeft2 = svg ? 0 : parseDimension(cs.borderLeftWidth), horizontalPadding = paddingLeft + paddingRight, verticalPadding = paddingTop + paddingBottom, horizontalBorderArea = borderLeft2 + borderRight2, verticalBorderArea = borderTop2 + borderBottom2, horizontalScrollbarThickness = canScrollHorizontally ? target.offsetHeight - verticalBorderArea - target.clientHeight : 0, verticalScrollbarThickness = canScrollVertically ? target.offsetWidth - horizontalBorderArea - target.clientWidth : 0, widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0, heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0, contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness, contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness, borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea, borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea, boxes = freeze({\n    devicePixelContentBoxSize: size$1(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n    borderBoxSize: size$1(borderBoxWidth, borderBoxHeight, switchSizes),\n    contentBoxSize: size$1(contentWidth, contentHeight, switchSizes),\n    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n  });\n  return cache.set(target, boxes), boxes;\n}, calculateBoxSize = function(target, observedBox, forceRecalculation) {\n  var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n  switch (observedBox) {\n    case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n      return devicePixelContentBoxSize;\n    case ResizeObserverBoxOptions.BORDER_BOX:\n      return borderBoxSize;\n    default:\n      return contentBoxSize;\n  }\n}, ResizeObserverEntry = /* @__PURE__ */ function() {\n  function ResizeObserverEntry2(target) {\n    var boxes = calculateBoxSizes(target);\n    this.target = target, this.contentRect = boxes.contentRect, this.borderBoxSize = freeze([boxes.borderBoxSize]), this.contentBoxSize = freeze([boxes.contentBoxSize]), this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n  }\n  return ResizeObserverEntry2;\n}(), calculateDepthForNode = function(node) {\n  if (isHidden(node))\n    return 1 / 0;\n  for (var depth = 0, parent = node.parentNode; parent; )\n    depth += 1, parent = parent.parentNode;\n  return depth;\n}, broadcastActiveObservations = function() {\n  var shallowestDepth = 1 / 0, callbacks2 = [];\n  resizeObservers.forEach(function(ro) {\n    if (ro.activeTargets.length !== 0) {\n      var entries = [];\n      ro.activeTargets.forEach(function(ot) {\n        var entry = new ResizeObserverEntry(ot.target), targetDepth = calculateDepthForNode(ot.target);\n        entries.push(entry), ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox), targetDepth < shallowestDepth && (shallowestDepth = targetDepth);\n      }), callbacks2.push(function() {\n        ro.callback.call(ro.observer, entries, ro.observer);\n      }), ro.activeTargets.splice(0, ro.activeTargets.length);\n    }\n  });\n  for (var _i = 0, callbacks_1 = callbacks2; _i < callbacks_1.length; _i++) {\n    var callback = callbacks_1[_i];\n    callback();\n  }\n  return shallowestDepth;\n}, gatherActiveObservationsAtDepth = function(depth) {\n  resizeObservers.forEach(function(ro) {\n    ro.activeTargets.splice(0, ro.activeTargets.length), ro.skippedTargets.splice(0, ro.skippedTargets.length), ro.observationTargets.forEach(function(ot) {\n      ot.isActive() && (calculateDepthForNode(ot.target) > depth ? ro.activeTargets.push(ot) : ro.skippedTargets.push(ot));\n    });\n  });\n}, process = function() {\n  var depth = 0;\n  for (gatherActiveObservationsAtDepth(depth); hasActiveObservations(); )\n    depth = broadcastActiveObservations(), gatherActiveObservationsAtDepth(depth);\n  return hasSkippedObservations() && deliverResizeLoopError(), depth > 0;\n}, trigger, callbacks = [], notify = function() {\n  return callbacks.splice(0).forEach(function(cb) {\n    return cb();\n  });\n}, queueMicroTask = function(callback) {\n  if (!trigger) {\n    var toggle_1 = 0, el_1 = document.createTextNode(\"\"), config = { characterData: !0 };\n    new MutationObserver(function() {\n      return notify();\n    }).observe(el_1, config), trigger = function() {\n      el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++);\n    };\n  }\n  callbacks.push(callback), trigger();\n}, queueResizeObserver = function(cb) {\n  queueMicroTask(function() {\n    requestAnimationFrame(cb);\n  });\n}, watching = 0, isWatching = function() {\n  return !!watching;\n}, CATCH_PERIOD = 250, observerConfig = { attributes: !0, characterData: !0, childList: !0, subtree: !0 }, events = [\n  \"resize\",\n  \"load\",\n  \"transitionend\",\n  \"animationend\",\n  \"animationstart\",\n  \"animationiteration\",\n  \"keyup\",\n  \"keydown\",\n  \"mouseup\",\n  \"mousedown\",\n  \"mouseover\",\n  \"mouseout\",\n  \"blur\",\n  \"focus\"\n], time = function(timeout) {\n  return timeout === void 0 && (timeout = 0), Date.now() + timeout;\n}, scheduled = !1, Scheduler = function() {\n  function Scheduler2() {\n    var _this = this;\n    this.stopped = !0, this.listener = function() {\n      return _this.schedule();\n    };\n  }\n  return Scheduler2.prototype.run = function(timeout) {\n    var _this = this;\n    if (timeout === void 0 && (timeout = CATCH_PERIOD), !scheduled) {\n      scheduled = !0;\n      var until = time(timeout);\n      queueResizeObserver(function() {\n        var elementsHaveResized = !1;\n        try {\n          elementsHaveResized = process();\n        } finally {\n          if (scheduled = !1, timeout = until - time(), !isWatching())\n            return;\n          elementsHaveResized ? _this.run(1e3) : timeout > 0 ? _this.run(timeout) : _this.start();\n        }\n      });\n    }\n  }, Scheduler2.prototype.schedule = function() {\n    this.stop(), this.run();\n  }, Scheduler2.prototype.observe = function() {\n    var _this = this, cb = function() {\n      return _this.observer && _this.observer.observe(document.body, observerConfig);\n    };\n    document.body ? cb() : global$1.addEventListener(\"DOMContentLoaded\", cb);\n  }, Scheduler2.prototype.start = function() {\n    var _this = this;\n    this.stopped && (this.stopped = !1, this.observer = new MutationObserver(this.listener), this.observe(), events.forEach(function(name) {\n      return global$1.addEventListener(name, _this.listener, !0);\n    }));\n  }, Scheduler2.prototype.stop = function() {\n    var _this = this;\n    this.stopped || (this.observer && this.observer.disconnect(), events.forEach(function(name) {\n      return global$1.removeEventListener(name, _this.listener, !0);\n    }), this.stopped = !0);\n  }, Scheduler2;\n}(), scheduler = new Scheduler(), updateCount = function(n) {\n  !watching && n > 0 && scheduler.start(), watching += n, !watching && scheduler.stop();\n}, skipNotifyOnElement = function(target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === \"inline\";\n}, ResizeObservation = function() {\n  function ResizeObservation2(target, observedBox) {\n    this.target = target, this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX, this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n  return ResizeObservation2.prototype.isActive = function() {\n    var size2 = calculateBoxSize(this.target, this.observedBox, !0);\n    return skipNotifyOnElement(this.target) && (this.lastReportedSize = size2), this.lastReportedSize.inlineSize !== size2.inlineSize || this.lastReportedSize.blockSize !== size2.blockSize;\n  }, ResizeObservation2;\n}(), ResizeObserverDetail = /* @__PURE__ */ function() {\n  function ResizeObserverDetail2(resizeObserver, callback) {\n    this.activeTargets = [], this.skippedTargets = [], this.observationTargets = [], this.observer = resizeObserver, this.callback = callback;\n  }\n  return ResizeObserverDetail2;\n}(), observerMap = /* @__PURE__ */ new WeakMap(), getObservationIndex = function(observationTargets, target) {\n  for (var i = 0; i < observationTargets.length; i += 1)\n    if (observationTargets[i].target === target)\n      return i;\n  return -1;\n}, ResizeObserverController = function() {\n  function ResizeObserverController2() {\n  }\n  return ResizeObserverController2.connect = function(resizeObserver, callback) {\n    var detail = new ResizeObserverDetail(resizeObserver, callback);\n    observerMap.set(resizeObserver, detail);\n  }, ResizeObserverController2.observe = function(resizeObserver, target, options) {\n    var detail = observerMap.get(resizeObserver), firstObservation = detail.observationTargets.length === 0;\n    getObservationIndex(detail.observationTargets, target) < 0 && (firstObservation && resizeObservers.push(detail), detail.observationTargets.push(new ResizeObservation(target, options && options.box)), updateCount(1), scheduler.schedule());\n  }, ResizeObserverController2.unobserve = function(resizeObserver, target) {\n    var detail = observerMap.get(resizeObserver), index = getObservationIndex(detail.observationTargets, target), lastObservation = detail.observationTargets.length === 1;\n    index >= 0 && (lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1), detail.observationTargets.splice(index, 1), updateCount(-1));\n  }, ResizeObserverController2.disconnect = function(resizeObserver) {\n    var _this = this, detail = observerMap.get(resizeObserver);\n    detail.observationTargets.slice().forEach(function(ot) {\n      return _this.unobserve(resizeObserver, ot.target);\n    }), detail.activeTargets.splice(0, detail.activeTargets.length);\n  }, ResizeObserverController2;\n}(), ResizeObserver = function() {\n  function ResizeObserver2(callback) {\n    if (arguments.length === 0)\n      throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n    if (typeof callback != \"function\")\n      throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n    ResizeObserverController.connect(this, callback);\n  }\n  return ResizeObserver2.prototype.observe = function(target, options) {\n    if (arguments.length === 0)\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    if (!isElement(target))\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    ResizeObserverController.observe(this, target, options);\n  }, ResizeObserver2.prototype.unobserve = function(target) {\n    if (arguments.length === 0)\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    if (!isElement(target))\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    ResizeObserverController.unobserve(this, target);\n  }, ResizeObserver2.prototype.disconnect = function() {\n    ResizeObserverController.disconnect(this);\n  }, ResizeObserver2.toString = function() {\n    return \"function ResizeObserver () { [polyfill code] }\";\n  }, ResizeObserver2;\n}();\nconst _ResizeObserver = typeof document < \"u\" && typeof window < \"u\" && window.ResizeObserver ? window.ResizeObserver : ResizeObserver, _elementSizeObserver = _createElementSizeObserver();\nfunction _createElementRectValueListener() {\n  return {\n    subscribe(element, subscriber) {\n      const resizeObserver = new _ResizeObserver(([entry]) => {\n        subscriber({\n          _contentRect: entry.contentRect,\n          border: {\n            width: entry.borderBoxSize[0].inlineSize,\n            height: entry.borderBoxSize[0].blockSize\n          },\n          content: {\n            width: entry.contentRect.width,\n            height: entry.contentRect.height\n          }\n        });\n      });\n      return resizeObserver.observe(element), () => {\n        resizeObserver.unobserve(element), resizeObserver.disconnect();\n      };\n    }\n  };\n}\nfunction _createElementSizeObserver() {\n  const disposeCache = /* @__PURE__ */ new WeakMap(), subscribersCache = /* @__PURE__ */ new WeakMap();\n  return {\n    subscribe(element, subscriber) {\n      const subscribers = subscribersCache.get(element) || [];\n      let dispose = disposeCache.get(element);\n      return subscribersCache.has(element) || (subscribersCache.set(element, subscribers), dispose = _createElementRectValueListener().subscribe(element, (elementRect) => {\n        for (const sub of subscribers)\n          sub(elementRect);\n      })), subscribers.push(subscriber), () => {\n        const idx = subscribers.indexOf(subscriber);\n        idx > -1 && subscribers.splice(idx, 1), subscribers.length === 0 && dispose && dispose();\n      };\n    }\n  };\n}\nfunction useElementSize(element) {\n  const [size2, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (element)\n      return _elementSizeObserver.subscribe(element, setSize);\n  }, [element]), size2;\n}\nfunction useElementRect(element) {\n  const elementSize = useElementSize(element);\n  return (elementSize == null ? void 0 : elementSize._contentRect) || null;\n}\nfunction useGlobalKeyDown(onKeyDown) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => (addEventListener(\"keydown\", onKeyDown), () => removeEventListener(\"keydown\", onKeyDown)), [onKeyDown]);\n}\nfunction getGlobalScope() {\n  if (typeof globalThis < \"u\") return globalThis;\n  if (typeof window < \"u\") return window;\n  if (typeof self < \"u\") return self;\n  if (typeof global < \"u\") return global;\n  throw new Error(\"@sanity/ui: could not locate global scope\");\n}\nconst globalScope = getGlobalScope();\nfunction createGlobalScopedContext(key2, defaultValue) {\n  return typeof document > \"u\" ? (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(defaultValue) : (globalScope[key2] = globalScope[key2] || (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(defaultValue), globalScope[key2]);\n}\nconst key$8 = Symbol.for(\"@sanity/ui/context/theme\"), ThemeContext = createGlobalScopedContext(key$8, null);\nfunction ThemeProvider(props) {\n  const parentTheme = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeContext), {\n    children,\n    scheme = (parentTheme == null ? void 0 : parentTheme.scheme) || \"light\",\n    theme: rootTheme = (parentTheme == null ? void 0 : parentTheme.theme) || null,\n    tone = (parentTheme == null ? void 0 : parentTheme.tone) || \"default\"\n  } = props, themeContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => rootTheme ? {\n    version: 0,\n    theme: rootTheme,\n    scheme,\n    tone\n  } : null, [rootTheme, scheme, tone]), theme = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => rootTheme ? (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_5__.getScopedTheme)(rootTheme, scheme, tone) : null, [scheme, rootTheme, tone]);\n  return theme ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeContext.Provider, { value: themeContext, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(styled_components__WEBPACK_IMPORTED_MODULE_7__.ThemeProvider, { theme, children }) }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\", { children: 'ThemeProvider: no \"theme\" property provided' });\n}\nfunction useRootTheme() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeContext);\n  if (!value)\n    throw new Error(\"useRootTheme(): missing context value\");\n  return value;\n}\nfunction ThemeColorProvider(props) {\n  const { children, scheme, tone } = props, root = useRootTheme();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProvider, { scheme: scheme || root.scheme, theme: root.theme, tone, children });\n}\nfunction useTheme() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.useTheme)();\n}\nfunction useTheme_v2() {\n  return (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)((0,styled_components__WEBPACK_IMPORTED_MODULE_7__.useTheme)());\n}\nconst MEDIA_STORE_CACHE = /* @__PURE__ */ new WeakMap();\nfunction _getMediaQuery(media, index) {\n  return index === 0 ? `screen and (max-width: ${media[index] - 1}px)` : index === media.length ? `screen and (min-width: ${media[index - 1]}px)` : `screen and (min-width: ${media[index - 1]}px) and (max-width: ${media[index] - 1}px)`;\n}\nfunction _createMediaStore(media) {\n  const mediaLen = media.length;\n  let sizes;\n  const getSizes = () => {\n    if (!sizes) {\n      sizes = [];\n      for (let index = mediaLen; index > -1; index -= 1) {\n        const mediaQuery = _getMediaQuery(media, index);\n        sizes.push({ index, mq: window.matchMedia(mediaQuery) });\n      }\n    }\n    return sizes;\n  };\n  return { getSnapshot: () => {\n    for (const { index, mq } of getSizes())\n      if (mq.matches) return index;\n    return 0;\n  }, subscribe: (onStoreChange) => {\n    const disposeFns = [];\n    for (const { mq } of getSizes()) {\n      const handleChange = () => {\n        mq.matches && onStoreChange();\n      };\n      mq.addEventListener(\"change\", handleChange), disposeFns.push(() => mq.removeEventListener(\"change\", handleChange));\n    }\n    return () => {\n      for (const disposeFn of disposeFns)\n        disposeFn();\n    };\n  } };\n}\nfunction getServerSnapshot$2() {\n  return 0;\n}\nfunction useMediaIndex() {\n  const { media } = useTheme_v2();\n  let store = MEDIA_STORE_CACHE.get(media);\n  return store || (store = _createMediaStore(media), MEDIA_STORE_CACHE.set(media, store)), (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(store.subscribe, store.getSnapshot, getServerSnapshot$2);\n}\nlet MEDIA_QUERY_CACHE$1;\nfunction getMatchMedia$1() {\n  return MEDIA_QUERY_CACHE$1 || (MEDIA_QUERY_CACHE$1 = window.matchMedia(\"(prefers-color-scheme: dark)\")), MEDIA_QUERY_CACHE$1;\n}\nfunction subscribe$2(onStoreChange) {\n  const matchMedia = getMatchMedia$1();\n  return matchMedia.addEventListener(\"change\", onStoreChange), () => matchMedia.removeEventListener(\"change\", onStoreChange);\n}\nfunction getSnapshot$1() {\n  return getMatchMedia$1().matches;\n}\nfunction getServerSnapshot$1() {\n  return !1;\n}\nfunction usePrefersDark() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe$2, getSnapshot$1, getServerSnapshot$1);\n}\nlet MEDIA_QUERY_CACHE;\nfunction getMatchMedia() {\n  return MEDIA_QUERY_CACHE || (MEDIA_QUERY_CACHE = window.matchMedia(\"(prefers-reduced-motion: reduce)\")), MEDIA_QUERY_CACHE;\n}\nfunction subscribe$1(onStoreChange) {\n  const matchMedia = getMatchMedia();\n  return matchMedia.addEventListener(\"change\", onStoreChange), () => matchMedia.removeEventListener(\"change\", onStoreChange);\n}\nfunction getSnapshot() {\n  return getMatchMedia().matches;\n}\nfunction getServerSnapshot() {\n  return !1;\n}\nfunction usePrefersReducedMotion() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe$1, getSnapshot, getServerSnapshot);\n}\nfunction useForwardedRef(ref) {\n  const innerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, () => innerRef.current), innerRef;\n}\nfunction useCustomValidity(ref, customValidity) {\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    var _a;\n    (_a = ref.current) == null || _a.setCustomValidity(customValidity || \"\");\n  }, [customValidity, ref]);\n}\nfunction responsiveBorderStyle() {\n  return [border, borderTop, borderRight, borderBottom, borderLeft];\n}\nfunction border(props) {\n  var _a, _b;\n  const { card, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${(_b = (_a = card.border) == null ? void 0 : _a.width) != null ? _b : 1}px solid var(--card-border-color)`;\n  return _responsive(\n    media,\n    props.$border,\n    (value) => value ? { \"&&\": { border: borderStyle } } : { \"&&\": { border: 0 } }\n  );\n}\nfunction borderTop(props) {\n  var _a, _b;\n  const { card, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${(_b = (_a = card.border) == null ? void 0 : _a.width) != null ? _b : 1}px solid var(--card-border-color)`;\n  return _responsive(\n    media,\n    props.$borderTop,\n    (value) => value ? { \"&&\": { borderTop: borderStyle } } : { \"&&\": { borderTop: 0 } }\n  );\n}\nfunction borderRight(props) {\n  var _a, _b;\n  const { card, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${(_b = (_a = card.border) == null ? void 0 : _a.width) != null ? _b : 1}px solid var(--card-border-color)`;\n  return _responsive(\n    media,\n    props.$borderRight,\n    (value) => value ? { \"&&\": { borderRight: borderStyle } } : { \"&&\": { borderRight: 0 } }\n  );\n}\nfunction borderBottom(props) {\n  var _a, _b;\n  const { card, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${(_b = (_a = card.border) == null ? void 0 : _a.width) != null ? _b : 1}px solid var(--card-border-color)`;\n  return _responsive(\n    media,\n    props.$borderBottom,\n    (value) => value ? { \"&&\": { borderBottom: borderStyle } } : { \"&&\": { borderBottom: 0 } }\n  );\n}\nfunction borderLeft(props) {\n  var _a, _b;\n  const { card, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${(_b = (_a = card.border) == null ? void 0 : _a.width) != null ? _b : 1}px solid var(--card-border-color)`;\n  return _responsive(\n    media,\n    props.$borderLeft,\n    (value) => value ? { \"&&\": { borderLeft: borderStyle } } : { \"&&\": { borderLeft: 0 } }\n  );\n}\nconst BASE_STYLE$4 = {\n  '&[data-as=\"ul\"],&[data-as=\"ol\"]': {\n    listStyle: \"none\"\n  }\n}, BOX_SIZING = {\n  content: \"content-box\",\n  border: \"border-box\"\n}, BOX_HEIGHT = {\n  stretch: \"stretch\",\n  fill: \"100%\"\n};\nfunction boxStyle() {\n  return BASE_STYLE$4;\n}\nfunction responsiveBoxStyle() {\n  return [\n    responsiveBoxSizingStyle,\n    responsiveBoxHeightStyle,\n    responsiveBoxOverflowStyle,\n    responsiveBoxDisplayStyle\n  ];\n}\nfunction responsiveBoxDisplayStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$display, (display) => ({\n    \"&:not([hidden])\": { display }\n  }));\n}\nfunction responsiveBoxSizingStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$sizing, (sizing) => ({\n    boxSizing: BOX_SIZING[sizing]\n  }));\n}\nfunction responsiveBoxHeightStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$height, (height) => ({\n    height: BOX_HEIGHT[height]\n  }));\n}\nfunction responsiveBoxOverflowStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$overflow, (overflow) => ({\n    overflow\n  }));\n}\nconst BASE_STYLE$3 = {\n  \"&&:not([hidden])\": {\n    display: \"flex\"\n  }\n};\nfunction responsiveFlexStyle() {\n  return [\n    BASE_STYLE$3,\n    responsiveFlexAlignStyle,\n    responsiveFlexGapStyle,\n    responsiveFlexWrapStyle,\n    responsiveFlexJustifyStyle,\n    responsiveFlexDirectionStyle\n  ];\n}\nfunction responsiveFlexAlignStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$align, (align) => ({ alignItems: align }));\n}\nfunction responsiveFlexGapStyle(props) {\n  const { media, space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$gap, (gap) => ({\n    gap: gap ? rem(space[gap]) : void 0\n  }));\n}\nfunction responsiveFlexWrapStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$wrap, (wrap) => ({ flexWrap: wrap }));\n}\nfunction responsiveFlexJustifyStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$justify, (justify) => ({ justifyContent: justify }));\n}\nfunction responsiveFlexDirectionStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$direction, (direction) => ({ flexDirection: direction }));\n}\nconst BASE_STYLE$2 = {\n  minWidth: 0,\n  minHeight: 0\n};\nfunction flexItemStyle() {\n  return [BASE_STYLE$2, responsiveFlexItemStyle];\n}\nfunction responsiveFlexItemStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return props.$flex ? _responsive(media, props.$flex, (flex) => ({ flex })) : EMPTY_ARRAY;\n}\nfunction focusRingBorderStyle(border2) {\n  return `inset 0 0 0 ${border2.width}px ${border2.color}`;\n}\nfunction focusRingStyle(opts) {\n  const { base, border: border2, focusRing } = opts, focusRingOutsetWidth = focusRing.offset + focusRing.width, focusRingInsetWidth = 0 - focusRing.offset, bgColor = base ? base.bg : \"var(--card-bg-color)\";\n  return [\n    focusRingInsetWidth > 0 && `inset 0 0 0 ${focusRingInsetWidth}px var(--card-focus-ring-color)`,\n    border2 && focusRingBorderStyle(border2),\n    focusRingInsetWidth < 0 && `0 0 0 ${0 - focusRingInsetWidth}px ${bgColor}`,\n    focusRingOutsetWidth > 0 && `0 0 0 ${focusRingOutsetWidth}px var(--card-focus-ring-color)`\n  ].filter(Boolean).join(\",\");\n}\nconst GRID_CSS = {\n  \"&&:not([hidden])\": {\n    display: \"grid\"\n  },\n  '&[data-as=\"ul\"],&[data-as=\"ol\"]': {\n    listStyle: \"none\"\n  }\n}, GRID_AUTO_COLUMS = {\n  auto: \"auto\",\n  min: \"min-content\",\n  max: \"max-content\",\n  fr: \"minmax(0, 1fr)\"\n}, GRID_AUTO_ROWS = {\n  auto: \"auto\",\n  min: \"min-content\",\n  max: \"max-content\",\n  fr: \"minmax(0, 1fr)\"\n};\nfunction responsiveGridStyle() {\n  return [\n    GRID_CSS,\n    responsiveGridAutoFlowStyle,\n    responsiveGridAutoRowsStyle,\n    responsiveGridAutoColsStyle,\n    responsiveGridColumnsStyle,\n    responsiveGridRowsStyle,\n    responsiveGridGapStyle,\n    responsiveGridGapXStyle,\n    responsiveGridGapYStyle\n  ];\n}\nfunction responsiveGridAutoFlowStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$autoFlow, (autoFlow) => ({\n    gridAutoFlow: autoFlow\n  }));\n}\nfunction responsiveGridAutoRowsStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$autoRows, (autoRows) => ({\n    gridAutoRows: autoRows && GRID_AUTO_ROWS[autoRows]\n  }));\n}\nfunction responsiveGridAutoColsStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$autoCols, (autoCols) => ({\n    gridAutoColumns: autoCols && GRID_AUTO_COLUMS[autoCols]\n  }));\n}\nfunction responsiveGridColumnsStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$columns, (columns) => ({\n    gridTemplateColumns: columns && `repeat(${columns},minmax(0,1fr));`\n  }));\n}\nfunction responsiveGridRowsStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$rows, (rows) => ({\n    gridTemplateRows: rows && `repeat(${rows},minmax(0,1fr));`\n  }));\n}\nfunction responsiveGridGapStyle(props) {\n  const { media, space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$gap, (gap) => ({\n    gridGap: gap ? rem(space[gap]) : void 0\n  }));\n}\nfunction responsiveGridGapXStyle(props) {\n  const { media, space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$gapX, (gapX) => ({\n    columnGap: gapX ? rem(space[gapX]) : void 0\n  }));\n}\nfunction responsiveGridGapYStyle(props) {\n  const { media, space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$gapY, (gapY) => ({\n    rowGap: gapY ? rem(space[gapY]) : void 0\n  }));\n}\nfunction responsiveGridItemStyle() {\n  return [\n    responsiveGridItemRowStyle,\n    responsiveGridItemRowStartStyle,\n    responsiveGridItemRowEndStyle,\n    responsiveGridItemColumnStyle,\n    responsiveGridItemColumnStartStyle,\n    responsiveGridItemColumnEndStyle\n  ];\n}\nconst GRID_ITEM_ROW = {\n  auto: \"auto\",\n  full: \"1 / -1\"\n}, GRID_ITEM_COLUMN = {\n  auto: \"auto\",\n  full: \"1 / -1\"\n};\nfunction responsiveGridItemRowStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$row, (row) => typeof row == \"number\" ? { gridRow: `span ${row} / span ${row}` } : { gridRow: GRID_ITEM_ROW[row] });\n}\nfunction responsiveGridItemRowStartStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$rowStart, (rowStart) => ({\n    gridRowStart: rowStart\n  }));\n}\nfunction responsiveGridItemRowEndStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$rowEnd, (rowEnd) => ({ gridRowEnd: rowEnd }));\n}\nfunction responsiveGridItemColumnStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$column, (column) => typeof column == \"number\" ? { gridColumn: `span ${column} / span ${column}` } : { gridColumn: GRID_ITEM_COLUMN[column] });\n}\nfunction responsiveGridItemColumnStartStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$columnStart, (columnStart) => ({\n    gridColumnStart: columnStart\n  }));\n}\nfunction responsiveGridItemColumnEndStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$columnEnd, (columnEnd) => ({\n    gridColumnEnd: columnEnd\n  }));\n}\nfunction responsiveInputPaddingStyle(props) {\n  const { $fontSize, $iconLeft, $iconRight, $padding, $space } = props, { font, media, space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), len = Math.max($padding.length, $space.length, $fontSize.length), _padding = [], _space = [], _fontSize = [];\n  for (let i = 0; i < len; i += 1)\n    _fontSize[i] = $fontSize[i] === void 0 ? _fontSize[i - 1] : $fontSize[i], _padding[i] = $padding[i] === void 0 ? _padding[i - 1] : $padding[i], _space[i] = $space[i] === void 0 ? _space[i - 1] : $space[i];\n  return _responsive(media, _padding, (_, i) => {\n    const size2 = font.text.sizes[_fontSize[i]] || font.text.sizes[2], emSize = size2.lineHeight - size2.ascenderHeight - size2.descenderHeight, p = space[_padding[i]], s = space[_space[i]], styles = {\n      paddingTop: rem(p - size2.ascenderHeight),\n      paddingRight: rem(p),\n      paddingBottom: rem(p - size2.descenderHeight),\n      paddingLeft: rem(p)\n    };\n    return $iconRight && (styles.paddingRight = rem(p + emSize + s)), $iconLeft && (styles.paddingLeft = rem(p + emSize + s)), styles;\n  });\n}\nfunction responsiveInputPaddingIconRightStyle(props) {\n  return responsiveInputPaddingStyle({ ...props, $iconRight: !0 });\n}\nconst ROOT_STYLE = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  align-items: center;\n`;\nfunction textInputRootStyle() {\n  return ROOT_STYLE;\n}\nfunction textInputBaseStyle(props) {\n  const { $scheme, $tone, $weight } = props, { color, font } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    appearance: none;\n    background: none;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: ${font.text.family};\n    font-weight: ${$weight && font.text.weights[$weight] || font.text.weights.regular};\n    margin: 0;\n    position: relative;\n    z-index: 1;\n    display: block;\n\n    /* NOTE: This is a hack to disable Chrome’s autofill styles */\n    &:-webkit-autofill,\n    &:-webkit-autofill:hover,\n    &:-webkit-autofill:focus,\n    &:-webkit-autofill:active {\n      -webkit-text-fill-color: var(--input-fg-color) !important;\n      transition: background-color 5000s;\n      transition-delay: 86400s /* 24h */;\n    }\n\n    /* &:is(textarea) */\n    &[data-as='textarea'] {\n      resize: none;\n    }\n\n    color: var(--input-fg-color);\n\n    &::placeholder {\n      color: var(--input-placeholder-color);\n    }\n\n    &[data-scheme='${$scheme}'][data-tone='${$tone}'] {\n      --input-fg-color: ${color.input.default.enabled.fg};\n      --input-placeholder-color: ${color.input.default.enabled.placeholder};\n\n      /* enabled */\n      &:not(:invalid):not(:disabled):not(:read-only) {\n        --input-fg-color: ${color.input.default.enabled.fg};\n        --input-placeholder-color: ${color.input.default.enabled.placeholder};\n      }\n\n      /* disabled */\n      &:not(:invalid):disabled {\n        --input-fg-color: ${color.input.default.disabled.fg};\n        --input-placeholder-color: ${color.input.default.disabled.placeholder};\n      }\n\n      /* invalid */\n      &:invalid {\n        --input-fg-color: ${color.input.invalid.enabled.fg};\n        --input-placeholder-color: ${color.input.invalid.enabled.placeholder};\n      }\n\n      /* readOnly */\n      &:read-only {\n        --input-fg-color: ${color.input.default.readOnly.fg};\n        --input-placeholder-color: ${color.input.default.readOnly.placeholder};\n      }\n    }\n  `;\n}\nfunction textInputFontSizeStyle(props) {\n  const { font, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$fontSize, (sizeIndex) => {\n    const size2 = font.text.sizes[sizeIndex] || font.text.sizes[2];\n    return {\n      fontSize: rem(size2.fontSize),\n      lineHeight: size2.lineHeight / size2.fontSize\n    };\n  });\n}\nfunction textInputRepresentationStyle(props) {\n  const { $hasPrefix, $hasSuffix, $scheme, $tone, $unstableDisableFocusRing } = props, { color, input } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    --input-box-shadow: none;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    pointer-events: none;\n    z-index: 0;\n\n    background-color: var(--card-bg-color);\n    box-shadow: var(--input-box-shadow);\n\n    border-top-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-bottom-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-top-right-radius: ${$hasSuffix ? 0 : void 0};\n    border-bottom-right-radius: ${$hasSuffix ? 0 : void 0};\n\n    &[data-scheme='${$scheme}'][data-tone='${$tone}'] {\n      --card-bg-color: ${color.input.default.enabled.bg};\n      --card-fg-color: ${color.input.default.enabled.fg};\n\n      /* enabled */\n      *:not(:disabled) + &[data-border] {\n        --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n      }\n\n      /* invalid */\n      *:not(:disabled):invalid + & {\n        --card-bg-color: ${color.input.invalid.enabled.bg};\n        --card-fg-color: ${color.input.invalid.enabled.fg};\n\n        &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.invalid.enabled.border,\n    width: input.border.width\n  })};\n        }\n      }\n\n      /* focused */\n      *:not(:disabled):focus + & {\n        &[data-border] {\n          --input-box-shadow: ${$unstableDisableFocusRing ? void 0 : focusRingStyle({\n    border: { color: color.input.default.enabled.border, width: input.border.width },\n    focusRing: input.text.focusRing\n  })};\n        }\n\n        &:not([data-border]) {\n          --input-box-shadow: ${$unstableDisableFocusRing ? void 0 : focusRingStyle({ focusRing: input.text.focusRing })};\n        }\n      }\n\n      /* disabled */\n      *:not(:invalid):disabled + & {\n        --card-bg-color: ${color.input.default.disabled.bg} !important;\n        --card-fg-color: ${color.input.default.disabled.fg} !important;\n        --card-icon-color: ${color.input.default.disabled.fg} !important;\n\n        &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.disabled.border,\n    width: input.border.width\n  })};\n        }\n      }\n\n      *:invalid:disabled + & {\n        --card-bg-color: ${color.input.invalid.disabled.bg} !important;\n        --card-fg-color: ${color.input.invalid.disabled.fg} !important;\n        --card-icon-color: ${color.input.invalid.disabled.fg} !important;\n\n        &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.invalid.disabled.border,\n    width: input.border.width\n  })};\n        }\n      }\n\n      /* readOnly */\n      *:not(:invalid):read-only + & {\n        --card-bg-color: ${color.input.default.readOnly.bg} !important;\n        --card-fg-color: ${color.input.default.readOnly.fg} !important;\n      }\n\n      *:invalid:read-only + & {\n        --card-bg-color: ${color.input.invalid.readOnly.bg} !important;\n        --card-fg-color: ${color.input.invalid.readOnly.fg} !important;\n      }\n\n      /* hovered */\n      @media (hover: hover) {\n        *:not(:disabled):not(:read-only):not(:invalid):hover + & {\n          --card-bg-color: ${color.input.default.hovered.bg};\n          --card-fg-color: ${color.input.default.hovered.fg};\n        }\n\n        *:invalid:not(:disabled):not(:read-only):hover + & {\n          --card-bg-color: ${color.input.invalid.hovered.bg};\n          --card-fg-color: ${color.input.invalid.hovered.fg};\n        }\n\n        *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.hovered.border,\n    width: input.border.width\n  })};\n        }\n\n        *:invalid:not(:disabled):not(:read-only):not(:focus):hover + &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.invalid.hovered.border,\n    width: input.border.width\n  })};\n        }\n      }\n    }\n  `;\n}\nfunction responsiveMarginStyle(props) {\n  const { theme } = props;\n  return [\n    _getResponsiveSpace(theme, [\"margin\"], props.$margin),\n    _getResponsiveSpace(theme, [\"marginLeft\", \"marginRight\"], props.$marginX),\n    _getResponsiveSpace(theme, [\"marginTop\", \"marginBottom\"], props.$marginY),\n    _getResponsiveSpace(theme, [\"marginTop\"], props.$marginTop),\n    _getResponsiveSpace(theme, [\"marginRight\"], props.$marginRight),\n    _getResponsiveSpace(theme, [\"marginBottom\"], props.$marginBottom),\n    _getResponsiveSpace(theme, [\"marginLeft\"], props.$marginLeft)\n  ].filter(Boolean);\n}\nfunction responsivePaddingStyle(props) {\n  const { theme } = props;\n  return [\n    _getResponsiveSpace(theme, [\"padding\"], props.$padding),\n    _getResponsiveSpace(theme, [\"paddingLeft\", \"paddingRight\"], props.$paddingX),\n    _getResponsiveSpace(theme, [\"paddingTop\", \"paddingBottom\"], props.$paddingY),\n    _getResponsiveSpace(theme, [\"paddingTop\"], props.$paddingTop),\n    _getResponsiveSpace(theme, [\"paddingRight\"], props.$paddingRight),\n    _getResponsiveSpace(theme, [\"paddingBottom\"], props.$paddingBottom),\n    _getResponsiveSpace(theme, [\"paddingLeft\"], props.$paddingLeft)\n  ].filter(Boolean);\n}\nfunction responsiveRadiusStyle(props) {\n  const { media, radius } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$radius, (value) => {\n    let borderRadius = 0;\n    return typeof value == \"number\" && (borderRadius = rem(radius[value])), value === \"full\" && (borderRadius = \"9999px\"), { borderRadius };\n  });\n}\nfunction toBoxShadow(shadow, color) {\n  return `${shadow.map(rem).join(\" \")} ${color}`;\n}\nfunction shadowStyle(shadow, outlineWidth = 1) {\n  if (!shadow) return EMPTY_RECORD;\n  const outline = `0 0 0 ${rem(outlineWidth)} var(--card-shadow-outline-color)`, umbra = toBoxShadow(shadow.umbra, \"var(--card-shadow-umbra-color)\"), penumbra = toBoxShadow(shadow.penumbra, \"var(--card-shadow-penumbra-color)\"), ambient = toBoxShadow(shadow.ambient, \"var(--card-shadow-ambient-color)\");\n  return { boxShadow: `${outline}, ${umbra}, ${penumbra}, ${ambient}` };\n}\nfunction responsiveShadowStyle(props) {\n  const { card, media, shadow } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(\n    media,\n    props.$shadow,\n    (index) => shadowStyle(shadow[index], card.shadow.outline)\n  );\n}\nfunction labelBaseStyle(props) {\n  const { $accent, $muted } = props, { font } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    text-transform: uppercase;\n\n    ${$accent && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${$muted && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${font.code.family};\n      border-radius: 1px;\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `;\n}\nconst Root$C = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(responsiveLabelFont, responsiveTextAlignStyle, labelBaseStyle), SpanWithTextOverflow$2 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span`\n  display: block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  overflow: clip;\n`, Label = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    accent,\n    align,\n    children: childrenProp,\n    muted = !1,\n    size: size2 = 2,\n    textOverflow,\n    weight,\n    ...restProps\n  } = props;\n  let children = childrenProp;\n  return textOverflow === \"ellipsis\" ? children = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SpanWithTextOverflow$2, { children }) : children = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children }), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$C,\n    {\n      \"data-ui\": \"Label\",\n      ...restProps,\n      $accent: accent,\n      $align: useArrayProp(align),\n      $muted: muted,\n      $size: useArrayProp(size2),\n      $weight: weight,\n      ref,\n      children\n    }\n  );\n}), avatarStyle = {\n  root: avatarRootStyle,\n  arrow: avatarArrowStyle,\n  bgStroke: avatarBgStrokeStyle,\n  stroke: avatarStrokeStyle,\n  initials: avatarInitialsStyle,\n  image: avatarImageStyle\n};\nfunction avatarArrowStyle() {\n  return {\n    position: \"absolute\",\n    boxSizing: \"border-box\",\n    zIndex: 0,\n    opacity: 0,\n    transition: \"all 0.2s linear\",\n    transform: \"rotate(-90deg) translate3d(0, 6px, 0)\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    \"& > svg\": {\n      width: \"11px\",\n      height: \"7px\",\n      position: \"absolute\",\n      top: \"-5px\",\n      left: \"50%\",\n      transform: \"translateX(-6px)\",\n      \"&:not([hidden])\": {\n        display: \"block\"\n      }\n    },\n    \"[data-arrow-position='inside'] > &\": {\n      transform: \"rotate(-90deg) translate3d(0, 6px, 0)\",\n      opacity: 0\n    },\n    \"[data-arrow-position='top'] > &\": {\n      opacity: 1,\n      transform: \"rotate(0deg)\"\n    },\n    \"[data-arrow-position='bottom'] > &\": {\n      opacity: 1,\n      transform: \"rotate(-180deg)\"\n    }\n  };\n}\nfunction avatarRootStyle(props) {\n  const { $color } = props, { avatar } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return {\n    \"--avatar-bg-color\": `var(--card-avatar-${$color}-bg-color)`,\n    \"--avatar-fg-color\": `var(--card-avatar-${$color}-fg-color)`,\n    backgroundColor: \"var(--avatar-bg-color)\",\n    position: \"relative\",\n    boxSizing: \"border-box\",\n    userSelect: \"none\",\n    boxShadow: \"0 0 0 1px var(--card-bg-color)\",\n    '&[data-status=\"inactive\"]': {\n      opacity: 0.5\n    },\n    \"&>svg\": {\n      \"&:not([hidden])\": {\n        display: \"block\"\n      }\n    },\n    /* &:is(button) */\n    '&[data-as=\"button\"]': {\n      WebkitFontSmoothing: \"inherit\",\n      appearance: \"none\",\n      margin: 0,\n      padding: 0,\n      border: 0,\n      font: \"inherit\",\n      color: \"inherit\",\n      outline: \"none\",\n      \"&:focus\": {\n        boxShadow: focusRingStyle({ focusRing: avatar.focusRing })\n      },\n      \"&:focus:not(:focus-visible)\": {\n        boxShadow: \"none\"\n      }\n    }\n  };\n}\nfunction responsiveAvatarSizeStyle(props) {\n  const { avatar, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$size, (size2) => {\n    const avatarSize = avatar.sizes[size2] || avatar.sizes[0];\n    return {\n      width: rem(avatarSize.size),\n      height: rem(avatarSize.size),\n      borderRadius: rem(avatarSize.size / 2),\n      \"&>svg\": {\n        width: rem(avatarSize.size),\n        height: rem(avatarSize.size),\n        borderRadius: rem(avatarSize.size / 2)\n      }\n    };\n  });\n}\nfunction avatarImageStyle() {\n  return {\n    position: \"relative\"\n  };\n}\nfunction avatarInitialsStyle() {\n  return {\n    width: \"100%\",\n    height: \"100%\",\n    color: \"var(--avatar-fg-color)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n    textAlign: \"center\",\n    borderRadius: \"50%\",\n    \"&:not([hidden])\": {\n      display: \"flex\"\n    }\n  };\n}\nfunction avatarBgStrokeStyle() {\n  return {\n    strokeWidth: \"4px\",\n    stroke: \"var(--card-bg-color)\"\n  };\n}\nfunction avatarStrokeStyle() {\n  return {\n    strokeWidth: \"2px\",\n    stroke: \"var(--avatar-bg-color)\",\n    '[data-status=\"editing\"] &': {\n      strokeDasharray: \"2 4\",\n      strokeLinecap: \"round\"\n    }\n  };\n}\nconst Root$B = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(\n  responsiveAvatarSizeStyle,\n  avatarStyle.root\n), Arrow$1 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(avatarStyle.arrow), BgStroke = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.ellipse(avatarStyle.bgStroke), Stroke = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.ellipse(avatarStyle.stroke), Initials = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(avatarStyle.initials), InitialsLabel = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Label)({\n  color: \"inherit\"\n}), Image = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.svg(avatarStyle.image), Avatar = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    __unstable_hideInnerStroke,\n    as: asProp,\n    color = \"gray\",\n    src,\n    title,\n    initials,\n    onImageLoadError,\n    arrowPosition: arrowPositionProp,\n    animateArrowFrom,\n    status = \"online\",\n    size: sizeProp = 1,\n    ...restProps\n  } = props, { avatar } = useTheme_v2(), as = react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType(asProp) ? asProp : \"div\", size2 = useArrayProp(sizeProp), _sizeRem = (avatar.sizes[size2[0]] || avatar.sizes[0]).size, _radius = _sizeRem / 2, elementId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(), [arrowPosition, setArrowPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\n    animateArrowFrom || arrowPositionProp || \"inside\"\n  ), [imageFailed, setImageFailed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), imageId = `avatar-image-${elementId}`;\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (arrowPosition === arrowPositionProp) return;\n    const raf = requestAnimationFrame(() => setArrowPosition(arrowPositionProp));\n    return () => cancelAnimationFrame(raf);\n  }, [arrowPosition, arrowPositionProp]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    src && setImageFailed(!1);\n  }, [src]);\n  const handleImageError = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    setImageFailed(!0), onImageLoadError && onImageLoadError(new Error(\"Avatar: the image failed to load\"));\n  }, [onImageLoadError]), initialsSize = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => size2.map((s) => s === 1 ? 1 : s === 2 ? 3 : s === 3 ? 5 : 0),\n    [size2]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    Root$B,\n    {\n      as,\n      \"data-as\": typeof as == \"string\" ? as : void 0,\n      \"data-ui\": \"Avatar\",\n      ...restProps,\n      $color: color,\n      $size: size2,\n      \"aria-label\": title,\n      \"data-arrow-position\": arrowPosition,\n      \"data-status\": status,\n      ref,\n      title,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Arrow$1, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\", { width: \"11\", height: \"7\", viewBox: \"0 0 11 7\", fill: \"none\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.67948 1.50115L11 7L0 7L4.32052 1.50115C4.92109 0.736796 6.07891 0.736795 6.67948 1.50115Z\",\n            fill: color\n          }\n        ) }) }),\n        !imageFailed && src && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Image, { viewBox: `0 0 ${_sizeRem} ${_sizeRem}`, fill: \"none\", children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"defs\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pattern\", { id: imageId, patternContentUnits: \"objectBoundingBox\", width: \"1\", height: \"1\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            \"image\",\n            {\n              href: src,\n              width: \"1\",\n              height: \"1\",\n              onError: handleImageError\n            }\n          ) }) }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\", { cx: _radius, cy: _radius, r: _radius, fill: `url(#${imageId})` }),\n          !__unstable_hideInnerStroke && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            BgStroke,\n            {\n              cx: _radius,\n              cy: _radius,\n              rx: _radius,\n              ry: _radius,\n              vectorEffect: \"non-scaling-stroke\"\n            }\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Stroke,\n            {\n              cx: _radius,\n              cy: _radius,\n              rx: _radius,\n              ry: _radius,\n              vectorEffect: \"non-scaling-stroke\"\n            }\n          )\n        ] }),\n        (imageFailed || !src) && initials && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Initials, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InitialsLabel, { forwardedAs: \"span\", size: initialsSize, weight: \"medium\", children: initials }) }) })\n      ]\n    }\n  );\n});\nfunction _responsiveAvatarCounterSizeStyle(props) {\n  const { avatar, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$size, (size2) => {\n    const avatarSize = avatar.sizes[size2];\n    return avatarSize ? {\n      borderRadius: rem(avatarSize.size / 2),\n      minWidth: rem(avatarSize.size),\n      height: rem(avatarSize.size)\n    } : EMPTY_RECORD;\n  });\n}\nfunction _avatarCounterBaseStyle(props) {\n  const { space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    user-select: none;\n    color: inherit;\n    color: var(--card-fg-color);\n    background: var(--card-bg-color);\n    box-shadow:\n      0 0 0 1px var(--card-bg-color),\n      inset 0 0 0 1px var(--card-hairline-hard-color);\n    padding: 0 ${rem(space[2])};\n\n    &:not([hidden]) {\n      display: flex;\n    }\n  `;\n}\nconst Root$A = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(\n  _responsiveAvatarCounterSizeStyle,\n  _avatarCounterBaseStyle\n), AvatarCounter = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { count, size: sizeProp = 1 } = props, size2 = useArrayProp(sizeProp), fontSize2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => size2.map((s) => s === 1 ? 1 : s === 2 ? 3 : s === 3 ? 5 : 0),\n    [size2]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$A, { $size: size2, \"data-ui\": \"AvatarCounter\", ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Label, { as: \"span\", size: fontSize2, weight: \"medium\", children: count }) });\n}), BASE_STYLES = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n  white-space: nowrap;\n\n  & > div {\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  }\n`;\nfunction avatarStackStyle() {\n  return BASE_STYLES;\n}\nfunction responsiveAvatarStackSizeStyle(props) {\n  const { avatar, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$size, (size2) => {\n    const avatarSize = avatar.sizes[size2];\n    return avatarSize ? {\n      \"& > div + div\": {\n        marginLeft: rem(avatarSize.distance)\n      }\n    } : EMPTY_RECORD;\n  });\n}\nconst Root$z = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(responsiveAvatarStackSizeStyle, avatarStackStyle), AvatarStack = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    children: childrenProp,\n    maxLength: maxLengthProp = 4,\n    size: sizeProp = 1,\n    ...restProps\n  } = props, children = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(childrenProp).filter(react__WEBPACK_IMPORTED_MODULE_1__.isValidElement),\n    [childrenProp]\n  ), maxLength = Math.max(maxLengthProp, 0), size2 = useArrayProp(sizeProp), len = children.length, visibleCount = maxLength - 1, extraCount = len - visibleCount, visibleChildren = extraCount > 1 ? children.slice(extraCount, len) : children;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root$z, { \"data-ui\": \"AvatarStack\", ...restProps, ref, $size: size2, children: [\n    len === 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AvatarCounter, { count: len, size: size2 }) }),\n    len !== 0 && extraCount > 1 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AvatarCounter, { count: extraCount, size: size2 }) }),\n    visibleChildren.map((child, childIndex) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(child, { size: size2 }) }, String(childIndex)))\n  ] });\n}), Root$y = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(\n  boxStyle,\n  flexItemStyle,\n  responsiveBoxStyle,\n  responsiveGridItemStyle,\n  responsiveMarginStyle,\n  responsivePaddingStyle\n), Box = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    as: asProp = \"div\",\n    column,\n    columnStart,\n    columnEnd,\n    display = \"block\",\n    flex,\n    height,\n    margin = 0,\n    marginX,\n    marginY,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    overflow,\n    padding = 0,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    row,\n    rowStart,\n    rowEnd,\n    sizing,\n    ...restProps\n  } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$y,\n    {\n      \"data-as\": typeof asProp == \"string\" ? asProp : void 0,\n      \"data-ui\": \"Box\",\n      ...restProps,\n      $column: useArrayProp(column),\n      $columnStart: useArrayProp(columnStart),\n      $columnEnd: useArrayProp(columnEnd),\n      $display: useArrayProp(display),\n      $flex: useArrayProp(flex),\n      $height: useArrayProp(height),\n      $margin: useArrayProp(margin),\n      $marginX: useArrayProp(marginX),\n      $marginY: useArrayProp(marginY),\n      $marginTop: useArrayProp(marginTop),\n      $marginRight: useArrayProp(marginRight),\n      $marginBottom: useArrayProp(marginBottom),\n      $marginLeft: useArrayProp(marginLeft),\n      $overflow: useArrayProp(overflow),\n      $padding: useArrayProp(padding),\n      $paddingX: useArrayProp(paddingX),\n      $paddingY: useArrayProp(paddingY),\n      $paddingTop: useArrayProp(paddingTop),\n      $paddingRight: useArrayProp(paddingRight),\n      $paddingBottom: useArrayProp(paddingBottom),\n      $paddingLeft: useArrayProp(paddingLeft),\n      $row: useArrayProp(row),\n      $rowStart: useArrayProp(rowStart),\n      $rowEnd: useArrayProp(rowEnd),\n      $sizing: useArrayProp(sizing),\n      as: asProp,\n      ref,\n      children: props.children\n    }\n  );\n});\nfunction textBaseStyle(props) {\n  const { $accent, $muted } = props, { font } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    color: var(--card-fg-color);\n\n    ${$accent && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${$muted && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${font.code.family};\n      border-radius: 1px;\n      background-color: var(--card-code-bg-color);\n      color: var(--card-code-fg-color);\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${font.text.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n      color: var(--card-icon-color);\n\n      & path {\n        vector-effect: non-scaling-stroke !important;\n      }\n    }\n  `;\n}\nconst Root$x = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(\n  responsiveTextFont,\n  responsiveTextAlignStyle,\n  textBaseStyle\n), SpanWithTextOverflow$1 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span`\n  display: block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  overflow: clip;\n`, Text = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    accent = !1,\n    align,\n    children: childrenProp,\n    muted = !1,\n    size: size2 = 2,\n    textOverflow,\n    weight,\n    ...restProps\n  } = props;\n  let children = childrenProp;\n  return textOverflow === \"ellipsis\" && (children = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SpanWithTextOverflow$1, { children })), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$x,\n    {\n      \"data-ui\": \"Text\",\n      ...restProps,\n      $accent: accent,\n      $align: useArrayProp(align),\n      $muted: muted,\n      ref,\n      $size: useArrayProp(size2),\n      $weight: weight,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children })\n    }\n  );\n});\nfunction badgeStyle(props) {\n  const { $tone } = props;\n  return {\n    \"--card-bg-color\": `var(--card-badge-${$tone}-bg-color)`,\n    \"--card-fg-color\": `var(--card-badge-${$tone}-fg-color)`,\n    backgroundColor: \"var(--card-bg-color)\",\n    cursor: \"default\",\n    \"&:not([hidden])\": {\n      display: \"inline-block\",\n      verticalAlign: \"top\"\n    }\n  };\n}\nconst Root$w = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(\n  responsiveRadiusStyle,\n  badgeStyle\n), Badge = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    children,\n    fontSize: fontSize2 = 1,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    mode: _deprecated_mode,\n    padding = 1,\n    radius = \"full\",\n    tone = \"default\",\n    ...restProps\n  } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$w,\n    {\n      \"data-ui\": \"Badge\",\n      ...restProps,\n      $tone: tone,\n      $radius: useArrayProp(radius),\n      padding: useArrayProp(padding),\n      ref,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, children })\n    }\n  );\n}), Root$v = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(\n  flexItemStyle,\n  responsiveFlexStyle\n), Flex = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { align, as, direction = \"row\", gap, justify, wrap, ...restProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$v,\n    {\n      \"data-ui\": \"Flex\",\n      ...restProps,\n      $align: useArrayProp(align),\n      $direction: useArrayProp(direction),\n      $gap: useArrayProp(gap),\n      $justify: useArrayProp(justify),\n      $wrap: useArrayProp(wrap),\n      forwardedAs: as,\n      ref\n    }\n  );\n}), rotate$1 = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.keyframes)`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`, Root$u = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Text)`\n  & > span > svg {\n    animation: ${rotate$1} 500ms linear infinite;\n  }\n`, Spinner = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$u, { \"data-ui\": \"Spinner\", ...props, ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_8__.SpinnerIcon, {}) });\n});\nfunction _cardColorStyle(base, color, checkered = !1) {\n  return {\n    // from base\n    \"--card-backdrop-color\": base.backdrop,\n    \"--card-focus-ring-color\": base.focusRing,\n    \"--card-shadow-outline-color\": base.shadow.outline,\n    \"--card-shadow-umbra-color\": base.shadow.umbra,\n    \"--card-shadow-penumbra-color\": base.shadow.penumbra,\n    \"--card-shadow-ambient-color\": base.shadow.ambient,\n    // from state\n    \"--card-accent-fg-color\": color.accent.fg,\n    \"--card-avatar-gray-bg-color\": color.avatar.gray.bg,\n    \"--card-avatar-gray-fg-color\": color.avatar.gray.fg,\n    \"--card-avatar-blue-bg-color\": color.avatar.blue.bg,\n    \"--card-avatar-blue-fg-color\": color.avatar.blue.fg,\n    \"--card-avatar-purple-bg-color\": color.avatar.purple.bg,\n    \"--card-avatar-purple-fg-color\": color.avatar.purple.fg,\n    \"--card-avatar-magenta-bg-color\": color.avatar.magenta.bg,\n    \"--card-avatar-magenta-fg-color\": color.avatar.magenta.fg,\n    \"--card-avatar-red-bg-color\": color.avatar.red.bg,\n    \"--card-avatar-red-fg-color\": color.avatar.red.fg,\n    \"--card-avatar-orange-bg-color\": color.avatar.orange.bg,\n    \"--card-avatar-orange-fg-color\": color.avatar.orange.fg,\n    \"--card-avatar-yellow-bg-color\": color.avatar.yellow.bg,\n    \"--card-avatar-yellow-fg-color\": color.avatar.yellow.fg,\n    \"--card-avatar-green-bg-color\": color.avatar.green.bg,\n    \"--card-avatar-green-fg-color\": color.avatar.green.fg,\n    \"--card-avatar-cyan-bg-color\": color.avatar.cyan.bg,\n    \"--card-avatar-cyan-fg-color\": color.avatar.cyan.fg,\n    \"--card-bg-color\": color.bg,\n    \"--card-bg-image\": checkered ? `repeating-conic-gradient(${color.bg} 0% 25%, ${color.muted.bg} 0% 50%)` : void 0,\n    \"--card-border-color\": color.border,\n    \"--card-badge-default-bg-color\": color.badge.default.bg,\n    \"--card-badge-default-dot-color\": color.badge.default.dot,\n    \"--card-badge-default-fg-color\": color.badge.default.fg,\n    \"--card-badge-default-icon-color\": color.badge.default.icon,\n    \"--card-badge-primary-bg-color\": color.badge.primary.bg,\n    \"--card-badge-primary-dot-color\": color.badge.primary.dot,\n    \"--card-badge-primary-fg-color\": color.badge.primary.fg,\n    \"--card-badge-primary-icon-color\": color.badge.primary.icon,\n    \"--card-badge-positive-bg-color\": color.badge.positive.bg,\n    \"--card-badge-positive-dot-color\": color.badge.positive.dot,\n    \"--card-badge-positive-fg-color\": color.badge.positive.fg,\n    \"--card-badge-positive-icon-color\": color.badge.positive.icon,\n    \"--card-badge-caution-bg-color\": color.badge.caution.bg,\n    \"--card-badge-caution-dot-color\": color.badge.caution.dot,\n    \"--card-badge-caution-fg-color\": color.badge.caution.fg,\n    \"--card-badge-caution-icon-color\": color.badge.caution.icon,\n    \"--card-badge-critical-bg-color\": color.badge.critical.bg,\n    \"--card-badge-critical-dot-color\": color.badge.critical.dot,\n    \"--card-badge-critical-fg-color\": color.badge.critical.fg,\n    \"--card-badge-critical-icon-color\": color.badge.critical.icon,\n    \"--card-code-bg-color\": color.code.bg,\n    \"--card-code-fg-color\": color.code.fg,\n    \"--card-fg-color\": color.fg,\n    \"--card-icon-color\": color.icon,\n    \"--card-kbd-bg-color\": color.kbd.bg,\n    \"--card-kbd-border-color\": color.kbd.border,\n    \"--card-kbd-fg-color\": color.kbd.fg,\n    \"--card-link-fg-color\": color.link.fg,\n    \"--card-muted-bg-color\": color.muted.bg,\n    \"--card-muted-fg-color\": color.muted.fg,\n    \"--card-skeleton-color-from\": color.skeleton.from,\n    \"--card-skeleton-color-to\": color.skeleton.to,\n    // deprecated variables (kept for legacy)\n    \"--card-bg2-color\": color.muted.bg,\n    \"--card-link-color\": color.link.fg,\n    \"--card-hairline-soft-color\": color.border,\n    \"--card-hairline-hard-color\": color.border\n  };\n}\nfunction buttonBaseStyles(props) {\n  const { $width } = props, { style } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    ${style == null ? void 0 : style.button};\n\n    -webkit-font-smoothing: inherit;\n    appearance: none;\n    display: inline-flex;\n    align-items: center;\n    font: inherit;\n    border: 0;\n    outline: none;\n    user-select: none;\n    text-decoration: none;\n    border: 0;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    white-space: nowrap;\n    text-align: left;\n    position: relative;\n    vertical-align: top;\n\n    ${$width === \"fill\" && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    `}\n\n    & > span {\n      display: block;\n      flex: 1;\n      min-width: 0;\n      border-radius: inherit;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n      padding: 0;\n    }\n  `;\n}\nfunction combineBoxShadow(...boxShadows) {\n  return boxShadows.filter(Boolean).join(\",\");\n}\nfunction buttonColorStyles(props) {\n  var _a;\n  const { $mode } = props, { button, color: baseColor, style } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), shadow = props.$mode === \"ghost\", mode = baseColor.button[$mode] || baseColor.button.default, color = mode[props.$tone] || mode.default, border2 = {\n    width: button.border.width,\n    color: \"var(--card-border-color)\"\n  }, defaultBoxShadow = void 0;\n  return [\n    _cardColorStyle(baseColor, color.enabled),\n    {\n      backgroundColor: \"var(--card-bg-color)\",\n      color: \"var(--card-fg-color)\",\n      boxShadow: focusRingBorderStyle(border2),\n      '&:disabled, &[data-disabled=\"true\"]': _cardColorStyle(baseColor, color.disabled),\n      \"&:not([data-disabled='true'])\": {\n        boxShadow: combineBoxShadow(\n          focusRingBorderStyle(border2),\n          shadow ? defaultBoxShadow : void 0\n        ),\n        \"&:focus\": {\n          boxShadow: focusRingStyle({\n            base: baseColor,\n            border: { width: 2, color: baseColor.bg },\n            focusRing: button.focusRing\n          })\n        },\n        \"&:focus:not(:focus-visible)\": {\n          boxShadow: combineBoxShadow(\n            focusRingBorderStyle(border2),\n            shadow ? defaultBoxShadow : void 0\n          )\n        },\n        \"@media (hover: hover)\": {\n          \"&:hover\": _cardColorStyle(baseColor, color.hovered),\n          \"&:active\": _cardColorStyle(baseColor, color.pressed),\n          \"&[data-hovered]\": _cardColorStyle(baseColor, color.hovered)\n        },\n        \"&[data-selected]\": _cardColorStyle(baseColor, color.pressed)\n      }\n    },\n    (_a = style == null ? void 0 : style.button) == null ? void 0 : _a.root\n  ].filter(Boolean);\n}\nconst Root$t = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.button(responsiveRadiusStyle, buttonBaseStyles, buttonColorStyles), LoadingBox = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--card-bg-color);\n  border-radius: inherit;\n  z-index: 1;\n  box-shadow: inherit;\n`, Button = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    children,\n    disabled,\n    fontSize: fontSize2 = 1,\n    icon: IconComponent,\n    iconRight: IconRightComponent,\n    justify: justifyProp = \"center\",\n    loading,\n    mode = \"default\",\n    padding: paddingProp = 3,\n    paddingX: paddingXProp,\n    paddingY: paddingYProp,\n    paddingTop: paddingTopProp,\n    paddingBottom: paddingBottomProp,\n    paddingLeft: paddingLeftProp,\n    paddingRight: paddingRightProp,\n    radius: radiusProp = 2,\n    selected,\n    space: spaceProp = 3,\n    text,\n    textAlign,\n    tone = \"default\",\n    type = \"button\",\n    muted = !1,\n    width,\n    ...restProps\n  } = props, { button } = useTheme_v2(), justify = useArrayProp(justifyProp), padding = useArrayProp(paddingProp), paddingX = useArrayProp(paddingXProp), paddingY = useArrayProp(paddingYProp), paddingTop = useArrayProp(paddingTopProp), paddingBottom = useArrayProp(paddingBottomProp), paddingLeft = useArrayProp(paddingLeftProp), paddingRight = useArrayProp(paddingRightProp), radius = useArrayProp(radiusProp), space = useArrayProp(spaceProp), boxProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      // flex: 1,\n      padding,\n      paddingX,\n      paddingY,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight\n    }),\n    [padding, paddingX, paddingY, paddingTop, paddingBottom, paddingLeft, paddingRight]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    Root$t,\n    {\n      \"data-ui\": \"Button\",\n      ...restProps,\n      $mode: mode,\n      $radius: radius,\n      $tone: tone,\n      \"data-disabled\": !!(loading || disabled),\n      \"data-selected\": selected ? \"\" : void 0,\n      disabled: !!(loading || disabled),\n      ref,\n      type,\n      $width: width,\n      children: [\n        !!loading && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LoadingBox, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Spinner, {}) }),\n        (IconComponent || text || IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"span\", ...boxProps, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { as: \"span\", justify, gap: space, children: [\n          IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(IconComponent) && IconComponent,\n            (0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(IconComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {})\n          ] }),\n          text && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Text,\n            {\n              muted,\n              align: textAlign,\n              size: fontSize2,\n              textOverflow: \"ellipsis\",\n              weight: button.textWeight,\n              children: text\n            }\n          ),\n          IconRightComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(IconRightComponent) && IconRightComponent,\n            (0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconRightComponent, {})\n          ] })\n        ] }) }),\n        children && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"span\", ...boxProps, children })\n      ]\n    }\n  );\n});\nfunction cardStyle(props) {\n  return [cardBaseStyle(props), cardColorStyle(props)];\n}\nfunction cardBaseStyle(props) {\n  const { $checkered } = props, { space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    ${$checkered && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      background-size: ${space[3]}px ${space[3]}px;\n      background-position: 50% 50%;\n      background-image: var(--card-bg-image);\n    `}\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      outline: none;\n      text-decoration: none;\n    }\n\n    /* &:is(pre) */\n    &[data-as='pre'] {\n      font: inherit;\n    }\n  `;\n}\nfunction cardColorStyle(props) {\n  var _a;\n  const { $checkered, $focusRing, $muted } = props, { card, color, style } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), border2 = { width: card.border.width, color: \"var(--card-border-color)\" };\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    color-scheme: ${color._dark ? \"dark\" : \"light\"};\n\n    ${_cardColorStyle(color, color, $checkered)}\n\n    background-color: ${$muted ? \"var(--card-muted-bg-color)\" : \"var(--card-bg-color)\"};\n    color: var(--card-fg-color);\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      --card-focus-ring-box-shadow: none;\n\n      cursor: default;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &:disabled {\n        ${_cardColorStyle(color, color.selectable.default.disabled, $checkered)}\n      }\n\n      &:not(:disabled) {\n        &[data-pressed] {\n          ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}\n        }\n\n        &[data-selected] {\n          ${_cardColorStyle(color, color.selectable.default.selected, $checkered)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${_cardColorStyle(color, color.selectable.default.hovered, $checkered)}\n            }\n\n            &:active {\n              ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${$focusRing ? focusRingStyle({ base: color, border: border2, focusRing: card.focusRing }) : void 0};\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      cursor: pointer;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &[data-disabled] {\n        ${_cardColorStyle(color, color.selectable.default.disabled, $checkered)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}\n        }\n\n        &[data-selected] {\n          ${_cardColorStyle(color, color.selectable.default.selected, $checkered)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${_cardColorStyle(color, color.selectable.default.hovered, $checkered)}\n            }\n\n            &:active {\n              ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${$focusRing ? focusRingStyle({ base: color, border: border2, focusRing: card.focusRing }) : void 0};\n        }\n      }\n    }\n\n    ${(_a = style == null ? void 0 : style.card) == null ? void 0 : _a.root}\n  `;\n}\nconst Root$s = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(responsiveBorderStyle, responsiveRadiusStyle, responsiveShadowStyle, cardStyle), Card = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    __unstable_checkered: checkered = !1,\n    __unstable_focusRing: focusRing = !1,\n    as: asProp,\n    border: border2,\n    borderTop: borderTop2,\n    borderRight: borderRight2,\n    borderBottom: borderBottom2,\n    borderLeft: borderLeft2,\n    muted,\n    pressed,\n    radius = 0,\n    scheme,\n    selected,\n    shadow,\n    tone: toneProp = \"default\",\n    ...restProps\n  } = props, as = (0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(asProp) ? asProp : \"div\", rootTheme = useRootTheme(), tone = toneProp === \"inherit\" ? rootTheme.tone : toneProp;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeColorProvider, { scheme, tone, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$s,\n    {\n      \"data-as\": typeof as == \"string\" ? as : void 0,\n      \"data-scheme\": rootTheme.scheme,\n      \"data-ui\": \"Card\",\n      \"data-tone\": tone,\n      ...restProps,\n      $border: useArrayProp(border2),\n      $borderTop: useArrayProp(borderTop2),\n      $borderRight: useArrayProp(borderRight2),\n      $borderBottom: useArrayProp(borderBottom2),\n      $borderLeft: useArrayProp(borderLeft2),\n      $checkered: checkered,\n      $focusRing: focusRing,\n      $muted: muted,\n      $radius: useArrayProp(radius),\n      $shadow: useArrayProp(shadow),\n      $tone: tone,\n      \"data-checkered\": checkered ? \"\" : void 0,\n      \"data-pressed\": pressed ? \"\" : void 0,\n      \"data-selected\": selected ? \"\" : void 0,\n      forwardedAs: as,\n      ref,\n      selected\n    }\n  ) });\n});\nfunction checkboxBaseStyles() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    position: relative;\n    display: inline-block;\n  `;\n}\nfunction inputElementStyles(props) {\n  const { color, input, radius } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), { focusRing } = input.checkbox;\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n\n    & + span {\n      position: relative;\n      display: block;\n      height: ${rem(input.checkbox.size)};\n      width: ${rem(input.checkbox.size)};\n      box-sizing: border-box;\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n      border-radius: ${rem(radius[2])};\n      line-height: 1;\n      background-color: ${color.input.default.enabled.bg};\n\n      & > svg {\n        display: block;\n        position: absolute;\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n\n        & > path {\n          vector-effect: non-scaling-stroke;\n          stroke-width: 1.5px !important;\n        }\n      }\n    }\n\n    &:checked + span {\n      background: ${color.input.default.enabled.fg};\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.fg,\n    width: input.border.width\n  })};\n      color: ${color.input.default.enabled.bg};\n    }\n\n    /* focus */\n    &:not(:disabled):focus:focus-visible + span {\n      box-shadow: ${focusRingStyle({ focusRing })};\n    }\n\n    /* focus when checked - uses a different offset */\n    &:not(:disabled):focus:focus-visible&:checked + span {\n      box-shadow: ${focusRingStyle({ focusRing: { width: 1, offset: 1 } })};\n    }\n\n    &[data-error] + span {\n      background-color: ${color.input.invalid.enabled.border};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.input.invalid.enabled.muted.bg\n  })};\n      color: ${color.input.default.disabled.fg};\n    }\n    &[data-error]&:checked + span {\n      background-color: ${color.input.invalid.enabled.muted.bg};\n      color: ${color.input.default.enabled.bg};\n    }\n    &[data-error]&:checked&:not(:disabled):focus:focus-visible + span {\n      box-shadow: ${focusRingStyle({\n    border: { width: input.border.width, color: color.input.invalid.readOnly.muted.bg },\n    focusRing: { width: 1, offset: 1 }\n  })};\n    }\n\n    &:disabled + span {\n      background-color: ${color.input.default.disabled.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.input.default.disabled.border\n  })};\n      color: ${color.input.default.disabled.fg};\n    }\n    &:disabled&:checked + span {\n      background-color: ${color.input.default.disabled.muted.bg};\n    }\n\n    &[data-read-only] + span {\n      background-color: ${color.input.default.readOnly.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.input.default.readOnly.border\n  })};\n      color: ${color.input.default.readOnly.fg};\n    }\n\n    &[data-read-only]&:checked + span {\n      background-color: ${color.input.default.readOnly.muted.bg};\n    }\n\n    &:checked + span > svg:first-child {\n      opacity: 1;\n    }\n    &:indeterminate + span > svg:last-child {\n      opacity: 1;\n    }\n  `;\n}\nconst Root$r = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(checkboxBaseStyles), Input$5 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.input(inputElementStyles), Checkbox = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    checked,\n    className,\n    disabled,\n    indeterminate,\n    customValidity,\n    readOnly,\n    style,\n    ...restProps\n  } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => ref.current\n  ), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    ref.current && (ref.current.indeterminate = indeterminate || !1);\n  }, [indeterminate]), useCustomValidity(ref, customValidity), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root$r, { className, \"data-ui\": \"Checkbox\", style, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Input$5,\n      {\n        \"data-read-only\": !disabled && readOnly ? \"\" : void 0,\n        \"data-error\": customValidity ? \"\" : void 0,\n        ...restProps,\n        checked,\n        disabled: disabled || readOnly,\n        type: \"checkbox\",\n        readOnly,\n        ref\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_8__.CheckmarkIcon, {}),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_8__.RemoveIcon, {})\n    ] })\n  ] });\n});\nfunction codeSyntaxHighlightingStyle({ theme }) {\n  const {\n    color: { syntax: color }\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(theme);\n  return {\n    \"&.atrule\": { color: color.atrule },\n    \"&.attr-name\": { color: color.attrName },\n    \"&.attr-value\": { color: color.attrValue },\n    \"&.attribute\": { color: color.attribute },\n    \"&.boolean\": { color: color.boolean },\n    \"&.builtin\": { color: color.builtin },\n    \"&.cdata\": { color: color.cdata },\n    \"&.char\": { color: color.char },\n    \"&.class\": { color: color.class },\n    \"&.class-name\": { color: color.className },\n    \"&.comment\": { color: color.comment },\n    \"&.constant\": { color: color.constant },\n    \"&.deleted\": { color: color.deleted },\n    \"&.doctype\": { color: color.doctype },\n    \"&.entity\": { color: color.entity },\n    \"&.function\": { color: color.function },\n    \"&.hexcode\": { color: color.hexcode },\n    \"&.id\": { color: color.id },\n    \"&.important\": { color: color.important },\n    \"&.inserted\": { color: color.inserted },\n    \"&.keyword\": { color: color.keyword },\n    \"&.number\": { color: color.number },\n    \"&.operator\": { color: color.operator },\n    \"&.prolog\": { color: color.prolog },\n    \"&.property\": { color: color.property },\n    \"&.pseudo-class\": { color: color.pseudoClass },\n    \"&.pseudo-element\": { color: color.pseudoElement },\n    \"&.punctuation\": { color: color.punctuation },\n    \"&.regex\": { color: color.regex },\n    \"&.selector\": { color: color.selector },\n    \"&.string\": { color: color.string },\n    \"&.symbol\": { color: color.symbol },\n    \"&.tag\": { color: color.tag },\n    \"&.unit\": { color: color.unit },\n    \"&.url\": { color: color.url },\n    \"&.variable\": { color: color.variable }\n  };\n}\nfunction codeBaseStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    color: var(--card-code-fg-color);\n\n    & code {\n      font-family: inherit;\n\n      &.refractor .token {\n        ${codeSyntaxHighlightingStyle}\n      }\n    }\n\n    & a {\n      color: inherit;\n      text-decoration: underline;\n      border-radius: 1px;\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `;\n}\nconst Root$q = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.pre(codeBaseStyle, responsiveCodeFontStyle), Code = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { children, language: languageProp, size: size2 = 2, weight, ...restProps } = props, language = typeof languageProp == \"string\" ? languageProp : void 0, registered = language ? react_refractor__WEBPACK_IMPORTED_MODULE_3__.hasLanguage(language) : !1;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root$q, { \"data-ui\": \"Code\", ...restProps, $size: useArrayProp(size2), $weight: weight, ref, children: [\n    !(language && registered) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", { children }),\n    language && registered && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_refractor__WEBPACK_IMPORTED_MODULE_3__, { inline: !0, language, value: String(children) })\n  ] });\n}), BASE_STYLE$1 = {\n  width: \"100%\",\n  margin: \"0 auto\"\n};\nfunction containerBaseStyle() {\n  return BASE_STYLE$1;\n}\nfunction responsiveContainerWidthStyle(props) {\n  const { container, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$width, (val) => ({\n    maxWidth: val === \"auto\" ? \"none\" : rem(container[val])\n  }));\n}\nconst Root$p = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(\n  containerBaseStyle,\n  responsiveContainerWidthStyle\n), Container = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { as, width = 2, ...restProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$p,\n    {\n      \"data-ui\": \"Container\",\n      ...restProps,\n      $width: useArrayProp(width),\n      forwardedAs: as,\n      ref\n    }\n  );\n}), Root$o = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(responsiveGridStyle), Grid = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { as, autoRows, autoCols, autoFlow, columns, gap, gapX, gapY, rows, children, ...restProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$o,\n    {\n      \"data-as\": typeof as == \"string\" ? as : void 0,\n      \"data-ui\": \"Grid\",\n      ...restProps,\n      $autoRows: useArrayProp(autoRows),\n      $autoCols: useArrayProp(autoCols),\n      $autoFlow: useArrayProp(autoFlow),\n      $columns: useArrayProp(columns),\n      $gap: useArrayProp(gap),\n      $gapX: useArrayProp(gapX),\n      $gapY: useArrayProp(gapY),\n      $rows: useArrayProp(rows),\n      forwardedAs: as,\n      ref,\n      children\n    }\n  );\n});\nfunction headingBaseStyle(props) {\n  const { $accent, $muted } = props, { font } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    ${$accent && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${$muted && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${font.code.family};\n      border-radius: 1px;\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${font.heading.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `;\n}\nconst Root$n = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(headingBaseStyle, responsiveTextAlignStyle, responsiveHeadingFont), SpanWithTextOverflow = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span`\n  display: block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  overflow: clip;\n`, Heading = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const {\n    accent = !1,\n    align,\n    children: childrenProp,\n    muted = !1,\n    size: size2 = 2,\n    textOverflow,\n    weight,\n    ...restProps\n  } = props;\n  let children = childrenProp;\n  return textOverflow === \"ellipsis\" && (children = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SpanWithTextOverflow, { children })), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$n,\n    {\n      \"data-ui\": \"Heading\",\n      ...restProps,\n      $accent: accent,\n      $align: useArrayProp(align),\n      $muted: muted,\n      $size: useArrayProp(size2),\n      $weight: weight,\n      ref,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children })\n    }\n  );\n});\nfunction inlineBaseStyle() {\n  return {\n    lineHeight: 0,\n    \"&&:not([hidden])\": {\n      display: \"block\"\n    },\n    \"& > div\": {\n      display: \"inline-block\",\n      verticalAlign: \"middle\"\n    }\n  };\n}\nfunction inlineSpaceStyle(props) {\n  const { media, space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$space, (spaceIndex) => {\n    const _space = rem(spaceIndex === 0.5 ? space[1] / 2 : space[spaceIndex]);\n    return {\n      margin: `-${_space} 0 0 -${_space}`,\n      \"& > div\": { padding: `${_space} 0 0 ${_space}` }\n    };\n  });\n}\nconst Root$m = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(inlineBaseStyle, inlineSpaceStyle), Inline = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { as, children: childrenProp, space, ...restProps } = props, children = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => react__WEBPACK_IMPORTED_MODULE_1__.Children.map(childrenProp, (child) => child && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: child })),\n    [childrenProp]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$m,\n    {\n      \"data-ui\": \"Inline\",\n      ...restProps,\n      $space: useArrayProp(space),\n      forwardedAs: as,\n      ref,\n      children\n    }\n  );\n});\nfunction kbdStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    --card-bg-color: var(--card-kbd-bg-color);\n    --card-border-color: var(--card-kbd-border-color);\n    --card-fg-color: var(--card-kbd-fg-color);\n\n    box-shadow: inset 0 0 0 1px var(--card-border-color);\n    background: var(--card-bg-color);\n    font: inherit;\n\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\nconst Root$l = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.kbd(responsiveRadiusStyle, kbdStyle), KBD = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { children, fontSize: fontSize2 = 0, padding = 1, radius = 2, ...restProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$l, { \"data-ui\": \"KBD\", ...restProps, $radius: useArrayProp(radius), ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"span\", padding, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { as: \"span\", size: fontSize2, weight: \"semibold\", children }) }) });\n}), origin = {\n  name: \"@sanity/ui/origin\",\n  fn({ middlewareData, placement, rects }) {\n    var _a, _b;\n    const [side] = placement.split(\"-\"), floatingWidth = rects.floating.width, floatingHeight = rects.floating.height, shiftX = ((_a = middlewareData.shift) == null ? void 0 : _a.x) || 0, shiftY = ((_b = middlewareData.shift) == null ? void 0 : _b.y) || 0;\n    if (floatingWidth <= 0 || floatingHeight <= 0)\n      return {};\n    const isVerticalPlacement = [\"bottom\", \"top\"].includes(side), { originX, originY } = isVerticalPlacement ? {\n      originX: clamp(0.5 - shiftX / floatingWidth, 0, 1),\n      originY: side === \"bottom\" ? 0 : 1\n    } : {\n      originX: side === \"left\" ? 1 : 0,\n      originY: clamp(0.5 - shiftY / floatingHeight, 0, 1)\n    };\n    return {\n      data: { originX, originY }\n    };\n  }\n};\nfunction clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\nfunction moveTowardsLength(movingPoint, targetPoint, amount) {\n  const width = targetPoint.x - movingPoint.x, height = targetPoint.y - movingPoint.y, distance = Math.sqrt(width * width + height * height);\n  return moveTowardsFractional(movingPoint, targetPoint, Math.min(1, amount / distance));\n}\nfunction moveTowardsFractional(movingPoint, targetPoint, fraction) {\n  return {\n    x: movingPoint.x + (targetPoint.x - movingPoint.x) * fraction,\n    y: movingPoint.y + (targetPoint.y - movingPoint.y) * fraction\n  };\n}\nfunction getRoundedCommands(points) {\n  const len = points.length, cmds = [];\n  for (let i = 0; i < len; i += 1) {\n    const point = points[i], prevPoint = points[i - 1], nextPoint = points[i + 1];\n    if (prevPoint && point.radius) {\n      const curveStart = moveTowardsLength(point, prevPoint, point.radius), curveEnd = moveTowardsLength(point, nextPoint, point.radius), startControl = moveTowardsFractional(curveStart, point, 0.5), endControl = moveTowardsFractional(point, curveEnd, 0.5);\n      cmds.push({\n        type: \"point\",\n        ...curveStart\n      }), cmds.push({\n        type: \"curve\",\n        curveEnd,\n        startControl,\n        endControl\n      });\n    } else\n      cmds.push({\n        type: \"point\",\n        ...point\n      });\n  }\n  return cmds;\n}\nfunction compileCommands(cmds) {\n  return cmds.map((n, idx) => n.type === \"point\" ? `${idx === 0 ? \"M\" : \"L\"} ${n.x} ${n.y}` : n.type === \"curve\" ? `C ${n.startControl.x} ${n.startControl.y} ${n.endControl.x} ${n.endControl.y} ${n.curveEnd.x} ${n.curveEnd.y}` : \"\").join(\" \");\n}\nconst Root$k = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(\n  ({ $w: w }) => (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    position: absolute;\n    width: ${w}px;\n    height: ${w}px;\n\n    :empty + & {\n      display: none;\n    }\n\n    & > svg {\n      display: block;\n      line-height: 0;\n      transform-origin: ${w / 2}px ${w / 2}px;\n    }\n\n    [data-placement^='top'] > & {\n      bottom: -${w}px;\n\n      & > svg {\n        transform: rotate(0);\n      }\n    }\n\n    [data-placement^='right'] > & {\n      left: -${w}px;\n\n      & > svg {\n        transform: rotate(90deg);\n      }\n    }\n\n    [data-placement^='left'] > & {\n      right: -${w}px;\n\n      & > svg {\n        transform: rotate(-90deg);\n      }\n    }\n\n    [data-placement^='bottom'] > & {\n      top: -${w}px;\n\n      & > svg {\n        transform: rotate(180deg);\n      }\n    }\n  `\n), StrokePath = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.path`\n  stroke: var(--card-shadow-outline-color);\n`, ShapePath = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.path`\n  fill: var(--card-bg-color);\n`, Arrow = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { width: w, height: h, radius = 0, ...restProps } = props, { card } = useTheme_v2(), strokeWidth = card.shadow.outline, center = w / 2, points = [\n    {\n      x: 0,\n      y: 0\n    },\n    {\n      x: radius,\n      y: 0,\n      radius\n    },\n    {\n      x: center,\n      y: h - 1,\n      radius\n    },\n    {\n      x: w - radius,\n      y: 0,\n      radius\n    },\n    {\n      x: w,\n      y: 0\n    }\n  ], cmds = getRoundedCommands(points), path = compileCommands(cmds), strokePath = `${path}`, fillPath = `${path} M ${w} -1 M 0 -1 Z`;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$k, { ...restProps, $w: w, ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\", { width: w, height: w, viewBox: `0 0 ${w} ${w}`, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"mask\", { id: \"stroke-mask\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\", { x: 0, y: strokeWidth, width: w, height: w, fill: \"white\" }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StrokePath, { d: strokePath, mask: \"url(#stroke-mask)\", strokeWidth: strokeWidth * 2 }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ShapePath, { d: fillPath })\n  ] }) });\n}), key$7 = Symbol.for(\"@sanity/ui/context/boundaryElement\"), BoundaryElementContext = createGlobalScopedContext(\n  key$7,\n  null\n);\nfunction BoundaryElementProvider(props) {\n  const { children, element } = props, value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({ version: 0, element }), [element]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BoundaryElementContext.Provider, { value, children });\n}\nfunction isRecord(value) {\n  return !!(value && typeof value == \"object\" && !Array.isArray(value));\n}\nconst DEFAULT_VALUE = {\n  version: 0,\n  element: null\n};\nfunction useBoundaryElement() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(BoundaryElementContext);\n  if (value && (!isRecord(value) || value.version !== 0))\n    throw new Error(\"useBoundaryElement(): the context value is not compatible\");\n  return value || DEFAULT_VALUE;\n}\nfunction ConditionalWrapper({\n  children,\n  condition,\n  wrapper\n}) {\n  return condition ? wrapper(children) : children;\n}\nfunction findMaxBreakpoints(media, width) {\n  const ret = [];\n  for (let i = 0; i < media.length; i += 1)\n    media[i] > width && ret.push(i);\n  return ret;\n}\nfunction findMinBreakpoints(media, width) {\n  const ret = [];\n  for (let i = 0; i < media.length; i += 1)\n    media[i] <= width && ret.push(i);\n  return ret;\n}\nconst ElementQuery = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const theme = useTheme_v2(), { children, media = theme.media, ...restProps } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), [element, setElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), elementSize = useElementSize(element), width = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    var _a;\n    return (_a = elementSize == null ? void 0 : elementSize.border.width) != null ? _a : window.innerWidth;\n  }, [elementSize]), max = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => findMaxBreakpoints(media, width), [media, width]), min = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => findMinBreakpoints(media, width), [media, width]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(forwardedRef, () => ref.current);\n  const setRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((el) => {\n    ref.current = el, setElement(el);\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"div\",\n    {\n      \"data-ui\": \"ElementQuery\",\n      ...restProps,\n      \"data-eq-max\": max.length ? max.join(\" \") : void 0,\n      \"data-eq-min\": min.length ? min.join(\" \") : void 0,\n      ref: setRef,\n      children\n    }\n  );\n});\nvar __defProp = Object.defineProperty, __defNormalProp = (obj, key2, value) => key2 in obj ? __defProp(obj, key2, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key2] = value, __publicField = (obj, key2, value) => __defNormalProp(obj, key2 + \"\", value);\nclass ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  constructor() {\n    super(...arguments), __publicField(this, \"state\", { error: null });\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, info) {\n    this.props.onCatch({ error, info });\n  }\n  render() {\n    const { error } = this.state;\n    if (error) {\n      const message = typeof (error == null ? void 0 : error.message) == \"string\" ? error.message : \"Error\";\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Code, { children: message });\n    }\n    return this.props.children;\n  }\n}\nfunction getLayerContext(contextValue) {\n  if (!isRecord(contextValue) || contextValue.version !== 0)\n    throw new Error(\"the context value is not compatible\");\n  if (!contextValue)\n    throw new Error(\"components using `useLayer()` should be wrapped in a <LayerProvider>.\");\n  if (contextValue.version === 0)\n    return contextValue;\n  throw new Error(\"could not get layer context\");\n}\nconst key$6 = Symbol.for(\"@sanity/ui/context/layer\"), LayerContext = createGlobalScopedContext(key$6, null);\nfunction useLayer() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LayerContext);\n  if (!value)\n    throw new Error(\"useLayer(): missing context value\");\n  try {\n    return getLayerContext(value);\n  } catch (err) {\n    throw err instanceof Error ? new Error(`useLayer(): ${err.message}`) : new Error(`useLayer(): ${err}`);\n  }\n}\nfunction _raf(fn) {\n  const frameId = requestAnimationFrame(fn);\n  return () => {\n    cancelAnimationFrame(frameId);\n  };\n}\nfunction _raf2(fn) {\n  let innerDispose = null;\n  const outerDispose = _raf(() => {\n    innerDispose = _raf(fn);\n  });\n  return () => {\n    innerDispose && innerDispose(), outerDispose();\n  };\n}\nfunction _isEnterToClickElement(element) {\n  return isHTMLAnchorElement(element) || isHTMLButtonElement(element);\n}\nfunction isHTMLElement(node) {\n  return node instanceof Node && node.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLAnchorElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"A\";\n}\nfunction isHTMLInputElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"INPUT\";\n}\nfunction isHTMLButtonElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"BUTTON\";\n}\nfunction isHTMLSelectElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"SELECT\";\n}\nfunction isHTMLTextAreaElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"TEXTAREA\";\n}\nfunction containsOrEqualsElement(element, node) {\n  return element.contains(node) || element === node;\n}\nfunction _hasFocus(element) {\n  return !!document.activeElement && element.contains(document.activeElement);\n}\nfunction isFocusable(element) {\n  return element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute(\"tabIndex\") !== null ? !0 : isHTMLAnchorElement(element) ? !!element.href && element.rel !== \"ignore\" : isHTMLInputElement(element) ? element.type !== \"hidden\" && element.type !== \"file\" && !element.disabled : isHTMLButtonElement(element) || isHTMLSelectElement(element) || isHTMLTextAreaElement(element) ? !element.disabled : !1;\n}\nfunction attemptFocus(element) {\n  if (!isFocusable(element))\n    return !1;\n  try {\n    element.focus();\n  } catch {\n  }\n  return document.activeElement === element;\n}\nfunction focusFirstDescendant(element) {\n  for (let i = 0; i < element.childNodes.length; i++) {\n    const child = element.childNodes[i];\n    if (isHTMLElement(child) && (attemptFocus(child) || focusFirstDescendant(child)))\n      return !0;\n  }\n  return !1;\n}\nfunction focusLastDescendant(element) {\n  for (let i = element.childNodes.length - 1; i >= 0; i--) {\n    const child = element.childNodes[i];\n    if (isHTMLElement(child) && (attemptFocus(child) || focusLastDescendant(child)))\n      return !0;\n  }\n  return !1;\n}\nfunction _isScrollable(el) {\n  if (!(el instanceof Element)) return !1;\n  const style = window.getComputedStyle(el);\n  return style.overflowX.includes(\"auto\") || style.overflowX.includes(\"scroll\") || style.overflowY.includes(\"auto\") || style.overflowY.includes(\"scroll\");\n}\nfunction LayerProvider(props) {\n  var _a;\n  const { children, zOffset: zOffsetProp = 0 } = props, parentContextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LayerContext), parent = parentContextValue && getLayerContext(parentContextValue), parentRegisterChild = parent == null ? void 0 : parent.registerChild, level = ((_a = parent == null ? void 0 : parent.level) != null ? _a : 0) + 1, zOffset = useArrayProp(zOffsetProp), maxMediaIndex = zOffset.length - 1, mediaIndex = Math.min(useMediaIndex(), maxMediaIndex), zIndex = parent ? parent.zIndex + zOffset[mediaIndex] : zOffset[mediaIndex], [, setChildLayers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}), [size2, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), isTopLayer = size2 === 0, registerChild = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (childLevel) => {\n      const parentDispose = parentRegisterChild == null ? void 0 : parentRegisterChild(childLevel);\n      return childLevel !== void 0 ? setChildLayers((state) => {\n        var _a2;\n        const prevLen = (_a2 = state[childLevel]) != null ? _a2 : 0, nextState = { ...state, [childLevel]: prevLen + 1 };\n        return setSize(Object.keys(nextState).length), nextState;\n      }) : setSize((v) => v + 1), () => {\n        childLevel !== void 0 ? setChildLayers((state) => {\n          const nextState = { ...state };\n          return nextState[childLevel] === 1 ? (delete nextState[childLevel], setSize(Object.keys(nextState).length)) : nextState[childLevel] -= 1, nextState;\n        }) : setSize((v) => v - 1), parentDispose == null || parentDispose();\n      };\n    },\n    [parentRegisterChild]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => parentRegisterChild == null ? void 0 : parentRegisterChild(level), [level, parentRegisterChild]);\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      version: 0,\n      isTopLayer,\n      level,\n      registerChild,\n      size: size2,\n      zIndex\n    }),\n    [isTopLayer, level, registerChild, size2, zIndex]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayerContext.Provider, { value, children });\n}\nconst Root$j = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div({ position: \"relative\" }), LayerChildren = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const { children, onActivate, onFocus, style = EMPTY_RECORD, ...restProps } = props, { zIndex, isTopLayer } = useLayer(), lastFocusedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), isTopLayerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(isTopLayer);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(forwardedRef, () => ref.current), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    isTopLayerRef.current !== isTopLayer && isTopLayer && (onActivate == null || onActivate({ activeElement: lastFocusedRef.current })), isTopLayerRef.current = isTopLayer;\n  }, [isTopLayer, onActivate]);\n  const handleFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      onFocus == null || onFocus(event);\n      const rootElement = ref.current, target = document.activeElement;\n      !isTopLayer || !rootElement || !target || isHTMLElement(target) && containsOrEqualsElement(rootElement, target) && (lastFocusedRef.current = target);\n    },\n    [isTopLayer, onFocus]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$j, { ...restProps, \"data-ui\": \"Layer\", onFocus: handleFocus, ref, style: { ...style, zIndex }, children });\n}), Layer = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { children, zOffset = 1, ...restProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayerProvider, { zOffset, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayerChildren, { ...restProps, ref, children }) });\n}), key$5 = Symbol.for(\"@sanity/ui/context/portal\"), elementKey = Symbol.for(\"@sanity/ui/context/portal/element\");\nglobalScope[elementKey] = null;\nconst defaultContextValue = {\n  version: 0,\n  boundaryElement: null,\n  get element() {\n    return typeof document > \"u\" ? null : (globalScope[elementKey] || (globalScope[elementKey] = document.createElement(\"div\"), globalScope[elementKey].setAttribute(\"data-portal\", \"\"), document.body.appendChild(globalScope[elementKey])), globalScope[elementKey]);\n  }\n}, PortalContext = createGlobalScopedContext(key$5, defaultContextValue);\nfunction usePortal() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(PortalContext);\n  if (!value)\n    throw new Error(\"usePortal(): missing context value\");\n  if (!isRecord(value) || value.version !== 0)\n    throw new Error(\"usePortal(): the context value is not compatible\");\n  return value;\n}\nfunction Portal(props) {\n  var _a;\n  const { children, __unstable_name: name } = props, portal = usePortal(), portalElement = (name ? portal.elements && portal.elements[name] : portal.element) || ((_a = portal.elements) == null ? void 0 : _a.default);\n  return portalElement ? (0,react_dom__WEBPACK_IMPORTED_MODULE_4__.createPortal)(children, portalElement) : null;\n}\nfunction useUnique(value) {\n  const valueRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(value);\n  return _isEqual(valueRef.current, value) || (valueRef.current = value), valueRef.current;\n}\nfunction _isEqual(objA, objB) {\n  if (!objA || !objB)\n    return objA === objB;\n  const keysA = Object.keys(objA), keysB = Object.keys(objB);\n  return keysA.length !== keysB.length ? !1 : keysA.every((key2) => objA[key2] === objB[key2]);\n}\nfunction PortalProvider(props) {\n  const { boundaryElement, children, element, __unstable_elements: elementsProp } = props, elements = useUnique(elementsProp), fallbackElement = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(\n    emptySubscribe$1,\n    () => document.body,\n    () => null\n  ), value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({\n    version: 0,\n    boundaryElement: boundaryElement || null,\n    element: element || fallbackElement,\n    elements\n  }), [boundaryElement, element, elements, fallbackElement]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PortalContext.Provider, { value, children });\n}\nconst emptySubscribe$1 = () => () => {\n}, Root$i = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div`\n  display: block;\n  width: 0;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  overflow: clip;\n`, SrOnly = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { as, children } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$i, { \"aria-hidden\": !0, as, \"data-ui\": \"SrOnly\", ref, children });\n}), Root$h = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div`\n  position: relative;\n`, ItemWrapper = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n`, VirtualList = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const { as = \"div\", gap = 0, getItemKey, items = [], onChange, renderItem, ...restProps } = props, { space } = useTheme_v2(), ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), [scrollTop, setScrollTop] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), [scrollHeight, setScrollHeight] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), [itemHeight, setItemHeight] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(forwardedRef, () => ref.current), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!wrapperRef.current) return;\n    const firstElement = wrapperRef.current.firstChild;\n    firstElement instanceof HTMLElement && setItemHeight(firstElement.offsetHeight);\n  }, [renderItem]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!ref.current) return;\n    let _scrollEl = ref.current.parentNode;\n    for (; _scrollEl && !_isScrollable(_scrollEl); )\n      _scrollEl = _scrollEl.parentNode;\n    if (_scrollEl) {\n      const scrollEl = _scrollEl;\n      if (!(scrollEl instanceof HTMLElement)) return;\n      const handleScroll2 = () => {\n        setScrollTop(scrollEl.scrollTop);\n      };\n      scrollEl.addEventListener(\"scroll\", handleScroll2, { passive: !0 });\n      const ro = new _ResizeObserver((entries) => {\n        setScrollHeight(entries[0].contentRect.height);\n      });\n      return ro.observe(scrollEl), handleScroll2(), () => {\n        scrollEl.removeEventListener(\"scroll\", handleScroll2), ro.unobserve(scrollEl), ro.disconnect();\n      };\n    }\n    const handleScroll = () => {\n      setScrollTop(window.scrollY);\n    }, handleResize = () => {\n      setScrollHeight(window.innerHeight);\n    };\n    return window.addEventListener(\"scroll\", handleScroll, { passive: !0 }), window.addEventListener(\"resize\", handleResize), setScrollHeight(window.innerHeight), handleScroll(), () => {\n      window.removeEventListener(\"scroll\", handleScroll), window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const len = items.length, height = itemHeight ? len * (itemHeight + space[gap]) - space[gap] : 0, fromIndex = height ? Math.max(Math.floor(scrollTop / height * len) - 2, 0) : 0, toIndex = height ? Math.ceil((scrollTop + scrollHeight) / height * len) + 1 : 0;\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    onChange && onChange({ fromIndex, gap: space[gap], itemHeight, scrollHeight, scrollTop, toIndex });\n  }, [fromIndex, gap, itemHeight, onChange, scrollHeight, scrollTop, space, toIndex]);\n  const children = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => !renderItem || items.length === 0 ? null : itemHeight === -1 ? [/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ItemWrapper, { children: renderItem(items[0]) }, 0)] : items.slice(fromIndex, toIndex).map((item, _itemIndex) => {\n    const itemIndex = fromIndex + _itemIndex, node = renderItem(item), key2 = getItemKey ? getItemKey(item, itemIndex) : itemIndex;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ItemWrapper, { style: { top: itemIndex * (itemHeight + space[gap]) }, children: node }, key2);\n  }), [fromIndex, gap, getItemKey, itemHeight, items, renderItem, space, toIndex]), wrapperStyle = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({ height }), [height]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$h, { as, \"data-ui\": \"VirtualList\", ...restProps, ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ref: wrapperRef, style: wrapperStyle, children }) });\n}), DEFAULT_POPOVER_DISTANCE = 4, DEFAULT_POPOVER_PADDING = 4, DEFAULT_POPOVER_ARROW_WIDTH = 19, DEFAULT_POPOVER_ARROW_HEIGHT = 8, DEFAULT_POPOVER_ARROW_RADIUS = 2, DEFAULT_POPOVER_MARGINS = [0, 0, 0, 0], DEFAULT_FALLBACK_PLACEMENTS$1 = {\n  top: [\"bottom\", \"left\", \"right\"],\n  \"top-start\": [\"bottom-start\", \"left-start\", \"right-start\"],\n  \"top-end\": [\"bottom-end\", \"left-end\", \"right-end\"],\n  bottom: [\"top\", \"left\", \"right\"],\n  \"bottom-start\": [\"top-start\", \"left-start\", \"right-start\"],\n  \"bottom-end\": [\"top-end\", \"left-end\", \"right-end\"],\n  left: [\"right\", \"top\", \"bottom\"],\n  \"left-start\": [\"right-start\", \"top-start\", \"bottom-start\"],\n  \"left-end\": [\"right-end\", \"top-end\", \"bottom-end\"],\n  right: [\"left\", \"top\", \"bottom\"],\n  \"right-start\": [\"left-start\", \"top-start\", \"bottom-start\"],\n  \"right-end\": [\"left-end\", \"top-end\", \"bottom-end\"]\n};\nfunction size(options) {\n  const { apply, margins, padding = 0 } = options;\n  return {\n    name: \"@sanity/ui/size\",\n    async fn(args) {\n      const { elements, placement, platform, rects } = args, { floating, reference } = rects, overflow = await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_9__.detectOverflow)(args, {\n        altBoundary: !0,\n        boundary: options.boundaryElement || void 0,\n        elementContext: \"floating\",\n        padding,\n        rootBoundary: \"viewport\"\n      });\n      let maxWidth = 1 / 0, maxHeight = 1 / 0;\n      const floatingW = floating.width, floatingH = floating.height;\n      placement.includes(\"top\") && (maxWidth = floatingW - (overflow.left + overflow.right), maxHeight = floatingH - overflow.top), placement.includes(\"right\") && (maxWidth = floatingW - overflow.right, maxHeight = floatingH - (overflow.top + overflow.bottom)), placement.includes(\"bottom\") && (maxWidth = floatingW - (overflow.left + overflow.right), maxHeight = floatingH - overflow.bottom), placement.includes(\"left\") && (maxWidth = floatingW - overflow.left, maxHeight = floatingH - (overflow.top + overflow.bottom)), apply({\n        availableWidth: maxWidth - margins[1] - margins[3],\n        availableHeight: maxHeight - margins[0] - margins[2],\n        elements,\n        referenceWidth: reference.width - margins[1] - margins[3]\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating), targetH = nextDimensions.height, targetW = nextDimensions.width;\n      return floatingW !== targetW || floatingH !== targetH ? { reset: { rects: !0 } } : {};\n    }\n  };\n}\nfunction calcCurrentWidth(params) {\n  const { container, mediaIndex, width } = params, w = width[mediaIndex], currentWidth = w === void 0 ? width[width.length - 1] : w;\n  return typeof currentWidth == \"number\" ? container[currentWidth] : void 0;\n}\nfunction calcMaxWidth(params) {\n  const { boundaryWidth, currentWidth } = params;\n  if (!(currentWidth === void 0 && boundaryWidth === void 0))\n    return Math.min(\n      currentWidth != null ? currentWidth : 1 / 0,\n      (boundaryWidth || 1 / 0) - DEFAULT_POPOVER_PADDING * 2\n    );\n}\nconst MotionCard$1 = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)((0,framer_motion__WEBPACK_IMPORTED_MODULE_10__.motion)(Card))`\n  &:not([hidden]) {\n    display: flex;\n  }\n  flex-direction: column;\n  width: max-content;\n  min-width: min-content;\n  & > * {\n    opacity: var(${POPOVER_MOTION_CONTENT_OPACITY_PROPERTY}, 1);\n    will-change: opacity;\n  }\n`, PopoverCard = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n    const {\n      __unstable_margins: marginsProp,\n      animate,\n      arrow: arrow2,\n      arrowRef,\n      arrowX,\n      arrowY,\n      children,\n      padding,\n      placement,\n      originX,\n      originY,\n      overflow,\n      radius,\n      scheme,\n      shadow,\n      strategy,\n      style,\n      tone,\n      width,\n      x: xProp,\n      y: yProp,\n      ...restProps\n    } = props, { zIndex } = useLayer(), margins = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => marginsProp || DEFAULT_POPOVER_MARGINS,\n      [marginsProp]\n    ), x = (xProp != null ? xProp : 0) + margins[3], y = (yProp != null ? yProp : 0) + margins[0], rootStyle2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => ({\n        left: x,\n        originX,\n        originY,\n        position: strategy,\n        top: y,\n        width,\n        zIndex,\n        willChange: animate ? \"transform\" : void 0,\n        ...style\n      }),\n      [animate, originX, originY, strategy, style, width, x, y, zIndex]\n    ), arrowStyle = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => ({\n        left: arrowX !== null ? arrowX : void 0,\n        top: arrowY !== null ? arrowY : void 0,\n        right: void 0,\n        bottom: void 0\n      }),\n      [arrowX, arrowY]\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      MotionCard$1,\n      {\n        \"data-ui\": \"Popover\",\n        ...restProps,\n        \"data-placement\": placement,\n        radius,\n        ref,\n        scheme,\n        shadow,\n        sizing: \"border\",\n        style: rootStyle2,\n        tone,\n        ...animate ? POPOVER_MOTION_PROPS : {},\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Flex, { \"data-ui\": \"Popover__wrapper\", direction: \"column\", flex: 1, overflow, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Flex, { direction: \"column\", flex: 1, padding, children }) }),\n          arrow2 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Arrow,\n            {\n              ref: arrowRef,\n              style: arrowStyle,\n              width: DEFAULT_POPOVER_ARROW_WIDTH,\n              height: DEFAULT_POPOVER_ARROW_HEIGHT,\n              radius: DEFAULT_POPOVER_ARROW_RADIUS\n            }\n          )\n        ]\n      }\n    );\n  })\n);\nPopoverCard.displayName = \"PopoverCard\";\nconst Popover = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n    const { container, layer } = useTheme_v2(), boundaryElementContext = useBoundaryElement(), {\n      __unstable_margins: margins = DEFAULT_POPOVER_MARGINS,\n      animate: _animate = !1,\n      arrow: arrowProp = !1,\n      boundaryElement = boundaryElementContext.element,\n      children: childProp,\n      constrainSize = !1,\n      content,\n      disabled,\n      fallbackPlacements = (_b = props.fallbackPlacements) != null ? _b : DEFAULT_FALLBACK_PLACEMENTS$1[(_a = props.placement) != null ? _a : \"bottom\"],\n      matchReferenceWidth,\n      floatingBoundary = (_c = props.boundaryElement) != null ? _c : boundaryElementContext.element,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onActivate,\n      open,\n      overflow = \"hidden\",\n      padding: paddingProp,\n      placement: placementProp = \"bottom\",\n      portal,\n      preventOverflow = !0,\n      radius: radiusProp = 3,\n      referenceBoundary = (_d = props.boundaryElement) != null ? _d : boundaryElementContext.element,\n      referenceElement,\n      scheme,\n      shadow: shadowProp = 3,\n      tone = \"inherit\",\n      width: widthProp = \"auto\",\n      zOffset: zOffsetProp = layer.popover.zOffset,\n      updateRef,\n      ...restProps\n    } = props, animate = usePrefersReducedMotion() ? !1 : _animate, boundarySize = (_e = useElementSize(boundaryElement)) == null ? void 0 : _e.border, padding = useArrayProp(paddingProp), radius = useArrayProp(radiusProp), shadow = useArrayProp(shadowProp), widthArrayProp = useArrayProp(widthProp), zOffset = useArrayProp(zOffsetProp), ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), arrowRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), rootBoundary = \"viewport\";\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n      forwardedRef,\n      () => ref.current\n    );\n    const mediaIndex = useMediaIndex(), boundaryWidth = constrainSize || preventOverflow ? boundarySize == null ? void 0 : boundarySize.width : void 0, width = calcCurrentWidth({\n      container,\n      mediaIndex,\n      width: widthArrayProp\n    }), widthRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(width);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      widthRef.current = width;\n    }, [width]);\n    const maxWidth = calcMaxWidth({ boundaryWidth, currentWidth: width }), maxWidthRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(maxWidth);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      maxWidthRef.current = maxWidth;\n    }, [maxWidth]);\n    const referenceWidthRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      const floatingElement = ref.current;\n      if (!open || !floatingElement) return;\n      const referenceWidth = referenceWidthRef.current;\n      matchReferenceWidth ? referenceWidth !== void 0 && (floatingElement.style.width = `${referenceWidth}px`) : width !== void 0 && (floatingElement.style.width = `${width}px`), typeof maxWidth == \"number\" && (floatingElement.style.maxWidth = `${maxWidth}px`);\n    }, [width, matchReferenceWidth, maxWidth, open]);\n    const middleware = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n      const ret = [];\n      return (constrainSize || preventOverflow) && ret.push(\n        (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.flip)({\n          boundary: floatingBoundary || void 0,\n          fallbackPlacements,\n          padding: DEFAULT_POPOVER_PADDING,\n          rootBoundary\n        })\n      ), ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.offset)({ mainAxis: DEFAULT_POPOVER_DISTANCE })), (constrainSize || matchReferenceWidth) && ret.push(\n        size({\n          apply({ availableWidth, availableHeight, elements, referenceWidth }) {\n            referenceWidthRef.current = referenceWidth;\n            const _currentWidth = widthRef.current, _maxWidth = maxWidthRef.current;\n            matchReferenceWidth ? elements.floating.style.width = `${referenceWidth}px` : _currentWidth !== void 0 && (elements.floating.style.width = `${_currentWidth}px`), constrainSize && (elements.floating.style.maxWidth = `${Math.min(\n              availableWidth,\n              _maxWidth != null ? _maxWidth : 1 / 0\n            )}px`, elements.floating.style.maxHeight = `${availableHeight}px`);\n          },\n          boundaryElement: floatingBoundary || void 0,\n          constrainSize,\n          margins,\n          matchReferenceWidth,\n          padding: DEFAULT_POPOVER_PADDING\n        })\n      ), preventOverflow && ret.push(\n        (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.shift)({\n          boundary: floatingBoundary || void 0,\n          rootBoundary,\n          padding: DEFAULT_POPOVER_PADDING\n        })\n      ), arrowProp && ret.push(\n        (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.arrow)({\n          element: arrowRef,\n          padding: DEFAULT_POPOVER_PADDING\n        })\n      ), animate && ret.push(origin), ret.push(\n        (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.hide)({\n          boundary: referenceBoundary || void 0,\n          padding: DEFAULT_POPOVER_PADDING,\n          strategy: \"referenceHidden\"\n        })\n      ), ret;\n    }, [\n      animate,\n      arrowProp,\n      constrainSize,\n      fallbackPlacements,\n      floatingBoundary,\n      margins,\n      matchReferenceWidth,\n      preventOverflow,\n      referenceBoundary\n    ]), { x, y, middlewareData, placement, refs, strategy, update } = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.useFloating)({\n      middleware,\n      placement: placementProp,\n      whileElementsMounted: _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_9__.autoUpdate\n    }), referenceHidden = (_f = middlewareData.hide) == null ? void 0 : _f.referenceHidden, arrowX = (_g = middlewareData.arrow) == null ? void 0 : _g.x, arrowY = (_h = middlewareData.arrow) == null ? void 0 : _h.y, originX = (_i = middlewareData[\"@sanity/ui/origin\"]) == null ? void 0 : _i.originX, originY = (_j = middlewareData[\"@sanity/ui/origin\"]) == null ? void 0 : _j.originY, setArrow = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((arrowEl) => {\n      arrowRef.current = arrowEl;\n    }, []), setFloating = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (node) => {\n        ref.current = node, refs.setFloating(node);\n      },\n      [refs]\n    ), setReference = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (node) => {\n        refs.setReference(node);\n        const childRef = childProp == null ? void 0 : childProp.ref;\n        typeof childRef == \"function\" ? childRef(node) : childRef && (childRef.current = node);\n      },\n      [childProp, refs]\n    ), child = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => !childProp || referenceElement ? null : (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(childProp, { ref: setReference }), [childProp, referenceElement, setReference]);\n    if ((0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      updateRef && (typeof updateRef == \"function\" ? updateRef(update) : updateRef && (updateRef.current = update));\n    }, [update, updateRef]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      child || refs.setReference(referenceElement || null);\n    }, [referenceElement, refs, child]), disabled)\n      return childProp || /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {});\n    const popover = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayerProvider, { zOffset, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      PopoverCard,\n      {\n        ...restProps,\n        __unstable_margins: margins,\n        animate,\n        arrow: arrowProp,\n        arrowRef: setArrow,\n        arrowX,\n        arrowY,\n        hidden: referenceHidden,\n        overflow,\n        padding,\n        placement,\n        radius,\n        ref: setFloating,\n        scheme,\n        shadow,\n        originX,\n        originY,\n        strategy,\n        tone,\n        width: matchReferenceWidth ? referenceWidthRef.current : width,\n        x,\n        y,\n        children: content\n      }\n    ) });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        ConditionalWrapper,\n        {\n          condition: animate,\n          wrapper: (children) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(framer_motion__WEBPACK_IMPORTED_MODULE_12__.AnimatePresence, { children }),\n          children: open && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            ConditionalWrapper,\n            {\n              condition: !!portal,\n              wrapper: (children) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Portal, { __unstable_name: typeof portal == \"string\" ? portal : void 0, children }),\n              children: popover\n            }\n          )\n        }\n      ),\n      child\n    ] });\n  })\n);\nPopover.displayName = \"Popover\";\nfunction radioBaseStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    position: relative;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n\n    &[data-read-only] {\n      outline: 1px solid red;\n    }\n  `;\n}\nfunction inputElementStyle(props) {\n  const { color, input } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), dist = (input.radio.size - input.radio.markSize) / 2;\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    appearance: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n    border-radius: ${rem(input.radio.size / 2)};\n    border: none;\n\n    /* enabled */\n    & + span {\n      display: block;\n      position: relative;\n      height: ${rem(input.radio.size)};\n      width: ${rem(input.radio.size)};\n      border-radius: ${rem(input.radio.size / 2)};\n      background: ${color.input.default.enabled.bg};\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n\n      &::after {\n        content: '';\n        position: absolute;\n        top: ${rem(dist)};\n        left: ${rem(dist)};\n        height: ${rem(input.radio.markSize)};\n        width: ${rem(input.radio.markSize)};\n        border-radius: ${rem(input.radio.markSize / 2)};\n        background: ${color.input.default.enabled.fg};\n        opacity: 0;\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus + span {\n      box-shadow: ${focusRingStyle({\n    border: { width: input.border.width, color: color.input.default.enabled.border },\n    focusRing: input.radio.focusRing\n  })};\n    }\n\n    &:not(:disabled):focus:not(:focus-visible) + span {\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n    }\n\n    &:checked + span::after {\n      opacity: 1;\n    }\n\n    /* customValidity */\n    &[data-error] + span {\n      background-color: ${color.input.invalid.enabled.border};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.input.invalid.enabled.muted.bg\n  })};\n      &::after {\n        background: ${color.input.invalid.enabled.muted.bg};\n      }\n    }\n\n    /* read only */\n    &[data-read-only] + span {\n      box-shadow: 0 0 0 1px ${color.input.default.readOnly.border};\n      background: ${color.input.default.readOnly.bg};\n\n      &::after {\n        background: ${color.input.default.readOnly.border};\n      }\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled + span {\n      box-shadow: 0 0 0 1px ${color.input.default.disabled.border};\n      background: ${color.input.default.disabled.bg};\n\n      &::after {\n        background: ${color.input.default.disabled.border};\n      }\n    }\n  `;\n}\nconst Root$g = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(radioBaseStyle), Input$4 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.input(inputElementStyle), Radio = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const { className, disabled, style, customValidity, readOnly, ...restProps } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => ref.current\n  ), useCustomValidity(ref, customValidity), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root$g, { className, \"data-ui\": \"Radio\", style, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Input$4,\n      {\n        \"data-read-only\": !disabled && readOnly ? \"\" : void 0,\n        \"data-error\": customValidity ? \"\" : void 0,\n        ...restProps,\n        disabled: disabled || readOnly,\n        readOnly,\n        ref,\n        type: \"radio\"\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {})\n  ] });\n});\nfunction rootStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    position: relative;\n    width: -moz-available;\n    width: -webkit-fill-available;\n    width: stretch;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\nfunction inputBaseStyle(props) {\n  const { font } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    -webkit-font-smoothing: antialiased;\n    appearance: none;\n    border: 0;\n    font-family: ${font.text.family};\n    color: inherit;\n    width: 100%;\n    outline: none;\n    margin: 0;\n\n    &:disabled {\n      opacity: 1;\n    }\n  `;\n}\nfunction inputColorStyle(props) {\n  const { color, input } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    /* enabled */\n    background-color: ${color.input.default.enabled.bg};\n    color: ${color.input.default.enabled.fg};\n    box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n\n    /* hovered */\n    @media (hover: hover) {\n      &:not(:disabled):hover {\n        background-color: ${color.input.default.hovered.bg};\n        color: ${color.input.default.hovered.fg};\n        box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.hovered.border,\n    width: input.border.width\n  })};\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus {\n      box-shadow: ${focusRingStyle({\n    border: { width: input.border.width, color: color.input.default.enabled.border },\n    focusRing: input.select.focusRing\n  })};\n    }\n\n    /* read-only */\n    &[data-read-only] {\n      background-color: ${color.input.default.readOnly.bg};\n      color: ${color.input.default.readOnly.fg};\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.readOnly.border,\n    width: input.border.width\n  })};\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled {\n      background-color: ${color.input.default.disabled.bg};\n      color: ${color.input.default.disabled.fg};\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.disabled.border,\n    width: input.border.width\n  })};\n    }\n  `;\n}\nfunction textSize(size2) {\n  return { fontSize: rem(size2.fontSize), lineHeight: rem(size2.lineHeight) };\n}\nfunction inputTextSizeStyle(props) {\n  const { $fontSize } = props, { font, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(\n    media,\n    $fontSize,\n    (sizeIndex) => textSize(font.text.sizes[sizeIndex] || font.text.sizes[2])\n  );\n}\nfunction inputStyle() {\n  return [\n    responsiveRadiusStyle,\n    inputBaseStyle,\n    inputColorStyle,\n    inputTextSizeStyle,\n    responsiveInputPaddingIconRightStyle\n  ];\n}\nfunction iconBoxStyle(props) {\n  const { color } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    /* enabled */\n    --card-fg-color: ${color.input.default.enabled.fg};\n\n    /* hover */\n    @media (hover: hover) {\n      select:not(disabled):not(:read-only):hover + && {\n        --card-fg-color: ${color.input.default.hovered.fg};\n      }\n    }\n\n    /* disabled */\n    select:disabled + && {\n      --card-fg-color: ${color.input.default.disabled.fg};\n    }\n\n    /* read-only */\n    select[data-read-only] + && {\n      --card-fg-color: ${color.input.default.readOnly.fg};\n    }\n  `;\n}\nconst selectStyle = {\n  root: rootStyle,\n  input: inputStyle,\n  iconBox: iconBoxStyle\n}, Root$f = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(selectStyle.root), Input$3 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.select(selectStyle.input), IconBox = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(selectStyle.iconBox), Select = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    children,\n    customValidity,\n    disabled,\n    fontSize: fontSize2 = 2,\n    padding = 3,\n    radius = 2,\n    readOnly,\n    space = 3,\n    ...restProps\n  } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => ref.current\n  ), useCustomValidity(ref, customValidity), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root$f, { \"data-ui\": \"Select\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Input$3,\n      {\n        \"data-read-only\": !disabled && readOnly ? \"\" : void 0,\n        \"data-ui\": \"Select\",\n        ...restProps,\n        $fontSize: useArrayProp(fontSize2),\n        $padding: useArrayProp(padding),\n        $radius: useArrayProp(radius),\n        $space: useArrayProp(space),\n        disabled: disabled || readOnly,\n        ref,\n        children\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconBox, { padding, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_8__.ChevronDownIcon, {}) }) })\n  ] });\n}), BASE_STYLE = {\n  \"&&:not([hidden])\": {\n    display: \"grid\"\n  },\n  '&[data-as=\"ul\"],&[data-as=\"ol\"]': {\n    listStyle: \"none\"\n  },\n  gridTemplateColumns: \"minmax(0, 1fr)\",\n  gridAutoRows: \"min-content\"\n};\nfunction stackBaseStyle() {\n  return BASE_STYLE;\n}\nfunction responsiveStackSpaceStyle(props) {\n  const { media, space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$space, (spaceIndex) => ({\n    gridGap: rem(space[spaceIndex])\n  }));\n}\nconst Root$e = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(stackBaseStyle, responsiveStackSpaceStyle), Stack = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { as, space, ...restProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$e,\n    {\n      \"data-as\": typeof as == \"string\" ? as : void 0,\n      \"data-ui\": \"Stack\",\n      ...restProps,\n      $space: useArrayProp(space),\n      forwardedAs: as,\n      ref\n    }\n  );\n});\nfunction switchBaseStyles() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    position: relative;\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\nfunction switchInputStyles() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    padding: 0;\n    margin: 0;\n\n    /* Place the input element above the representation element */\n    z-index: 1;\n  `;\n}\nfunction switchRepresentationStyles(props) {\n  const { color, input } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    --switch-bg-color: ${color.input.default.enabled.border};\n    --switch-fg-color: ${color.input.default.enabled.bg};\n    --switch-box-shadow: none;\n\n    &:not([hidden]) {\n      display: block;\n    }\n    position: relative;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n\n    /* Make sure it’s not possible to interact with the wrapper element */\n    pointer-events: none;\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      box-shadow: var(--switch-box-shadow);\n      border-radius: inherit;\n    }\n\n    /* Focus styles */\n    input:focus + && {\n      --switch-box-shadow: ${focusRingStyle({ focusRing: input.switch.focusRing })};\n    }\n\n    input:focus:not(:focus-visible) + && {\n      --switch-box-shadow: none;\n    }\n\n    input:checked + && {\n      --switch-bg-color: ${color.input.default.enabled.fg};\n      --switch-fg-color: ${color.input.default.enabled.bg};\n    }\n\n    @media (hover: hover) {\n      input:not(:disabled):hover + && {\n        --switch-bg-color: ${color.input.default.hovered.border};\n        --switch-fg-color: ${color.input.default.hovered.bg};\n      }\n\n      input:not(:disabled):checked:hover + && {\n        --switch-bg-color: ${color.input.default.enabled.fg};\n        --switch-fg-color: ${color.input.default.enabled.bg};\n      }\n    }\n\n    input:not([data-read-only]):disabled + && {\n      --switch-bg-color: ${color.input.default.disabled.border};\n      --switch-fg-color: ${color.input.default.disabled.bg};\n    }\n\n    input[data-read-only]:disabled + && {\n      --switch-bg-color: ${color.input.default.readOnly.border};\n      --switch-fg-color: ${color.input.default.readOnly.bg};\n    }\n\n    input:checked[data-read-only]:disabled + && {\n      --switch-bg-color: ${color.input.default.readOnly.fg};\n      --switch-fg-color: ${color.input.default.readOnly.bg};\n    }\n  `;\n}\nfunction switchTrackStyles(props) {\n  const { input } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    &:not([hidden]) {\n      display: block;\n    }\n    background-color: var(--switch-bg-color);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n  `;\n}\nfunction switchThumbStyles(props) {\n  const { $indeterminate } = props, { input } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), trackWidth = input.switch.width, trackHeight = input.switch.height, trackPadding = input.switch.padding, size2 = trackHeight - input.switch.padding * 2, checkedOffset = trackWidth - trackPadding * 2 - size2, indeterminateOffset = trackWidth / 2 - size2 / 2 - trackPadding, checked = $indeterminate !== !0 && props.$checked === !0;\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    &:not([hidden]) {\n      display: block;\n    }\n    position: absolute;\n    left: ${rem(trackPadding)};\n    top: ${rem(trackPadding)};\n    height: ${rem(size2)};\n    width: ${rem(size2)};\n    border-radius: ${rem(size2 / 2)};\n    transition-property: transform;\n    transition-duration: ${input.switch.transitionDurationMs}ms;\n    transition-timing-function: ${input.switch.transitionTimingFunction};\n    background: var(--switch-fg-color);\n    transform: translate3d(0, 0, 0);\n    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.05);\n\n    ${checked && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      transform: translate3d(${checkedOffset}px, 0, 0);\n    `}\n\n    ${$indeterminate && (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      transform: translate3d(${indeterminateOffset}px, 0, 0);\n    `}\n  `;\n}\nconst Root$d = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span(switchBaseStyles), Input$2 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.input(switchInputStyles), Representation = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span(switchRepresentationStyles), Track = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span(switchTrackStyles), Thumb = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span(switchThumbStyles), Switch = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const { checked, className, disabled, indeterminate, readOnly, style, ...restProps } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => ref.current\n  ), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    ref.current && (ref.current.indeterminate = indeterminate || !1);\n  }, [indeterminate]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root$d, { className, \"data-ui\": \"Switch\", style, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Input$2,\n      {\n        \"data-read-only\": !disabled && readOnly ? \"\" : void 0,\n        ...restProps,\n        checked: indeterminate !== !0 && checked,\n        disabled: disabled || readOnly,\n        type: \"checkbox\",\n        ref\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Representation, { \"aria-hidden\": !0, \"data-name\": \"representation\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Track, {}),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Thumb, { $checked: checked, $indeterminate: indeterminate })\n    ] })\n  ] });\n}), Root$c = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span(textInputRootStyle), InputRoot$1 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span`\n  flex: 1;\n  min-width: 0;\n  display: block;\n  position: relative;\n`, Input$1 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.textarea(\n  responsiveInputPaddingStyle,\n  textInputBaseStyle,\n  textInputFontSizeStyle\n), Presentation$1 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div(\n  responsiveRadiusStyle,\n  textInputRepresentationStyle\n), TextArea = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    border: border2 = !0,\n    customValidity,\n    disabled = !1,\n    fontSize: fontSize2 = 2,\n    padding = 3,\n    radius = 2,\n    weight,\n    ...restProps\n  } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), rootTheme = useRootTheme();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => ref.current\n  ), useCustomValidity(ref, customValidity), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$c, { \"data-ui\": \"TextArea\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(InputRoot$1, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Input$1,\n      {\n        \"data-as\": \"textarea\",\n        \"data-scheme\": rootTheme.scheme,\n        \"data-tone\": rootTheme.tone,\n        ...restProps,\n        $fontSize: useArrayProp(fontSize2),\n        $padding: useArrayProp(padding),\n        $scheme: rootTheme.scheme,\n        $space: useArrayProp(0),\n        $tone: rootTheme.tone,\n        $weight: weight,\n        disabled,\n        ref\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Presentation$1,\n      {\n        $radius: useArrayProp(radius),\n        $scheme: rootTheme.scheme,\n        $tone: rootTheme.tone,\n        \"data-border\": border2 ? \"\" : void 0,\n        \"data-scheme\": rootTheme.scheme,\n        \"data-tone\": rootTheme.tone\n      }\n    )\n  ] }) });\n}), CLEAR_BUTTON_BOX_STYLE = { zIndex: 2 }, Root$b = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Card).attrs({ forwardedAs: \"span\" })(textInputRootStyle), InputRoot = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span`\n  flex: 1;\n  min-width: 0;\n  display: block;\n  position: relative;\n`, Prefix = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Card).attrs({ forwardedAs: \"span\" })`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\n  & > span {\n    display: block;\n    margin: -1px;\n  }\n`, Suffix = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Card).attrs({ forwardedAs: \"span\" })`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n\n  & > span {\n    display: block;\n    margin: -1px;\n  }\n`, Input = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.input(\n  responsiveInputPaddingStyle,\n  textInputBaseStyle,\n  textInputFontSizeStyle\n), Presentation = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.span(\n  responsiveRadiusStyle,\n  textInputRepresentationStyle\n), LeftBox = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)`\n  position: absolute;\n  top: 0;\n  left: 0;\n`, RightBox = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)`\n  position: absolute;\n  top: 0;\n  right: 0;\n`, RightCard = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Card)`\n  background-color: transparent;\n  position: absolute;\n  top: 0;\n  right: 0;\n`, TextInputClearButton = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Button)({\n  \"&:not([hidden])\": {\n    display: \"block\"\n  }\n}), TextInput = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    __unstable_disableFocusRing,\n    border: border2 = !0,\n    clearButton,\n    disabled = !1,\n    fontSize: fontSizeProp = 2,\n    icon: IconComponent,\n    iconRight: IconRightComponent,\n    onClear,\n    padding: paddingProp = 3,\n    prefix,\n    radius: radiusProp = 2,\n    readOnly,\n    space: spaceProp = 3,\n    suffix,\n    customValidity,\n    type = \"text\",\n    weight,\n    ...restProps\n  } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), rootTheme = useRootTheme(), fontSize2 = useArrayProp(fontSizeProp), padding = useArrayProp(paddingProp), radius = useArrayProp(radiusProp), space = useArrayProp(spaceProp), $hasClearButton = !!clearButton, $hasIcon = !!IconComponent, $hasIconRight = !!IconRightComponent, $hasSuffix = !!suffix, $hasPrefix = !!prefix;\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => ref.current\n  ), useCustomValidity(ref, customValidity);\n  const handleClearMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event) => {\n    event.preventDefault(), event.stopPropagation();\n  }, []), handleClearClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      var _a;\n      event.preventDefault(), event.stopPropagation(), onClear && onClear(), (_a = ref.current) == null || _a.focus();\n    },\n    [onClear, ref]\n  ), prefixNode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => prefix && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Prefix, { borderTop: !0, borderLeft: !0, borderBottom: !0, radius, sizing: \"border\", tone: \"inherit\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: prefix }) }),\n    [prefix, radius]\n  ), presentationNode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      Presentation,\n      {\n        $hasPrefix,\n        $unstableDisableFocusRing: __unstable_disableFocusRing,\n        $hasSuffix,\n        $radius: radius,\n        $scheme: rootTheme.scheme,\n        $tone: rootTheme.tone,\n        \"data-border\": border2 ? \"\" : void 0,\n        \"data-scheme\": rootTheme.scheme,\n        \"data-tone\": rootTheme.tone,\n        children: [\n          IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LeftBox, { padding, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(IconComponent) && IconComponent,\n            (0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(IconComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {})\n          ] }) }),\n          !$hasClearButton && IconRightComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RightBox, { padding, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(IconRightComponent) && IconRightComponent,\n            (0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconRightComponent, {})\n          ] }) })\n        ]\n      }\n    ),\n    [\n      __unstable_disableFocusRing,\n      border2,\n      fontSize2,\n      IconComponent,\n      IconRightComponent,\n      padding,\n      radius,\n      rootTheme,\n      $hasClearButton,\n      $hasPrefix,\n      $hasSuffix\n    ]\n  ), clearButtonBoxPadding = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => padding.map((v) => v === 0 ? 0 : v === 1 || v === 2 ? 1 : v - 2),\n    [padding]\n  ), clearButtonPadding = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => padding.map((v) => v === 0 || v === 1 ? 0 : v === 2 ? 1 : v - 1),\n    [padding]\n  ), clearButtonProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => typeof clearButton == \"object\" ? clearButton : EMPTY_RECORD,\n    [clearButton]\n  ), clearButtonNode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => !disabled && !readOnly && clearButton && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      RightCard,\n      {\n        forwardedAs: \"span\",\n        padding: clearButtonBoxPadding,\n        style: CLEAR_BUTTON_BOX_STYLE,\n        tone: customValidity ? \"critical\" : \"inherit\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          TextInputClearButton,\n          {\n            \"aria-label\": \"Clear\",\n            \"data-qa\": \"clear-button\",\n            fontSize: fontSize2,\n            icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_8__.CloseIcon,\n            mode: \"bleed\",\n            padding: clearButtonPadding,\n            radius,\n            ...clearButtonProps,\n            onClick: handleClearClick,\n            onMouseDown: handleClearMouseDown\n          }\n        )\n      }\n    ),\n    [\n      clearButton,\n      clearButtonBoxPadding,\n      clearButtonPadding,\n      clearButtonProps,\n      customValidity,\n      disabled,\n      fontSize2,\n      handleClearClick,\n      handleClearMouseDown,\n      radius,\n      readOnly\n    ]\n  ), suffixNode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => suffix && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Suffix, { borderTop: !0, borderRight: !0, borderBottom: !0, radius, sizing: \"border\", tone: \"inherit\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: suffix }) }),\n    [radius, suffix]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root$b, { \"data-ui\": \"TextInput\", tone: rootTheme.tone, children: [\n    prefixNode,\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(InputRoot, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Input,\n        {\n          \"data-as\": \"input\",\n          \"data-scheme\": rootTheme.scheme,\n          \"data-tone\": rootTheme.tone,\n          ...restProps,\n          $fontSize: fontSize2,\n          $iconLeft: $hasIcon,\n          $iconRight: $hasIconRight || $hasClearButton,\n          $padding: padding,\n          $scheme: rootTheme.scheme,\n          $space: space,\n          $tone: rootTheme.tone,\n          $weight: weight,\n          disabled,\n          readOnly,\n          ref,\n          type\n        }\n      ),\n      presentationNode,\n      clearButtonNode\n    ] }),\n    suffixNode\n  ] });\n});\nfunction useDelayedState(initialState) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialState), delayedAction = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(), onStateChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((nextState, delay) => {\n    const action = () => {\n      setState(nextState);\n    };\n    if (delayedAction.current && (clearTimeout(delayedAction.current), delayedAction.current = void 0), !delay) return action();\n    delayedAction.current = setTimeout(action, delay);\n  }, []);\n  return [state, onStateChange];\n}\nconst DEFAULT_TOOLTIP_ARROW_WIDTH = 15, DEFAULT_TOOLTIP_ARROW_HEIGHT = 6, DEFAULT_TOOLTIP_ARROW_RADIUS = 2, DEFAULT_TOOLTIP_DISTANCE = 4, DEFAULT_TOOLTIP_PADDING = 4, DEFAULT_FALLBACK_PLACEMENTS = {\n  top: [\"top-end\", \"top-start\", \"bottom\", \"left\", \"right\"],\n  \"top-start\": [\"top\", \"top-end\", \"bottom-start\", \"left-start\", \"right-start\"],\n  \"top-end\": [\"top\", \"top-start\", \"bottom-end\", \"left-end\", \"right-end\"],\n  bottom: [\"bottom-end\", \"bottom-start\", \"top\", \"left\", \"right\"],\n  \"bottom-start\": [\"bottom\", \"bottom-end\", \"top-start\", \"left-start\", \"right-start\"],\n  \"bottom-end\": [\"bottom\", \"bottom-start\", \"top-end\", \"left-end\", \"right-end\"],\n  left: [\"left-end\", \"left-start\", \"right\", \"top\", \"bottom\"],\n  \"left-start\": [\"left\", \"left-end\", \"right-start\", \"top-start\", \"bottom-start\"],\n  \"left-end\": [\"left\", \"left-start\", \"right-end\", \"top-end\", \"bottom-end\"],\n  right: [\"right-end\", \"right-start\", \"left\", \"top\", \"bottom\"],\n  \"right-start\": [\"right\", \"right-end\", \"left-start\", \"top-start\", \"bottom-start\"],\n  \"right-end\": [\"right\", \"right-start\", \"left-end\", \"top-end\", \"bottom-end\"]\n}, MotionCard = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)((0,framer_motion__WEBPACK_IMPORTED_MODULE_10__.motion)(Card))`\n  & > * {\n    opacity: var(${POPOVER_MOTION_CONTENT_OPACITY_PROPERTY}, 1);\n    will-change: opacity;\n  }\n`, TooltipCard = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n    const {\n      animate,\n      arrow: arrow2,\n      arrowRef,\n      arrowX,\n      arrowY,\n      children,\n      originX,\n      originY,\n      padding,\n      placement,\n      radius,\n      scheme,\n      shadow,\n      style,\n      ...restProps\n    } = props, rootStyle2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => ({\n        originX,\n        originY,\n        willChange: animate ? \"transform\" : void 0,\n        ...style\n      }),\n      [animate, originX, originY, style]\n    ), arrowStyle = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => ({\n        left: arrowX !== null ? arrowX : void 0,\n        top: arrowY !== null ? arrowY : void 0,\n        right: void 0,\n        bottom: void 0\n      }),\n      [arrowX, arrowY]\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      MotionCard,\n      {\n        \"data-ui\": \"Tooltip__card\",\n        ...restProps,\n        \"data-placement\": placement,\n        padding,\n        radius,\n        ref,\n        scheme,\n        shadow,\n        style: rootStyle2,\n        ...animate ? POPOVER_MOTION_PROPS : {},\n        children: [\n          children,\n          arrow2 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Arrow,\n            {\n              ref: arrowRef,\n              style: arrowStyle,\n              width: DEFAULT_TOOLTIP_ARROW_WIDTH,\n              height: DEFAULT_TOOLTIP_ARROW_HEIGHT,\n              radius: DEFAULT_TOOLTIP_ARROW_RADIUS\n            }\n          )\n        ]\n      }\n    );\n  })\n);\nTooltipCard.displayName = \"TooltipCard\";\nconst key$4 = Symbol.for(\"@sanity/ui/context/tooltipDelayGroup\"), TooltipDelayGroupContext = createGlobalScopedContext(key$4, null);\nfunction useTooltipDelayGroup() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(TooltipDelayGroupContext);\n}\nfunction TooltipDelayGroupProvider(props) {\n  const { children, delay } = props, [isGroupActive, setIsGroupActive] = useDelayedState(!1), [openTooltipId, setOpenTooltipId] = useDelayedState(null), openDelay = typeof delay == \"number\" ? delay : (delay == null ? void 0 : delay.open) || 0, closeDelay = typeof delay == \"number\" ? delay : (delay == null ? void 0 : delay.close) || 0, value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      isGroupActive,\n      setIsGroupActive,\n      openTooltipId,\n      setOpenTooltipId,\n      // When the group is active, we want the next tooltip to open immediately.\n      openDelay: isGroupActive ? 1 : openDelay,\n      closeDelay\n    }),\n    [closeDelay, isGroupActive, openDelay, openTooltipId, setIsGroupActive, setOpenTooltipId]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TooltipDelayGroupContext.Provider, { value, children });\n}\nconst Root$a = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Layer)`\n  pointer-events: none;\n  max-width: ${({ $maxWidth }) => $maxWidth}px;\n`, Tooltip = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const boundaryElementContext = useBoundaryElement(), { layer } = useTheme_v2(), {\n    animate: _animate = !1,\n    arrow: arrowProp = !1,\n    boundaryElement = boundaryElementContext == null ? void 0 : boundaryElementContext.element,\n    children: childProp,\n    content,\n    disabled,\n    fallbackPlacements: fallbackPlacementsProp = (_b = props.fallbackPlacements) != null ? _b : DEFAULT_FALLBACK_PLACEMENTS[(_a = props.placement) != null ? _a : \"bottom\"],\n    padding = 2,\n    placement: placementProp = \"bottom\",\n    portal: portalProp,\n    radius = 2,\n    scheme,\n    shadow = 2,\n    zOffset = layer.tooltip.zOffset,\n    delay,\n    ...restProps\n  } = props, animate = usePrefersReducedMotion() ? !1 : _animate, fallbackPlacements = useArrayProp(fallbackPlacementsProp), ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), [referenceElement, setReferenceElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), arrowRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), rootBoundary = \"viewport\";\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(forwardedRef, () => ref.current);\n  const portal = usePortal(), portalElement = typeof portalProp == \"string\" ? ((_c = portal.elements) == null ? void 0 : _c[portalProp]) || null : portal.element, documentBodyOffsetWidth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(\n    emptySubscribe,\n    () => document.body.offsetWidth,\n    // We don't actually know what the width of the body is during SSR, so we'll just assume it's 800px or larger\n    () => 800\n  ), tooltipWidth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    const availableWidths = [\n      ...boundaryElement ? [boundaryElement.offsetWidth] : [],\n      (portalElement == null ? void 0 : portalElement.offsetWidth) || documentBodyOffsetWidth\n    ];\n    return Math.min(...availableWidths) - DEFAULT_TOOLTIP_PADDING * 2;\n  }, [boundaryElement, documentBodyOffsetWidth, portalElement == null ? void 0 : portalElement.offsetWidth]), middleware = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    const ret = [];\n    return ret.push(\n      (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.flip)({\n        boundary: boundaryElement || void 0,\n        fallbackPlacements,\n        padding: DEFAULT_TOOLTIP_PADDING,\n        rootBoundary\n      })\n    ), ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.offset)({ mainAxis: DEFAULT_TOOLTIP_DISTANCE })), ret.push(\n      (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.shift)({\n        boundary: boundaryElement || void 0,\n        rootBoundary,\n        padding: DEFAULT_TOOLTIP_PADDING\n      })\n    ), arrowProp && ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.arrow)({ element: arrowRef, padding: DEFAULT_TOOLTIP_PADDING })), animate && ret.push(origin), ret;\n  }, [animate, arrowProp, boundaryElement, fallbackPlacements]), { floatingStyles, placement, middlewareData, refs, update } = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_11__.useFloating)({\n    middleware,\n    placement: placementProp,\n    whileElementsMounted: _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_9__.autoUpdate\n  }), arrowX = (_d = middlewareData.arrow) == null ? void 0 : _d.x, arrowY = (_e = middlewareData.arrow) == null ? void 0 : _e.y, originX = (_f = middlewareData[\"@sanity/ui/origin\"]) == null ? void 0 : _f.originX, originY = (_g = middlewareData[\"@sanity/ui/origin\"]) == null ? void 0 : _g.originY, tooltipId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(), [isOpen, setIsOpen] = useDelayedState(!1), delayGroupContext = useTooltipDelayGroup(), showTooltip = isOpen || (delayGroupContext == null ? void 0 : delayGroupContext.openTooltipId) === tooltipId, isInsideGroup = delayGroupContext !== null, openDelayProp = typeof delay == \"number\" ? delay : (delay == null ? void 0 : delay.open) || 0, closeDelayProp = typeof delay == \"number\" ? delay : (delay == null ? void 0 : delay.close) || 0, openDelay = isInsideGroup ? delayGroupContext.openDelay : openDelayProp, closeDelay = isInsideGroup ? delayGroupContext.closeDelay : closeDelayProp, handleIsOpenChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (open, immediate) => {\n      if (isInsideGroup)\n        if (open) {\n          const groupedOpenDelay = immediate ? 0 : openDelay;\n          delayGroupContext.setIsGroupActive(open, groupedOpenDelay), delayGroupContext.setOpenTooltipId(tooltipId, groupedOpenDelay);\n        } else {\n          const groupDeactivateDelay = closeDelay > 200 ? closeDelay : 200;\n          delayGroupContext.setIsGroupActive(open, groupDeactivateDelay), delayGroupContext.setOpenTooltipId(null, immediate ? 0 : closeDelay);\n        }\n      else\n        setIsOpen(open, immediate ? 0 : open ? openDelay : closeDelay);\n    },\n    [isInsideGroup, delayGroupContext, openDelay, tooltipId, closeDelay, setIsOpen]\n  ), handleBlur = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (e) => {\n      var _a2, _b2;\n      handleIsOpenChange(!1), (_b2 = (_a2 = childProp == null ? void 0 : childProp.props) == null ? void 0 : _a2.onBlur) == null || _b2.call(_a2, e);\n    },\n    [childProp == null ? void 0 : childProp.props, handleIsOpenChange]\n  ), handleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (e) => {\n      var _a2, _b2;\n      handleIsOpenChange(!1, !0), (_b2 = childProp == null ? void 0 : (_a2 = childProp.props).onClick) == null || _b2.call(_a2, e);\n    },\n    [childProp == null ? void 0 : childProp.props, handleIsOpenChange]\n  ), handleContextMenu = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (e) => {\n      var _a2, _b2;\n      handleIsOpenChange(!1, !0), (_b2 = childProp == null ? void 0 : (_a2 = childProp.props).onContextMenu) == null || _b2.call(_a2, e);\n    },\n    [childProp == null ? void 0 : childProp.props, handleIsOpenChange]\n  ), handleFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (e) => {\n      var _a2, _b2;\n      handleIsOpenChange(!0), (_b2 = (_a2 = childProp == null ? void 0 : childProp.props) == null ? void 0 : _a2.onFocus) == null || _b2.call(_a2, e);\n    },\n    [childProp == null ? void 0 : childProp.props, handleIsOpenChange]\n  ), handleMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (e) => {\n      var _a2, _b2;\n      handleIsOpenChange(!0), (_b2 = (_a2 = childProp == null ? void 0 : childProp.props) == null ? void 0 : _a2.onMouseEnter) == null || _b2.call(_a2, e);\n    },\n    [childProp == null ? void 0 : childProp.props, handleIsOpenChange]\n  ), handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (e) => {\n      var _a2, _b2;\n      handleIsOpenChange(!1), (_b2 = (_a2 = childProp == null ? void 0 : childProp.props) == null ? void 0 : _a2.onMouseLeave) == null || _b2.call(_a2, e);\n    },\n    [childProp == null ? void 0 : childProp.props, handleIsOpenChange]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!showTooltip) return;\n    function handleWindowMouseMove(event) {\n      referenceElement && (referenceElement === event.target || event.target instanceof Node && referenceElement.contains(event.target) || (handleIsOpenChange(!1), window.removeEventListener(\"mousemove\", handleWindowMouseMove)));\n    }\n    return window.addEventListener(\"mousemove\", handleWindowMouseMove), () => {\n      window.removeEventListener(\"mousemove\", handleWindowMouseMove);\n    };\n  }, [showTooltip, referenceElement, handleIsOpenChange]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    disabled && showTooltip && handleIsOpenChange(!1);\n  }, [disabled, handleIsOpenChange, showTooltip]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    !content && showTooltip && handleIsOpenChange(!1);\n  }, [content, handleIsOpenChange, showTooltip]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => refs.setReference(referenceElement), [referenceElement, refs]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!showTooltip) return;\n    function handleWindowKeyDown(event) {\n      event.key === \"Escape\" && handleIsOpenChange(!1, !0);\n    }\n    return window.addEventListener(\"keydown\", handleWindowKeyDown), () => {\n      window.removeEventListener(\"keydown\", handleWindowKeyDown);\n    };\n  }, [handleIsOpenChange, showTooltip]);\n  const setArrow = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (arrowEl) => {\n      arrowRef.current = arrowEl, update();\n    },\n    [update]\n  ), setFloating = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (node) => {\n      ref.current = node, refs.setFloating(node);\n    },\n    [refs]\n  ), childRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(childProp == null ? void 0 : childProp.ref, () => childRef.current);\n  const child = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => childProp ? (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(childProp, {\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick,\n    onContextMenu: handleContextMenu,\n    ref: childRef\n  }) : null, [\n    childProp,\n    handleBlur,\n    handleClick,\n    handleContextMenu,\n    handleFocus,\n    handleMouseEnter,\n    handleMouseLeave\n  ]);\n  if ((0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (child)\n      return setReferenceElement(childRef.current), () => setReferenceElement(null);\n  }, [child]), !child) return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {});\n  if (disabled) return child;\n  const tooltip = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$a,\n    {\n      \"data-ui\": \"Tooltip\",\n      ...restProps,\n      ref: setFloating,\n      style: floatingStyles,\n      zOffset,\n      $maxWidth: tooltipWidth,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        TooltipCard,\n        {\n          ...restProps,\n          animate,\n          arrow: arrowProp,\n          arrowRef: setArrow,\n          arrowX,\n          arrowY,\n          originX,\n          originY,\n          padding,\n          placement,\n          radius,\n          ref: setFloating,\n          scheme,\n          shadow,\n          children: content\n        }\n      )\n    }\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      ConditionalWrapper,\n      {\n        condition: animate,\n        wrapper: (children) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(framer_motion__WEBPACK_IMPORTED_MODULE_12__.AnimatePresence, { children }),\n        children: showTooltip && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          ConditionalWrapper,\n          {\n            condition: !!portalProp,\n            wrapper: (children) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Portal, { __unstable_name: typeof portalProp == \"string\" ? portalProp : void 0, children }),\n            children: tooltip\n          }\n        )\n      }\n    ),\n    child\n  ] });\n}), emptySubscribe = () => () => {\n}, Root$9 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div`\n  line-height: 0;\n`, ListBox = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)`\n  & > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n`, rotate = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.keyframes)`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`, AnimatedSpinnerIcon = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)((0,_sanity_icons__WEBPACK_IMPORTED_MODULE_8__.SpinnerIcon))`\n  animation: ${rotate} 500ms linear infinite;\n`;\nfunction AutocompleteOption(props) {\n  const { children, id, onSelect, selected, value } = props, handleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    setTimeout(() => {\n      onSelect(value);\n    }, 0);\n  }, [onSelect, value]), handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      event.key === \"Enter\" && !_isEnterToClickElement(event.currentTarget) && handleClick();\n    },\n    [handleClick]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"li\",\n    {\n      \"aria-selected\": selected,\n      \"data-ui\": \"AutocompleteOption\",\n      id,\n      role: \"option\",\n      onClick: handleClick,\n      onKeyDown: handleKeyDown,\n      children\n    }\n  );\n}\nfunction autocompleteReducer(state, msg2) {\n  return msg2.type === \"input/change\" ? { ...state, activeValue: null, focused: !0, query: msg2.query } : msg2.type === \"input/focus\" ? { ...state, focused: !0 } : msg2.type === \"root/blur\" ? { ...state, focused: !1, query: null } : msg2.type === \"root/clear\" ? { ...state, activeValue: null, query: null, value: null } : msg2.type === \"root/escape\" ? { ...state, focused: !1, query: null } : msg2.type === \"root/open\" ? { ...state, query: state.query || msg2.query } : msg2.type === \"root/setActiveValue\" ? { ...state, activeValue: msg2.value, listFocused: msg2.listFocused || state.listFocused } : msg2.type === \"root/setListFocused\" ? { ...state, listFocused: msg2.listFocused } : msg2.type === \"value/change\" ? { ...state, activeValue: msg2.value, query: null, value: msg2.value } : state;\n}\nconst AUTOCOMPLETE_LISTBOX_IGNORE_KEYS = [\n  \"Control\",\n  \"Shift\",\n  \"Alt\",\n  \"Enter\",\n  \"Home\",\n  \"End\",\n  \"PageUp\",\n  \"PageDown\",\n  \"Meta\",\n  \"Tab\",\n  \"CapsLock\"\n], AUTOCOMPLETE_POPOVER_PLACEMENT = \"bottom-start\", AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS = [\"bottom-start\", \"top-start\"], DEFAULT_RENDER_VALUE = (value, option) => option ? option.value : value, DEFAULT_FILTER_OPTION = (query, option) => option.value.toLowerCase().indexOf(query.toLowerCase()) > -1, InnerAutocomplete = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    border: border2 = !0,\n    customValidity,\n    disabled,\n    filterOption: filterOptionProp,\n    fontSize: fontSize2 = 2,\n    icon,\n    id,\n    listBox = EMPTY_RECORD,\n    loading,\n    onBlur,\n    onChange,\n    onFocus,\n    onQueryChange,\n    onSelect,\n    openButton,\n    openOnFocus,\n    options: optionsProp,\n    padding: paddingProp = 3,\n    popover = EMPTY_RECORD,\n    prefix,\n    radius = 2,\n    readOnly,\n    relatedElements,\n    renderOption: renderOptionProp,\n    renderPopover,\n    renderValue = DEFAULT_RENDER_VALUE,\n    suffix,\n    value: valueProp,\n    ...restProps\n  } = props, [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(autocompleteReducer, {\n    activeValue: valueProp || null,\n    focused: !1,\n    listFocused: !1,\n    query: null,\n    value: valueProp || null\n  }), { activeValue, focused, listFocused, query, value } = state, defaultRenderOption = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    ({ value: value2 }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Card, { \"data-as\": \"button\", padding: paddingProp, radius: 2, tone: \"inherit\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, textOverflow: \"ellipsis\", children: value2 }) }),\n    [fontSize2, paddingProp]\n  ), renderOption = typeof renderOptionProp == \"function\" ? renderOptionProp : defaultRenderOption, filterOption = typeof filterOptionProp == \"function\" ? filterOptionProp : DEFAULT_FILTER_OPTION, rootElementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), resultsPopoverElementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), inputElementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), listBoxElementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), listFocusedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1), valueRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(value), valuePropRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(valueProp), popoverMouseWithinRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => inputElementRef.current\n  );\n  const listBoxId = `${id}-listbox`, options = Array.isArray(optionsProp) ? optionsProp : EMPTY_ARRAY, padding = useArrayProp(paddingProp), currentOption = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => value !== null ? options.find((o) => o.value === value) : void 0,\n    [options, value]\n  ), filteredOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => options.filter((option) => query ? filterOption(query, option) : !0),\n    [filterOption, options, query]\n  ), filteredOptionsLen = filteredOptions.length, activeItemId = activeValue ? `${id}-option-${activeValue}` : void 0, expanded = query !== null && loading || focused && query !== null, handleRootBlur = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      setTimeout(() => {\n        if (popoverMouseWithinRef.current)\n          return;\n        const elements = (relatedElements || []).concat(\n          rootElementRef.current ? [rootElementRef.current] : [],\n          resultsPopoverElementRef.current ? [resultsPopoverElementRef.current] : []\n        );\n        let focusInside = !1;\n        if (document.activeElement) {\n          for (const e of elements)\n            if (e === document.activeElement || e.contains(document.activeElement)) {\n              focusInside = !0;\n              break;\n            }\n        }\n        focusInside === !1 && (dispatch({ type: \"root/blur\" }), popoverMouseWithinRef.current = !1, onQueryChange && onQueryChange(null), onBlur && onBlur(event));\n      }, 0);\n    },\n    [onBlur, onQueryChange, relatedElements]\n  ), handleRootFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event) => {\n    const listBoxElement = listBoxElementRef.current, focusedElement = event.target instanceof HTMLElement ? event.target : null, listFocused2 = (listBoxElement == null ? void 0 : listBoxElement.contains(focusedElement)) || !1;\n    listFocused2 !== listFocusedRef.current && (listFocusedRef.current = listFocused2, dispatch({ type: \"root/setListFocused\", listFocused: listFocused2 }));\n  }, []), handleOptionSelect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (v) => {\n      var _a;\n      dispatch({ type: \"value/change\", value: v }), popoverMouseWithinRef.current = !1, onSelect && onSelect(v), valueRef.current = v, onChange && onChange(v), onQueryChange && onQueryChange(null), (_a = inputElementRef.current) == null || _a.focus();\n    },\n    [onChange, onSelect, onQueryChange]\n  ), handleRootKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      var _a, _b;\n      if (event.key === \"ArrowDown\") {\n        if (event.preventDefault(), !filteredOptionsLen) return;\n        const activeOption = filteredOptions.find((o) => o.value === activeValue), activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1, nextActiveOption = filteredOptions[(activeIndex + 1) % filteredOptionsLen];\n        nextActiveOption && dispatch({ type: \"root/setActiveValue\", value: nextActiveOption.value, listFocused: !0 });\n        return;\n      }\n      if (event.key === \"ArrowUp\") {\n        if (event.preventDefault(), !filteredOptionsLen) return;\n        const activeOption = filteredOptions.find((o) => o.value === activeValue), activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1, nextActiveOption = filteredOptions[activeIndex === -1 ? filteredOptionsLen - 1 : (filteredOptionsLen + activeIndex - 1) % filteredOptionsLen];\n        nextActiveOption && dispatch({ type: \"root/setActiveValue\", value: nextActiveOption.value, listFocused: !0 });\n        return;\n      }\n      if (event.key === \"Escape\") {\n        dispatch({ type: \"root/escape\" }), popoverMouseWithinRef.current = !1, onQueryChange && onQueryChange(null), (_a = inputElementRef.current) == null || _a.focus();\n        return;\n      }\n      const target = event.target, listEl = listBoxElementRef.current;\n      if ((listEl === target || listEl != null && listEl.contains(target)) && !AUTOCOMPLETE_LISTBOX_IGNORE_KEYS.includes(event.key)) {\n        (_b = inputElementRef.current) == null || _b.focus();\n        return;\n      }\n    },\n    [activeValue, filteredOptions, filteredOptionsLen, onQueryChange]\n  ), handleInputChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      const nextQuery = event.currentTarget.value;\n      dispatch({ type: \"input/change\", query: nextQuery }), onQueryChange && onQueryChange(nextQuery);\n    },\n    [onQueryChange]\n  ), dispatchOpen = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    dispatch({\n      type: \"root/open\",\n      query: value ? renderValue(value, currentOption) : \"\"\n    });\n  }, [currentOption, renderValue, value]), handleInputFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      focused || (dispatch({ type: \"input/focus\" }), onFocus && onFocus(event), openOnFocus && dispatchOpen());\n    },\n    [focused, onFocus, openOnFocus, dispatchOpen]\n  ), handlePopoverMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    popoverMouseWithinRef.current = !0;\n  }, []), handlePopoverMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    popoverMouseWithinRef.current = !1;\n  }, []), handleClearButtonClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    var _a;\n    dispatch({ type: \"root/clear\" }), valueRef.current = \"\", onChange && onChange(\"\"), onQueryChange && onQueryChange(null), (_a = inputElementRef.current) == null || _a.focus();\n  }, [onChange, onQueryChange]), handleClearButtonFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    dispatch({ type: \"input/focus\" });\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (valueProp !== valuePropRef.current) {\n      valuePropRef.current = valueProp, valueProp !== void 0 && (dispatch({ type: \"value/change\", value: valueProp }), valueRef.current = valueProp);\n      return;\n    }\n    valueProp !== valueRef.current && (valueRef.current = valueProp || null, dispatch({ type: \"value/change\", value: valueProp || null }));\n  }, [valueProp]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    !focused && valueRef.current && dispatch({ type: \"root/setActiveValue\", value: valueRef.current });\n  }, [focused]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const listElement = listBoxElementRef.current;\n    if (!listElement) return;\n    const activeOption = filteredOptions.find((o) => o.value === activeValue);\n    if (activeOption) {\n      const activeIndex = filteredOptions.indexOf(activeOption), activeItemElement = listElement.childNodes[activeIndex];\n      if (activeItemElement) {\n        if (_hasFocus(activeItemElement))\n          return;\n        focusFirstDescendant(activeItemElement);\n      }\n    }\n  }, [activeValue, filteredOptions]);\n  const clearButton = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    if (!loading && !disabled && value)\n      return {\n        \"aria-label\": \"Clear\",\n        onFocus: handleClearButtonFocus\n      };\n  }, [disabled, handleClearButtonFocus, loading, value]), openButtonBoxPadding = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => padding.map((v) => v === 0 ? 0 : v === 1 || v === 2 ? 1 : v - 2),\n    [padding]\n  ), openButtonPadding = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => padding.map((v) => Math.max(v - 1, 0)), [padding]), openButtonProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => typeof openButton == \"object\" ? openButton : EMPTY_RECORD,\n    [openButton]\n  ), handleOpenClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      dispatchOpen(), openButtonProps.onClick && openButtonProps.onClick(event), _raf(() => {\n        var _a;\n        return (_a = inputElementRef.current) == null ? void 0 : _a.focus();\n      });\n    },\n    [openButtonProps, dispatchOpen]\n  ), openButtonNode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => !disabled && !readOnly && openButton ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { \"aria-hidden\": expanded, padding: openButtonBoxPadding, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Button,\n      {\n        \"aria-label\": \"Open\",\n        disabled: expanded,\n        fontSize: fontSize2,\n        icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_8__.ChevronDownIcon,\n        mode: \"bleed\",\n        padding: openButtonPadding,\n        ...openButtonProps,\n        onClick: handleOpenClick\n      }\n    ) }) : void 0,\n    [\n      disabled,\n      expanded,\n      fontSize2,\n      handleOpenClick,\n      openButton,\n      openButtonBoxPadding,\n      openButtonPadding,\n      openButtonProps,\n      readOnly\n    ]\n  ), inputValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => query === null ? value !== null ? renderValue(value, currentOption) : \"\" : query, [currentOption, query, renderValue, value]), input = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    TextInput,\n    {\n      ...restProps,\n      \"aria-activedescendant\": activeItemId,\n      \"aria-autocomplete\": \"list\",\n      \"aria-expanded\": expanded,\n      \"aria-owns\": listBoxId,\n      autoCapitalize: \"off\",\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      border: border2,\n      clearButton,\n      customValidity,\n      disabled,\n      fontSize: fontSize2,\n      icon,\n      iconRight: loading && AnimatedSpinnerIcon,\n      id,\n      inputMode: \"search\",\n      onChange: handleInputChange,\n      onClear: handleClearButtonClick,\n      onFocus: handleInputFocus,\n      padding,\n      prefix,\n      radius,\n      readOnly,\n      ref: inputElementRef,\n      role: \"combobox\",\n      spellCheck: !1,\n      suffix: suffix || openButtonNode,\n      value: inputValue\n    }\n  ), handleListBoxKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      var _a;\n      event.key === \"Tab\" && listFocused && ((_a = inputElementRef.current) == null || _a.focus());\n    },\n    [listFocused]\n  ), content = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => filteredOptions.length === 0 ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    ListBox,\n    {\n      \"data-ui\": \"AutoComplete__results\",\n      onKeyDown: handleListBoxKeyDown,\n      padding: 1,\n      ...listBox,\n      tabIndex: -1,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Stack,\n        {\n          as: \"ul\",\n          \"aria-multiselectable\": !1,\n          \"data-ui\": \"AutoComplete__resultsList\",\n          id: listBoxId,\n          ref: listBoxElementRef,\n          role: \"listbox\",\n          space: 1,\n          children: filteredOptions.map((option) => {\n            const active = activeValue !== null ? option.value === activeValue : currentOption === option;\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n              AutocompleteOption,\n              {\n                id: `${id}-option-${option.value}`,\n                onSelect: handleOptionSelect,\n                selected: active,\n                value: option.value,\n                children: (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(renderOption(option), {\n                  disabled: loading,\n                  selected: active,\n                  tabIndex: listFocused && active ? 0 : -1\n                })\n              },\n              option.value\n            );\n          })\n        }\n      )\n    }\n  ), [\n    activeValue,\n    currentOption,\n    filteredOptions,\n    handleOptionSelect,\n    handleListBoxKeyDown,\n    id,\n    listBox,\n    listBoxId,\n    listFocused,\n    loading,\n    renderOption\n  ]), results = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => renderPopover ? renderPopover(\n    {\n      content,\n      hidden: !expanded,\n      inputElement: inputElementRef.current,\n      onMouseEnter: handlePopoverMouseEnter,\n      onMouseLeave: handlePopoverMouseLeave\n    },\n    resultsPopoverElementRef\n  ) : filteredOptionsLen === 0 ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Popover,\n    {\n      arrow: !1,\n      constrainSize: !0,\n      content,\n      fallbackPlacements: AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS,\n      matchReferenceWidth: !0,\n      onMouseEnter: handlePopoverMouseEnter,\n      onMouseLeave: handlePopoverMouseLeave,\n      open: expanded,\n      overflow: \"auto\",\n      placement: AUTOCOMPLETE_POPOVER_PLACEMENT,\n      portal: !0,\n      radius,\n      ref: resultsPopoverElementRef,\n      referenceElement: inputElementRef.current,\n      ...popover\n    }\n  ), [\n    content,\n    expanded,\n    filteredOptionsLen,\n    handlePopoverMouseEnter,\n    handlePopoverMouseLeave,\n    popover,\n    radius,\n    renderPopover\n  ]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    Root$9,\n    {\n      \"data-ui\": \"Autocomplete\",\n      onBlur: handleRootBlur,\n      onFocus: handleRootFocus,\n      onKeyDown: handleRootKeyDown,\n      ref: rootElementRef,\n      children: [\n        input,\n        results\n      ]\n    }\n  );\n}), Autocomplete = InnerAutocomplete, Root$8 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.ol`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  list-style: none;\n  align-items: center;\n  white-space: nowrap;\n  line-height: 0;\n`, ExpandButton = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Button)`\n  appearance: none;\n  margin: -4px;\n`, Breadcrumbs = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { children, maxLength, separator, space: spaceRaw = 2, ...restProps } = props, space = useArrayProp(spaceRaw), [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [expandElement, setExpandElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [popoverElement, setPopoverElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), collapse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setOpen(!1), []), expand = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setOpen(!0), []);\n  useClickOutside(collapse, [expandElement, popoverElement]);\n  const rawItems = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(children).filter(react__WEBPACK_IMPORTED_MODULE_1__.isValidElement), [children]), items = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    const len = rawItems.length;\n    if (maxLength && len > maxLength) {\n      const beforeLength = Math.ceil(maxLength / 2), afterLength = Math.floor(maxLength / 2);\n      return [\n        ...rawItems.slice(0, beforeLength - 1),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          Popover,\n          {\n            constrainSize: !0,\n            content: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Stack, { as: \"ol\", overflow: \"auto\", padding: space, space, children: rawItems.slice(beforeLength - 1, len - afterLength) }),\n            open,\n            placement: \"top\",\n            portal: !0,\n            ref: setPopoverElement,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n              ExpandButton,\n              {\n                fontSize: 1,\n                mode: \"bleed\",\n                onClick: open ? collapse : expand,\n                padding: 1,\n                ref: setExpandElement,\n                selected: open,\n                text: \"\\u2026\"\n              }\n            )\n          },\n          \"button\"\n        ),\n        ...rawItems.slice(len - afterLength)\n      ];\n    }\n    return rawItems;\n  }, [collapse, expand, maxLength, open, rawItems, space]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$8, { \"data-ui\": \"Breadcrumbs\", ...restProps, ref, children: items.map((item, itemIndex) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [\n    itemIndex > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { \"aria-hidden\": !0, as: \"li\", paddingX: space, children: separator || /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { muted: !0, children: \"/\" }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"li\", children: item })\n  ] }, itemIndex)) });\n});\nfunction dialogStyle({ theme }) {\n  const { color } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(theme);\n  return {\n    \"&:not([hidden])\": {\n      display: \"flex\"\n    },\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"none\",\n    background: color.backdrop\n  };\n}\nfunction responsiveDialogPositionStyle(props) {\n  const { media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$position, (position) => ({ \"&&\": { position } }));\n}\nfunction animationDialogStyle(props) {\n  return props.$animate ? (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    @keyframes zoomIn {\n      from {\n        opacity: 0;\n        transform: scale(0.95);\n      }\n      to {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    animation: fadeIn 200ms ease-out;\n    // Animates the dialog card.\n    & > [data-ui='DialogCard'] {\n      animation: zoomIn 200ms ease-out;\n    }\n  ` : (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)``;\n}\nconst key$3 = Symbol.for(\"@sanity/ui/context/dialog\"), DialogContext = createGlobalScopedContext(key$3, {\n  version: 0\n});\nfunction useDialog() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(DialogContext);\n}\nfunction isTargetWithinScope(boundaryElement, portalElement, target) {\n  return !boundaryElement || !portalElement ? !0 : containsOrEqualsElement(boundaryElement, target) || containsOrEqualsElement(portalElement, target);\n}\nconst Root$7 = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Layer)(responsivePaddingStyle, dialogStyle, responsiveDialogPositionStyle, animationDialogStyle), DialogContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Container)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`, DialogCardRoot = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Card)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  min-height: 0;\n  max-height: 100%;\n  overflow: hidden;\n  overflow: clip;\n`, DialogLayout = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Flex)`\n  flex: 1;\n  min-height: 0;\n  width: 100%;\n`, DialogHeader = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)`\n  position: relative;\n  z-index: 2;\n`, DialogContent = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)`\n  position: relative;\n  z-index: 1;\n  overflow: auto;\n  outline: none;\n`, DialogFooter = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)`\n  position: relative;\n  z-index: 3;\n`, DialogCard = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  var _a;\n  const {\n    __unstable_autoFocus: autoFocus,\n    __unstable_hideCloseButton: hideCloseButton,\n    children,\n    contentRef: forwardedContentRef,\n    footer,\n    header,\n    id,\n    onClickOutside,\n    onClose,\n    portal: portalProp,\n    radius: radiusProp,\n    scheme,\n    shadow: shadowProp,\n    width: widthProp\n  } = props, portal = usePortal(), portalElement = portalProp ? ((_a = portal.elements) == null ? void 0 : _a[portalProp]) || null : portal.element, boundaryElement = useBoundaryElement().element, radius = useArrayProp(radiusProp), shadow = useArrayProp(shadowProp), width = useArrayProp(widthProp), ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), [rootElement, setRootElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), contentRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), layer = useLayer(), { isTopLayer } = layer, labelId = `${id}_label`, showCloseButton = !!onClose && hideCloseButton === !1, showHeader = !!header || showCloseButton;\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(forwardedRef, () => ref.current), (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedContentRef,\n    () => contentRef.current\n  ), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    autoFocus && ref.current && focusFirstDescendant(ref.current);\n  }, [autoFocus, ref]), useGlobalKeyDown(\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        if (!isTopLayer || !onClose) return;\n        const target = document.activeElement;\n        target && !isTargetWithinScope(boundaryElement, portalElement, target) || event.key === \"Escape\" && (event.preventDefault(), event.stopPropagation(), onClose());\n      },\n      [boundaryElement, isTopLayer, onClose, portalElement]\n    )\n  ), useClickOutside(\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        if (!isTopLayer || !onClickOutside) return;\n        const target = event.target;\n        target && !isTargetWithinScope(boundaryElement, portalElement, target) || onClickOutside();\n      },\n      [boundaryElement, isTopLayer, onClickOutside, portalElement]\n    ),\n    [rootElement]\n  );\n  const setRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((el) => {\n    setRootElement(el), ref.current = el;\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DialogContainer, { \"data-ui\": \"DialogCard\", width, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DialogCardRoot, { radius, ref: setRef, scheme, shadow, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(DialogLayout, { direction: \"column\", children: [\n    showHeader && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DialogHeader, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { align: \"center\", padding: 3, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { flex: 1, padding: 2, children: header && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { id: labelId, size: 1, weight: \"semibold\", children: header }) }),\n      showCloseButton && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { flex: \"none\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Button,\n        {\n          \"aria-label\": \"Close dialog\",\n          disabled: !onClose,\n          icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_8__.CloseIcon,\n          mode: \"bleed\",\n          onClick: onClose,\n          padding: 2\n        }\n      ) })\n    ] }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DialogContent, { flex: 1, ref: contentRef, tabIndex: -1, children }),\n    footer && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DialogFooter, { children: footer })\n  ] }) }) });\n}), Dialog = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  var _a;\n  const dialog = useDialog(), { layer } = useTheme_v2(), {\n    __unstable_autoFocus: autoFocus = !0,\n    __unstable_hideCloseButton: hideCloseButton = !1,\n    cardRadius: cardRadiusProp = 4,\n    cardShadow = 3,\n    children,\n    contentRef,\n    footer,\n    header,\n    id,\n    onActivate,\n    onClickOutside,\n    onClose,\n    onFocus,\n    padding: paddingProp = 3,\n    portal: portalProp,\n    position: positionProp = dialog.position || \"fixed\",\n    scheme,\n    width: widthProp = 0,\n    zOffset: zOffsetProp = dialog.zOffset || layer.dialog.zOffset,\n    animate: _animate = !1,\n    ...restProps\n  } = props, animate = usePrefersReducedMotion() ? !1 : _animate, portal = usePortal(), portalElement = portalProp ? ((_a = portal.elements) == null ? void 0 : _a[portalProp]) || null : portal.element, boundaryElement = useBoundaryElement().element, cardRadius = useArrayProp(cardRadiusProp), padding = useArrayProp(paddingProp), position = useArrayProp(positionProp), width = useArrayProp(widthProp), zOffset = useArrayProp(zOffsetProp), preDivRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), postDivRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), cardRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), focusedElementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), handleFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      onFocus == null || onFocus(event);\n      const target = event.target, cardElement = cardRef.current;\n      if (cardElement && target === preDivRef.current) {\n        focusLastDescendant(cardElement);\n        return;\n      }\n      if (cardElement && target === postDivRef.current) {\n        focusFirstDescendant(cardElement);\n        return;\n      }\n      isHTMLElement(event.target) && (focusedElementRef.current = event.target);\n    },\n    [onFocus]\n  ), labelId = `${id}_label`, rootClickTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(), handleRootClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    rootClickTimeoutRef.current && clearTimeout(rootClickTimeoutRef.current), rootClickTimeoutRef.current = setTimeout(() => {\n      const activeElement = document.activeElement;\n      if (activeElement && !isTargetWithinScope(boundaryElement, portalElement, activeElement)) {\n        const target = focusedElementRef.current;\n        if (!target || !document.body.contains(target)) {\n          const cardElement = cardRef.current;\n          cardElement && focusFirstDescendant(cardElement);\n          return;\n        }\n        target.focus();\n      }\n    }, 0);\n  }, [boundaryElement, portalElement]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Portal, { __unstable_name: portalProp, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    Root$7,\n    {\n      ...restProps,\n      $animate: animate,\n      $padding: padding,\n      $position: position,\n      \"aria-labelledby\": labelId,\n      \"aria-modal\": !0,\n      \"data-ui\": \"Dialog\",\n      id,\n      onActivate,\n      onClick: handleRootClick,\n      onFocus: handleFocus,\n      ref,\n      role: \"dialog\",\n      zOffset,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ref: preDivRef, tabIndex: 0 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          DialogCard,\n          {\n            __unstable_autoFocus: autoFocus,\n            __unstable_hideCloseButton: hideCloseButton,\n            contentRef,\n            footer,\n            header,\n            id,\n            onClickOutside,\n            onClose,\n            portal: portalProp,\n            radius: cardRadius,\n            ref: cardRef,\n            scheme,\n            shadow: cardShadow,\n            width,\n            children\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ref: postDivRef, tabIndex: 0 })\n      ]\n    }\n  ) });\n});\nfunction DialogProvider(props) {\n  const { children, position, zOffset } = props, contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      version: 0,\n      position,\n      zOffset\n    }),\n    [position, zOffset]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DialogContext.Provider, { value: contextValue, children });\n}\nconst Root$6 = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.kbd`\n  font: inherit;\n  padding: 1px;\n\n  &:not([hidden]) {\n    display: block;\n  }\n`, Key = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(KBD)`\n  &:not([hidden]) {\n    display: block;\n  }\n`, Hotkeys = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { fontSize: fontSize2, keys, padding, radius, space: spaceProp = 0.5, ...restProps } = props, space = useArrayProp(spaceProp);\n  return !keys || keys.length === 0 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$6, { \"data-ui\": \"Hotkeys\", ...restProps, ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Inline, { as: \"span\", space, children: keys.map((key2, i) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Key, { fontSize: fontSize2, padding, radius, children: key2 }, i)) }) });\n}), key$2 = Symbol.for(\"@sanity/ui/context/menu\"), MenuContext = createGlobalScopedContext(key$2, null);\nfunction _isFocusable(element) {\n  return isHTMLAnchorElement(element) && element.getAttribute(\"data-disabled\") !== \"true\" || isHTMLButtonElement(element) && !element.disabled;\n}\nfunction _getFocusableElements(elements) {\n  return elements.filter(_isFocusable);\n}\nfunction _getDOMPath(rootElement, el) {\n  const path = [];\n  let e = el;\n  for (; e !== rootElement; ) {\n    const parentElement = e.parentElement;\n    if (!parentElement) return path;\n    const index = Array.from(parentElement.childNodes).indexOf(e);\n    if (path.unshift(index), parentElement === rootElement)\n      return path;\n    e = parentElement;\n  }\n  return path;\n}\nconst EMPTY_PATH = [];\nfunction _sortElements(rootElement, elements) {\n  if (!rootElement) return;\n  const map = /* @__PURE__ */ new WeakMap();\n  for (const el of elements)\n    map.set(el, _getDOMPath(rootElement, el));\n  const _sort = (a, b) => {\n    const _a = map.get(a) || EMPTY_PATH, _b = map.get(b) || EMPTY_PATH, len = Math.max(_a.length, _b.length);\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1, bIndex = _b[i] || -1;\n      if (aIndex !== bIndex)\n        return aIndex - bIndex;\n    }\n    return 0;\n  };\n  elements.sort(_sort);\n}\nfunction useMenuController(props) {\n  const { onKeyDown, originElement, shouldFocus } = props, elementsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]), [rootElement, setRootElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [activeIndex, _setActiveIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1), activeIndexRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(activeIndex), activeElement = elementsRef.current[activeIndex] || null, mounted = !!rootElement, setActiveIndex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((nextActiveIndex) => {\n    _setActiveIndex(nextActiveIndex), activeIndexRef.current = nextActiveIndex;\n  }, []), mount = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (element, selected) => {\n      if (!element) return () => {\n      };\n      if (elementsRef.current.indexOf(element) === -1 && (elementsRef.current.push(element), _sortElements(rootElement, elementsRef.current)), selected) {\n        const selectedIndex = elementsRef.current.indexOf(element);\n        setActiveIndex(selectedIndex);\n      }\n      return () => {\n        const idx = elementsRef.current.indexOf(element);\n        idx > -1 && elementsRef.current.splice(idx, 1);\n      };\n    },\n    [rootElement, setActiveIndex]\n  ), handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      if (event.key === \"Tab\") {\n        originElement && originElement.focus();\n        return;\n      }\n      if (event.key === \"Home\") {\n        event.preventDefault(), event.stopPropagation();\n        const el = _getFocusableElements(elementsRef.current)[0];\n        if (!el) return;\n        const currentIndex = elementsRef.current.indexOf(el);\n        setActiveIndex(currentIndex);\n        return;\n      }\n      if (event.key === \"End\") {\n        event.preventDefault(), event.stopPropagation();\n        const focusableElements = _getFocusableElements(elementsRef.current), el = focusableElements[focusableElements.length - 1];\n        if (!el) return;\n        const currentIndex = elementsRef.current.indexOf(el);\n        setActiveIndex(currentIndex);\n        return;\n      }\n      if (event.key === \"ArrowUp\") {\n        event.preventDefault(), event.stopPropagation();\n        const focusableElements = _getFocusableElements(elementsRef.current), focusableLen = focusableElements.length;\n        if (focusableLen === 0) return;\n        const focusedElement = elementsRef.current[activeIndexRef.current];\n        let focusedIndex = focusableElements.indexOf(focusedElement);\n        focusedIndex = (focusedIndex - 1 + focusableLen) % focusableLen;\n        const el = focusableElements[focusedIndex], currentIndex = elementsRef.current.indexOf(el);\n        setActiveIndex(currentIndex);\n        return;\n      }\n      if (event.key === \"ArrowDown\") {\n        event.preventDefault(), event.stopPropagation();\n        const focusableElements = _getFocusableElements(elementsRef.current), focusableLen = focusableElements.length;\n        if (focusableLen === 0) return;\n        const focusedElement = elementsRef.current[activeIndexRef.current];\n        let focusedIndex = focusableElements.indexOf(focusedElement);\n        focusedIndex = (focusedIndex + 1) % focusableLen;\n        const el = focusableElements[focusedIndex], currentIndex = elementsRef.current.indexOf(el);\n        setActiveIndex(currentIndex);\n        return;\n      }\n      onKeyDown && onKeyDown(event);\n    },\n    [onKeyDown, originElement, setActiveIndex]\n  ), handleItemMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      const element = event.currentTarget, currentIndex = elementsRef.current.indexOf(element);\n      setActiveIndex(currentIndex);\n    },\n    [setActiveIndex]\n  ), handleItemMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    setActiveIndex(-2), rootElement == null || rootElement.focus();\n  }, [setActiveIndex, rootElement]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!mounted) return;\n    const rafId = window.requestAnimationFrame(() => {\n      const _activeIndex = activeIndexRef.current;\n      if (_activeIndex === -1) {\n        if (shouldFocus === \"first\") {\n          const el = _getFocusableElements(elementsRef.current)[0];\n          if (el) {\n            const currentIndex = elementsRef.current.indexOf(el);\n            setActiveIndex(currentIndex), activeIndexRef.current = currentIndex;\n          }\n        }\n        if (shouldFocus === \"last\") {\n          const focusableElements = _getFocusableElements(elementsRef.current), el = focusableElements[focusableElements.length - 1];\n          if (el) {\n            const currentIndex = elementsRef.current.indexOf(el);\n            setActiveIndex(currentIndex), activeIndexRef.current = currentIndex;\n          }\n        }\n        return;\n      }\n      const element = elementsRef.current[_activeIndex] || null;\n      element == null || element.focus();\n    });\n    return () => {\n      window.cancelAnimationFrame(rafId);\n    };\n  }, [activeIndex, mounted, setActiveIndex, shouldFocus]), {\n    activeElement,\n    activeIndex,\n    handleItemMouseEnter,\n    handleItemMouseLeave,\n    handleKeyDown,\n    mount,\n    rootElement,\n    setRootElement\n  };\n}\nconst Root$5 = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)`\n  outline: none;\n  overflow: auto;\n`, Menu = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    children,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusFirst,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusLast,\n    onClickOutside,\n    onEscape,\n    onItemClick,\n    onItemSelect,\n    onKeyDown,\n    originElement,\n    padding = 1,\n    registerElement,\n    shouldFocus = props.focusFirst && \"first\" || props.focusLast && \"last\" || null,\n    space = 1,\n    ...restProps\n  } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(forwardedRef, () => ref.current);\n  const { isTopLayer } = useLayer(), {\n    activeElement,\n    activeIndex,\n    handleItemMouseEnter,\n    handleItemMouseLeave,\n    handleKeyDown,\n    mount,\n    rootElement,\n    setRootElement\n  } = useMenuController({ onKeyDown, originElement, shouldFocus }), handleRefChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (el) => {\n      setRootElement(el), ref.current = el;\n    },\n    [setRootElement]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    onItemSelect && onItemSelect(activeIndex);\n  }, [activeIndex, onItemSelect]), useClickOutside(\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => isTopLayer && onClickOutside && onClickOutside(event),\n      [isTopLayer, onClickOutside]\n    ),\n    [rootElement]\n  ), useGlobalKeyDown(\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        isTopLayer && event.key === \"Escape\" && (event.stopPropagation(), onEscape && onEscape());\n      },\n      [isTopLayer, onEscape]\n    )\n  ), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!(!rootElement || !registerElement))\n      return registerElement(rootElement);\n  }, [registerElement, rootElement]);\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      version: 0,\n      activeElement,\n      activeIndex,\n      mount,\n      onClickOutside,\n      onEscape,\n      onItemClick,\n      onItemMouseEnter: handleItemMouseEnter,\n      onItemMouseLeave: handleItemMouseLeave,\n      registerElement,\n      // deprecated\n      onMouseEnter: handleItemMouseEnter,\n      onMouseLeave: handleItemMouseLeave\n    }),\n    [\n      activeElement,\n      activeIndex,\n      mount,\n      handleItemMouseEnter,\n      handleItemMouseLeave,\n      onClickOutside,\n      onEscape,\n      onItemClick,\n      registerElement\n    ]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MenuContext.Provider, { value, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$5,\n    {\n      \"data-ui\": \"Menu\",\n      ...restProps,\n      onKeyDown: handleKeyDown,\n      padding,\n      ref: handleRefChange,\n      role: \"menu\",\n      tabIndex: -1,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Stack, { space, children })\n    }\n  ) });\n}), MenuButton = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    __unstable_disableRestoreFocusOnClose: disableRestoreFocusOnClose = !1,\n    boundaryElement: deprecated_boundaryElement,\n    button: buttonProp,\n    id,\n    menu: menuProp,\n    onClose,\n    onOpen,\n    placement: deprecated_placement,\n    popoverScheme: deprecated_popoverScheme,\n    portal: deprecated_portal = !0,\n    popover,\n    popoverRadius: deprecated_popoverRadius,\n    preventOverflow: deprecated_preventOverflow\n  } = props, [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [shouldFocus, setShouldFocus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [buttonElement, setButtonElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [menuElements, setChildMenuElements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]), openRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(open);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    onOpen && open && !openRef.current && onOpen();\n  }, [onOpen, open]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    onClose && !open && openRef.current && onClose();\n  }, [onClose, open]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    openRef.current = open;\n  }, [open]);\n  const handleButtonClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    setOpen((v) => !v), setShouldFocus(null);\n  }, []), handleMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      open && event.preventDefault();\n    },\n    [open]\n  ), handleButtonKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event) => {\n    if (event.key === \"ArrowDown\" || event.key === \"Enter\" || event.key === \" \") {\n      event.preventDefault(), setOpen(!0), setShouldFocus(\"first\");\n      return;\n    }\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault(), setOpen(!0), setShouldFocus(\"last\");\n      return;\n    }\n  }, []), handleMenuClickOutside = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      const target = event.target;\n      if (target instanceof Node && !(buttonElement && (target === buttonElement || buttonElement.contains(target)))) {\n        for (const el of menuElements)\n          if (target === el || el.contains(target))\n            return;\n        setOpen(!1);\n      }\n    },\n    [buttonElement, menuElements]\n  ), handleMenuEscape = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    setOpen(!1), !disableRestoreFocusOnClose && buttonElement && buttonElement.focus();\n  }, [buttonElement, disableRestoreFocusOnClose]), handleBlur = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      const target = event.relatedTarget;\n      if (target instanceof Node) {\n        for (const el of menuElements)\n          if (el === target || el.contains(target))\n            return;\n        setOpen(!1);\n      }\n    },\n    [menuElements]\n  ), handleItemClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    setOpen(!1), !disableRestoreFocusOnClose && buttonElement && buttonElement.focus();\n  }, [buttonElement, disableRestoreFocusOnClose]), registerElement = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((el) => (setChildMenuElements((els) => els.concat([el])), () => {\n    setChildMenuElements((els) => els.filter((_el) => _el !== el));\n  }), []), menuProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      \"aria-labelledby\": id,\n      onBlurCapture: handleBlur,\n      onClickOutside: handleMenuClickOutside,\n      onEscape: handleMenuEscape,\n      onItemClick: handleItemClick,\n      originElement: buttonElement,\n      registerElement,\n      shouldFocus\n    }),\n    [\n      buttonElement,\n      handleMenuClickOutside,\n      handleMenuEscape,\n      handleItemClick,\n      id,\n      handleBlur,\n      registerElement,\n      shouldFocus\n    ]\n  ), menu = menuProp && (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(menuProp, menuProps), ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), button = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => {\n      var _a;\n      return buttonProp && (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(buttonProp, {\n        \"data-ui\": \"MenuButton\",\n        id,\n        onClick: handleButtonClick,\n        onKeyDown: handleButtonKeyDown,\n        onMouseDown: handleMouseDown,\n        \"aria-haspopup\": !0,\n        \"aria-expanded\": open,\n        ref,\n        selected: (_a = buttonProp.props.selected) != null ? _a : open\n      });\n    },\n    [buttonProp, handleButtonClick, handleButtonKeyDown, handleMouseDown, id, open]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => ref.current\n  ), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (button)\n      return setButtonElement(ref.current), () => setButtonElement(null);\n  }, [button]);\n  const popoverProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      boundaryElement: deprecated_boundaryElement,\n      overflow: \"auto\",\n      placement: deprecated_placement,\n      portal: deprecated_portal,\n      preventOverflow: deprecated_preventOverflow,\n      radius: deprecated_popoverRadius,\n      scheme: deprecated_popoverScheme,\n      ...popover || {}\n    }),\n    [\n      deprecated_boundaryElement,\n      deprecated_placement,\n      deprecated_popoverRadius,\n      deprecated_popoverScheme,\n      deprecated_portal,\n      deprecated_preventOverflow,\n      popover\n    ]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Popover, { \"data-ui\": \"MenuButton__popover\", ...popoverProps, content: menu, open, children: button || /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}) });\n}), MenuDivider = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.hr`\n  height: 1px;\n  border: 0;\n  background: var(--card-hairline-soft-color);\n  margin: 0;\n`;\nfunction selectableBaseStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    background-color: inherit;\n    color: inherit;\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `;\n}\nfunction selectableColorStyle(props) {\n  var _a;\n  const { $tone } = props, { color, style } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), tone = color.selectable[$tone];\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    ${_cardColorStyle(color, tone.enabled)}\n\n    background-color: var(--card-bg-color);\n    color: var(--card-fg-color);\n    outline: none;\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      &:disabled {\n        ${_cardColorStyle(color, tone.disabled)}\n      }\n\n      &:not(:disabled) {\n        &[aria-pressed='true'] {\n          ${_cardColorStyle(color, tone.pressed)}\n        }\n\n        &[data-selected],\n        &[aria-selected='true'] > & {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${_cardColorStyle(color, tone.hovered)}\n            }\n\n            &:active {\n              ${_cardColorStyle(color, tone.pressed)}\n            }\n          }\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      &[data-disabled] {\n        ${_cardColorStyle(color, tone.disabled)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${_cardColorStyle(color, tone.pressed)}\n        }\n\n        &[data-selected] {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${_cardColorStyle(color, tone.hovered)}\n            }\n            &:active {\n              ${_cardColorStyle(color, tone.pressed)}\n            }\n          }\n        }\n      }\n    }\n\n    ${(_a = style == null ? void 0 : style.card) == null ? void 0 : _a.root}\n  `;\n}\nconst Selectable = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(\n  responsiveRadiusStyle,\n  selectableBaseStyle,\n  selectableColorStyle\n);\nfunction useMenu() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuContext);\n  if (!value)\n    throw new Error(\"useMenu(): missing context value\");\n  if (!isRecord(value) || value.version !== 0)\n    throw new Error(\"useMenu(): the context value is not compatible\");\n  return value;\n}\nfunction MenuGroup(props) {\n  const {\n    as = \"button\",\n    children,\n    fontSize: fontSize2 = 1,\n    icon: IconComponent,\n    onClick,\n    padding = 3,\n    popover,\n    radius = 2,\n    space = 3,\n    text,\n    tone = \"default\",\n    ...restProps\n  } = props, menu = useMenu(), { scheme } = useRootTheme(), {\n    activeElement,\n    mount,\n    onClickOutside,\n    onEscape,\n    onItemClick,\n    onItemMouseEnter = menu.onMouseEnter,\n    registerElement\n  } = menu, [rootElement, setRootElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), shouldFocusRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), active = !!activeElement && activeElement === rootElement, [withinMenu, setWithinMenu] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), handleMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      setWithinMenu(!1), onItemMouseEnter(event), setOpen(!0);\n    },\n    [onItemMouseEnter]\n  ), handleMenuKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      event.key === \"ArrowLeft\" && (event.stopPropagation(), setOpen(!1), requestAnimationFrame(() => {\n        rootElement == null || rootElement.focus();\n      }));\n    },\n    [rootElement]\n  ), handleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      onClick && onClick(event), shouldFocusRef.current = \"first\", setOpen(!0), requestAnimationFrame(() => {\n        shouldFocusRef.current = null;\n      });\n    },\n    [onClick]\n  ), handleChildItemClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    setOpen(!1), onItemClick && onItemClick();\n  }, [onItemClick]), handleMenuMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setWithinMenu(!0), []);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => mount(rootElement), [mount, rootElement]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    active || setOpen(!1);\n  }, [active]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    open || setWithinMenu(!1);\n  }, [open]);\n  const childMenu = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Menu,\n    {\n      onClickOutside,\n      onEscape,\n      onItemClick: handleChildItemClick,\n      onKeyDown: handleMenuKeyDown,\n      onMouseEnter: handleMenuMouseEnter,\n      registerElement,\n      shouldFocus: shouldFocusRef.current,\n      children\n    }\n  ), handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event) => {\n    const target = event.currentTarget;\n    if (document.activeElement === target && event.key === \"ArrowRight\") {\n      shouldFocusRef.current = \"first\", setOpen(!0), setWithinMenu(!0), requestAnimationFrame(() => {\n        shouldFocusRef.current = null;\n      });\n      return;\n    }\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Popover, { ...popover, content: childMenu, \"data-ui\": \"MenuGroup__popover\", open, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Selectable,\n    {\n      \"data-as\": as,\n      \"data-ui\": \"MenuGroup\",\n      forwardedAs: as,\n      ...restProps,\n      \"aria-pressed\": as === \"button\" ? withinMenu : void 0,\n      \"data-pressed\": as !== \"button\" ? withinMenu : void 0,\n      \"data-selected\": !withinMenu && active ? \"\" : void 0,\n      $radius: useArrayProp(radius),\n      $tone: tone,\n      $scheme: scheme,\n      onClick: handleClick,\n      onKeyDown: handleKeyDown,\n      onMouseEnter: handleMouseEnter,\n      ref: setRootElement,\n      tabIndex: -1,\n      type: as === \"button\" ? \"button\" : void 0,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { gap: space, padding, children: [\n        IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n          (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(IconComponent) && IconComponent,\n          (0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(IconComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {})\n        ] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, textOverflow: \"ellipsis\", weight: \"medium\", children: text }) }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_8__.ChevronRightIcon, {}) })\n      ] })\n    }\n  ) });\n}\nconst MenuItem = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    as = \"button\",\n    children,\n    disabled,\n    fontSize: fontSize2 = 1,\n    hotkeys,\n    icon: IconComponent,\n    iconRight: IconRightComponent,\n    onClick,\n    padding = 3,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    pressed,\n    radius = 2,\n    selected: selectedProp,\n    space = 3,\n    text,\n    tone = \"default\",\n    ...restProps\n  } = props, { scheme } = useRootTheme(), menu = useMenu(), {\n    activeElement,\n    mount,\n    onItemClick,\n    onItemMouseEnter = menu.onMouseEnter,\n    onItemMouseLeave = menu.onMouseLeave\n  } = menu, [rootElement, setRootElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), active = !!activeElement && activeElement === rootElement, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(forwardedRef, () => ref.current), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => mount(rootElement, selectedProp), [mount, rootElement, selectedProp]);\n  const handleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      disabled || (onClick && onClick(event), onItemClick && onItemClick());\n    },\n    [disabled, onClick, onItemClick]\n  ), paddingProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      padding,\n      paddingX,\n      paddingY,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft\n    }),\n    [padding, paddingX, paddingY, paddingTop, paddingRight, paddingBottom, paddingLeft]\n  ), hotkeysFontSize = useArrayProp(fontSize2).map((s) => s - 1), setRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((el) => {\n    ref.current = el, setRootElement(el);\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    Selectable,\n    {\n      \"data-ui\": \"MenuItem\",\n      ...restProps,\n      \"aria-pressed\": as === \"button\" && pressed,\n      \"data-pressed\": as !== \"button\" && pressed ? \"\" : void 0,\n      \"data-selected\": active ? \"\" : void 0,\n      \"data-disabled\": disabled ? \"\" : void 0,\n      forwardedAs: as,\n      $radius: useArrayProp(radius),\n      $padding: useArrayProp(0),\n      $tone: disabled ? \"default\" : tone,\n      $scheme: scheme,\n      disabled,\n      onClick: handleClick,\n      onMouseEnter: onItemMouseEnter,\n      onMouseLeave: onItemMouseLeave,\n      ref: setRef,\n      role: \"menuitem\",\n      tabIndex: -1,\n      type: as === \"button\" ? \"button\" : void 0,\n      children: [\n        (IconComponent || text || IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { as: \"span\", gap: space, align: \"center\", ...paddingProps, children: [\n          IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(IconComponent) && IconComponent,\n            (0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(IconComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {})\n          ] }),\n          text && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, textOverflow: \"ellipsis\", weight: \"medium\", children: text }) }),\n          hotkeys && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Hotkeys,\n            {\n              fontSize: hotkeysFontSize,\n              keys: hotkeys,\n              style: { marginTop: -4, marginBottom: -4 }\n            }\n          ),\n          IconRightComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(IconRightComponent) && IconRightComponent,\n            (0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconRightComponent, {})\n          ] })\n        ] }),\n        children && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"span\", ...paddingProps, children })\n      ]\n    }\n  );\n}), keyframe = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.keyframes)`\n  0% {\n    background-position: 100%;\n  }\n  100% {\n    background-position: -100%;\n  }\n`, animation = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n  background-image: linear-gradient(\n    to right,\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-to),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from)\n  );\n  background-position: 100%;\n  background-size: 200% 100%;\n  background-attachment: fixed;\n  animation-name: ${keyframe};\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 2000ms;\n`, skeletonStyle = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n  opacity: ${({ $visible }) => $visible ? 1 : 0};\n  transition: opacity 200ms ease-in;\n\n  @media screen and (prefers-reduced-motion: no-preference) {\n    ${({ $animated }) => $animated ? animation : (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n            background-color: var(--card-skeleton-color-from);\n          `}\n  }\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    background-color: var(--card-skeleton-color-from);\n  }\n`, Root$4 = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box)(\n  responsiveRadiusStyle,\n  skeletonStyle\n), Skeleton = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { animated = !1, delay, radius, ...restProps } = props, [visible, setVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!delay);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!delay)\n      return setVisible(!0);\n    const timeout = setTimeout(() => {\n      setVisible(!0);\n    }, delay);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [delay]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$4,\n    {\n      ...restProps,\n      $animated: animated,\n      $radius: useArrayProp(radius),\n      $visible: visible,\n      ref\n    }\n  );\n}), Root$3 = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Skeleton)((props) => {\n  const { $size, $style } = props, { font, media } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), fontStyle = font[$style];\n  return _responsive(media, $size, (sizeIndex) => {\n    const fontSize2 = fontStyle.sizes[sizeIndex];\n    return { height: fontSize2.lineHeight - fontSize2.ascenderHeight - fontSize2.descenderHeight };\n  });\n}), TextSkeleton = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { size: size2 = 2, ...restProps } = props, $size = useArrayProp(size2);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$3, { ...restProps, $size, ref, $style: \"text\" });\n}), LabelSkeleton = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { size: size2 = 2, ...restProps } = props, $size = useArrayProp(size2);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$3, { ...restProps, $size, ref, $style: \"label\" });\n}), HeadingSkeleton = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { size: size2 = 2, ...restProps } = props, $size = useArrayProp(size2);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$3, { ...restProps, $size, ref, $style: \"heading\" });\n}), CodeSkeleton = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { size: size2 = 2, ...restProps } = props, $size = useArrayProp(size2);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$3, { ...restProps, $size, ref, $style: \"code\" });\n}), CustomButton = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Button)`\n  max-width: 100%;\n`, Tab = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n  const {\n    icon,\n    id,\n    focused,\n    fontSize: fontSize2 = 1,\n    label,\n    onClick,\n    onFocus,\n    padding = 2,\n    selected,\n    ...restProps\n  } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), focusedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n    forwardedRef,\n    () => ref.current\n  );\n  const handleBlur = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    focusedRef.current = !1;\n  }, []), handleFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      focusedRef.current = !0, onFocus && onFocus(event);\n    },\n    [onFocus]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    focused && !focusedRef.current && (ref.current && ref.current.focus(), focusedRef.current = !0);\n  }, [focused]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    CustomButton,\n    {\n      \"data-ui\": \"Tab\",\n      ...restProps,\n      \"aria-selected\": selected ? \"true\" : \"false\",\n      fontSize: fontSize2,\n      icon,\n      id,\n      mode: \"bleed\",\n      onClick,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      padding,\n      ref,\n      role: \"tab\",\n      selected,\n      tabIndex: selected ? 0 : -1,\n      text: label,\n      type: \"button\"\n    }\n  );\n});\nfunction _isReactElement(node) {\n  return !!node;\n}\nconst CustomInline = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Inline)`\n  & > div {\n    display: inline-block;\n    vertical-align: middle;\n    max-width: 100%;\n    box-sizing: border-box;\n  }\n`, TabList = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { children: childrenProp, ...restProps } = props, [focusedIndex, setFocusedIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1), tabs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => childrenProp.filter(_isReactElement), [childrenProp]).map(\n    (child, childIndex) => (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(child, {\n      focused: focusedIndex === childIndex,\n      key: childIndex,\n      onFocus: () => handleTabFocus(childIndex)\n    })\n  ), numTabs = tabs.length, handleTabFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((tabIdx) => {\n    setFocusedIndex(tabIdx);\n  }, []), handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      event.key === \"ArrowLeft\" && setFocusedIndex((prevIndex) => (prevIndex + numTabs - 1) % numTabs), event.key === \"ArrowRight\" && setFocusedIndex((prevIndex) => (prevIndex + 1) % numTabs);\n    },\n    [numTabs]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    CustomInline,\n    {\n      \"data-ui\": \"TabList\",\n      ...restProps,\n      onKeyDown: handleKeyDown,\n      ref,\n      role: \"tablist\",\n      children: tabs\n    }\n  );\n}), TabPanel = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { flex, ...restProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Box,\n    {\n      \"data-ui\": \"TabPanel\",\n      ...restProps,\n      flex,\n      ref,\n      role: \"tabpanel\",\n      tabIndex: props.tabIndex === void 0 ? 0 : props.tabIndex,\n      children: props.children\n    }\n  );\n}), TextBox = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Flex)`\n  overflow-x: auto;\n`, loadingAnimation = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.keyframes)`\n  0% {\n    width: 0;\n  }\n  100% {\n    width: 100%;\n  } \n`, LOADING_BAR_HEIGHT = 2;\nfunction rootStyles(props) {\n  const { color } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), loadingBarColor = color.button.default[props.tone].enabled.bg;\n  return props.$duration ? (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    pointer-events: all;\n    width: 100%;\n    position: relative;\n    overflow: hidden;\n    overflow: clip;\n    padding-bottom: ${LOADING_BAR_HEIGHT}px;\n    &::before {\n      content: '';\n      position: absolute;\n      bottom: 0px;\n      height: ${LOADING_BAR_HEIGHT}px;\n      background: ${loadingBarColor};\n      animation-name: ${loadingAnimation};\n      animation-duration: ${props.$duration}ms;\n      animation-fill-mode: both;\n    }\n\n    & > * {\n      opacity: var(${POPOVER_MOTION_CONTENT_OPACITY_PROPERTY}, 1);\n      will-change: opacity;\n    }\n  ` : (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n      pointer-events: all;\n      & > * {\n        opacity: var(${POPOVER_MOTION_CONTENT_OPACITY_PROPERTY}, 1);\n        will-change: opacity;\n      }\n    `;\n}\nconst STATUS_CARD_TONE = {\n  error: \"critical\",\n  warning: \"caution\",\n  success: \"positive\",\n  info: \"primary\"\n}, BUTTON_TONE = {\n  error: \"critical\",\n  warning: \"caution\",\n  success: \"positive\",\n  info: \"primary\"\n}, ROLES = {\n  error: \"alert\",\n  warning: \"alert\",\n  success: \"alert\",\n  info: \"alert\"\n}, Root$2 = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Card)(\n  rootStyles\n);\nfunction Toast(props) {\n  const { closable, description, duration, onClose, radius = 3, title, status, ...restProps } = props, cardTone = status ? STATUS_CARD_TONE[status] : \"default\", buttonTone = status ? BUTTON_TONE[status] : \"default\", role = status ? ROLES[status] : \"status\";\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Root$2,\n    {\n      \"data-ui\": \"Toast\",\n      role,\n      ...restProps,\n      marginTop: 3,\n      radius,\n      shadow: 2,\n      tone: cardTone,\n      $duration: duration,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { align: \"flex-start\", children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TextBox, { flex: 1, padding: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Stack, { space: 3, children: [\n          title && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: 1, weight: \"medium\", children: title }),\n          description && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { muted: !0, size: 1, children: description })\n        ] }) }),\n        closable && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { padding: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          Button,\n          {\n            as: \"button\",\n            icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_8__.CloseIcon,\n            mode: \"bleed\",\n            padding: 2,\n            tone: buttonTone,\n            onClick: onClose,\n            style: { verticalAlign: \"top\" }\n          }\n        ) })\n      ] })\n    }\n  );\n}\nfunction useMounted() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(\n    subscribe,\n    () => !0,\n    () => !1\n  );\n}\nconst subscribe = () => () => {\n}, key$1 = Symbol.for(\"@sanity/ui/context/toast\"), ToastContext = createGlobalScopedContext(key$1, null), Root$1 = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Layer)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n`, ToastContainer = styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.div`\n  box-sizing: border-box;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  max-width: 420px;\n  width: 100%;\n`;\nlet toastId = 0;\nfunction ToastProvider(props) {\n  const { children, padding = 4, paddingX, paddingY, zOffset } = props, [state, _setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]), toastsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({}), mounted = useMounted(), prefersReducedMotion = usePrefersReducedMotion(), variants = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      initial: {\n        opacity: 0,\n        [POPOVER_MOTION_CONTENT_OPACITY_PROPERTY]: 0,\n        y: 32,\n        scale: 0.25,\n        willChange: \"transform\"\n      },\n      animate: {\n        opacity: [0, 1, 1],\n        [POPOVER_MOTION_CONTENT_OPACITY_PROPERTY]: [0, 0, 1],\n        y: 0,\n        scale: 1\n      },\n      exit: {\n        opacity: [1, 1, 0],\n        [POPOVER_MOTION_CONTENT_OPACITY_PROPERTY]: [1, 0, 0],\n        scale: 0.5,\n        transition: prefersReducedMotion ? { duration: 0 } : { duration: 0.2 }\n      }\n    }),\n    [prefersReducedMotion]\n  ), value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({ version: 0, push: (params) => {\n    const setState = (state2) => (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)(() => _setState(state2)), id = params.id || String(toastId++), duration = params.duration || 5e3, dismiss = () => {\n      var _a;\n      const timeoutId = (_a = toastsRef.current[id]) == null ? void 0 : _a.timeoutId;\n      setState((prevState) => {\n        const idx = prevState.findIndex((t) => t.id === id);\n        if (idx > -1) {\n          const toasts = prevState.slice(0);\n          return toasts.splice(idx, 1), toasts;\n        }\n        return prevState;\n      }), timeoutId !== void 0 && (clearTimeout(timeoutId), delete toastsRef.current[id]);\n    };\n    return setState((prevState) => prevState.filter((t) => t.id !== id).concat([\n      {\n        dismiss,\n        id,\n        params: { ...params, duration }\n      }\n    ])), toastsRef.current[id] && (clearTimeout(toastsRef.current[id].timeoutId), delete toastsRef.current[id]), toastsRef.current[id] = { timeoutId: setTimeout(dismiss, duration) }, id;\n  } }), []);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(\n    () => () => {\n      for (const { timeoutId } of Object.values(toastsRef.current))\n        clearTimeout(timeoutId);\n      toastsRef.current = {};\n    },\n    []\n  ), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(ToastContext.Provider, { value, children: [\n    children,\n    mounted && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$1, { \"data-ui\": \"ToastProvider\", zOffset, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ToastContainer, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { padding, paddingX, paddingY, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(framer_motion__WEBPACK_IMPORTED_MODULE_12__.AnimatePresence, { initial: !1, children: state.map(({ dismiss, id, params }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      framer_motion__WEBPACK_IMPORTED_MODULE_10__.motion.div,\n      {\n        layout: \"position\",\n        initial: \"initial\",\n        animate: \"animate\",\n        exit: \"exit\",\n        variants,\n        transition: prefersReducedMotion ? { duration: 0 } : { type: \"spring\", damping: 30, stiffness: 400 },\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          Toast,\n          {\n            closable: params.closable,\n            description: params.description,\n            onClose: dismiss,\n            status: params.status,\n            title: params.title,\n            duration: params.duration\n          }\n        )\n      },\n      id\n    )) }) }) }) })\n  ] });\n}\nfunction useToast() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ToastContext);\n  if (!value)\n    throw new Error(\"useToast(): missing context value\");\n  if (!isRecord(value) || value.version !== 0)\n    throw new Error(\"useToast(): the context value is not compatible\");\n  return value;\n}\nfunction _findPrevItemElement(state, itemElements, focusedElement) {\n  var _a;\n  const idx = itemElements.indexOf(focusedElement), els = itemElements.slice(0, idx), len = els.length;\n  for (let i = len - 1; i >= 0; i -= 1) {\n    const itemKey = els[i].getAttribute(\"data-tree-key\");\n    if (!itemKey)\n      continue;\n    const segments = itemKey.split(\"/\");\n    segments.pop();\n    const p = [];\n    let expanded = !0;\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j]);\n      const k = p.join(\"/\");\n      if (!((_a = state[k]) != null && _a.expanded)) {\n        expanded = !1;\n        break;\n      }\n    }\n    if (expanded)\n      return els[i];\n  }\n  return null;\n}\nfunction _findNextItemElement(state, itemElements, focusedElement) {\n  var _a;\n  const idx = itemElements.indexOf(focusedElement), els = itemElements.slice(idx), len = itemElements.length;\n  for (let i = 1; i < len; i += 1) {\n    if (!els[i])\n      continue;\n    const itemKey = els[i].getAttribute(\"data-tree-key\");\n    if (!itemKey)\n      continue;\n    const segments = itemKey.split(\"/\");\n    segments.pop();\n    const p = [];\n    let expanded = !0;\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j]);\n      const k = p.join(\"/\");\n      if (!((_a = state[k]) != null && _a.expanded)) {\n        expanded = !1;\n        break;\n      }\n    }\n    if (expanded)\n      return els[i];\n  }\n  return null;\n}\nfunction _focusItemElement(el) {\n  if (el.getAttribute(\"role\") === \"treeitem\" && el.focus(), el.getAttribute(\"role\") === \"none\") {\n    const firstChild = el.firstChild;\n    firstChild && firstChild instanceof HTMLElement && firstChild.focus();\n  }\n}\nconst key = Symbol.for(\"@sanity/ui/context/tree\"), TreeContext = createGlobalScopedContext(key, null), Tree = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, forwardedRef) {\n    const { children, space = 1, onFocus, ...restProps } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), [focusedElement, setFocusedElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), focusedElementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(focusedElement), path = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => [], []), [itemElements, setItemElements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]), [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}), stateRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(state);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n      forwardedRef,\n      () => ref.current\n    ), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      focusedElementRef.current = focusedElement;\n    }, [focusedElement]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      stateRef.current = state;\n    }, [state]);\n    const registerItem = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (element, path2, expanded, selected) => (setState((s) => ({ ...s, [path2]: { element, expanded } })), selected && setFocusedElement(element), () => {\n        setState((s) => {\n          const newState = { ...s };\n          return delete newState[path2], newState;\n        });\n      }),\n      []\n    ), setExpanded = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((path2, expanded) => {\n      setState((s) => {\n        const itemState = s[path2];\n        return itemState ? { ...s, [path2]: { ...itemState, expanded } } : s;\n      });\n    }, []), contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => ({\n        version: 0,\n        focusedElement: focusedElement || itemElements[0] || null,\n        level: 0,\n        path,\n        registerItem,\n        setExpanded,\n        setFocusedElement,\n        space,\n        state\n      }),\n      [focusedElement, itemElements, path, registerItem, setExpanded, space, state]\n    ), handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        var _a;\n        if (focusedElementRef.current) {\n          if (event.key === \"ArrowDown\") {\n            event.preventDefault();\n            const nextEl = _findNextItemElement(\n              stateRef.current,\n              itemElements,\n              focusedElementRef.current\n            );\n            nextEl && (_focusItemElement(nextEl), setFocusedElement(nextEl));\n            return;\n          }\n          if (event.key === \"ArrowUp\") {\n            event.preventDefault();\n            const prevEl = _findPrevItemElement(\n              stateRef.current,\n              itemElements,\n              focusedElementRef.current\n            );\n            prevEl && (_focusItemElement(prevEl), setFocusedElement(prevEl));\n            return;\n          }\n          if (event.key === \"ArrowLeft\") {\n            event.preventDefault();\n            const itemKey = focusedElementRef.current.getAttribute(\"data-tree-key\");\n            if (!itemKey) return;\n            const itemState = stateRef.current[itemKey];\n            if (!itemState) return;\n            if (itemState.expanded)\n              setState((s) => {\n                const itemState2 = s[itemKey];\n                return itemState2 ? { ...s, [itemKey]: { ...itemState2, expanded: !1 } } : s;\n              });\n            else {\n              const itemPath = itemKey.split(\"/\");\n              itemPath.pop();\n              const parentKey = itemPath.join(\"/\"), parentState = parentKey && stateRef.current[parentKey];\n              parentState && (parentState.element.focus(), setFocusedElement(parentState.element));\n            }\n            return;\n          }\n          if (event.key === \"ArrowRight\") {\n            event.preventDefault();\n            const focusedKey = focusedElementRef.current.getAttribute(\"data-tree-key\");\n            if (!focusedKey) return;\n            (_a = stateRef.current[focusedKey]) != null && _a.expanded || setState((s) => {\n              const itemState = s[focusedKey];\n              return itemState ? { ...s, [focusedKey]: { ...itemState, expanded: !0 } } : s;\n            });\n            return;\n          }\n        }\n      },\n      [itemElements]\n    ), handleFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        setFocusedElement(event.target), onFocus == null || onFocus(event);\n      },\n      [onFocus]\n    );\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      if (!ref.current) return;\n      const _itemElements = Array.from(\n        ref.current.querySelectorAll('[data-ui=\"TreeItem\"]')\n      );\n      setItemElements(_itemElements);\n    }, [children]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TreeContext.Provider, { value: contextValue, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Stack,\n      {\n        as: \"ul\",\n        \"data-ui\": \"Tree\",\n        ...restProps,\n        onFocus: handleFocus,\n        onKeyDown: handleKeyDown,\n        ref,\n        role: \"tree\",\n        space,\n        children\n      }\n    ) });\n  })\n);\nTree.displayName = \"Tree\";\nfunction treeItemRootStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      border-radius: 3px;\n\n      background-color: var(--card-bg-color);\n      color: var(--treeitem-fg-color);\n\n      &:focus {\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        border-radius: 3px;\n\n        background-color: var(--card-bg-color);\n        color: var(--treeitem-fg-color);\n      }\n\n      &:focus > div {\n        position: relative;\n      }\n    }\n  `;\n}\nfunction treeItemRootColorStyle(props) {\n  const $tone = \"default\", { color } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), tone = color.selectable[$tone];\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    &[role='none'] {\n      & > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]) > [role='treeitem']:not(:focus):hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        & > [role='treeitem']:focus {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n\n    &[role='treeitem'] {\n      & > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]):not(:focus) > [data-ui='TreeItem__box']:hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        &:focus > [data-ui='TreeItem__box'] {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n  `;\n}\nfunction treeItemBoxStyle(props) {\n  const { $level } = props, { space } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.css)`\n    padding-left: ${rem(space[2] * $level)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `;\n}\nfunction useTree() {\n  const tree = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(TreeContext);\n  if (!tree)\n    throw new Error(\"Tree: missing context value\");\n  return tree;\n}\nconst TreeGroup = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function(props) {\n  const { children, expanded = !1, ...restProps } = props, tree = useTree();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Stack,\n    {\n      as: \"ul\",\n      \"data-ui\": \"TreeGroup\",\n      ...restProps,\n      hidden: !expanded,\n      marginTop: tree.space,\n      role: \"group\",\n      space: tree.space,\n      children\n    }\n  );\n}), Root = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(styled_components__WEBPACK_IMPORTED_MODULE_7__.styled.li(treeItemRootStyle, treeItemRootColorStyle)), TreeItemBox = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Box).attrs({ forwardedAs: \"a\" })(treeItemBoxStyle), ToggleArrowText = (0,styled_components__WEBPACK_IMPORTED_MODULE_7__.styled)(Text)`\n  & > svg {\n    transition: transform 100ms;\n  }\n`, TreeItem = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function(props) {\n  const {\n    children,\n    expanded: expandedProp = !1,\n    fontSize: fontSize2 = 1,\n    href,\n    icon: IconComponent,\n    id: idProp,\n    linkAs,\n    muted,\n    onClick,\n    padding = 2,\n    selected = !1,\n    space = 2,\n    text,\n    weight,\n    ...restProps\n  } = props, rootRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), treeitemRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), tree = useTree(), { path, registerItem, setExpanded, setFocusedElement } = tree, _id = (0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(), id = idProp || _id, itemPath = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => path.concat([id || \"\"]), [id, path]), itemKey = itemPath.join(\"/\"), itemState = tree.state[itemKey], focused = tree.focusedElement === rootRef.current, expanded = (itemState == null ? void 0 : itemState.expanded) === void 0 ? expandedProp : (itemState == null ? void 0 : itemState.expanded) || !1, tabIndex = tree.focusedElement && tree.focusedElement === rootRef.current ? 0 : -1, contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({ ...tree, level: tree.level + 1, path: itemPath }),\n    [itemPath, tree]\n  ), handleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      onClick && onClick(event);\n      const target = event.target;\n      target instanceof HTMLElement && (target.getAttribute(\"data-ui\") === \"TreeItem\" || target.closest('[data-ui=\"TreeItem__box\"]')) && (event.stopPropagation(), setExpanded(itemKey, !expanded), setFocusedElement(rootRef.current));\n    },\n    [expanded, itemKey, onClick, setExpanded, setFocusedElement]\n  ), handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      if (focused && event.key === \"Enter\") {\n        const el = treeitemRef.current || rootRef.current;\n        el == null || el.click();\n      }\n    },\n    [focused]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (rootRef.current)\n      return registerItem(rootRef.current, itemPath.join(\"/\"), expanded, selected);\n  }, [expanded, itemPath, registerItem, selected]);\n  const content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { padding, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      Box,\n      {\n        marginRight: space,\n        style: {\n          visibility: IconComponent || children ? \"visible\" : \"hidden\",\n          pointerEvents: \"none\"\n        },\n        children: [\n          IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { muted, size: fontSize2, weight, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {}) }),\n          !IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ToggleArrowText, { muted, size: fontSize2, weight, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_8__.ToggleArrowRightIcon, { style: { transform: expanded ? \"rotate(90deg)\" : void 0 } }) })\n        ]\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { muted, size: fontSize2, textOverflow: \"ellipsis\", weight, children: text }) })\n  ] });\n  return href ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    Root,\n    {\n      \"data-selected\": selected ? \"\" : void 0,\n      \"data-tree-id\": id,\n      \"data-tree-key\": itemKey,\n      \"data-ui\": \"TreeItem\",\n      ...restProps,\n      onClick: handleClick,\n      ref: rootRef,\n      role: \"none\",\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          TreeItemBox,\n          {\n            $level: tree.level,\n            \"aria-expanded\": expanded,\n            as: linkAs,\n            \"data-ui\": \"TreeItem__box\",\n            href,\n            ref: treeitemRef,\n            role: \"treeitem\",\n            tabIndex,\n            children: content\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TreeContext.Provider, { value: contextValue, children: children && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TreeGroup, { hidden: !expanded, children }) })\n      ]\n    }\n  ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    Root,\n    {\n      \"data-selected\": selected ? \"\" : void 0,\n      \"data-ui\": \"TreeItem\",\n      \"data-tree-id\": id,\n      \"data-tree-key\": itemKey,\n      ...restProps,\n      \"aria-expanded\": expanded,\n      onClick: handleClick,\n      onKeyDown: handleKeyDown,\n      ref: rootRef,\n      role: \"treeitem\",\n      tabIndex,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TreeItemBox, { $level: tree.level, as: \"div\", \"data-ui\": \"TreeItem__box\", children: content }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TreeContext.Provider, { value: contextValue, children: children && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TreeGroup, { expanded, children }) })\n      ]\n    }\n  );\n});\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/ui/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/ui/dist/theme.mjs":
/*!************************************************!*\
  !*** ./node_modules/@sanity/ui/dist/theme.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COLOR_CONFIG_AVATAR_COLORS: () => (/* binding */ COLOR_CONFIG_AVATAR_COLORS),\n/* harmony export */   COLOR_CONFIG_BLEND_KEYS: () => (/* binding */ COLOR_CONFIG_BLEND_KEYS),\n/* harmony export */   COLOR_CONFIG_CARD_KEYS: () => (/* binding */ COLOR_CONFIG_CARD_KEYS),\n/* harmony export */   COLOR_CONFIG_CARD_TONES: () => (/* binding */ COLOR_CONFIG_CARD_TONES),\n/* harmony export */   COLOR_CONFIG_INPUT_MODES: () => (/* binding */ COLOR_CONFIG_INPUT_MODES),\n/* harmony export */   COLOR_CONFIG_INPUT_STATES: () => (/* binding */ COLOR_CONFIG_INPUT_STATES),\n/* harmony export */   COLOR_CONFIG_STATES: () => (/* binding */ COLOR_CONFIG_STATES),\n/* harmony export */   COLOR_CONFIG_STATE_KEYS: () => (/* binding */ COLOR_CONFIG_STATE_KEYS),\n/* harmony export */   COLOR_CONFIG_STATE_TONES: () => (/* binding */ COLOR_CONFIG_STATE_TONES),\n/* harmony export */   THEME_COLOR_AVATAR_COLORS: () => (/* binding */ THEME_COLOR_AVATAR_COLORS),\n/* harmony export */   THEME_COLOR_BLEND_MODES: () => (/* binding */ THEME_COLOR_BLEND_MODES),\n/* harmony export */   THEME_COLOR_BUTTON_MODES: () => (/* binding */ THEME_COLOR_BUTTON_MODES),\n/* harmony export */   THEME_COLOR_CARD_TONES: () => (/* binding */ THEME_COLOR_CARD_TONES),\n/* harmony export */   THEME_COLOR_INPUT_MODES: () => (/* binding */ THEME_COLOR_INPUT_MODES),\n/* harmony export */   THEME_COLOR_INPUT_STATES: () => (/* binding */ THEME_COLOR_INPUT_STATES),\n/* harmony export */   THEME_COLOR_SCHEMES: () => (/* binding */ THEME_COLOR_SCHEMES),\n/* harmony export */   THEME_COLOR_STATES: () => (/* binding */ THEME_COLOR_STATES),\n/* harmony export */   THEME_COLOR_STATE_TONES: () => (/* binding */ THEME_COLOR_STATE_TONES),\n/* harmony export */   buildTheme: () => (/* binding */ buildTheme),\n/* harmony export */   createColorTheme: () => (/* binding */ createColorTheme),\n/* harmony export */   getContrastRatio: () => (/* binding */ getContrastRatio),\n/* harmony export */   getScopedTheme: () => (/* binding */ getScopedTheme),\n/* harmony export */   getTheme_v2: () => (/* reexport safe */ _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.getTheme_v2),\n/* harmony export */   hexToRgb: () => (/* binding */ hexToRgb),\n/* harmony export */   hslToRgb: () => (/* binding */ hslToRgb),\n/* harmony export */   isColorBlendModeValue: () => (/* binding */ isColorBlendModeValue),\n/* harmony export */   isColorButtonMode: () => (/* binding */ isColorButtonMode),\n/* harmony export */   isColorConfigBaseKey: () => (/* binding */ isColorConfigBaseKey),\n/* harmony export */   isColorConfigBaseTone: () => (/* binding */ isColorConfigBaseTone),\n/* harmony export */   isColorConfigBlendKey: () => (/* binding */ isColorConfigBlendKey),\n/* harmony export */   isColorConfigStateKey: () => (/* binding */ isColorConfigStateKey),\n/* harmony export */   isColorConfigStateTone: () => (/* binding */ isColorConfigStateTone),\n/* harmony export */   isColorHueKey: () => (/* binding */ isColorHueKey),\n/* harmony export */   isColorOpacityValue: () => (/* binding */ isColorOpacityValue),\n/* harmony export */   isColorTintKey: () => (/* binding */ isColorTintKey),\n/* harmony export */   isColorTokenValue: () => (/* binding */ isColorTokenValue),\n/* harmony export */   isColorValue: () => (/* binding */ isColorValue),\n/* harmony export */   is_v0: () => (/* binding */ is_v0),\n/* harmony export */   is_v2: () => (/* binding */ is_v2),\n/* harmony export */   mix: () => (/* binding */ mix),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   parseColor: () => (/* binding */ parseColor),\n/* harmony export */   parseTokenKey: () => (/* binding */ parseTokenKey),\n/* harmony export */   parseTokenValue: () => (/* binding */ parseTokenValue),\n/* harmony export */   rgbToHex: () => (/* binding */ rgbToHex),\n/* harmony export */   rgbToHsl: () => (/* binding */ rgbToHsl),\n/* harmony export */   rgba: () => (/* binding */ rgba),\n/* harmony export */   rgbaToRGBA: () => (/* binding */ rgbaToRGBA),\n/* harmony export */   screen: () => (/* binding */ screen),\n/* harmony export */   v0_v2: () => (/* binding */ v0_v2),\n/* harmony export */   v2_v0: () => (/* binding */ v2_v0)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_chunks-es/getTheme_v2.mjs */ \"(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/getTheme_v2.mjs\");\n/* harmony import */ var _sanity_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sanity/color */ \"(ssr)/./node_modules/@sanity/color/dist/index.js\");\n\n\n\nfunction createSelectableTones(opts, base, dark, solid, muted) {\n  return {\n    default: _createSelectableStates(opts, base, dark, solid, muted, \"default\"),\n    primary: _createSelectableStates(opts, base, dark, solid, muted, \"primary\"),\n    positive: _createSelectableStates(opts, base, dark, solid, muted, \"positive\"),\n    caution: _createSelectableStates(opts, base, dark, solid, muted, \"caution\"),\n    critical: _createSelectableStates(opts, base, dark, solid, muted, \"critical\")\n  };\n}\nfunction _createSelectableStates(opts, base, dark, solid, muted, tone) {\n  return {\n    enabled: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"enabled\",\n      tone\n    }),\n    hovered: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"hovered\",\n      tone\n    }),\n    pressed: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"pressed\",\n      tone\n    }),\n    selected: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"selected\",\n      tone\n    }),\n    disabled: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"disabled\",\n      tone\n    })\n  };\n}\nfunction createSolidTones(opts, base, dark, name) {\n  return {\n    default: {\n      enabled: opts.solid({ base, dark, tone: \"default\", name, state: \"enabled\" }),\n      disabled: opts.solid({ base, dark, tone: \"default\", name, state: \"disabled\" }),\n      hovered: opts.solid({ base, dark, tone: \"default\", name, state: \"hovered\" }),\n      pressed: opts.solid({ base, dark, tone: \"default\", name, state: \"pressed\" }),\n      selected: opts.solid({ base, dark, tone: \"default\", name, state: \"selected\" })\n    },\n    transparent: {\n      enabled: opts.solid({ base, dark, tone: \"transparent\", name, state: \"enabled\" }),\n      disabled: opts.solid({ base, dark, tone: \"transparent\", name, state: \"disabled\" }),\n      hovered: opts.solid({ base, dark, tone: \"transparent\", name, state: \"hovered\" }),\n      pressed: opts.solid({ base, dark, tone: \"transparent\", name, state: \"pressed\" }),\n      selected: opts.solid({ base, dark, tone: \"transparent\", name, state: \"selected\" })\n    },\n    primary: {\n      enabled: opts.solid({ base, dark, tone: \"primary\", name, state: \"enabled\" }),\n      disabled: opts.solid({ base, dark, tone: \"primary\", name, state: \"disabled\" }),\n      hovered: opts.solid({ base, dark, tone: \"primary\", name, state: \"hovered\" }),\n      pressed: opts.solid({ base, dark, tone: \"primary\", name, state: \"pressed\" }),\n      selected: opts.solid({ base, dark, tone: \"primary\", name, state: \"selected\" })\n    },\n    positive: {\n      enabled: opts.solid({ base, dark, tone: \"positive\", name, state: \"enabled\" }),\n      disabled: opts.solid({ base, dark, tone: \"positive\", name, state: \"disabled\" }),\n      hovered: opts.solid({ base, dark, tone: \"positive\", name, state: \"hovered\" }),\n      pressed: opts.solid({ base, dark, tone: \"positive\", name, state: \"pressed\" }),\n      selected: opts.solid({ base, dark, tone: \"positive\", name, state: \"selected\" })\n    },\n    caution: {\n      enabled: opts.solid({ base, dark, tone: \"caution\", name, state: \"enabled\" }),\n      disabled: opts.solid({ base, dark, tone: \"caution\", name, state: \"disabled\" }),\n      hovered: opts.solid({ base, dark, tone: \"caution\", name, state: \"hovered\" }),\n      pressed: opts.solid({ base, dark, tone: \"caution\", name, state: \"pressed\" }),\n      selected: opts.solid({ base, dark, tone: \"caution\", name, state: \"selected\" })\n    },\n    critical: {\n      enabled: opts.solid({ base, dark, tone: \"critical\", name, state: \"enabled\" }),\n      disabled: opts.solid({ base, dark, tone: \"critical\", name, state: \"disabled\" }),\n      hovered: opts.solid({ base, dark, tone: \"critical\", name, state: \"hovered\" }),\n      pressed: opts.solid({ base, dark, tone: \"critical\", name, state: \"pressed\" }),\n      selected: opts.solid({ base, dark, tone: \"critical\", name, state: \"selected\" })\n    }\n  };\n}\nfunction createButtonTones(opts, base, dark, solid, muted, mode) {\n  return {\n    default: opts.button({\n      base,\n      dark,\n      solid: solid.default,\n      muted: muted.default,\n      mode\n    }),\n    primary: opts.button({\n      base,\n      dark,\n      solid: solid.primary,\n      muted: muted.primary,\n      mode\n    }),\n    positive: opts.button({\n      base,\n      dark,\n      solid: solid.positive,\n      muted: muted.positive,\n      mode\n    }),\n    caution: opts.button({\n      base,\n      dark,\n      solid: solid.caution,\n      muted: muted.caution,\n      mode\n    }),\n    critical: opts.button({\n      base,\n      dark,\n      solid: solid.critical,\n      muted: muted.critical,\n      mode\n    })\n  };\n}\nfunction createButtonModes(opts, base, dark, solid, muted) {\n  return {\n    default: createButtonTones(opts, base, dark, solid, muted, \"default\"),\n    ghost: createButtonTones(opts, base, dark, solid, muted, \"ghost\"),\n    bleed: createButtonTones(opts, base, dark, solid, muted, \"bleed\")\n  };\n}\nfunction createCardStates(opts, base, dark, name, solid, muted) {\n  return {\n    enabled: opts.card({\n      base,\n      dark,\n      name,\n      state: \"enabled\",\n      solid,\n      muted\n    }),\n    disabled: opts.card({\n      base,\n      dark,\n      name,\n      state: \"disabled\",\n      solid,\n      muted\n    }),\n    hovered: opts.card({\n      base,\n      dark,\n      name,\n      state: \"hovered\",\n      solid,\n      muted\n    }),\n    pressed: opts.card({\n      base,\n      dark,\n      name,\n      state: \"pressed\",\n      solid,\n      muted\n    }),\n    selected: opts.card({\n      base,\n      dark,\n      name,\n      state: \"selected\",\n      solid,\n      muted\n    })\n  };\n}\nconst black = \"hsl(0, 0%, 0%)\", white = \"hsl(0, 0%, 100%)\", colors = {\n  default: {\n    lightest: \"hsl(0, 0%, 95%)\",\n    lighter: \"hsl(0, 0%, 70%)\",\n    light: \"hsl(0, 0%, 65%)\",\n    base: \"hsl(0, 0%, 50%)\",\n    dark: \"hsl(0, 0%, 35%)\",\n    darker: \"hsl(0, 0%, 20%)\",\n    darkest: \"hsl(0, 0%, 5%)\"\n  },\n  transparent: {\n    lightest: \"hsl(240, 100%, 95%)\",\n    lighter: \"hsl(240, 100%, 70%)\",\n    light: \"hsl(240, 100%, 65%)\",\n    base: \"hsl(240, 100%, 50%)\",\n    dark: \"hsl(240, 100%, 35%)\",\n    darker: \"hsl(240, 100%, 20%)\",\n    darkest: \"hsl(240, 100%, 5%)\"\n  },\n  primary: {\n    lightest: \"hsl(240, 100%, 95%)\",\n    lighter: \"hsl(240, 100%, 70%)\",\n    light: \"hsl(240, 100%, 65%)\",\n    base: \"hsl(240, 100%, 50%)\",\n    dark: \"hsl(240, 100%, 35%)\",\n    darker: \"hsl(240, 100%, 20%)\",\n    darkest: \"hsl(240, 100%, 5%)\"\n  },\n  positive: {\n    lightest: \"hsl(120, 100%, 95%)\",\n    lighter: \"hsl(120, 100%, 70%)\",\n    light: \"hsl(120, 100%, 65%)\",\n    base: \"hsl(120, 100%, 50%)\",\n    dark: \"hsl(120, 100%, 35%)\",\n    darker: \"hsl(120, 100%, 20%)\",\n    darkest: \"hsl(120, 100%, 5%)\"\n  },\n  caution: {\n    lightest: \"hsl(60, 100%, 95%)\",\n    lighter: \"hsl(60, 100%, 70%)\",\n    light: \"hsl(60, 100%, 65%)\",\n    base: \"hsl(60, 100%, 50%)\",\n    dark: \"hsl(60, 100%, 35%)\",\n    darker: \"hsl(60, 100%, 20%)\",\n    darkest: \"hsl(60, 100%, 5%)\"\n  },\n  critical: {\n    lightest: \"hsl(0, 100%, 95%)\",\n    lighter: \"hsl(0, 100%, 70%)\",\n    light: \"hsl(0, 100%, 65%)\",\n    base: \"hsl(0, 100%, 50%)\",\n    dark: \"hsl(0, 100%, 35%)\",\n    darker: \"hsl(0, 100%, 20%)\",\n    darkest: \"hsl(0, 100%, 5%)\"\n  }\n}, spots = {\n  gray: \"hsl(0, 0%, 50%)\",\n  red: \"hsl(0, 100%, 50%)\",\n  orange: \"hsl(30, 100%, 50%)\",\n  yellow: \"hsl(60, 100%, 50%)\",\n  green: \"hsl(120, 100%, 50%)\",\n  cyan: \"hsl(180, 100%, 50%)\",\n  blue: \"hsl(240, 100%, 50%)\",\n  purple: \"hsl(270, 100%, 50%)\",\n  magenta: \"hsl(300, 100%, 50%)\"\n}, tones = {\n  transparent: {\n    bg: [colors.transparent.darkest, colors.transparent.lightest],\n    fg: [colors.transparent.lightest, colors.transparent.darkest],\n    border: [colors.transparent.darker, colors.transparent.lighter],\n    focusRing: [colors.transparent.base, colors.transparent.base]\n  },\n  primary: {\n    bg: [colors.primary.darkest, colors.primary.lightest],\n    fg: [colors.primary.lightest, colors.primary.darkest],\n    border: [colors.primary.darker, colors.primary.lighter],\n    focusRing: [colors.primary.base, colors.primary.base]\n  },\n  positive: {\n    bg: [colors.positive.darkest, colors.positive.lightest],\n    fg: [colors.positive.lightest, colors.positive.darkest],\n    border: [colors.positive.darker, colors.positive.lighter],\n    focusRing: [colors.positive.base, colors.positive.base]\n  },\n  caution: {\n    bg: [colors.caution.darkest, colors.caution.lightest],\n    fg: [colors.caution.lightest, colors.caution.darkest],\n    border: [colors.caution.darker, colors.caution.lighter],\n    focusRing: [colors.caution.base, colors.caution.base]\n  },\n  critical: {\n    bg: [colors.critical.darkest, colors.critical.lightest],\n    fg: [colors.critical.lightest, colors.critical.darkest],\n    border: [colors.critical.darker, colors.critical.lighter],\n    focusRing: [colors.critical.base, colors.critical.base]\n  }\n}, defaultOpts = {\n  base: ({ dark, name }) => name === \"default\" ? {\n    bg: dark ? black : white,\n    fg: dark ? white : black,\n    border: dark ? colors.default.darkest : colors.default.lightest,\n    focusRing: colors.primary.base,\n    shadow: {\n      outline: black,\n      umbra: black,\n      penumbra: black,\n      ambient: black\n    },\n    skeleton: {\n      from: dark ? white : black,\n      to: dark ? white : black\n    }\n  } : {\n    bg: tones[name].bg[dark ? 0 : 1],\n    fg: tones[name].fg[dark ? 0 : 1],\n    border: tones[name].border[dark ? 0 : 1],\n    focusRing: tones[name].focusRing[dark ? 0 : 1],\n    shadow: {\n      outline: black,\n      umbra: black,\n      penumbra: black,\n      ambient: black\n    },\n    skeleton: {\n      from: dark ? white : black,\n      to: dark ? white : black\n    }\n  },\n  solid: ({ base, dark, state, tone }) => {\n    const color2 = colors[tone];\n    return state === \"hovered\" ? {\n      bg: dark ? color2.light : color2.dark,\n      bg2: dark ? color2.light : color2.dark,\n      border: dark ? color2.lighter : color2.darker,\n      fg: dark ? color2.darkest : color2.lightest,\n      icon: dark ? color2.darkest : color2.lightest,\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    } : {\n      bg: color2.base,\n      bg2: color2.base,\n      border: dark ? color2.light : color2.dark,\n      fg: dark ? color2.darkest : color2.lightest,\n      icon: dark ? color2.darkest : color2.lightest,\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    };\n  },\n  muted: ({ base, dark, state, tone }) => {\n    const color2 = colors[tone];\n    return state === \"hovered\" ? {\n      bg: dark ? color2.darker : color2.lighter,\n      bg2: dark ? color2.darker : color2.lighter,\n      border: dark ? color2.lighter : color2.darker,\n      fg: dark ? color2.lightest : color2.darkest,\n      icon: dark ? color2.lightest : color2.darkest,\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    } : {\n      bg: dark ? color2.darkest : color2.lightest,\n      bg2: dark ? color2.darkest : color2.lightest,\n      border: dark ? color2.darker : color2.lighter,\n      fg: dark ? color2.lighter : color2.darker,\n      icon: dark ? color2.lighter : color2.darker,\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    };\n  },\n  button: ({ base, mode, muted, solid }) => mode === \"bleed\" ? {\n    ...muted,\n    enabled: {\n      bg: \"transparent\",\n      bg2: \"transparent\",\n      fg: muted.enabled.fg,\n      icon: muted.enabled.fg,\n      border: \"transparent\",\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    },\n    hovered: {\n      bg: muted.enabled.bg,\n      bg2: muted.enabled.bg,\n      fg: muted.hovered.fg,\n      icon: muted.hovered.fg,\n      border: \"transparent\",\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    }\n  } : mode === \"ghost\" ? {\n    ...solid,\n    enabled: muted.enabled\n  } : solid,\n  card: ({ base }) => ({\n    bg: black,\n    bg2: black,\n    fg: black,\n    icon: black,\n    border: black,\n    muted: {\n      fg: black\n    },\n    accent: {\n      fg: black\n    },\n    link: {\n      fg: black\n    },\n    code: {\n      bg: black,\n      fg: black\n    },\n    skeleton: base.skeleton\n  }),\n  input: () => ({\n    bg: black,\n    bg2: black,\n    fg: black,\n    border: black,\n    placeholder: black\n  }),\n  selectable: ({ muted, state, tone }) => muted[tone][state],\n  spot: ({ key }) => spots[key],\n  syntax: () => ({\n    atrule: black,\n    attrName: black,\n    attrValue: black,\n    attribute: black,\n    boolean: black,\n    builtin: black,\n    cdata: black,\n    char: black,\n    class: black,\n    className: black,\n    comment: black,\n    constant: black,\n    deleted: black,\n    doctype: black,\n    entity: black,\n    function: black,\n    hexcode: black,\n    id: black,\n    important: black,\n    inserted: black,\n    keyword: black,\n    number: black,\n    operator: black,\n    prolog: black,\n    property: black,\n    pseudoClass: black,\n    pseudoElement: black,\n    punctuation: black,\n    regex: black,\n    selector: black,\n    string: black,\n    symbol: black,\n    tag: black,\n    unit: black,\n    url: black,\n    variable: black\n  })\n};\nfunction createInputModes(opts, base, dark, solid, muted) {\n  return {\n    default: {\n      enabled: opts.input({\n        base,\n        dark,\n        mode: \"default\",\n        state: \"enabled\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      disabled: opts.input({\n        base,\n        dark,\n        mode: \"default\",\n        state: \"disabled\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      hovered: opts.input({\n        base,\n        dark,\n        mode: \"default\",\n        state: \"hovered\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      readOnly: opts.input({\n        base,\n        dark,\n        mode: \"default\",\n        state: \"readOnly\",\n        solid: solid.default,\n        muted: muted.default\n      })\n    },\n    invalid: {\n      enabled: opts.input({\n        base,\n        dark,\n        mode: \"invalid\",\n        state: \"enabled\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      disabled: opts.input({\n        base,\n        dark,\n        mode: \"invalid\",\n        state: \"disabled\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      hovered: opts.input({\n        base,\n        dark,\n        mode: \"invalid\",\n        state: \"hovered\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      readOnly: opts.input({\n        base,\n        dark,\n        mode: \"invalid\",\n        state: \"readOnly\",\n        solid: solid.default,\n        muted: muted.default\n      })\n    }\n  };\n}\nfunction createMutedTones(opts, base, dark, name) {\n  return {\n    default: {\n      enabled: opts.muted({ base, dark, tone: \"default\", name, state: \"enabled\" }),\n      disabled: opts.muted({ base, dark, tone: \"default\", name, state: \"disabled\" }),\n      hovered: opts.muted({ base, dark, tone: \"default\", name, state: \"hovered\" }),\n      pressed: opts.muted({ base, dark, tone: \"default\", name, state: \"pressed\" }),\n      selected: opts.muted({ base, dark, tone: \"default\", name, state: \"selected\" })\n    },\n    transparent: {\n      enabled: opts.muted({ base, dark, tone: \"transparent\", name, state: \"enabled\" }),\n      disabled: opts.muted({ base, dark, tone: \"transparent\", name, state: \"disabled\" }),\n      hovered: opts.muted({ base, dark, tone: \"transparent\", name, state: \"hovered\" }),\n      pressed: opts.muted({ base, dark, tone: \"transparent\", name, state: \"pressed\" }),\n      selected: opts.muted({ base, dark, tone: \"transparent\", name, state: \"selected\" })\n    },\n    primary: {\n      enabled: opts.muted({ base, dark, tone: \"primary\", name, state: \"enabled\" }),\n      disabled: opts.muted({ base, dark, tone: \"primary\", name, state: \"disabled\" }),\n      hovered: opts.muted({ base, dark, tone: \"primary\", name, state: \"hovered\" }),\n      pressed: opts.muted({ base, dark, tone: \"primary\", name, state: \"pressed\" }),\n      selected: opts.muted({ base, dark, tone: \"primary\", name, state: \"selected\" })\n    },\n    positive: {\n      enabled: opts.muted({ base, dark, tone: \"positive\", name, state: \"enabled\" }),\n      disabled: opts.muted({ base, dark, tone: \"positive\", name, state: \"disabled\" }),\n      hovered: opts.muted({ base, dark, tone: \"positive\", name, state: \"hovered\" }),\n      pressed: opts.muted({ base, dark, tone: \"positive\", name, state: \"pressed\" }),\n      selected: opts.muted({ base, dark, tone: \"positive\", name, state: \"selected\" })\n    },\n    caution: {\n      enabled: opts.muted({ base, dark, tone: \"caution\", name, state: \"enabled\" }),\n      disabled: opts.muted({ base, dark, tone: \"caution\", name, state: \"disabled\" }),\n      hovered: opts.muted({ base, dark, tone: \"caution\", name, state: \"hovered\" }),\n      pressed: opts.muted({ base, dark, tone: \"caution\", name, state: \"pressed\" }),\n      selected: opts.muted({ base, dark, tone: \"caution\", name, state: \"selected\" })\n    },\n    critical: {\n      enabled: opts.muted({ base, dark, tone: \"critical\", name, state: \"enabled\" }),\n      disabled: opts.muted({ base, dark, tone: \"critical\", name, state: \"disabled\" }),\n      hovered: opts.muted({ base, dark, tone: \"critical\", name, state: \"hovered\" }),\n      pressed: opts.muted({ base, dark, tone: \"critical\", name, state: \"pressed\" }),\n      selected: opts.muted({ base, dark, tone: \"critical\", name, state: \"selected\" })\n    }\n  };\n}\nfunction createSpot(opts, base, dark) {\n  return {\n    gray: opts.spot({ base, dark, key: \"gray\" }),\n    blue: opts.spot({ base, dark, key: \"blue\" }),\n    purple: opts.spot({ base, dark, key: \"purple\" }),\n    magenta: opts.spot({ base, dark, key: \"magenta\" }),\n    red: opts.spot({ base, dark, key: \"red\" }),\n    orange: opts.spot({ base, dark, key: \"orange\" }),\n    yellow: opts.spot({ base, dark, key: \"yellow\" }),\n    green: opts.spot({ base, dark, key: \"green\" }),\n    cyan: opts.spot({ base, dark, key: \"cyan\" })\n  };\n}\nfunction createColorTheme(partialOpts = {}) {\n  const builders = { ...defaultOpts, ...partialOpts };\n  return {\n    light: _createColorScheme(builders, !1),\n    dark: _createColorScheme(builders, !0)\n  };\n}\nfunction _createColorScheme(opts, dark) {\n  return {\n    default: _createColor(opts, dark, \"default\"),\n    transparent: _createColor(opts, dark, \"transparent\"),\n    primary: _createColor(opts, dark, \"primary\"),\n    positive: _createColor(opts, dark, \"positive\"),\n    caution: _createColor(opts, dark, \"caution\"),\n    critical: _createColor(opts, dark, \"critical\")\n  };\n}\nfunction _createColor(opts, dark, name) {\n  const base = opts.base({ dark, name }), solid = createSolidTones(opts, base, dark, name), muted = createMutedTones(opts, base, dark, name);\n  return {\n    base,\n    button: createButtonModes(opts, base, dark, solid, muted),\n    card: createCardStates(opts, base, dark, name, solid, muted),\n    dark,\n    input: createInputModes(opts, base, dark, solid, muted),\n    selectable: createSelectableTones(opts, base, dark, solid, muted),\n    spot: createSpot(opts, base, dark),\n    syntax: opts.syntax({ base, dark }),\n    solid,\n    muted\n  };\n}\nconst defaultThemeFonts = {\n  code: {\n    family: \"ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace\",\n    weights: {\n      regular: 400,\n      medium: 500,\n      semibold: 600,\n      bold: 700\n    },\n    sizes: [\n      {\n        ascenderHeight: 4,\n        descenderHeight: 4,\n        fontSize: 10,\n        iconSize: 17,\n        lineHeight: 15,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 5,\n        descenderHeight: 5,\n        fontSize: 13,\n        iconSize: 21,\n        lineHeight: 19,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 6,\n        descenderHeight: 6,\n        fontSize: 16,\n        iconSize: 25,\n        lineHeight: 23,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 7,\n        descenderHeight: 7,\n        fontSize: 19,\n        iconSize: 29,\n        lineHeight: 27,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 8,\n        descenderHeight: 8,\n        fontSize: 22,\n        iconSize: 33,\n        lineHeight: 31,\n        letterSpacing: 0\n      }\n    ]\n  },\n  heading: {\n    family: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',\n    weights: {\n      regular: 700,\n      medium: 800,\n      semibold: 900,\n      bold: 900\n    },\n    sizes: [\n      {\n        ascenderHeight: 5,\n        descenderHeight: 5,\n        fontSize: 13,\n        iconSize: 17,\n        lineHeight: 19,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 6,\n        descenderHeight: 6,\n        fontSize: 16,\n        iconSize: 25,\n        lineHeight: 23,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 7,\n        descenderHeight: 7,\n        fontSize: 21,\n        iconSize: 33,\n        lineHeight: 29,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 8,\n        descenderHeight: 8,\n        fontSize: 27,\n        iconSize: 41,\n        lineHeight: 35,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 9.5,\n        descenderHeight: 8.5,\n        fontSize: 33,\n        iconSize: 49,\n        lineHeight: 41,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 10.5,\n        descenderHeight: 9.5,\n        fontSize: 38,\n        iconSize: 53,\n        lineHeight: 47,\n        letterSpacing: 0\n      }\n    ]\n  },\n  label: {\n    family: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", system-ui, sans-serif',\n    weights: {\n      regular: 600,\n      medium: 700,\n      semibold: 800,\n      bold: 900\n    },\n    sizes: [\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 8.1,\n        iconSize: 13,\n        lineHeight: 10,\n        letterSpacing: 0.5\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 9.5,\n        iconSize: 15,\n        lineHeight: 11,\n        letterSpacing: 0.5\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 10.8,\n        iconSize: 17,\n        lineHeight: 12,\n        letterSpacing: 0.5\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 12.25,\n        iconSize: 19,\n        lineHeight: 13,\n        letterSpacing: 0.5\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 13.6,\n        iconSize: 21,\n        lineHeight: 14,\n        letterSpacing: 0.5\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 15,\n        iconSize: 23,\n        lineHeight: 15,\n        letterSpacing: 0.5\n      }\n    ]\n  },\n  text: {\n    family: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',\n    weights: {\n      regular: 400,\n      medium: 500,\n      semibold: 600,\n      bold: 700\n    },\n    sizes: [\n      {\n        ascenderHeight: 4,\n        descenderHeight: 4,\n        fontSize: 10,\n        iconSize: 17,\n        lineHeight: 15,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 5,\n        descenderHeight: 5,\n        fontSize: 13,\n        iconSize: 21,\n        lineHeight: 19,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 6,\n        descenderHeight: 6,\n        fontSize: 15,\n        iconSize: 25,\n        lineHeight: 23,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 7,\n        descenderHeight: 7,\n        fontSize: 18,\n        iconSize: 29,\n        lineHeight: 27,\n        letterSpacing: 0\n      },\n      {\n        ascenderHeight: 8,\n        descenderHeight: 8,\n        fontSize: 21,\n        iconSize: 33,\n        lineHeight: 31,\n        letterSpacing: 0\n      }\n    ]\n  }\n};\nfunction is_v0(themeProp) {\n  return themeProp._version === 0;\n}\nfunction is_v2(themeProp) {\n  return themeProp._version === 2;\n}\nconst cache$2 = /* @__PURE__ */ new WeakMap();\nfunction v0_v2(v0) {\n  if (v0.v2) return v0.v2;\n  const cached_v2 = cache$2.get(v0);\n  if (cached_v2) return cached_v2;\n  const {\n    avatar,\n    button,\n    color: color2,\n    container,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusRing: _unused_focusRing,\n    fonts: font,\n    input,\n    layer,\n    media,\n    radius,\n    shadows: shadow,\n    space,\n    styles: style\n  } = v0, v2 = {\n    _version: 2,\n    avatar: {\n      ..._chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.avatar,\n      ...avatar\n    },\n    button: {\n      ..._chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.button,\n      ...button\n    },\n    card: _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.card,\n    color: {\n      light: {\n        transparent: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.light.transparent),\n        default: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.light.default),\n        primary: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.light.primary),\n        positive: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.light.positive),\n        caution: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.light.caution),\n        critical: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.light.critical)\n      },\n      dark: {\n        transparent: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.dark.transparent),\n        default: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.dark.default),\n        primary: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.dark.primary),\n        positive: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.dark.positive),\n        caution: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.dark.caution),\n        critical: (0,_chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.themeColor_v0_v2)(color2.dark.critical)\n      }\n    },\n    container,\n    font,\n    input: {\n      ..._chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.input,\n      ...input,\n      checkbox: {\n        ..._chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.input.checkbox,\n        ...input.checkbox\n      },\n      radio: {\n        ..._chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.input.radio,\n        ...input.radio\n      },\n      switch: {\n        ..._chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.input.switch,\n        ...input.switch\n      }\n    },\n    layer: layer != null ? layer : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.layer,\n    media,\n    radius,\n    shadow,\n    space,\n    style\n  };\n  return cache$2.set(v0, v2), v2;\n}\nconst cache$1 = /* @__PURE__ */ new WeakMap();\nfunction v2_v0(v2) {\n  const cachedTheme = cache$1.get(v2);\n  if (cachedTheme) return cachedTheme;\n  const {\n    avatar,\n    button,\n    color: color2,\n    container,\n    font: fonts,\n    input,\n    media,\n    radius,\n    shadow: shadows,\n    space,\n    style: styles\n  } = v2;\n  return {\n    _version: 0,\n    avatar,\n    button,\n    container,\n    color: {\n      light: {\n        transparent: themeColor_v2_v0(color2.light.transparent),\n        default: themeColor_v2_v0(color2.light.default),\n        primary: themeColor_v2_v0(color2.light.primary),\n        positive: themeColor_v2_v0(color2.light.positive),\n        caution: themeColor_v2_v0(color2.light.caution),\n        critical: themeColor_v2_v0(color2.light.critical)\n      },\n      dark: {\n        transparent: themeColor_v2_v0(color2.dark.transparent),\n        default: themeColor_v2_v0(color2.dark.default),\n        primary: themeColor_v2_v0(color2.dark.primary),\n        positive: themeColor_v2_v0(color2.dark.positive),\n        caution: themeColor_v2_v0(color2.dark.caution),\n        critical: themeColor_v2_v0(color2.dark.critical)\n      }\n    },\n    focusRing: input.text.focusRing,\n    fonts,\n    input,\n    media,\n    radius,\n    shadows,\n    space,\n    styles,\n    v2\n  };\n}\nfunction themeColor_v2_v0(color_v2) {\n  return {\n    base: {\n      bg: color_v2.bg,\n      fg: color_v2.fg,\n      border: color_v2.border,\n      focusRing: color_v2.focusRing,\n      shadow: color_v2.shadow\n    },\n    button: color_v2.button,\n    card: color_v2.selectable.default,\n    dark: color_v2._dark,\n    input: {\n      default: inputStatesThemeColor_v2_v0(color_v2.input.default),\n      invalid: inputStatesThemeColor_v2_v0(color_v2.input.invalid)\n    },\n    muted: {\n      ...color_v2.button.ghost,\n      transparent: color_v2.button.ghost.default\n    },\n    solid: {\n      ...color_v2.button.default,\n      transparent: color_v2.button.default.default\n    },\n    selectable: color_v2.selectable,\n    spot: {\n      gray: color_v2.avatar.gray.bg,\n      blue: color_v2.avatar.blue.bg,\n      purple: color_v2.avatar.purple.bg,\n      magenta: color_v2.avatar.magenta.bg,\n      red: color_v2.avatar.red.bg,\n      orange: color_v2.avatar.orange.bg,\n      yellow: color_v2.avatar.yellow.bg,\n      green: color_v2.avatar.green.bg,\n      cyan: color_v2.avatar.cyan.bg\n    },\n    syntax: color_v2.syntax\n  };\n}\nfunction inputStatesThemeColor_v2_v0(t) {\n  return {\n    enabled: inputStateThemeColor_v2_v0(t.enabled),\n    disabled: inputStateThemeColor_v2_v0(t.disabled),\n    readOnly: inputStateThemeColor_v2_v0(t.readOnly),\n    hovered: inputStateThemeColor_v2_v0(t.hovered)\n  };\n}\nfunction inputStateThemeColor_v2_v0(t) {\n  return {\n    bg: t.bg,\n    bg2: t.muted.bg,\n    border: t.border,\n    fg: t.fg,\n    placeholder: t.placeholder\n  };\n}\nconst THEME_COLOR_SCHEMES = [\"light\", \"dark\"], THEME_COLOR_BLEND_MODES = [\"multiply\", \"screen\"], THEME_COLOR_CARD_TONES = [\n  \"transparent\",\n  \"default\",\n  \"primary\",\n  \"positive\",\n  \"caution\",\n  \"critical\"\n], THEME_COLOR_STATE_TONES = [\n  \"default\",\n  \"primary\",\n  \"positive\",\n  \"caution\",\n  \"critical\"\n], THEME_COLOR_STATES = [\"enabled\", \"hovered\", \"pressed\", \"selected\", \"disabled\"], THEME_COLOR_BUTTON_MODES = [\"default\", \"ghost\", \"bleed\"], THEME_COLOR_INPUT_MODES = [\"default\", \"invalid\"], THEME_COLOR_INPUT_STATES = [\"enabled\", \"hovered\", \"readOnly\", \"disabled\"], THEME_COLOR_AVATAR_COLORS = _sanity_color__WEBPACK_IMPORTED_MODULE_1__.COLOR_HUES;\nfunction isColorBlendModeValue(str) {\n  return THEME_COLOR_BLEND_MODES.includes(str);\n}\nfunction isColorHueKey(str) {\n  return _sanity_color__WEBPACK_IMPORTED_MODULE_1__.COLOR_HUES.includes(str);\n}\nfunction isColorTintKey(str) {\n  return _sanity_color__WEBPACK_IMPORTED_MODULE_1__.COLOR_TINTS.includes(str);\n}\nfunction isColorButtonMode(str) {\n  return THEME_COLOR_BUTTON_MODES.includes(str);\n}\nconst COLOR_CONFIG_STATE_KEYS = [\n  \"_hue\",\n  \"bg\",\n  \"fg\",\n  \"border\",\n  \"focusRing\",\n  \"muted/fg\",\n  \"accent/fg\",\n  \"link/fg\",\n  \"code/bg\",\n  \"code/fg\",\n  \"skeleton/from\",\n  \"skeleton/to\",\n  \"status/dot\",\n  \"status/icon\"\n], COLOR_CONFIG_CARD_KEYS = [\n  ...COLOR_CONFIG_STATE_KEYS,\n  \"_hue\",\n  \"bg\",\n  \"fg\",\n  \"border\",\n  \"focusRing\",\n  \"shadow/outline\",\n  \"shadow/umbra\",\n  \"shadow/penumbra\",\n  \"shadow/ambient\"\n], COLOR_CONFIG_BLEND_KEYS = [\"_blend\"], COLOR_CONFIG_AVATAR_COLORS = [\"*\", ...THEME_COLOR_AVATAR_COLORS], COLOR_CONFIG_CARD_TONES = [\"*\", ...THEME_COLOR_CARD_TONES], COLOR_CONFIG_STATE_TONES = [\"*\", ...THEME_COLOR_STATE_TONES], COLOR_CONFIG_STATES = [\"*\", ...THEME_COLOR_STATES], COLOR_CONFIG_INPUT_MODES = [\"*\", ...THEME_COLOR_INPUT_MODES], COLOR_CONFIG_INPUT_STATES = [\"*\", ...THEME_COLOR_INPUT_STATES];\nfunction parseTokenKey(str) {\n  const segments = str.split(\"/\"), segment0 = segments.shift() || \"\";\n  if (isColorConfigBaseTone(segment0)) {\n    const key = segments.join(\"/\");\n    if (isColorConfigBaseKey(key))\n      return {\n        type: \"base\",\n        tone: segment0,\n        key\n      };\n    if (isColorConfigBlendKey(key))\n      return {\n        type: \"base\",\n        tone: segment0,\n        key\n      };\n  }\n  if (segment0 === \"button\") {\n    const segment1 = segments.shift() || \"\";\n    if (isColorConfigStateTone(segment1)) {\n      const segment2 = segments.shift() || \"\";\n      if (isColorButtonMode(segment2)) {\n        const key = segments.join(\"/\");\n        if (isColorConfigStateKey(key))\n          return {\n            type: \"button\",\n            tone: segment1,\n            mode: segment2,\n            key\n          };\n        if (isColorConfigBlendKey(key))\n          return {\n            type: \"button\",\n            tone: segment1,\n            mode: segment2,\n            key\n          };\n      }\n    }\n  }\n}\nfunction isColorMixPercentValue(str) {\n  return /^\\d+%$/.test(str);\n}\nfunction parseTokenValue(str) {\n  const segments = str.split(\"/\");\n  let nextSegment = segments.shift() || \"\";\n  const [segment0, segment0mix] = nextSegment.split(\" \");\n  if (isColorTintKey(segment0)) {\n    const tint = segment0, segment1 = segments.shift() || \"\";\n    if (isColorMixPercentValue(segment0mix)) {\n      const mix2 = Number(segment0mix.slice(0, -1)) / 100;\n      return {\n        type: \"color\",\n        tint,\n        mix: mix2\n      };\n    }\n    if (isColorOpacityValue(segment1)) {\n      const opacity = Number(segment1);\n      return {\n        type: \"color\",\n        tint,\n        opacity\n      };\n    }\n    return {\n      type: \"color\",\n      tint\n    };\n  }\n  if (isColorValue(segment0)) {\n    const key = segment0, segment1 = segments.shift() || \"\";\n    if (isColorMixPercentValue(segment0mix)) {\n      const mix2 = Number(segment0mix.slice(0, -1)) / 100;\n      return {\n        type: \"color\",\n        key,\n        mix: mix2\n      };\n    }\n    if (isColorOpacityValue(segment1)) {\n      const opacity = Number(segment1);\n      return {\n        type: \"color\",\n        key,\n        opacity\n      };\n    }\n    return {\n      type: \"color\",\n      key\n    };\n  }\n  if (isColorHueKey(segment0)) {\n    const hue = segment0;\n    nextSegment = segments.shift() || \"\";\n    const [segment1, segment1mix] = nextSegment.split(\" \");\n    if (isColorTintKey(segment1)) {\n      const tint = segment1, segment2 = segments.shift() || \"\";\n      if (isColorMixPercentValue(segment1mix)) {\n        const mix2 = Number(segment1mix.slice(0, -1)) / 100;\n        return {\n          type: \"color\",\n          hue,\n          tint,\n          mix: mix2\n        };\n      }\n      if (isColorOpacityValue(segment2)) {\n        const opacity = Number(segment2);\n        return {\n          type: \"color\",\n          hue,\n          tint,\n          opacity\n        };\n      }\n      return {\n        type: \"color\",\n        hue,\n        tint\n      };\n    }\n    return {\n      type: \"hue\",\n      value: hue\n    };\n  }\n  if (isColorBlendModeValue(segment0))\n    return {\n      type: \"blendMode\",\n      value: segment0\n    };\n}\nfunction isColorConfigBaseTone(str) {\n  return COLOR_CONFIG_CARD_TONES.includes(str);\n}\nfunction isColorConfigBaseKey(str) {\n  return COLOR_CONFIG_CARD_KEYS.includes(str);\n}\nfunction isColorConfigStateKey(str) {\n  return COLOR_CONFIG_STATE_KEYS.includes(str);\n}\nfunction isColorConfigStateTone(str) {\n  return COLOR_CONFIG_STATE_TONES.includes(str);\n}\nfunction isColorConfigBlendKey(str) {\n  return COLOR_CONFIG_BLEND_KEYS.includes(str);\n}\nfunction isColorTokenValue(str) {\n  var _a, _b;\n  return ((_a = parseTokenValue(str)) == null ? void 0 : _a.type) === \"color\" || ((_b = parseTokenValue(str)) == null ? void 0 : _b.type) === \"hue\";\n}\nfunction isColorValue(str) {\n  return str === \"black\" || str === \"white\";\n}\nfunction isColorOpacityValue(str) {\n  return str === \"0\" || /^0\\.[0-9]+$/.test(str) || str === \"1\";\n}\nfunction compileColorTokenValue(node) {\n  let key = \"\";\n  return node.key === \"black\" || node.key === \"white\" ? key = node.key : key = `${node.hue}/${node.tint}`, node.mix !== void 0 ? `${key} ${node.mix * 100}%` : (node.opacity !== void 0 && (key += `/${node.opacity}`), key);\n}\nconst DEFAULT_COLOR_TOKEN_VALUE = [\"500\", \"500\"];\nfunction resolveColorTokenValue(context, value = DEFAULT_COLOR_TOKEN_VALUE) {\n  const { hue, scheme } = context, node = parseTokenValue(value[scheme === \"light\" ? 0 : 1]);\n  if (!node || node.type !== \"color\")\n    throw new Error(`Invalid color token: ${value[0]}`);\n  return compileColorTokenValue({ ...node, hue: node.hue || hue });\n}\nconst defaultColorTokens = {\n  base: {\n    \"*\": {\n      _blend: [\"multiply\", \"screen\"],\n      accent: {\n        fg: [\"purple/600\", \"purple/400\"]\n      },\n      avatar: {\n        \"*\": {\n          _blend: [\"screen\", \"multiply\"],\n          bg: [\"500\", \"400\"],\n          fg: [\"white\", \"black\"]\n        }\n      },\n      backdrop: [\"gray/200/0.5\", \"black/0.5\"],\n      badge: {\n        \"*\": {\n          bg: [\"100\", \"900\"],\n          fg: [\"600\", \"400\"],\n          icon: [\"500\", \"500\"],\n          dot: [\"500\", \"500\"]\n        },\n        positive: {\n          bg: [\"200 50%\", \"900\"],\n          fg: [\"600\", \"500\"]\n        },\n        caution: {\n          bg: [\"200 50%\", \"900\"],\n          fg: [\"600\", \"500\"]\n        }\n      },\n      bg: [\"50\", \"950\"],\n      border: [\"200\", \"800\"],\n      code: {\n        bg: [\"50\", \"950\"],\n        fg: [\"600\", \"400\"]\n      },\n      fg: [\"800\", \"200\"],\n      focusRing: [\"blue/500\", \"blue/500\"],\n      icon: [\"600\", \"400\"],\n      kbd: {\n        bg: [\"white\", \"black\"],\n        fg: [\"600\", \"400\"],\n        border: [\"200\", \"800\"]\n      },\n      link: {\n        fg: [\"blue/600\", \"blue/300\"]\n      },\n      muted: {\n        bg: [\"50\", \"950\"],\n        fg: [\"700 75%\", \"300 75%\"]\n      },\n      shadow: {\n        outline: [\"500/0.3\", \"500/0.4\"],\n        umbra: [\"gray/500/0.1\", \"black/0.2\"],\n        penumbra: [\"gray/500/0.07\", \"black/0.14\"],\n        ambient: [\"gray/500/0.06\", \"black/0.12\"]\n      },\n      skeleton: {\n        from: [\"100\", \"900\"],\n        to: [\"100 50%\", \"900 50%\"]\n      }\n    },\n    transparent: {\n      bg: [\"50\", \"black\"]\n    },\n    default: {\n      bg: [\"white\", \"950\"],\n      fg: [\"800\", \"200\"],\n      muted: {\n        fg: [\"600\", \"400\"]\n      }\n    },\n    primary: { _hue: \"blue\" },\n    positive: {\n      _hue: \"green\",\n      shadow: { outline: [\"500/0.4\", \"500/0.4\"] }\n    },\n    caution: {\n      _hue: \"yellow\",\n      shadow: { outline: [\"600/0.3\", \"500/0.4\"] }\n    },\n    critical: { _hue: \"red\" }\n  },\n  button: {\n    default: {\n      \"*\": {\n        \"*\": {\n          _blend: [\"screen\", \"multiply\"],\n          accent: {\n            fg: [\"purple/300\", \"purple/700\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"500\", \"400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              bg: [\"900\", \"100\"],\n              fg: [\"400\", \"600\"],\n              dot: [\"500\", \"500\"],\n              icon: [\"500\", \"500\"]\n            }\n          },\n          bg: [\"500\", \"400\"],\n          border: [\"500/0\", \"400/0\"],\n          code: {\n            bg: [\"500 20%\", \"400 20%\"],\n            fg: [\"200\", \"600\"]\n          },\n          fg: [\"white\", \"black\"],\n          icon: [\"100 70%\", \"900 70%\"],\n          kbd: {\n            bg: [\"black\", \"white\"],\n            fg: [\"200\", \"600\"],\n            border: [\"800\", \"200\"]\n          },\n          link: {\n            fg: [\"blue/200\", \"blue/600\"]\n          },\n          muted: {\n            bg: [\"950\", \"50\"],\n            fg: [\"100 70%\", \"900 70%\"]\n          },\n          skeleton: {\n            from: [\"900\", \"100\"],\n            to: [\"900 50%\", \"100 50%\"]\n          }\n        },\n        hovered: {\n          bg: [\"700\", \"300\"],\n          border: [\"700/0\", \"300/0\"]\n        },\n        pressed: {\n          bg: [\"700\", \"300\"]\n        },\n        selected: {\n          bg: [\"700\", \"300\"]\n        },\n        disabled: {\n          _hue: \"gray\",\n          accent: {\n            fg: [\"100 70%\", \"900 70%\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"gray/500\", \"gray/400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              bg: [\"gray/700\", \"gray/300\"],\n              fg: [\"white\", \"black\"],\n              dot: [\"white\", \"black\"],\n              icon: [\"white\", \"black\"]\n            }\n          },\n          bg: [\"300\", \"600\"],\n          code: {\n            bg: [\"950\", \"50\"],\n            fg: [\"300\", \"600\"]\n          },\n          fg: [\"300\", \"600\"],\n          muted: {\n            bg: [\"950\", \"50\"],\n            fg: [\"300\", \"600\"]\n          },\n          kbd: {\n            bg: [\"black\", \"white\"],\n            fg: [\"white\", \"black\"],\n            border: [\"700\", \"300\"]\n          },\n          link: {\n            fg: [\"100 70%\", \"900 70%\"]\n          }\n        }\n      },\n      default: {\n        \"*\": {\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"500\", \"400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          bg: [\"800\", \"200\"],\n          muted: {\n            bg: [\"950\", \"50\"],\n            fg: [\"400\", \"600\"]\n          }\n        },\n        hovered: {\n          bg: [\"900\", \"100\"]\n        },\n        pressed: {\n          bg: [\"black\", \"white\"]\n        },\n        selected: {\n          bg: [\"black\", \"white\"]\n        }\n      }\n    },\n    ghost: {\n      \"*\": {\n        \"*\": {\n          _blend: [\"multiply\", \"screen\"],\n          accent: {\n            fg: [\"purple/700 60%\", \"purple/300 70%\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"500\", \"400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              bg: [\"100\", \"900\"],\n              fg: [\"600\", \"400\"],\n              dot: [\"500\", \"500\"],\n              icon: [\"500\", \"500\"]\n            }\n          },\n          bg: [\"50\", \"950\"],\n          border: [\"100\", \"900\"],\n          code: {\n            bg: [\"500 10%\", \"400 10%\"],\n            fg: [\"700 60%\", \"400 60%\"]\n          },\n          fg: [\"600\", \"400\"],\n          icon: [\"700 60%\", \"300 60%\"],\n          kbd: {\n            bg: [\"white\", \"black\"],\n            fg: [\"600\", \"400\"],\n            border: [\"200\", \"800\"]\n          },\n          link: {\n            fg: [\"blue/700 60%\", \"blue/300 60%\"]\n          },\n          muted: {\n            bg: [\"100\", \"950\"],\n            fg: [\"700 60%\", \"300 60%\"]\n          },\n          skeleton: {\n            from: [\"100\", \"900\"],\n            to: [\"100 50%\", \"900 50%\"]\n          }\n        },\n        hovered: {\n          bg: [\"100\", \"900\"],\n          fg: [\"700\", \"300\"]\n        },\n        pressed: {\n          bg: [\"100\", \"900\"],\n          fg: [\"800\", \"200\"]\n        },\n        selected: {\n          bg: [\"100\", \"900\"],\n          fg: [\"800\", \"200\"]\n        },\n        disabled: {\n          _hue: \"gray\",\n          accent: {\n            fg: [\"200\", \"800\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"gray/100\", \"gray/900\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              _hue: \"gray\",\n              bg: [\"50\", \"950\"],\n              fg: [\"gray/200\", \"gray/800\"],\n              dot: [\"gray/200\", \"gray/800\"],\n              icon: [\"gray/200\", \"gray/800\"]\n            }\n          },\n          border: [\"100\", \"900\"],\n          code: {\n            bg: [\"50\", \"950\"],\n            fg: [\"200\", \"800\"]\n          },\n          fg: [\"400\", \"600\"],\n          icon: [\"300\", \"700\"],\n          muted: {\n            fg: [\"300\", \"700\"]\n          },\n          kbd: {\n            bg: [\"white\", \"black\"],\n            fg: [\"200\", \"800\"],\n            border: [\"100\", \"900\"]\n          },\n          link: {\n            fg: [\"200\", \"800\"]\n          }\n        }\n      },\n      positive: {\n        \"*\": {\n          border: [\"600 20%\", \"800\"]\n        }\n      },\n      caution: {\n        \"*\": {\n          border: [\"600 20%\", \"800\"]\n        }\n      }\n    },\n    bleed: {\n      \"*\": {\n        \"*\": {\n          _blend: [\"multiply\", \"screen\"],\n          accent: {\n            fg: [\"purple/700 70%\", \"purple/300 70%\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"500\", \"400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              bg: [\"100\", \"900\"],\n              fg: [\"600\", \"400\"],\n              dot: [\"500\", \"500\"],\n              icon: [\"500\", \"500\"]\n            }\n          },\n          bg: [\"white\", \"black\"],\n          border: [\"white/0\", \"black/0\"],\n          code: {\n            bg: [\"50\", \"950\"],\n            fg: [\"700 75%\", \"300 75%\"]\n          },\n          fg: [\"700\", \"300\"],\n          icon: [\"700 75%\", \"300 75%\"],\n          kbd: {\n            bg: [\"white\", \"black\"],\n            fg: [\"700\", \"300\"],\n            border: [\"200\", \"800\"]\n          },\n          link: {\n            fg: [\"blue/700 70%\", \"blue/300 70%\"]\n          },\n          muted: {\n            bg: [\"100\", \"950\"],\n            fg: [\"700 75%\", \"300 75%\"]\n          },\n          skeleton: {\n            from: [\"100\", \"900\"],\n            to: [\"100 50%\", \"900 50%\"]\n          }\n        },\n        hovered: {\n          bg: [\"50\", \"950\"],\n          icon: [\"700 70%\", \"400 70%\"]\n        },\n        pressed: {\n          bg: [\"100\", \"900\"],\n          fg: [\"800\", \"200\"],\n          icon: [\"800 70%\", \"200 70%\"]\n        },\n        selected: {\n          bg: [\"100\", \"900\"],\n          fg: [\"800\", \"200\"],\n          icon: [\"800 60%\", \"200 60%\"]\n        },\n        disabled: {\n          _hue: \"gray\",\n          accent: {\n            fg: [\"200\", \"800\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"gray/100\", \"gray/900\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              _hue: \"gray\",\n              bg: [\"50\", \"950\"],\n              fg: [\"gray/200\", \"gray/800\"],\n              dot: [\"gray/200\", \"gray/800\"],\n              icon: [\"gray/200\", \"gray/800\"]\n            }\n          },\n          code: {\n            bg: [\"50\", \"950\"],\n            fg: [\"200\", \"800\"]\n          },\n          fg: [\"400\", \"600\"],\n          icon: [\"300\", \"700\"],\n          muted: {\n            fg: [\"400\", \"600\"]\n          },\n          kbd: {\n            bg: [\"white\", \"black\"],\n            fg: [\"200\", \"800\"],\n            border: [\"100\", \"900\"]\n          },\n          link: {\n            fg: [\"200\", \"800\"]\n          }\n        }\n      }\n    }\n  },\n  input: {\n    \"*\": {\n      \"*\": {\n        _blend: [\"multiply\", \"screen\"],\n        bg: [\"white\", \"black\"],\n        border: [\"200\", \"800\"],\n        fg: [\"black\", \"200\"],\n        muted: {\n          bg: [\"50\", \"950\"]\n        },\n        placeholder: [\"400\", \"600\"]\n      },\n      hovered: {\n        border: [\"300\", \"700\"]\n      },\n      readOnly: {\n        bg: [\"50\", \"950\"],\n        border: [\"200\", \"800\"],\n        fg: [\"800\", \"200\"]\n      },\n      disabled: {\n        fg: [\"400\", \"600\"],\n        border: [\"100\", \"900\"],\n        placeholder: [\"200\", \"800 50%\"]\n      }\n    },\n    invalid: {\n      \"*\": {\n        _hue: \"red\",\n        bg: [\"100\", \"950\"]\n      }\n    }\n  },\n  selectable: {\n    \"*\": {\n      \"*\": {\n        _blend: [\"multiply\", \"screen\"],\n        accent: {\n          fg: [\"purple/700 70%\", \"purple/300 70%\"]\n        },\n        avatar: {\n          \"*\": {\n            _blend: [\"screen\", \"multiply\"],\n            bg: [\"500\", \"400\"],\n            fg: [\"white\", \"black\"]\n          }\n        },\n        badge: {\n          \"*\": {\n            bg: [\"100\", \"900\"],\n            fg: [\"600\", \"400\"],\n            dot: [\"500\", \"500\"],\n            icon: [\"500\", \"500\"]\n          }\n        },\n        bg: [\"white\", \"black\"],\n        border: [\"200\", \"800\"],\n        code: {\n          bg: [\"50\", \"950\"],\n          fg: [\"600\", \"400\"]\n        },\n        fg: [\"700\", \"300\"],\n        icon: [\"700 75%\", \"300 75%\"],\n        kbd: {\n          bg: [\"white\", \"black\"],\n          fg: [\"600\", \"400\"],\n          border: [\"200\", \"800\"]\n        },\n        link: {\n          fg: [\"blue/700 70%\", \"blue/300 70%\"]\n        },\n        muted: {\n          bg: [\"50\", \"950\"],\n          fg: [\"700 75%\", \"300 75%\"]\n        },\n        skeleton: {\n          from: [\"100\", \"900\"],\n          to: [\"100 50%\", \"900 50%\"]\n        }\n      },\n      hovered: {\n        bg: [\"50\", \"950\"]\n      },\n      pressed: {\n        bg: [\"100\", \"900\"]\n      },\n      selected: {\n        _blend: [\"screen\", \"multiply\"],\n        accent: {\n          fg: [\"purple/300\", \"purple/700\"]\n        },\n        avatar: {\n          \"*\": {\n            _blend: [\"multiply\", \"screen\"],\n            bg: [\"white\", \"black\"],\n            fg: [\"black\", \"white\"]\n          }\n        },\n        badge: {\n          \"*\": {\n            bg: [\"900\", \"100\"],\n            fg: [\"400\", \"600\"],\n            dot: [\"500\", \"500\"],\n            icon: [\"500\", \"500\"]\n          }\n        },\n        bg: [\"500\", \"400\"],\n        border: [\"500 20%\", \"400 20%\"],\n        code: {\n          bg: [\"500 20%\", \"400 20%\"],\n          fg: [\"200\", \"600\"]\n        },\n        fg: [\"white\", \"black\"],\n        icon: [\"100 70%\", \"900 70%\"],\n        kbd: {\n          bg: [\"black\", \"white\"],\n          fg: [\"200\", \"600\"],\n          border: [\"800\", \"200\"]\n        },\n        link: {\n          fg: [\"blue/200\", \"blue/600\"]\n        },\n        muted: {\n          bg: [\"500 10%\", \"400 10%\"],\n          fg: [\"100 70%\", \"900 70%\"]\n        },\n        skeleton: {\n          from: [\"900\", \"100\"],\n          to: [\"900 50%\", \"100 50%\"]\n        }\n      },\n      disabled: {\n        _hue: \"gray\",\n        accent: {\n          fg: [\"200\", \"800\"]\n        },\n        avatar: {\n          \"*\": {\n            _blend: [\"screen\", \"multiply\"],\n            bg: [\"gray/100\", \"gray/900\"],\n            fg: [\"white\", \"black\"]\n          }\n        },\n        badge: {\n          \"*\": {\n            _hue: \"gray\",\n            bg: [\"50\", \"950\"],\n            fg: [\"gray/200\", \"gray/800\"],\n            dot: [\"gray/200\", \"gray/800\"],\n            icon: [\"gray/200\", \"gray/800\"]\n          }\n        },\n        border: [\"100\", \"900\"],\n        code: {\n          bg: [\"50\", \"950\"],\n          fg: [\"200\", \"800\"]\n        },\n        fg: [\"200\", \"800\"],\n        icon: [\"200\", \"800\"],\n        kbd: {\n          bg: [\"white\", \"black\"],\n          fg: [\"200\", \"800\"],\n          border: [\"100\", \"900\"]\n        },\n        link: {\n          fg: [\"200\", \"800\"]\n        },\n        muted: {\n          bg: [\"50 50%\", \"950 50%\"],\n          fg: [\"200\", \"800\"]\n        }\n      }\n    },\n    default: {\n      selected: {\n        _hue: \"blue\"\n      }\n    },\n    critical: {\n      disabled: {\n        bg: [\"50 50%\", \"950 50%\"]\n      }\n    }\n  },\n  syntax: {\n    atrule: [\"purple/600\", \"purple/400\"],\n    attrName: [\"green/600\", \"green/400\"],\n    attrValue: [\"yellow/600\", \"yellow/400\"],\n    attribute: [\"yellow/600\", \"yellow/400\"],\n    boolean: [\"purple/600\", \"purple/400\"],\n    builtin: [\"purple/600\", \"purple/400\"],\n    cdata: [\"yellow/600\", \"yellow/400\"],\n    char: [\"yellow/600\", \"yellow/400\"],\n    class: [\"orange/600\", \"orange/400\"],\n    className: [\"cyan/600\", \"cyan/400\"],\n    comment: [\"gray/400\", \"gray/600\"],\n    constant: [\"purple/600\", \"purple/400\"],\n    deleted: [\"red/600\", \"red/400\"],\n    entity: [\"red/600\", \"red/400\"],\n    function: [\"green/600\", \"green/400\"],\n    hexcode: [\"blue/600\", \"blue/400\"],\n    id: [\"purple/600\", \"purple/400\"],\n    important: [\"purple/600\", \"purple/400\"],\n    inserted: [\"yellow/600\", \"yellow/400\"],\n    keyword: [\"magenta/600\", \"magenta/400\"],\n    number: [\"purple/600\", \"purple/400\"],\n    operator: [\"magenta/600\", \"magenta/400\"],\n    property: [\"blue/600\", \"blue/400\"],\n    pseudoClass: [\"yellow/600\", \"yellow/400\"],\n    pseudoElement: [\"yellow/600\", \"yellow/400\"],\n    punctuation: [\"gray/600\", \"gray/400\"],\n    regex: [\"blue/600\", \"blue/400\"],\n    selector: [\"red/600\", \"red/400\"],\n    string: [\"yellow/600\", \"yellow/400\"],\n    symbol: [\"purple/600\", \"purple/400\"],\n    tag: [\"red/600\", \"red/400\"],\n    unit: [\"orange/600\", \"orange/400\"],\n    url: [\"red/600\", \"red/400\"],\n    variable: [\"red/600\", \"red/400\"]\n  }\n};\nfunction isRecord(value) {\n  return !!(value && typeof value == \"object\" && !Array.isArray(value));\n}\nfunction merge(...records) {\n  const _records = records.filter(Boolean);\n  return _records.length === 0 ? {} : _records.reduce(_merge, {});\n}\nfunction _merge(acc, source) {\n  for (const key of Object.keys(source)) {\n    const prevValue = acc[key], nextValue = source[key];\n    isRecord(prevValue) && isRecord(nextValue) ? acc[key] = merge(prevValue, nextValue) : acc[key] = nextValue;\n  }\n  return acc;\n}\nfunction resolveColorTokens(inputTokens) {\n  const tokens = merge(defaultColorTokens, inputTokens);\n  return {\n    base: resolveBaseColorTokens(tokens),\n    button: resolveButtonColorTokens(tokens),\n    input: resolveInputColorTokens(tokens),\n    selectable: resolveSelectableColorTokens(tokens),\n    syntax: tokens.syntax\n  };\n}\nfunction resolveBaseColorTokens(sparseTokens) {\n  const tokens = {};\n  for (const tone of THEME_COLOR_CARD_TONES)\n    tokens[tone] = resolveBaseColorTones(sparseTokens, tone);\n  return tokens;\n}\nfunction resolveBaseColorTones(inputTokens, tone) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F, _G, _H, _I, _J, _K, _L, _M, _N, _O, _P;\n  const spec = merge((_a = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _a[\"*\"], (_b = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _b[tone]), hue = spec._hue || ((_d = (_c = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _c[tone]) == null ? void 0 : _d._hue) || \"gray\";\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: {\n      gray: merge({ _hue: \"gray\" }, (_e = spec.avatar) == null ? void 0 : _e[\"*\"], (_f = spec.avatar) == null ? void 0 : _f.gray),\n      blue: merge({ _hue: \"blue\" }, (_g = spec.avatar) == null ? void 0 : _g[\"*\"], (_h = spec.avatar) == null ? void 0 : _h.blue),\n      purple: merge({ _hue: \"purple\" }, (_i = spec.avatar) == null ? void 0 : _i[\"*\"], (_j = spec.avatar) == null ? void 0 : _j.purple),\n      magenta: merge({ _hue: \"magenta\" }, (_k = spec.avatar) == null ? void 0 : _k[\"*\"], (_l = spec.avatar) == null ? void 0 : _l.magenta),\n      red: merge({ _hue: \"red\" }, (_m = spec.avatar) == null ? void 0 : _m[\"*\"], (_n = spec.avatar) == null ? void 0 : _n.red),\n      orange: merge({ _hue: \"orange\" }, (_o = spec.avatar) == null ? void 0 : _o[\"*\"], (_p = spec.avatar) == null ? void 0 : _p.orange),\n      yellow: merge({ _hue: \"yellow\" }, (_q = spec.avatar) == null ? void 0 : _q[\"*\"], (_r = spec.avatar) == null ? void 0 : _r.yellow),\n      green: merge({ _hue: \"green\" }, (_s = spec.avatar) == null ? void 0 : _s[\"*\"], (_t = spec.avatar) == null ? void 0 : _t.green),\n      cyan: merge({ _hue: \"cyan\" }, (_u = spec.avatar) == null ? void 0 : _u[\"*\"], (_v = spec.avatar) == null ? void 0 : _v.cyan)\n    },\n    badge: {\n      default: {\n        _hue: ((_x = (_w = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _w.default) == null ? void 0 : _x._hue) || hue,\n        ...(_y = spec.badge) == null ? void 0 : _y[\"*\"],\n        ...(_z = spec.badge) == null ? void 0 : _z.default\n      },\n      primary: {\n        _hue: ((_B = (_A = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _A.primary) == null ? void 0 : _B._hue) || hue,\n        ...(_C = spec.badge) == null ? void 0 : _C[\"*\"],\n        ...(_D = spec.badge) == null ? void 0 : _D.primary\n      },\n      positive: {\n        _hue: ((_F = (_E = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _E.positive) == null ? void 0 : _F._hue) || hue,\n        ...(_G = spec.badge) == null ? void 0 : _G[\"*\"],\n        ...(_H = spec.badge) == null ? void 0 : _H.positive\n      },\n      caution: {\n        _hue: ((_J = (_I = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _I.caution) == null ? void 0 : _J._hue) || hue,\n        ...(_K = spec.badge) == null ? void 0 : _K[\"*\"],\n        ...(_L = spec.badge) == null ? void 0 : _L.caution\n      },\n      critical: {\n        _hue: ((_N = (_M = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _M.critical) == null ? void 0 : _N._hue) || hue,\n        ...(_O = spec.badge) == null ? void 0 : _O[\"*\"],\n        ...(_P = spec.badge) == null ? void 0 : _P.critical\n      }\n    }\n  };\n}\nfunction resolveButtonColorTokens(inputTokens) {\n  const tokens = {};\n  for (const mode of THEME_COLOR_BUTTON_MODES)\n    tokens[mode] = resolveButtonToneColorTokens(inputTokens, mode);\n  return tokens;\n}\nfunction resolveButtonToneColorTokens(inputTokens, mode) {\n  const tokens = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    tokens[tone] = resolveButtonModeColorTokens(inputTokens, mode, tone);\n  return tokens;\n}\nfunction resolveButtonModeColorTokens(inputTokens, mode, tone) {\n  const tokens = {};\n  for (const state of THEME_COLOR_STATES)\n    tokens[state] = resolveButtonStateColorTokens(inputTokens, tone, mode, state);\n  return tokens;\n}\nfunction resolveButtonStateColorTokens(inputTokens, tone, mode, state) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F, _G, _H, _I, _J, _K, _L, _M, _N, _O, _P, _Q, _R, _S, _T, _U, _V, _W, _X, _Y, _Z;\n  const spec = merge(\n    (_c = (_b = (_a = inputTokens == null ? void 0 : inputTokens.button) == null ? void 0 : _a[mode]) == null ? void 0 : _b[\"*\"]) == null ? void 0 : _c[\"*\"],\n    (_f = (_e = (_d = inputTokens == null ? void 0 : inputTokens.button) == null ? void 0 : _d[mode]) == null ? void 0 : _e[tone]) == null ? void 0 : _f[\"*\"],\n    (_i = (_h = (_g = inputTokens == null ? void 0 : inputTokens.button) == null ? void 0 : _g[mode]) == null ? void 0 : _h[\"*\"]) == null ? void 0 : _i[state],\n    (_l = (_k = (_j = inputTokens == null ? void 0 : inputTokens.button) == null ? void 0 : _j[mode]) == null ? void 0 : _k[tone]) == null ? void 0 : _l[state]\n  ), hue = spec._hue || ((_n = (_m = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _m[tone]) == null ? void 0 : _n._hue);\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: {\n      gray: merge({ _hue: \"gray\" }, (_o = spec.avatar) == null ? void 0 : _o[\"*\"], (_p = spec.avatar) == null ? void 0 : _p.gray),\n      blue: merge({ _hue: \"blue\" }, (_q = spec.avatar) == null ? void 0 : _q[\"*\"], (_r = spec.avatar) == null ? void 0 : _r.blue),\n      purple: merge({ _hue: \"purple\" }, (_s = spec.avatar) == null ? void 0 : _s[\"*\"], (_t = spec.avatar) == null ? void 0 : _t.purple),\n      magenta: merge({ _hue: \"magenta\" }, (_u = spec.avatar) == null ? void 0 : _u[\"*\"], (_v = spec.avatar) == null ? void 0 : _v.magenta),\n      red: merge({ _hue: \"red\" }, (_w = spec.avatar) == null ? void 0 : _w[\"*\"], (_x = spec.avatar) == null ? void 0 : _x.red),\n      orange: merge({ _hue: \"orange\" }, (_y = spec.avatar) == null ? void 0 : _y[\"*\"], (_z = spec.avatar) == null ? void 0 : _z.orange),\n      yellow: merge({ _hue: \"yellow\" }, (_A = spec.avatar) == null ? void 0 : _A[\"*\"], (_B = spec.avatar) == null ? void 0 : _B.yellow),\n      green: merge({ _hue: \"green\" }, (_C = spec.avatar) == null ? void 0 : _C[\"*\"], (_D = spec.avatar) == null ? void 0 : _D.green),\n      cyan: merge({ _hue: \"cyan\" }, (_E = spec.avatar) == null ? void 0 : _E[\"*\"], (_F = spec.avatar) == null ? void 0 : _F.cyan)\n    },\n    badge: {\n      default: {\n        _hue: (_H = (_G = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _G.default) == null ? void 0 : _H._hue,\n        ...(_I = spec.badge) == null ? void 0 : _I[\"*\"],\n        ...(_J = spec.badge) == null ? void 0 : _J.default\n      },\n      primary: {\n        _hue: (_L = (_K = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _K.primary) == null ? void 0 : _L._hue,\n        ...(_M = spec.badge) == null ? void 0 : _M[\"*\"],\n        ...(_N = spec.badge) == null ? void 0 : _N.primary\n      },\n      positive: {\n        _hue: (_P = (_O = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _O.positive) == null ? void 0 : _P._hue,\n        ...(_Q = spec.badge) == null ? void 0 : _Q[\"*\"],\n        ...(_R = spec.badge) == null ? void 0 : _R.positive\n      },\n      caution: {\n        _hue: (_T = (_S = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _S.caution) == null ? void 0 : _T._hue,\n        ...(_U = spec.badge) == null ? void 0 : _U[\"*\"],\n        ...(_V = spec.badge) == null ? void 0 : _V.caution\n      },\n      critical: {\n        _hue: (_X = (_W = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _W.critical) == null ? void 0 : _X._hue,\n        ...(_Y = spec.badge) == null ? void 0 : _Y[\"*\"],\n        ...(_Z = spec.badge) == null ? void 0 : _Z.critical\n      }\n    }\n  };\n}\nfunction resolveInputColorTokens(inputTokens) {\n  const tokens = {};\n  for (const mode of THEME_COLOR_INPUT_MODES)\n    tokens[mode] = resolveInputModeColorTokens(inputTokens, mode);\n  return tokens;\n}\nfunction resolveInputModeColorTokens(inputTokens, mode) {\n  const states = {};\n  for (const state of THEME_COLOR_INPUT_STATES)\n    states[state] = resolveInputStateColorTokens(inputTokens, mode, state);\n  return states;\n}\nfunction resolveInputStateColorTokens(inputTokens, mode, state) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n  const spec = merge(\n    (_b = (_a = inputTokens == null ? void 0 : inputTokens.input) == null ? void 0 : _a[\"*\"]) == null ? void 0 : _b[\"*\"],\n    (_d = (_c = inputTokens == null ? void 0 : inputTokens.input) == null ? void 0 : _c[mode]) == null ? void 0 : _d[\"*\"],\n    (_f = (_e = inputTokens == null ? void 0 : inputTokens.input) == null ? void 0 : _e[\"*\"]) == null ? void 0 : _f[state],\n    (_h = (_g = inputTokens == null ? void 0 : inputTokens.input) == null ? void 0 : _g[mode]) == null ? void 0 : _h[state]\n  ), hue = spec._hue || ((_j = (_i = inputTokens == null ? void 0 : inputTokens.input) == null ? void 0 : _i[mode]) == null ? void 0 : _j._hue);\n  return { ...spec, _hue: hue };\n}\nfunction resolveSelectableColorTokens(inputTokens) {\n  const tokens = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    tokens[tone] = resolveSelectableToneColorTokens(inputTokens, tone);\n  return tokens;\n}\nfunction resolveSelectableToneColorTokens(inputTokens, tone) {\n  var _a, _b, _c, _d;\n  const states = {\n    _hue: ((_b = (_a = inputTokens == null ? void 0 : inputTokens.selectable) == null ? void 0 : _a[tone]) == null ? void 0 : _b._hue) || ((_d = (_c = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _c[tone]) == null ? void 0 : _d._hue)\n  };\n  for (const state of THEME_COLOR_STATES)\n    states[state] = resolveSelectableStateColorTokens(inputTokens, tone, state);\n  return states;\n}\nfunction resolveSelectableStateColorTokens(inputTokens, tone, state) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F, _G, _H, _I, _J, _K, _L, _M, _N, _O, _P, _Q, _R, _S, _T, _U, _V;\n  const spec = merge(\n    (_b = (_a = inputTokens == null ? void 0 : inputTokens.selectable) == null ? void 0 : _a[\"*\"]) == null ? void 0 : _b[\"*\"],\n    (_d = (_c = inputTokens == null ? void 0 : inputTokens.selectable) == null ? void 0 : _c[tone]) == null ? void 0 : _d[\"*\"],\n    (_f = (_e = inputTokens == null ? void 0 : inputTokens.selectable) == null ? void 0 : _e[\"*\"]) == null ? void 0 : _f[state],\n    (_h = (_g = inputTokens == null ? void 0 : inputTokens.selectable) == null ? void 0 : _g[tone]) == null ? void 0 : _h[state]\n  ), hue = spec._hue || ((_j = (_i = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _i[tone]) == null ? void 0 : _j._hue);\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: {\n      gray: merge({ _hue: \"gray\" }, (_k = spec.avatar) == null ? void 0 : _k[\"*\"], (_l = spec.avatar) == null ? void 0 : _l.gray),\n      blue: merge({ _hue: \"blue\" }, (_m = spec.avatar) == null ? void 0 : _m[\"*\"], (_n = spec.avatar) == null ? void 0 : _n.blue),\n      purple: merge({ _hue: \"purple\" }, (_o = spec.avatar) == null ? void 0 : _o[\"*\"], (_p = spec.avatar) == null ? void 0 : _p.purple),\n      magenta: merge({ _hue: \"magenta\" }, (_q = spec.avatar) == null ? void 0 : _q[\"*\"], (_r = spec.avatar) == null ? void 0 : _r.magenta),\n      red: merge({ _hue: \"red\" }, (_s = spec.avatar) == null ? void 0 : _s[\"*\"], (_t = spec.avatar) == null ? void 0 : _t.red),\n      orange: merge({ _hue: \"orange\" }, (_u = spec.avatar) == null ? void 0 : _u[\"*\"], (_v = spec.avatar) == null ? void 0 : _v.orange),\n      yellow: merge({ _hue: \"yellow\" }, (_w = spec.avatar) == null ? void 0 : _w[\"*\"], (_x = spec.avatar) == null ? void 0 : _x.yellow),\n      green: merge({ _hue: \"green\" }, (_y = spec.avatar) == null ? void 0 : _y[\"*\"], (_z = spec.avatar) == null ? void 0 : _z.green),\n      cyan: merge({ _hue: \"cyan\" }, (_A = spec.avatar) == null ? void 0 : _A[\"*\"], (_B = spec.avatar) == null ? void 0 : _B.cyan)\n    },\n    badge: {\n      default: {\n        _hue: (_D = (_C = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _C.default) == null ? void 0 : _D._hue,\n        ...(_E = spec.badge) == null ? void 0 : _E[\"*\"],\n        ...(_F = spec.badge) == null ? void 0 : _F.default\n      },\n      primary: {\n        _hue: (_H = (_G = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _G.primary) == null ? void 0 : _H._hue,\n        ...(_I = spec.badge) == null ? void 0 : _I[\"*\"],\n        ...(_J = spec.badge) == null ? void 0 : _J.primary\n      },\n      positive: {\n        _hue: (_L = (_K = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _K.positive) == null ? void 0 : _L._hue,\n        ...(_M = spec.badge) == null ? void 0 : _M[\"*\"],\n        ...(_N = spec.badge) == null ? void 0 : _N.positive\n      },\n      caution: {\n        _hue: (_P = (_O = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _O.caution) == null ? void 0 : _P._hue,\n        ...(_Q = spec.badge) == null ? void 0 : _Q[\"*\"],\n        ...(_R = spec.badge) == null ? void 0 : _R.caution\n      },\n      critical: {\n        _hue: (_T = (_S = inputTokens == null ? void 0 : inputTokens.base) == null ? void 0 : _S.critical) == null ? void 0 : _T._hue,\n        ...(_U = spec.badge) == null ? void 0 : _U[\"*\"],\n        ...(_V = spec.badge) == null ? void 0 : _V.critical\n      }\n    }\n  };\n}\nfunction buildColorTheme(config) {\n  const resolvedConfig = {\n    ...config,\n    color: resolveColorTokens(config == null ? void 0 : config.color)\n  };\n  return {\n    light: buildColorScheme({ scheme: \"light\" }, resolvedConfig),\n    dark: buildColorScheme({ scheme: \"dark\" }, resolvedConfig)\n  };\n}\nfunction buildColorScheme(options, config) {\n  const { scheme } = options;\n  return {\n    transparent: buildCardColorTheme({ scheme, tone: \"transparent\" }, config),\n    default: buildCardColorTheme({ scheme, tone: \"default\" }, config),\n    primary: buildCardColorTheme({ scheme, tone: \"primary\" }, config),\n    positive: buildCardColorTheme({ scheme, tone: \"positive\" }, config),\n    caution: buildCardColorTheme({ scheme, tone: \"caution\" }, config),\n    critical: buildCardColorTheme({ scheme, tone: \"critical\" }, config)\n  };\n}\nfunction buildCardColorTheme(options, config) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;\n  const { scheme, tone } = options, tokens = (_b = (_a = config == null ? void 0 : config.color) == null ? void 0 : _a.base) == null ? void 0 : _b[tone], context = { hue: (tokens == null ? void 0 : tokens._hue) || \"gray\", scheme };\n  return {\n    _blend: ((tokens == null ? void 0 : tokens._blend) || [\"multiply\", \"screen\"])[scheme === \"light\" ? 0 : 1],\n    _dark: scheme === \"dark\",\n    accent: {\n      fg: resolveColorTokenValue(context, (_c = tokens == null ? void 0 : tokens.accent) == null ? void 0 : _c.fg)\n    },\n    avatar: buildAvatarColorTheme({ scheme }, tokens),\n    backdrop: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.backdrop),\n    badge: buildBadgeColorTheme(tokens == null ? void 0 : tokens.badge, { scheme }, config),\n    bg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.bg),\n    border: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.border),\n    button: buildButtonColorTheme({ scheme }, config),\n    code: {\n      bg: resolveColorTokenValue(context, (_d = tokens == null ? void 0 : tokens.code) == null ? void 0 : _d.bg),\n      fg: resolveColorTokenValue(context, (_e = tokens == null ? void 0 : tokens.code) == null ? void 0 : _e.fg)\n    },\n    fg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.fg),\n    focusRing: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.focusRing),\n    icon: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.icon),\n    input: buildInputColorTheme({ scheme, tone }, config),\n    kbd: {\n      bg: resolveColorTokenValue(context, (_f = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _f.bg),\n      fg: resolveColorTokenValue(context, (_g = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _g.fg),\n      border: resolveColorTokenValue(context, (_h = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _h.border)\n    },\n    link: {\n      fg: resolveColorTokenValue(context, (_i = tokens == null ? void 0 : tokens.link) == null ? void 0 : _i.fg)\n    },\n    muted: {\n      bg: resolveColorTokenValue(context, (_j = tokens == null ? void 0 : tokens.muted) == null ? void 0 : _j.bg),\n      fg: resolveColorTokenValue(context, (_k = tokens == null ? void 0 : tokens.muted) == null ? void 0 : _k.fg)\n    },\n    selectable: buildSelectableColorTheme({ scheme }, config),\n    shadow: buildShadowColorTheme({ scheme, tone }, config),\n    skeleton: {\n      from: resolveColorTokenValue(context, (_l = tokens == null ? void 0 : tokens.skeleton) == null ? void 0 : _l.from),\n      to: resolveColorTokenValue(context, (_m = tokens == null ? void 0 : tokens.skeleton) == null ? void 0 : _m.to)\n    },\n    syntax: buildSyntaxColorTheme({ scheme }, config)\n  };\n}\nfunction buildShadowColorTheme(options, config) {\n  var _a, _b, _c, _d, _e, _f;\n  const { scheme, tone } = options, tokens = (_b = (_a = config == null ? void 0 : config.color) == null ? void 0 : _a.base) == null ? void 0 : _b[tone], context = { hue: (tokens == null ? void 0 : tokens._hue) || \"gray\", scheme };\n  return {\n    outline: resolveColorTokenValue(context, (_c = tokens == null ? void 0 : tokens.shadow) == null ? void 0 : _c.outline),\n    umbra: resolveColorTokenValue(context, (_d = tokens == null ? void 0 : tokens.shadow) == null ? void 0 : _d.umbra),\n    penumbra: resolveColorTokenValue(context, (_e = tokens == null ? void 0 : tokens.shadow) == null ? void 0 : _e.penumbra),\n    ambient: resolveColorTokenValue(context, (_f = tokens == null ? void 0 : tokens.shadow) == null ? void 0 : _f.ambient)\n  };\n}\nfunction buildAvatarColorTheme(options, stateTokens) {\n  const { scheme } = options;\n  return {\n    gray: _buildAvatarColorTheme({ color: \"gray\", scheme }, stateTokens),\n    blue: _buildAvatarColorTheme({ color: \"blue\", scheme }, stateTokens),\n    purple: _buildAvatarColorTheme({ color: \"purple\", scheme }, stateTokens),\n    magenta: _buildAvatarColorTheme({ color: \"magenta\", scheme }, stateTokens),\n    red: _buildAvatarColorTheme({ color: \"red\", scheme }, stateTokens),\n    orange: _buildAvatarColorTheme({ color: \"orange\", scheme }, stateTokens),\n    yellow: _buildAvatarColorTheme({ color: \"yellow\", scheme }, stateTokens),\n    green: _buildAvatarColorTheme({ color: \"green\", scheme }, stateTokens),\n    cyan: _buildAvatarColorTheme({ color: \"cyan\", scheme }, stateTokens)\n  };\n}\nfunction _buildAvatarColorTheme(options, stateTokens) {\n  var _a;\n  const { color: color2, scheme } = options, tokens = (_a = stateTokens == null ? void 0 : stateTokens.avatar) == null ? void 0 : _a[color2], context = { hue: (tokens == null ? void 0 : tokens._hue) || \"gray\", scheme };\n  return {\n    _blend: ((tokens == null ? void 0 : tokens._blend) || [\"screen\", \"multiply\"])[scheme === \"light\" ? 0 : 1],\n    bg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.bg),\n    fg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.fg)\n  };\n}\nfunction buildBadgeColorTheme(tokens, options, config) {\n  const { scheme } = options;\n  return {\n    default: _buildBadgeColorTheme(tokens, { scheme, tone: \"default\" }, config),\n    primary: _buildBadgeColorTheme(tokens, { scheme, tone: \"primary\" }, config),\n    positive: _buildBadgeColorTheme(tokens, { scheme, tone: \"positive\" }, config),\n    caution: _buildBadgeColorTheme(tokens, { scheme, tone: \"caution\" }, config),\n    critical: _buildBadgeColorTheme(tokens, { scheme, tone: \"critical\" }, config)\n  };\n}\nfunction _buildBadgeColorTheme(parentTokens, options, config) {\n  var _a, _b, _c;\n  const { scheme, tone } = options, tokens = parentTokens == null ? void 0 : parentTokens[tone], context = { hue: (tokens == null ? void 0 : tokens._hue) || ((_c = (_b = (_a = config == null ? void 0 : config.color) == null ? void 0 : _a.base) == null ? void 0 : _b[tone]) == null ? void 0 : _c._hue) || \"gray\", scheme };\n  return {\n    bg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.bg),\n    fg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.fg),\n    dot: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.dot),\n    icon: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.icon)\n  };\n}\nfunction buildButtonColorTheme(options, config) {\n  const { scheme } = options, modes = {};\n  for (const mode of THEME_COLOR_BUTTON_MODES)\n    modes[mode] = buildButtonTonesColorTheme({ scheme, mode }, config);\n  return modes;\n}\nfunction buildButtonTonesColorTheme(options, config) {\n  const { mode, scheme } = options, tones2 = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    tones2[tone] = buildButtonStatesColorTheme({ mode, scheme, tone }, config);\n  return tones2;\n}\nfunction buildButtonStatesColorTheme(options, config) {\n  const { mode, scheme, tone } = options, states = {};\n  for (const state of THEME_COLOR_STATES)\n    states[state] = buildButtonStateColorTheme({ mode, tone, scheme, state }, config);\n  return states;\n}\nfunction buildButtonStateColorTheme(options, config) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o;\n  const { mode, tone, scheme, state } = options, tokens = (_d = (_c = (_b = (_a = config == null ? void 0 : config.color) == null ? void 0 : _a.button) == null ? void 0 : _b[mode]) == null ? void 0 : _c[tone]) == null ? void 0 : _d[state], hue = (tokens == null ? void 0 : tokens._hue) || \"gray\", blendMode = (tokens == null ? void 0 : tokens._blend) || [\"screen\", \"multiply\"], context = { hue, scheme };\n  return {\n    _blend: blendMode[scheme === \"light\" ? 0 : 1],\n    accent: {\n      fg: resolveColorTokenValue(context, (_e = tokens == null ? void 0 : tokens.accent) == null ? void 0 : _e.fg)\n    },\n    avatar: buildAvatarColorTheme({ scheme }, tokens),\n    badge: buildBadgeColorTheme(tokens == null ? void 0 : tokens.badge, { scheme }, config),\n    bg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.bg),\n    border: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.border),\n    code: {\n      bg: resolveColorTokenValue(context, (_f = tokens == null ? void 0 : tokens.code) == null ? void 0 : _f.bg),\n      fg: resolveColorTokenValue(context, (_g = tokens == null ? void 0 : tokens.code) == null ? void 0 : _g.fg)\n    },\n    fg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.fg),\n    icon: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.icon),\n    muted: {\n      bg: resolveColorTokenValue(context, (_h = tokens == null ? void 0 : tokens.muted) == null ? void 0 : _h.bg),\n      fg: resolveColorTokenValue(context, (_i = tokens == null ? void 0 : tokens.muted) == null ? void 0 : _i.fg)\n    },\n    kbd: {\n      bg: resolveColorTokenValue(context, (_j = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _j.bg),\n      fg: resolveColorTokenValue(context, (_k = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _k.fg),\n      border: resolveColorTokenValue(context, (_l = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _l.border)\n    },\n    link: {\n      fg: resolveColorTokenValue(context, (_m = tokens == null ? void 0 : tokens.link) == null ? void 0 : _m.fg)\n    },\n    skeleton: {\n      from: resolveColorTokenValue(context, (_n = tokens == null ? void 0 : tokens.skeleton) == null ? void 0 : _n.from),\n      to: resolveColorTokenValue(context, (_o = tokens == null ? void 0 : tokens.skeleton) == null ? void 0 : _o.to)\n    }\n  };\n}\nfunction buildInputColorTheme(options, config) {\n  const { scheme, tone } = options;\n  return {\n    default: buildInputStatesColorTheme({ mode: \"default\", scheme, tone }, config),\n    invalid: buildInputStatesColorTheme({ mode: \"invalid\", scheme, tone }, config)\n  };\n}\nfunction buildInputStatesColorTheme(options, config) {\n  const { mode, scheme, tone } = options;\n  return {\n    enabled: buildInputStateColorTheme({ mode, scheme, state: \"enabled\", tone }, config),\n    hovered: buildInputStateColorTheme({ mode, scheme, state: \"hovered\", tone }, config),\n    readOnly: buildInputStateColorTheme({ mode, scheme, state: \"readOnly\", tone }, config),\n    disabled: buildInputStateColorTheme({ mode, scheme, state: \"disabled\", tone }, config)\n  };\n}\nfunction buildInputStateColorTheme(options, config) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const { mode, tone, scheme, state } = options, tokens = (_c = (_b = (_a = config == null ? void 0 : config.color) == null ? void 0 : _a.input) == null ? void 0 : _b[mode]) == null ? void 0 : _c[state], hue = (tokens == null ? void 0 : tokens._hue) || ((_f = (_e = (_d = config == null ? void 0 : config.color) == null ? void 0 : _d.base) == null ? void 0 : _e[tone]) == null ? void 0 : _f._hue) || \"gray\", blendMode = (tokens == null ? void 0 : tokens._blend) || [\"screen\", \"multiply\"], context = { hue, scheme };\n  return {\n    _blend: blendMode[scheme === \"light\" ? 0 : 1],\n    bg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.bg),\n    border: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.border),\n    fg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.fg),\n    muted: {\n      bg: resolveColorTokenValue(context, (_g = tokens == null ? void 0 : tokens.muted) == null ? void 0 : _g.bg)\n    },\n    placeholder: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.placeholder)\n  };\n}\nfunction buildSelectableColorTheme(options, config) {\n  const { scheme } = options, tones2 = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    tones2[tone] = buildSelectableStatesColorTheme({ scheme, tone }, config);\n  return tones2;\n}\nfunction buildSelectableStatesColorTheme(options, config) {\n  const { scheme, tone } = options, states = {};\n  for (const state of THEME_COLOR_STATES)\n    states[state] = buildSelectableStateColorTheme({ tone, scheme, state }, config);\n  return states;\n}\nfunction buildSelectableStateColorTheme(options, config) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n  const { scheme, state, tone } = options, tokens = (_c = (_b = (_a = config == null ? void 0 : config.color) == null ? void 0 : _a.selectable) == null ? void 0 : _b[tone]) == null ? void 0 : _c[state], hue = (tokens == null ? void 0 : tokens._hue) || \"gray\", blendMode = (tokens == null ? void 0 : tokens._blend) || [\"screen\", \"multiply\"], context = { hue, scheme };\n  return {\n    _blend: blendMode[scheme === \"light\" ? 0 : 1],\n    accent: {\n      fg: resolveColorTokenValue(context, (_d = tokens == null ? void 0 : tokens.accent) == null ? void 0 : _d.fg)\n    },\n    avatar: buildAvatarColorTheme({ scheme }, tokens),\n    badge: buildBadgeColorTheme(tokens == null ? void 0 : tokens.badge, { scheme }, config),\n    bg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.bg),\n    border: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.border),\n    code: {\n      bg: resolveColorTokenValue(context, (_e = tokens == null ? void 0 : tokens.code) == null ? void 0 : _e.bg),\n      fg: resolveColorTokenValue(context, (_f = tokens == null ? void 0 : tokens.code) == null ? void 0 : _f.fg)\n    },\n    fg: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.fg),\n    icon: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.icon),\n    muted: {\n      bg: resolveColorTokenValue(context, (_g = tokens == null ? void 0 : tokens.muted) == null ? void 0 : _g.bg),\n      fg: resolveColorTokenValue(context, (_h = tokens == null ? void 0 : tokens.muted) == null ? void 0 : _h.fg)\n    },\n    kbd: {\n      bg: resolveColorTokenValue(context, (_i = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _i.bg),\n      fg: resolveColorTokenValue(context, (_j = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _j.fg),\n      border: resolveColorTokenValue(context, (_k = tokens == null ? void 0 : tokens.kbd) == null ? void 0 : _k.border)\n    },\n    link: {\n      fg: resolveColorTokenValue(context, (_l = tokens == null ? void 0 : tokens.link) == null ? void 0 : _l.fg)\n    },\n    skeleton: {\n      from: resolveColorTokenValue(context, (_m = tokens == null ? void 0 : tokens.skeleton) == null ? void 0 : _m.from),\n      to: resolveColorTokenValue(context, (_n = tokens == null ? void 0 : tokens.skeleton) == null ? void 0 : _n.to)\n    }\n  };\n}\nfunction buildSyntaxColorTheme(options, config) {\n  var _a;\n  const { scheme } = options, tokens = (_a = config == null ? void 0 : config.color) == null ? void 0 : _a.syntax, context = { hue: \"gray\", scheme };\n  return {\n    atrule: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.atrule),\n    attrName: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.attrName),\n    attrValue: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.attrValue),\n    attribute: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.attribute),\n    boolean: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.boolean),\n    builtin: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.builtin),\n    cdata: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.cdata),\n    char: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.char),\n    class: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.class),\n    className: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.className),\n    comment: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.comment),\n    constant: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.constant),\n    deleted: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.deleted),\n    doctype: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.doctype),\n    entity: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.entity),\n    function: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.function),\n    hexcode: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.hexcode),\n    id: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.id),\n    important: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.important),\n    inserted: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.inserted),\n    keyword: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.keyword),\n    number: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.number),\n    operator: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.operator),\n    prolog: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.prolog),\n    property: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.property),\n    pseudoClass: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.pseudoClass),\n    pseudoElement: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.pseudoElement),\n    punctuation: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.punctuation),\n    regex: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.regex),\n    selector: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.selector),\n    string: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.string),\n    symbol: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.symbol),\n    tag: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.tag),\n    unit: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.unit),\n    url: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.url),\n    variable: resolveColorTokenValue(context, tokens == null ? void 0 : tokens.variable)\n  };\n}\nconst defaultColorPalette = _sanity_color__WEBPACK_IMPORTED_MODULE_1__.color;\nfunction mixChannel(b, s, weight) {\n  const delta = (s - b) * weight;\n  return b + delta;\n}\nfunction mix(b, s, weight) {\n  return {\n    r: mixChannel(b.r, s.r, weight),\n    g: mixChannel(b.g, s.g, weight),\n    b: mixChannel(b.b, s.b, weight)\n  };\n}\nfunction multiplyChannel(b, s) {\n  return b * s;\n}\nfunction multiply(b, s) {\n  return {\n    r: multiplyChannel(b.r / 255, s.r / 255) * 255,\n    g: multiplyChannel(b.g / 255, s.g / 255) * 255,\n    b: multiplyChannel(b.b / 255, s.b / 255) * 255\n  };\n}\nfunction screenChannel(b, s) {\n  return b + s - b * s;\n}\nfunction screen(b, s) {\n  return {\n    r: screenChannel(b.r / 255, s.r / 255) * 255,\n    g: screenChannel(b.g / 255, s.g / 255) * 255,\n    b: screenChannel(b.b / 255, s.b / 255) * 255\n  };\n}\nfunction lerp(x, y, a) {\n  return x * (1 - a) + y * a;\n}\nfunction invlerp(x, y, a) {\n  return clamp((a - x) / (y - x));\n}\nfunction clamp(a, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, a));\n}\nfunction range(x1, y1, x2, y2, a) {\n  return lerp(x2, y2, invlerp(x1, y1, a));\n}\nfunction round(value) {\n  return Math.round(value);\n}\nfunction hexToRgb(hex) {\n  if (hex.length === 4) {\n    const hexR = hex.slice(1, 2), hexG = hex.slice(2, 3), hexB = hex.slice(3, 4);\n    return {\n      r: parseInt(hexR + hexR, 16),\n      g: parseInt(hexG + hexG, 16),\n      b: parseInt(hexB + hexB, 16)\n    };\n  }\n  return {\n    r: parseInt(hex.slice(1, 3), 16),\n    g: parseInt(hex.slice(3, 5), 16),\n    b: parseInt(hex.slice(5, 7), 16)\n  };\n}\nfunction rgbaToRGBA(rgba2) {\n  const values = rgba2.replace(/rgba\\(|\\)/g, \"\").split(\",\");\n  return {\n    r: parseInt(values[0]),\n    g: parseInt(values[1]),\n    b: parseInt(values[2]),\n    a: parseFloat(values[3])\n  };\n}\nfunction rgbToHex(color2) {\n  const r = round(clamp(Math.round(color2.r), 0, 255)), g = round(clamp(Math.round(color2.g), 0, 255)), b = round(clamp(Math.round(color2.b), 0, 255));\n  return \"a\" in color2 ? `rgba(${r},${g},${b},${color2.a})` : \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\nfunction rgbToHsl({ r, g, b }) {\n  r /= 255, g /= 255, b /= 255;\n  const cmin = Math.min(r, g, b), cmax = Math.max(r, g, b), delta = cmax - cmin;\n  let h = 0, s = 0, l = 0;\n  return delta == 0 ? h = 0 : cmax == r ? h = (g - b) / delta % 6 : cmax == g ? h = (b - r) / delta + 2 : h = (r - g) / delta + 4, h = Math.round(h * 60), h < 0 && (h += 360), l = (cmax + cmin) / 2, s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1)), s = +(s * 100).toFixed(1), l = +(l * 100).toFixed(1), { h, s, l };\n}\nfunction hslToRgb(hsl) {\n  const s = hsl.s / 100, l = hsl.l / 100, c = (1 - Math.abs(2 * l - 1)) * s, x = c * (1 - Math.abs(hsl.h / 60 % 2 - 1)), m = l - c / 2;\n  let r = 0, g = 0, b = 0;\n  return 0 <= hsl.h && hsl.h < 60 ? (r = c, g = x, b = 0) : 60 <= hsl.h && hsl.h < 120 ? (r = x, g = c, b = 0) : 120 <= hsl.h && hsl.h < 180 ? (r = 0, g = c, b = x) : 180 <= hsl.h && hsl.h < 240 ? (r = 0, g = x, b = c) : 240 <= hsl.h && hsl.h < 300 ? (r = x, g = 0, b = c) : 300 <= hsl.h && hsl.h < 360 && (r = c, g = 0, b = x), {\n    r: Math.round((r + m) * 255),\n    g: Math.round((g + m) * 255),\n    b: Math.round((b + m) * 255)\n  };\n}\nconst HEX_CHARS = \"0123456789ABCDEFabcdef\", HSL_RE = /hsl\\(\\s*(\\d+)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*\\)/i;\nfunction isHexChars(str) {\n  for (const c of str)\n    if (HEX_CHARS.indexOf(c) === -1)\n      return !1;\n  return !0;\n}\nfunction isHex(str) {\n  return str[0] !== \"#\" || !(str.length === 4 || str.length === 7) ? !1 : isHexChars(str.slice(1));\n}\nfunction parseHsl(str) {\n  const res = HSL_RE.exec(str);\n  if (!res)\n    throw new Error(`parseHsl: string is not a HSL color: \"${str}\"`);\n  return { h: parseInt(res[1]), s: parseFloat(res[3]), l: parseFloat(res[5]) };\n}\nfunction parseColor(color2) {\n  if (!color2) return { r: 0, g: 0, b: 0 };\n  if (typeof color2 != \"string\")\n    throw new Error(\"parseColor: expected a string\");\n  if (isHex(color2))\n    return hexToRgb(color2);\n  if (color2.startsWith(\"hsl(\"))\n    return hslToRgb(parseHsl(color2));\n  if (color2.startsWith(\"rgba(\"))\n    return rgbaToRGBA(color2);\n  throw new Error(`parseColor: unexpected color format: \"${color2}\"`);\n}\nfunction getContrastRatio(bg, fg) {\n  const rgb1 = parseColor(bg), rgb2 = parseColor(fg), c1 = rgb_lrgb(rgb1), c2 = rgb_lrgb(rgb2), l1 = lrgb_luminance(c1), l2 = lrgb_luminance(c2);\n  return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n}\nfunction rgb_lrgb({ r, g, b }) {\n  return [rgb_lrgb1(r / 255), rgb_lrgb1(g / 255), rgb_lrgb1(b / 255)];\n}\nfunction rgb_lrgb1(v) {\n  return v <= 0.04045 ? v / 12.92 : ((v + 0.055) / 1.055) ** 2.4;\n}\nfunction lrgb_luminance([r, g, b]) {\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\nfunction rgba(color2, a) {\n  const rgb = parseColor(color2);\n  return `rgba(${rgb.r},${rgb.g},${rgb.b},${a})`;\n}\nconst RGB_RANGE = [0, 255];\nfunction mixThemeColor(value, options) {\n  const { blendMode } = options, color2 = parseColor(value), black2 = parseColor(options.black), white2 = parseColor(options.white), bg = options.bg ? parseColor(options.bg) : blendMode === \"multiply\" ? white2 : black2, paletteRange = {\n    r: [black2.r, white2.r],\n    g: [black2.g, white2.g],\n    b: [black2.b, white2.b]\n  }, convertedBgColor = {\n    r: clamp(range(...paletteRange.r, ...RGB_RANGE, bg.r), ...RGB_RANGE),\n    g: clamp(range(...paletteRange.g, ...RGB_RANGE, bg.g), ...RGB_RANGE),\n    b: clamp(range(...paletteRange.b, ...RGB_RANGE, bg.b), ...RGB_RANGE)\n  }, convertedColor = {\n    r: clamp(range(...paletteRange.r, ...RGB_RANGE, color2.r), ...RGB_RANGE),\n    g: clamp(range(...paletteRange.g, ...RGB_RANGE, color2.g), ...RGB_RANGE),\n    b: clamp(range(...paletteRange.b, ...RGB_RANGE, color2.b), ...RGB_RANGE)\n  }, resultColor = blendMode === \"multiply\" ? multiply(convertedBgColor, convertedColor) : screen(convertedBgColor, convertedColor), v = {\n    r: clamp(range(...RGB_RANGE, ...paletteRange.r, resultColor.r), ...paletteRange.r),\n    g: clamp(range(...RGB_RANGE, ...paletteRange.g, resultColor.g), ...paletteRange.g),\n    b: clamp(range(...RGB_RANGE, ...paletteRange.b, resultColor.b), ...paletteRange.b)\n  };\n  return rgbToHex(v);\n}\nfunction renderColorValue(str, options) {\n  const { bg, blendMode, colorPalette } = options;\n  if (bg === \"white\")\n    throw new Error(\"Cannot blend with white background\");\n  const node = parseTokenValue(str);\n  if (!node || node.type !== \"color\")\n    throw new Error(`Invalid color token value: ${str}`);\n  let hex = \"\";\n  if (node.key === \"black\" && (hex = renderColorHex(colorPalette.black)), node.key === \"white\" && (hex = renderColorHex(colorPalette.white)), node.hue && node.tint && (hex = renderColorHex(colorPalette[node.hue][node.tint])), !hex)\n    throw new Error(`Invalid color token value: ${str}`);\n  const hexBeforeMix = hex, mixOptions = {\n    blendMode,\n    bg,\n    black: renderColorHex(colorPalette.black),\n    // opacity: node.opacity,\n    white: renderColorHex(colorPalette.white)\n  };\n  try {\n    if (hex = mixThemeColor(hex, mixOptions), bg && node.mix !== void 0) {\n      const from = hexToRgb(bg), to = hexToRgb(hex);\n      hex = rgbToHex(mix(from, to, node.mix));\n    }\n  } catch (err) {\n    throw console.warn(\"could not blend\", hex, mixOptions), err;\n  }\n  return hex === \"#aN\" && (console.warn(`invalid color token value: ${str}`), hex = hexBeforeMix), node.opacity !== void 0 && (hex = rgba(hex, node.opacity)), hex;\n}\nfunction renderColorHex(color2) {\n  return typeof color2 == \"string\" ? color2 : color2.hex;\n}\nfunction renderThemeColorSchemes(value, config) {\n  var _a;\n  const colorPalette = (_a = config == null ? void 0 : config.palette) != null ? _a : defaultColorPalette;\n  return {\n    light: renderThemeColorScheme(colorPalette, value.light),\n    dark: renderThemeColorScheme(colorPalette, value.dark)\n  };\n}\nfunction renderThemeColorScheme(colorPalette, value) {\n  const toneEntries = Object.entries(value), [, transparentTone] = toneEntries.find(([k]) => k === \"transparent\"), [, defaultTone] = toneEntries.find(([k]) => k === \"default\"), renderedTransparentTone = renderThemeColor(transparentTone, { colorPalette }), renderedDefaultTone = renderThemeColor(defaultTone, { colorPalette }), bg = renderedDefaultTone.bg;\n  if (bg === \"white\")\n    throw new Error(\"Cannot blend with white background\");\n  return Object.fromEntries([\n    [\"transparent\", renderedTransparentTone],\n    [\"default\", renderedDefaultTone],\n    ...toneEntries.filter(([k]) => k !== \"default\" && k !== \"transparent\").map(([k, v]) => [k, renderThemeColor(v, { bg, colorPalette })])\n  ]);\n}\nfunction renderThemeColor(value, options) {\n  const { colorPalette, bg } = options, blendMode = value._blend || \"multiply\", baseBg = renderColorValue(value.bg, { colorPalette, bg, blendMode }), colorOptions = { colorPalette, bg: baseBg, blendMode }, button = renderThemeColorButton(value.button, {\n    baseBg,\n    blendMode,\n    colorPalette\n  }), selectable = renderThemeColorSelectable(value.selectable, {\n    colorPalette,\n    baseBg,\n    blendMode\n  }), shadow = {\n    outline: renderColorValue(value.shadow.outline, colorOptions),\n    umbra: renderColorValue(value.shadow.umbra, {\n      ...colorOptions,\n      bg: void 0,\n      colorPalette: { ...colorPalette, black: \"#000000\" }\n    }),\n    penumbra: renderColorValue(value.shadow.penumbra, {\n      ...colorOptions,\n      bg: void 0,\n      colorPalette: { ...colorPalette, black: \"#000000\" }\n    }),\n    ambient: renderColorValue(value.shadow.ambient, {\n      ...colorOptions,\n      bg: void 0,\n      colorPalette: { ...colorPalette, black: \"#000000\" }\n    })\n  };\n  return {\n    _blend: blendMode,\n    _dark: value._dark,\n    accent: {\n      fg: renderColorValue(value.accent.fg, colorOptions)\n    },\n    avatar: renderThemeColorAvatar(value.avatar, { baseBg, colorPalette, blendMode }),\n    backdrop: renderColorValue(value.backdrop, colorOptions),\n    badge: renderThemeColorBadge(value.badge, { baseBg, colorPalette, blendMode }),\n    bg: baseBg,\n    border: renderColorValue(value.border, colorOptions),\n    button,\n    code: {\n      bg: renderColorValue(value.code.bg, colorOptions),\n      fg: renderColorValue(value.code.fg, colorOptions)\n    },\n    fg: renderColorValue(value.fg, colorOptions),\n    focusRing: renderColorValue(value.focusRing, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions),\n    input: renderThemeColorInput(value.input, { baseBg, colorPalette, blendMode }),\n    kbd: renderThemeColorKBD(value.kbd, { baseBg, colorPalette, blendMode }),\n    link: {\n      fg: renderColorValue(value.link.fg, colorOptions)\n    },\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions),\n      fg: renderColorValue(value.muted.fg, colorOptions)\n    },\n    shadow,\n    skeleton: {\n      from: renderColorValue(value.skeleton.from, colorOptions),\n      to: renderColorValue(value.skeleton.to, colorOptions)\n    },\n    syntax: renderSyntaxColorTheme(value.syntax, { baseBg, colorPalette, blendMode }),\n    selectable\n  };\n}\nfunction renderThemeColorKBD(value, options) {\n  const { baseBg, blendMode, colorPalette } = options, rootOptions = {\n    bg: baseBg,\n    blendMode,\n    colorPalette\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    bg,\n    blendMode,\n    colorPalette\n  };\n  return {\n    bg,\n    fg: renderColorValue(value.fg, colorOptions),\n    border: renderColorValue(value.border, colorOptions)\n  };\n}\nfunction renderThemeColorAvatar(value, options) {\n  return {\n    gray: renderThemeColorAvatarColor(value.gray, options),\n    blue: renderThemeColorAvatarColor(value.blue, options),\n    purple: renderThemeColorAvatarColor(value.purple, options),\n    magenta: renderThemeColorAvatarColor(value.magenta, options),\n    red: renderThemeColorAvatarColor(value.red, options),\n    orange: renderThemeColorAvatarColor(value.orange, options),\n    yellow: renderThemeColorAvatarColor(value.yellow, options),\n    green: renderThemeColorAvatarColor(value.green, options),\n    cyan: renderThemeColorAvatarColor(value.cyan, options)\n  };\n}\nfunction renderThemeColorAvatarColor(value, options) {\n  const { baseBg, blendMode: rootBlendMode, colorPalette } = options, blendMode = value._blend || \"multiply\", rootOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    bg,\n    blendMode,\n    colorPalette\n  };\n  return {\n    _blend: blendMode,\n    bg,\n    fg: renderColorValue(value.fg, colorOptions)\n  };\n}\nfunction renderThemeColorBadge(value, options) {\n  return {\n    default: renderThemeColorBadgeColor(value.default, options),\n    primary: renderThemeColorBadgeColor(value.primary, options),\n    positive: renderThemeColorBadgeColor(value.positive, options),\n    caution: renderThemeColorBadgeColor(value.caution, options),\n    critical: renderThemeColorBadgeColor(value.critical, options)\n  };\n}\nfunction renderThemeColorBadgeColor(value, options) {\n  const { baseBg, blendMode: rootBlendMode, colorPalette } = options, blendMode = rootBlendMode, rootOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    bg,\n    blendMode,\n    colorPalette\n  };\n  return {\n    bg,\n    dot: renderColorValue(value.dot, colorOptions),\n    fg: renderColorValue(value.fg, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions)\n  };\n}\nfunction renderThemeColorButton(value, options) {\n  return {\n    default: renderThemeColorButtonTones(value.default, options),\n    ghost: renderThemeColorButtonTones(value.ghost, options),\n    bleed: renderThemeColorButtonTones(value.bleed, options)\n  };\n}\nfunction renderThemeColorButtonTones(value, options) {\n  return {\n    default: renderThemeColorButtonStates(value.default, options),\n    primary: renderThemeColorButtonStates(value.primary, options),\n    positive: renderThemeColorButtonStates(value.positive, options),\n    caution: renderThemeColorButtonStates(value.caution, options),\n    critical: renderThemeColorButtonStates(value.critical, options)\n  };\n}\nfunction renderThemeColorButtonStates(value, options) {\n  return {\n    enabled: renderThemeColorState(value.enabled, options),\n    hovered: renderThemeColorState(value.hovered, options),\n    pressed: renderThemeColorState(value.pressed, options),\n    selected: renderThemeColorState(value.selected, options),\n    disabled: renderThemeColorState(value.disabled, options)\n  };\n}\nfunction renderThemeColorState(value, options) {\n  var _a, _b;\n  const { baseBg, blendMode: rootBlendMode, colorPalette } = options, blendMode = value._blend || \"multiply\", rootOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    bg,\n    blendMode,\n    colorPalette\n  };\n  return {\n    _blend: blendMode,\n    accent: {\n      fg: renderColorValue(value.accent.fg, colorOptions)\n    },\n    avatar: renderThemeColorAvatar(value.avatar, { baseBg: bg, colorPalette, blendMode }),\n    badge: renderThemeColorBadge(value.badge, { baseBg: bg, colorPalette, blendMode }),\n    bg,\n    border: renderColorValue(value.border, colorOptions),\n    code: {\n      bg: renderColorValue(value.code.bg, colorOptions),\n      fg: renderColorValue(value.code.fg, colorOptions)\n    },\n    fg: renderColorValue(value.fg, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions),\n    link: {\n      fg: renderColorValue(value.link.fg, colorOptions)\n    },\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions),\n      fg: renderColorValue(value.muted.fg, colorOptions)\n    },\n    kbd: {\n      bg: renderColorValue(value.kbd.bg, colorOptions),\n      fg: renderColorValue(value.kbd.fg, colorOptions),\n      border: renderColorValue(value.kbd.border, colorOptions)\n    },\n    skeleton: {\n      from: renderColorValue((_a = value.skeleton) == null ? void 0 : _a.from, colorOptions),\n      to: renderColorValue((_b = value.skeleton) == null ? void 0 : _b.to, colorOptions)\n    }\n  };\n}\nfunction renderThemeColorInput(value, options) {\n  return {\n    default: renderInputStatesColorTheme(value.default, options),\n    invalid: renderInputStatesColorTheme(value.invalid, options)\n  };\n}\nfunction renderInputStatesColorTheme(value, options) {\n  return {\n    enabled: renderInputStateColorTheme(value.enabled, options),\n    hovered: renderInputStateColorTheme(value.hovered, options),\n    readOnly: renderInputStateColorTheme(value.readOnly, options),\n    disabled: renderInputStateColorTheme(value.disabled, options)\n  };\n}\nfunction renderInputStateColorTheme(value, options) {\n  const { baseBg, blendMode: rootBlendMode, colorPalette } = options, blendMode = value._blend || \"multiply\", rootOptions = { colorPalette, bg: baseBg, blendMode: rootBlendMode }, bg = renderColorValue(value.bg, rootOptions), colorOptions = { colorPalette, bg, blendMode };\n  return {\n    _blend: blendMode,\n    bg,\n    border: renderColorValue(value.border, colorOptions),\n    fg: renderColorValue(value.fg, colorOptions),\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions)\n    },\n    placeholder: renderColorValue(value.placeholder, colorOptions)\n  };\n}\nfunction renderThemeColorSelectable(value, options) {\n  return {\n    default: renderThemeColorSelectableStates(value.default, options),\n    primary: renderThemeColorSelectableStates(value.primary, options),\n    positive: renderThemeColorSelectableStates(value.positive, options),\n    caution: renderThemeColorSelectableStates(value.caution, options),\n    critical: renderThemeColorSelectableStates(value.critical, options)\n  };\n}\nfunction renderThemeColorSelectableStates(value, options) {\n  return {\n    enabled: renderThemeColorState(value.enabled, options),\n    hovered: renderThemeColorState(value.hovered, options),\n    pressed: renderThemeColorState(value.pressed, options),\n    selected: renderThemeColorState(value.selected, options),\n    disabled: renderThemeColorState(value.disabled, options)\n  };\n}\nfunction renderSyntaxColorTheme(value, options) {\n  const { colorPalette, baseBg, blendMode } = options, colorOptions = { colorPalette, bg: baseBg, blendMode };\n  return {\n    atrule: renderColorValue(value.atrule, colorOptions),\n    attrName: renderColorValue(value.attrName, colorOptions),\n    attrValue: renderColorValue(value.attrValue, colorOptions),\n    attribute: renderColorValue(value.attribute, colorOptions),\n    boolean: renderColorValue(value.boolean, colorOptions),\n    builtin: renderColorValue(value.builtin, colorOptions),\n    cdata: renderColorValue(value.cdata, colorOptions),\n    char: renderColorValue(value.char, colorOptions),\n    class: renderColorValue(value.class, colorOptions),\n    className: renderColorValue(value.className, colorOptions),\n    comment: renderColorValue(value.comment, colorOptions),\n    constant: renderColorValue(value.constant, colorOptions),\n    deleted: renderColorValue(value.deleted, colorOptions),\n    doctype: renderColorValue(value.doctype, colorOptions),\n    entity: renderColorValue(value.entity, colorOptions),\n    function: renderColorValue(value.function, colorOptions),\n    hexcode: renderColorValue(value.hexcode, colorOptions),\n    id: renderColorValue(value.id, colorOptions),\n    important: renderColorValue(value.important, colorOptions),\n    inserted: renderColorValue(value.inserted, colorOptions),\n    keyword: renderColorValue(value.keyword, colorOptions),\n    number: renderColorValue(value.number, colorOptions),\n    operator: renderColorValue(value.operator, colorOptions),\n    prolog: renderColorValue(value.prolog, colorOptions),\n    property: renderColorValue(value.property, colorOptions),\n    pseudoClass: renderColorValue(value.pseudoClass, colorOptions),\n    pseudoElement: renderColorValue(value.pseudoElement, colorOptions),\n    punctuation: renderColorValue(value.punctuation, colorOptions),\n    regex: renderColorValue(value.regex, colorOptions),\n    selector: renderColorValue(value.selector, colorOptions),\n    string: renderColorValue(value.string, colorOptions),\n    symbol: renderColorValue(value.symbol, colorOptions),\n    tag: renderColorValue(value.tag, colorOptions),\n    unit: renderColorValue(value.unit, colorOptions),\n    url: renderColorValue(value.url, colorOptions),\n    variable: renderColorValue(value.variable, colorOptions)\n  };\n}\nfunction buildTheme(config) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l;\n  const colorTheme = buildColorTheme(config), v2 = {\n    _version: 2,\n    avatar: (_a = config == null ? void 0 : config.avatar) != null ? _a : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.avatar,\n    button: (_b = config == null ? void 0 : config.button) != null ? _b : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.button,\n    card: (_c = config == null ? void 0 : config.card) != null ? _c : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.card,\n    // How colors are generated:\n    // 1. Merge custom tokens with default tokens\n    // 2. Generate tree of color keys (gray/500, black, white, etc.)\n    // 3. Apply mixing and render to hex values\n    // render(build(mergeWithDefaults()))\n    color: renderThemeColorSchemes(colorTheme, config),\n    container: (_d = config == null ? void 0 : config.container) != null ? _d : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.container,\n    font: (_e = config == null ? void 0 : config.font) != null ? _e : defaultThemeFonts,\n    input: (_f = config == null ? void 0 : config.input) != null ? _f : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.input,\n    layer: (_g = config == null ? void 0 : config.layer) != null ? _g : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.layer,\n    media: (_h = config == null ? void 0 : config.media) != null ? _h : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.media,\n    radius: (_i = config == null ? void 0 : config.radius) != null ? _i : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.radius,\n    shadow: (_j = config == null ? void 0 : config.shadow) != null ? _j : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.shadow,\n    space: (_k = config == null ? void 0 : config.space) != null ? _k : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.space,\n    style: (_l = config == null ? void 0 : config.style) != null ? _l : _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.style\n  };\n  return v2_v0(v2);\n}\nconst cache = /* @__PURE__ */ new Map();\nfunction getScopedTheme(themeProp, scheme, tone) {\n  const cachedTheme = _getCachedTheme(themeProp, scheme, tone);\n  if (cachedTheme) return cachedTheme;\n  const v0 = is_v2(themeProp) ? v2_v0(themeProp) : themeProp, v2 = is_v2(themeProp) ? themeProp : v0_v2(themeProp), colorScheme_v0 = v0.color[scheme] || v0.color.light, color_v0 = colorScheme_v0[tone] || colorScheme_v0.default, layer_v0 = v0.layer || _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.layer, colorScheme_v2 = v2.color[scheme] || v2.color.light, color_v2 = colorScheme_v2[tone] || colorScheme_v2.default, layer_v2 = v2.layer || _chunks_es_getTheme_v2_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultThemeConfig.layer, theme = {\n    sanity: {\n      ...v0,\n      color: color_v0,\n      layer: layer_v0,\n      v2: {\n        ...v2,\n        _resolved: !0,\n        color: color_v2,\n        layer: layer_v2\n      }\n    }\n  };\n  return _setCachedTheme(themeProp, scheme, tone, theme), theme;\n}\nfunction _getCachedTheme(rootTheme, scheme, tone) {\n  const schemeCache = cache.get(scheme);\n  if (!schemeCache) return;\n  const toneCache = schemeCache.get(tone);\n  if (toneCache)\n    return toneCache.get(rootTheme);\n}\nfunction _setCachedTheme(rootTheme, scheme, tone, theme) {\n  cache.has(scheme) || cache.set(scheme, /* @__PURE__ */ new Map());\n  const schemeCache = cache.get(scheme);\n  schemeCache.has(tone) || schemeCache.set(tone, /* @__PURE__ */ new WeakMap()), schemeCache.get(tone).set(rootTheme, theme);\n}\n\n//# sourceMappingURL=theme.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/ui/dist/theme.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/util/lib/client.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/util/lib/client.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClientConcurrencyLimiter: () => (/* binding */ createClientConcurrencyLimiter)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/finalize.js\");\n/* harmony import */ var _concurrency_limiter_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concurrency-limiter.mjs */ \"(ssr)/./node_modules/@sanity/util/lib/concurrency-limiter.mjs\");\n\n\nfunction createClientConcurrencyLimiter(maxConcurrency) {\n  const limiter = new _concurrency_limiter_mjs__WEBPACK_IMPORTED_MODULE_0__.ConcurrencyLimiter(maxConcurrency);\n  function wrapClient(client) {\n    return new Proxy(client, {\n      get: (target, property) => {\n        switch (property) {\n          case \"fetch\":\n            return async (...args) => {\n              await limiter.ready();\n              try {\n                return await target.fetch(...args);\n              } finally {\n                limiter.release();\n              }\n            };\n          case \"clone\":\n            return (...args) => wrapClient(target.clone(...args));\n          case \"config\":\n            return (...args) => {\n              const result = target.config(...args);\n              return args[0] ? wrapClient(result) : result;\n            };\n          case \"withConfig\":\n            return (...args) => wrapClient(target.withConfig(...args));\n          case \"observable\":\n            return wrapObservableClient(target.observable);\n          default:\n            return target[property];\n        }\n      }\n    });\n  }\n  function wrapObservableClient(observableSanityClient) {\n    return new Proxy(observableSanityClient, {\n      get: (target, property) => {\n        switch (property) {\n          case \"fetch\":\n            return (...args) => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.from)(limiter.ready()).pipe(\n              (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(() => target.fetch(...args)),\n              (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.finalize)(() => limiter.release())\n            );\n          case \"clone\":\n            return (...args) => wrapObservableClient(target.clone(...args));\n          case \"config\":\n            return (...args) => {\n              const result = target.config(...args);\n              return args[0] ? wrapObservableClient(result) : result;\n            };\n          case \"withConfig\":\n            return (...args) => wrapObservableClient(target.withConfig(...args));\n          default:\n            return target[property];\n        }\n      }\n    });\n  }\n  return wrapClient;\n}\n\n//# sourceMappingURL=client.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS91dGlsL2xpYi9jbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ2M7QUFDL0Q7QUFDQSxzQkFBc0Isd0VBQWtCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDBDQUFJO0FBQ3BDLGNBQWMsK0NBQVM7QUFDdkIsY0FBYyw4Q0FBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdXRpbC9saWIvY2xpZW50Lm1qcz9jMWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb20sIHN3aXRjaE1hcCwgZmluYWxpemUgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgQ29uY3VycmVuY3lMaW1pdGVyIH0gZnJvbSBcIi4vY29uY3VycmVuY3ktbGltaXRlci5tanNcIjtcbmZ1bmN0aW9uIGNyZWF0ZUNsaWVudENvbmN1cnJlbmN5TGltaXRlcihtYXhDb25jdXJyZW5jeSkge1xuICBjb25zdCBsaW1pdGVyID0gbmV3IENvbmN1cnJlbmN5TGltaXRlcihtYXhDb25jdXJyZW5jeSk7XG4gIGZ1bmN0aW9uIHdyYXBDbGllbnQoY2xpZW50KSB7XG4gICAgcmV0dXJuIG5ldyBQcm94eShjbGllbnQsIHtcbiAgICAgIGdldDogKHRhcmdldCwgcHJvcGVydHkpID0+IHtcbiAgICAgICAgc3dpdGNoIChwcm9wZXJ0eSkge1xuICAgICAgICAgIGNhc2UgXCJmZXRjaFwiOlxuICAgICAgICAgICAgcmV0dXJuIGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgIGF3YWl0IGxpbWl0ZXIucmVhZHkoKTtcbiAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgdGFyZ2V0LmZldGNoKC4uLmFyZ3MpO1xuICAgICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIGxpbWl0ZXIucmVsZWFzZSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgXCJjbG9uZVwiOlxuICAgICAgICAgICAgcmV0dXJuICguLi5hcmdzKSA9PiB3cmFwQ2xpZW50KHRhcmdldC5jbG9uZSguLi5hcmdzKSk7XG4gICAgICAgICAgY2FzZSBcImNvbmZpZ1wiOlxuICAgICAgICAgICAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRhcmdldC5jb25maWcoLi4uYXJncyk7XG4gICAgICAgICAgICAgIHJldHVybiBhcmdzWzBdID8gd3JhcENsaWVudChyZXN1bHQpIDogcmVzdWx0O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFwid2l0aENvbmZpZ1wiOlxuICAgICAgICAgICAgcmV0dXJuICguLi5hcmdzKSA9PiB3cmFwQ2xpZW50KHRhcmdldC53aXRoQ29uZmlnKC4uLmFyZ3MpKTtcbiAgICAgICAgICBjYXNlIFwib2JzZXJ2YWJsZVwiOlxuICAgICAgICAgICAgcmV0dXJuIHdyYXBPYnNlcnZhYmxlQ2xpZW50KHRhcmdldC5vYnNlcnZhYmxlKTtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldFtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiB3cmFwT2JzZXJ2YWJsZUNsaWVudChvYnNlcnZhYmxlU2FuaXR5Q2xpZW50KSB7XG4gICAgcmV0dXJuIG5ldyBQcm94eShvYnNlcnZhYmxlU2FuaXR5Q2xpZW50LCB7XG4gICAgICBnZXQ6ICh0YXJnZXQsIHByb3BlcnR5KSA9PiB7XG4gICAgICAgIHN3aXRjaCAocHJvcGVydHkpIHtcbiAgICAgICAgICBjYXNlIFwiZmV0Y2hcIjpcbiAgICAgICAgICAgIHJldHVybiAoLi4uYXJncykgPT4gZnJvbShsaW1pdGVyLnJlYWR5KCkpLnBpcGUoXG4gICAgICAgICAgICAgIHN3aXRjaE1hcCgoKSA9PiB0YXJnZXQuZmV0Y2goLi4uYXJncykpLFxuICAgICAgICAgICAgICBmaW5hbGl6ZSgoKSA9PiBsaW1pdGVyLnJlbGVhc2UoKSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgY2FzZSBcImNsb25lXCI6XG4gICAgICAgICAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHdyYXBPYnNlcnZhYmxlQ2xpZW50KHRhcmdldC5jbG9uZSguLi5hcmdzKSk7XG4gICAgICAgICAgY2FzZSBcImNvbmZpZ1wiOlxuICAgICAgICAgICAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRhcmdldC5jb25maWcoLi4uYXJncyk7XG4gICAgICAgICAgICAgIHJldHVybiBhcmdzWzBdID8gd3JhcE9ic2VydmFibGVDbGllbnQocmVzdWx0KSA6IHJlc3VsdDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBcIndpdGhDb25maWdcIjpcbiAgICAgICAgICAgIHJldHVybiAoLi4uYXJncykgPT4gd3JhcE9ic2VydmFibGVDbGllbnQodGFyZ2V0LndpdGhDb25maWcoLi4uYXJncykpO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHJldHVybiB3cmFwQ2xpZW50O1xufVxuZXhwb3J0IHtcbiAgY3JlYXRlQ2xpZW50Q29uY3VycmVuY3lMaW1pdGVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/util/lib/client.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/util/lib/concurrency-limiter.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@sanity/util/lib/concurrency-limiter.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConcurrencyLimiter: () => (/* binding */ ConcurrencyLimiter)\n/* harmony export */ });\nvar __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass ConcurrencyLimiter {\n  constructor(max) {\n    this.max = max, __publicField(this, \"current\", 0), __publicField(this, \"resolvers\", []), __publicField(this, \"ready\", () => this.max === 1 / 0 ? Promise.resolve() : this.current < this.max ? (this.current++, Promise.resolve()) : new Promise((resolve) => {\n      this.resolvers.push(resolve);\n    })), __publicField(this, \"release\", () => {\n      if (this.max === 1 / 0) return;\n      const nextResolver = this.resolvers.shift();\n      if (nextResolver) {\n        nextResolver();\n        return;\n      }\n      this.current = Math.max(0, this.current - 1);\n    });\n  }\n}\n\n//# sourceMappingURL=concurrency-limiter.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS91dGlsL2xpYi9jb25jdXJyZW5jeS1saW1pdGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUhBQWlILHVEQUF1RDtBQUN4SztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvdGVsLW1hbmFnZW1lbnQvLi9ub2RlX21vZHVsZXMvQHNhbml0eS91dGlsL2xpYi9jb25jdXJyZW5jeS1saW1pdGVyLm1qcz9lZGZiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHksIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlLCBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY2xhc3MgQ29uY3VycmVuY3lMaW1pdGVyIHtcbiAgY29uc3RydWN0b3IobWF4KSB7XG4gICAgdGhpcy5tYXggPSBtYXgsIF9fcHVibGljRmllbGQodGhpcywgXCJjdXJyZW50XCIsIDApLCBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVzb2x2ZXJzXCIsIFtdKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlYWR5XCIsICgpID0+IHRoaXMubWF4ID09PSAxIC8gMCA/IFByb21pc2UucmVzb2x2ZSgpIDogdGhpcy5jdXJyZW50IDwgdGhpcy5tYXggPyAodGhpcy5jdXJyZW50KyssIFByb21pc2UucmVzb2x2ZSgpKSA6IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICB0aGlzLnJlc29sdmVycy5wdXNoKHJlc29sdmUpO1xuICAgIH0pKSwgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlbGVhc2VcIiwgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMubWF4ID09PSAxIC8gMCkgcmV0dXJuO1xuICAgICAgY29uc3QgbmV4dFJlc29sdmVyID0gdGhpcy5yZXNvbHZlcnMuc2hpZnQoKTtcbiAgICAgIGlmIChuZXh0UmVzb2x2ZXIpIHtcbiAgICAgICAgbmV4dFJlc29sdmVyKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRoaXMuY3VycmVudCA9IE1hdGgubWF4KDAsIHRoaXMuY3VycmVudCAtIDEpO1xuICAgIH0pO1xuICB9XG59XG5leHBvcnQge1xuICBDb25jdXJyZW5jeUxpbWl0ZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25jdXJyZW5jeS1saW1pdGVyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/util/lib/concurrency-limiter.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/util/lib/content.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@sanity/util/lib/content.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDeepEmpty: () => (/* binding */ isDeepEmpty),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   isEmptyArray: () => (/* binding */ isEmptyArray),\n/* harmony export */   isEmptyObject: () => (/* binding */ isEmptyObject),\n/* harmony export */   isShallowEmptyObject: () => (/* binding */ isShallowEmptyObject),\n/* harmony export */   randomKey: () => (/* binding */ randomKey),\n/* harmony export */   resolveTypeName: () => (/* binding */ resolveTypeName)\n/* harmony export */ });\n/* harmony import */ var get_random_values_esm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-random-values-esm */ \"(ssr)/./node_modules/get-random-values-esm/index.mjs\");\n\nvar hasOwn = Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty);\nfunction isDeepEmptyObject(value) {\n  for (const key in value)\n    if (!(key === \"_type\" || key === \"_key\") && hasOwn(value, key) && !isDeepEmpty(value[key]))\n      return !1;\n  return !0;\n}\nfunction isDeepEmptyArray(value) {\n  for (let i = 0; i < value.length; i++)\n    if (!isDeepEmpty(value[i]))\n      return !1;\n  return !0;\n}\nfunction isDeepEmpty(value) {\n  if (value == null)\n    return !0;\n  const type = typeof value;\n  return Array.isArray(value) ? isDeepEmptyArray(value) : type === \"object\" ? isDeepEmptyObject(value) : !1;\n}\nconst isEmptyArray = isDeepEmptyArray, isEmpty = isDeepEmpty, isEmptyObject = isDeepEmptyObject;\nfunction isShallowEmptyObject(value) {\n  for (const key in value)\n    if (!(key === \"_type\" || key === \"_key\") && hasOwn(value, key) && value[key] !== void 0)\n      return !1;\n  return !0;\n}\nconst getByteHexTable = /* @__PURE__ */ (() => {\n  let table;\n  return () => {\n    if (table)\n      return table;\n    table = [];\n    for (let i = 0; i < 256; ++i)\n      table[i] = (i + 256).toString(16).slice(1);\n    return table;\n  };\n})();\nfunction whatwgRNG(length = 16) {\n  const rnds8 = new Uint8Array(length);\n  return (0,get_random_values_esm__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(rnds8), rnds8;\n}\nfunction randomKey(length) {\n  const table = getByteHexTable();\n  return whatwgRNG(length).reduce((str, n) => str + table[n], \"\").slice(0, length);\n}\nconst toString = Object.prototype.toString;\nfunction resolveJSType(val) {\n  switch (toString.call(val)) {\n    case \"[object Function]\":\n      return \"function\";\n    case \"[object Date]\":\n      return \"date\";\n    case \"[object RegExp]\":\n      return \"regexp\";\n    case \"[object Arguments]\":\n      return \"arguments\";\n    case \"[object Array]\":\n      return \"array\";\n    case \"[object String]\":\n      return \"string\";\n  }\n  if (typeof val == \"object\" && val && typeof val.length == \"number\")\n    try {\n      if (typeof val.callee == \"function\")\n        return \"arguments\";\n    } catch (ex) {\n      if (ex instanceof TypeError)\n        return \"arguments\";\n    }\n  return val === null ? \"null\" : val === void 0 ? \"undefined\" : val && val.nodeType === 1 ? \"element\" : val === Object(val) ? \"object\" : typeof val;\n}\nfunction resolveTypeName(value) {\n  const jsType = resolveJSType(value);\n  if (jsType !== \"object\")\n    return jsType;\n  const obj = value;\n  return \"_type\" in obj && obj._type || jsType;\n}\n\n//# sourceMappingURL=content.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS91dGlsL2xpYi9jb250ZW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxTQUFTLGlFQUFlO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdXRpbC9saWIvY29udGVudC5tanM/ZWE5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0UmFuZG9tVmFsdWVzIGZyb20gXCJnZXQtcmFuZG9tLXZhbHVlcy1lc21cIjtcbnZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwuYmluZChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KTtcbmZ1bmN0aW9uIGlzRGVlcEVtcHR5T2JqZWN0KHZhbHVlKSB7XG4gIGZvciAoY29uc3Qga2V5IGluIHZhbHVlKVxuICAgIGlmICghKGtleSA9PT0gXCJfdHlwZVwiIHx8IGtleSA9PT0gXCJfa2V5XCIpICYmIGhhc093bih2YWx1ZSwga2V5KSAmJiAhaXNEZWVwRW1wdHkodmFsdWVba2V5XSkpXG4gICAgICByZXR1cm4gITE7XG4gIHJldHVybiAhMDtcbn1cbmZ1bmN0aW9uIGlzRGVlcEVtcHR5QXJyYXkodmFsdWUpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKylcbiAgICBpZiAoIWlzRGVlcEVtcHR5KHZhbHVlW2ldKSlcbiAgICAgIHJldHVybiAhMTtcbiAgcmV0dXJuICEwO1xufVxuZnVuY3Rpb24gaXNEZWVwRW1wdHkodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpXG4gICAgcmV0dXJuICEwO1xuICBjb25zdCB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyBpc0RlZXBFbXB0eUFycmF5KHZhbHVlKSA6IHR5cGUgPT09IFwib2JqZWN0XCIgPyBpc0RlZXBFbXB0eU9iamVjdCh2YWx1ZSkgOiAhMTtcbn1cbmNvbnN0IGlzRW1wdHlBcnJheSA9IGlzRGVlcEVtcHR5QXJyYXksIGlzRW1wdHkgPSBpc0RlZXBFbXB0eSwgaXNFbXB0eU9iamVjdCA9IGlzRGVlcEVtcHR5T2JqZWN0O1xuZnVuY3Rpb24gaXNTaGFsbG93RW1wdHlPYmplY3QodmFsdWUpIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gdmFsdWUpXG4gICAgaWYgKCEoa2V5ID09PSBcIl90eXBlXCIgfHwga2V5ID09PSBcIl9rZXlcIikgJiYgaGFzT3duKHZhbHVlLCBrZXkpICYmIHZhbHVlW2tleV0gIT09IHZvaWQgMClcbiAgICAgIHJldHVybiAhMTtcbiAgcmV0dXJuICEwO1xufVxuY29uc3QgZ2V0Qnl0ZUhleFRhYmxlID0gLyogQF9fUFVSRV9fICovICgoKSA9PiB7XG4gIGxldCB0YWJsZTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBpZiAodGFibGUpXG4gICAgICByZXR1cm4gdGFibGU7XG4gICAgdGFibGUgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgKytpKVxuICAgICAgdGFibGVbaV0gPSAoaSArIDI1NikudG9TdHJpbmcoMTYpLnNsaWNlKDEpO1xuICAgIHJldHVybiB0YWJsZTtcbiAgfTtcbn0pKCk7XG5mdW5jdGlvbiB3aGF0d2dSTkcobGVuZ3RoID0gMTYpIHtcbiAgY29uc3Qgcm5kczggPSBuZXcgVWludDhBcnJheShsZW5ndGgpO1xuICByZXR1cm4gZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KSwgcm5kczg7XG59XG5mdW5jdGlvbiByYW5kb21LZXkobGVuZ3RoKSB7XG4gIGNvbnN0IHRhYmxlID0gZ2V0Qnl0ZUhleFRhYmxlKCk7XG4gIHJldHVybiB3aGF0d2dSTkcobGVuZ3RoKS5yZWR1Y2UoKHN0ciwgbikgPT4gc3RyICsgdGFibGVbbl0sIFwiXCIpLnNsaWNlKDAsIGxlbmd0aCk7XG59XG5jb25zdCB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5mdW5jdGlvbiByZXNvbHZlSlNUeXBlKHZhbCkge1xuICBzd2l0Y2ggKHRvU3RyaW5nLmNhbGwodmFsKSkge1xuICAgIGNhc2UgXCJbb2JqZWN0IEZ1bmN0aW9uXVwiOlxuICAgICAgcmV0dXJuIFwiZnVuY3Rpb25cIjtcbiAgICBjYXNlIFwiW29iamVjdCBEYXRlXVwiOlxuICAgICAgcmV0dXJuIFwiZGF0ZVwiO1xuICAgIGNhc2UgXCJbb2JqZWN0IFJlZ0V4cF1cIjpcbiAgICAgIHJldHVybiBcInJlZ2V4cFwiO1xuICAgIGNhc2UgXCJbb2JqZWN0IEFyZ3VtZW50c11cIjpcbiAgICAgIHJldHVybiBcImFyZ3VtZW50c1wiO1xuICAgIGNhc2UgXCJbb2JqZWN0IEFycmF5XVwiOlxuICAgICAgcmV0dXJuIFwiYXJyYXlcIjtcbiAgICBjYXNlIFwiW29iamVjdCBTdHJpbmddXCI6XG4gICAgICByZXR1cm4gXCJzdHJpbmdcIjtcbiAgfVxuICBpZiAodHlwZW9mIHZhbCA9PSBcIm9iamVjdFwiICYmIHZhbCAmJiB0eXBlb2YgdmFsLmxlbmd0aCA9PSBcIm51bWJlclwiKVxuICAgIHRyeSB7XG4gICAgICBpZiAodHlwZW9mIHZhbC5jYWxsZWUgPT0gXCJmdW5jdGlvblwiKVxuICAgICAgICByZXR1cm4gXCJhcmd1bWVudHNcIjtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgaWYgKGV4IGluc3RhbmNlb2YgVHlwZUVycm9yKVxuICAgICAgICByZXR1cm4gXCJhcmd1bWVudHNcIjtcbiAgICB9XG4gIHJldHVybiB2YWwgPT09IG51bGwgPyBcIm51bGxcIiA6IHZhbCA9PT0gdm9pZCAwID8gXCJ1bmRlZmluZWRcIiA6IHZhbCAmJiB2YWwubm9kZVR5cGUgPT09IDEgPyBcImVsZW1lbnRcIiA6IHZhbCA9PT0gT2JqZWN0KHZhbCkgPyBcIm9iamVjdFwiIDogdHlwZW9mIHZhbDtcbn1cbmZ1bmN0aW9uIHJlc29sdmVUeXBlTmFtZSh2YWx1ZSkge1xuICBjb25zdCBqc1R5cGUgPSByZXNvbHZlSlNUeXBlKHZhbHVlKTtcbiAgaWYgKGpzVHlwZSAhPT0gXCJvYmplY3RcIilcbiAgICByZXR1cm4ganNUeXBlO1xuICBjb25zdCBvYmogPSB2YWx1ZTtcbiAgcmV0dXJuIFwiX3R5cGVcIiBpbiBvYmogJiYgb2JqLl90eXBlIHx8IGpzVHlwZTtcbn1cbmV4cG9ydCB7XG4gIGlzRGVlcEVtcHR5LFxuICBpc0VtcHR5LFxuICBpc0VtcHR5QXJyYXksXG4gIGlzRW1wdHlPYmplY3QsXG4gIGlzU2hhbGxvd0VtcHR5T2JqZWN0LFxuICByYW5kb21LZXksXG4gIHJlc29sdmVUeXBlTmFtZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRlbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/util/lib/content.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/util/lib/legacyDateFormat.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@sanity/util/lib/legacyDateFormat.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_DATE_FORMAT: () => (/* binding */ DEFAULT_DATE_FORMAT),\n/* harmony export */   DEFAULT_TIME_FORMAT: () => (/* binding */ DEFAULT_TIME_FORMAT),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ \"(ssr)/./node_modules/moment/moment.js\");\n\nconst DEFAULT_DATE_FORMAT = \"YYYY-MM-DD\", DEFAULT_TIME_FORMAT = \"HH:mm\";\nfunction format(input, format2, useUTC = !1) {\n  return useUTC ? moment__WEBPACK_IMPORTED_MODULE_0__.utc(input).format(format2) : moment__WEBPACK_IMPORTED_MODULE_0__(input).format(format2);\n}\nfunction parse(dateString, format2) {\n  const parsed = moment__WEBPACK_IMPORTED_MODULE_0__(dateString, format2, !0);\n  return parsed.isValid() ? { isValid: !0, date: parsed.toDate() } : { isValid: !1, error: `Invalid date. Must be on the format \"${format2}\"` };\n}\n\n//# sourceMappingURL=legacyDateFormat.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS91dGlsL2xpYi9sZWdhY3lEYXRlRm9ybWF0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0QjtBQUM1QjtBQUNBO0FBQ0Esa0JBQWtCLHVDQUFVLDBCQUEwQixtQ0FBTTtBQUM1RDtBQUNBO0FBQ0EsaUJBQWlCLG1DQUFNO0FBQ3ZCLDhCQUE4QixxQ0FBcUMsSUFBSSw0REFBNEQsUUFBUTtBQUMzSTtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdXRpbC9saWIvbGVnYWN5RGF0ZUZvcm1hdC5tanM/N2ZmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9tZW50IGZyb20gXCJtb21lbnRcIjtcbmNvbnN0IERFRkFVTFRfREFURV9GT1JNQVQgPSBcIllZWVktTU0tRERcIiwgREVGQVVMVF9USU1FX0ZPUk1BVCA9IFwiSEg6bW1cIjtcbmZ1bmN0aW9uIGZvcm1hdChpbnB1dCwgZm9ybWF0MiwgdXNlVVRDID0gITEpIHtcbiAgcmV0dXJuIHVzZVVUQyA/IG1vbWVudC51dGMoaW5wdXQpLmZvcm1hdChmb3JtYXQyKSA6IG1vbWVudChpbnB1dCkuZm9ybWF0KGZvcm1hdDIpO1xufVxuZnVuY3Rpb24gcGFyc2UoZGF0ZVN0cmluZywgZm9ybWF0Mikge1xuICBjb25zdCBwYXJzZWQgPSBtb21lbnQoZGF0ZVN0cmluZywgZm9ybWF0MiwgITApO1xuICByZXR1cm4gcGFyc2VkLmlzVmFsaWQoKSA/IHsgaXNWYWxpZDogITAsIGRhdGU6IHBhcnNlZC50b0RhdGUoKSB9IDogeyBpc1ZhbGlkOiAhMSwgZXJyb3I6IGBJbnZhbGlkIGRhdGUuIE11c3QgYmUgb24gdGhlIGZvcm1hdCBcIiR7Zm9ybWF0Mn1cImAgfTtcbn1cbmV4cG9ydCB7XG4gIERFRkFVTFRfREFURV9GT1JNQVQsXG4gIERFRkFVTFRfVElNRV9GT1JNQVQsXG4gIGZvcm1hdCxcbiAgcGFyc2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sZWdhY3lEYXRlRm9ybWF0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/util/lib/legacyDateFormat.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/util/lib/paths.mjs":
/*!*************************************************!*\
  !*** ./node_modules/@sanity/util/lib/paths.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FOCUS_TERMINATOR: () => (/* binding */ FOCUS_TERMINATOR),\n/* harmony export */   _resolveKeyedPath: () => (/* binding */ _resolveKeyedPath),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   hasFocus: () => (/* binding */ hasFocus),\n/* harmony export */   hasItemFocus: () => (/* binding */ hasItemFocus),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isExpanded: () => (/* binding */ isExpanded),\n/* harmony export */   isSegmentEqual: () => (/* binding */ isSegmentEqual),\n/* harmony export */   numEqualSegments: () => (/* binding */ numEqualSegments),\n/* harmony export */   pathFor: () => (/* binding */ pathFor),\n/* harmony export */   resolveKeyedPath: () => (/* binding */ resolveKeyedPath),\n/* harmony export */   startsWith: () => (/* binding */ startsWith),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   trimChildPath: () => (/* binding */ trimChildPath),\n/* harmony export */   trimLeft: () => (/* binding */ trimLeft),\n/* harmony export */   trimRight: () => (/* binding */ trimRight)\n/* harmony export */ });\n/* harmony import */ var _sanity_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/types */ \"(ssr)/./node_modules/@sanity/types/lib/index.mjs\");\n\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, EMPTY_PATH = [], FOCUS_TERMINATOR = \"$\", GROQ_DATA_TYPE_VALUES = [\"true\", \"false\", \"null\"];\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if ((0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isIndexSegment)(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if ((0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isKeySegment)(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nconst pathsMemo = /* @__PURE__ */ new Map();\nfunction pathFor(path) {\n  if (path.length === 0)\n    return EMPTY_PATH;\n  const asString = toString(path);\n  return pathsMemo.has(asString) ? pathsMemo.get(asString) : (pathsMemo.set(asString, path), Object.freeze(path), path);\n}\nfunction isEqual(path, otherPath) {\n  return path.length === otherPath.length && path.every((segment, i) => isSegmentEqual(segment, otherPath[i]));\n}\nfunction numEqualSegments(path, otherPath) {\n  const length = Math.min(path.length, otherPath.length);\n  for (let i = 0; i < length; i++)\n    if (!isSegmentEqual(path[i], otherPath[i]))\n      return i;\n  return length;\n}\nfunction isSegmentEqual(segmentA, segmentB) {\n  return (0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isKeySegment)(segmentA) && (0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isKeySegment)(segmentB) ? segmentA._key === segmentB._key : (0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isIndexSegment)(segmentA) ? Number(segmentA) === Number(segmentB) : (0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isIndexTuple)(segmentA) && (0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isIndexTuple)(segmentB) ? segmentA[0] === segmentB[0] && segmentA[1] === segmentB[1] : segmentA === segmentB;\n}\nfunction hasFocus(focusPath, path) {\n  const withoutTerminator = focusPath[focusPath.length - 1] === FOCUS_TERMINATOR ? focusPath.slice(0, -1) : focusPath;\n  return isEqual(withoutTerminator, path);\n}\nfunction hasItemFocus(focusPath, item) {\n  return focusPath.length === 1 && isSegmentEqual(focusPath[0], item);\n}\nfunction isExpanded(segment, focusPath) {\n  const [head, ...tail] = focusPath;\n  return tail.length > 0 && isSegmentEqual(segment, head);\n}\nfunction startsWith(prefix, path) {\n  return prefix.every((segment, i) => isSegmentEqual(segment, path[i]));\n}\nfunction trimLeft(prefix, path) {\n  if (prefix.length === 0 || path.length === 0)\n    return path;\n  const [prefixHead, ...prefixTail] = prefix, [pathHead, ...pathTail] = path;\n  return isSegmentEqual(prefixHead, pathHead) ? pathFor(trimLeft(prefixTail, pathTail)) : path;\n}\nfunction trimRight(suffix, path) {\n  const sufLen = suffix.length, pathLen = path.length;\n  if (sufLen === 0 || pathLen === 0)\n    return path;\n  let i = 0;\n  for (; i < sufLen && i < pathLen && isSegmentEqual(path[pathLen - i - 1], suffix[sufLen - i - 1]); )\n    i++;\n  return pathFor(path.slice(0, pathLen - i));\n}\nfunction trimChildPath(path, childPath) {\n  return startsWith(path, childPath) ? trimLeft(path, childPath) : EMPTY_PATH;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const isHead = i === 0;\n    if (typeof segment == \"number\")\n      return `${target}[${segment}]`;\n    if (typeof segment == \"string\")\n      return isHead ? segment : GROQ_DATA_TYPE_VALUES.includes(segment) ? `${target}[\"${segment}\"]` : `${target}.${segment}`;\n    if ((0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isKeySegment)(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction _resolveKeyedPath(value, path) {\n  if (path.length === 0)\n    return path;\n  const [next, ...rest] = path;\n  if (typeof next == \"number\") {\n    if (!Array.isArray(value) || !(next in value))\n      return [];\n    const item = value[next];\n    return [typeof (item == null ? void 0 : item._key) == \"string\" ? { _key: item._key } : next, ..._resolveKeyedPath(item, rest)];\n  }\n  const nextVal = get(value, [next]);\n  return [next, ..._resolveKeyedPath(nextVal, rest)];\n}\nfunction resolveKeyedPath(value, path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return pathFor(_resolveKeyedPath(value, path));\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(normalizePathSegment);\n}\nfunction normalizePathSegment(segment) {\n  return (0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isIndexSegment)(segment) ? normalizeIndexSegment(segment) : (0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isKeySegment)(segment) ? normalizeKeySegment(segment) : (0,_sanity_types__WEBPACK_IMPORTED_MODULE_0__.isIndexTuple)(segment) ? normalizeIndexTupleSegment(segment) : segment;\n}\nfunction normalizeIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction normalizeKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction normalizeIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\n\n//# sourceMappingURL=paths.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/util/lib/paths.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/SanityVision.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@sanity/vision/lib/_chunks-es/SanityVision.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SanityVision)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! sanity */ \"(ssr)/./node_modules/sanity/lib/index.mjs\");\n/* harmony import */ var _sanity_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sanity/ui */ \"(ssr)/./node_modules/@sanity/ui/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _rexxars_react_split_pane__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @rexxars/react-split-pane */ \"(ssr)/./node_modules/@rexxars/react-split-pane/dist/index.esm.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @sanity/icons */ \"(ssr)/./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! is-hotkey-esm */ \"(ssr)/./node_modules/is-hotkey-esm/dist/index.js\");\n/* harmony import */ var _uiw_react_codemirror__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @uiw/react-codemirror */ \"(ssr)/./node_modules/@uiw/react-codemirror/esm/index.js\");\n/* harmony import */ var _codemirror_autocomplete__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @codemirror/autocomplete */ \"(ssr)/./node_modules/@codemirror/autocomplete/dist/index.js\");\n/* harmony import */ var _codemirror_commands__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @codemirror/commands */ \"(ssr)/./node_modules/@codemirror/commands/dist/index.js\");\n/* harmony import */ var _codemirror_lang_javascript__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @codemirror/lang-javascript */ \"(ssr)/./node_modules/@codemirror/lang-javascript/dist/index.js\");\n/* harmony import */ var _codemirror_language__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @codemirror/language */ \"(ssr)/./node_modules/@codemirror/language/dist/index.js\");\n/* harmony import */ var _codemirror_search__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @codemirror/search */ \"(ssr)/./node_modules/@codemirror/search/dist/index.js\");\n/* harmony import */ var _codemirror_view__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @codemirror/view */ \"(ssr)/./node_modules/@codemirror/view/dist/index.js\");\n/* harmony import */ var _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @lezer/highlight */ \"(ssr)/./node_modules/@lezer/highlight/dist/index.js\");\n/* harmony import */ var _sanity_color__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @sanity/color */ \"(ssr)/./node_modules/@sanity/color/dist/index.js\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! styled-components */ \"(ssr)/./node_modules/styled-components/dist/styled-components.esm.js\");\n/* harmony import */ var json_2_csv__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! json-2-csv */ \"(ssr)/./node_modules/json-2-csv/lib/converter.js\");\n/* harmony import */ var _juggle_resize_observer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @juggle/resize-observer */ \"(ssr)/./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js\");\n/* harmony import */ var json5__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! json5 */ \"(ssr)/./node_modules/@sanity/vision/node_modules/json5/dist/index.mjs\");\n/* harmony import */ var lodash_debounce_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/debounce.js */ \"(ssr)/./node_modules/lodash/debounce.js\");\n/* harmony import */ var _index_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./index.mjs */ \"(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/index.mjs\");\n/* harmony import */ var _rexxars_react_json_inspector__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @rexxars/react-json-inspector */ \"(ssr)/./node_modules/@rexxars/react-json-inspector/json-inspector.js\");\n/* harmony import */ var quick_lru__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! quick-lru */ \"(ssr)/./node_modules/quick-lru/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst API_VERSIONS = [\"v1\", \"vX\", \"v2021-03-25\", \"v2021-10-21\", \"v2022-03-07\"], [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1);\nfunction DelayedSpinner(props) {\n  const [show, setShow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const timer = setTimeout(() => setShow(!0), props.delay || 500);\n    return () => clearTimeout(timer);\n  }, [props.delay]), show ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Spinner, { muted: !0, size: 4 }) : null;\n}\nconst codemirrorExtensions = [\n  [_codemirror_lang_javascript__WEBPACK_IMPORTED_MODULE_12__.javascriptLanguage],\n  (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_13__.lineNumbers)(),\n  (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_13__.highlightActiveLine)(),\n  (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_13__.highlightActiveLineGutter)(),\n  (0,_codemirror_search__WEBPACK_IMPORTED_MODULE_14__.highlightSelectionMatches)(),\n  (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_13__.highlightSpecialChars)(),\n  (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_15__.indentOnInput)(),\n  (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_15__.bracketMatching)(),\n  (0,_codemirror_autocomplete__WEBPACK_IMPORTED_MODULE_16__.closeBrackets)(),\n  (0,_codemirror_commands__WEBPACK_IMPORTED_MODULE_17__.history)(),\n  (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_13__.drawSelection)(),\n  (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_15__.syntaxHighlighting)(_codemirror_language__WEBPACK_IMPORTED_MODULE_15__.defaultHighlightStyle, { fallback: !0 }),\n  _codemirror_view__WEBPACK_IMPORTED_MODULE_13__.keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      { key: \"Mod-Enter\", run: () => !0 },\n      // Add the default keymap and history keymap\n      _codemirror_commands__WEBPACK_IMPORTED_MODULE_17__.defaultKeymap,\n      _codemirror_commands__WEBPACK_IMPORTED_MODULE_17__.historyKeymap\n    ].flat().filter(Boolean)\n  )\n];\nfunction useCodemirrorTheme(theme) {\n  const cmTheme = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => createTheme(theme), [theme]), cmHighlight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_15__.syntaxHighlighting)(createHighlight(theme)), [theme]);\n  return [cmTheme, cmHighlight];\n}\nfunction createTheme(theme) {\n  const { color, fonts } = theme.sanity, card = color.card.enabled, cursor = _sanity_color__WEBPACK_IMPORTED_MODULE_18__.hues.blue[color.dark ? 400 : 500].hex, selection = _sanity_color__WEBPACK_IMPORTED_MODULE_18__.hues.gray[theme.sanity.color.dark ? 900 : 100].hex;\n  return _codemirror_view__WEBPACK_IMPORTED_MODULE_13__.EditorView.theme(\n    {\n      \"&\": {\n        color: card.fg,\n        backgroundColor: card.bg\n      },\n      \".cm-content\": {\n        caretColor: cursor\n      },\n      \".cm-editor\": {\n        fontFamily: fonts.code.family,\n        fontSize: (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(fonts.code.sizes[1].fontSize),\n        lineHeight: \"inherit\"\n      },\n      \".cm-cursor, .cm-dropCursor\": { borderLeftColor: cursor },\n      \"&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection\": {\n        backgroundColor: selection\n      },\n      \".cm-panels\": { backgroundColor: card.bg, color: card.fg },\n      \".cm-panels.cm-panels-top\": { borderBottom: `2px solid ${card.border}` },\n      \".cm-panels.cm-panels-bottom\": { borderTop: `2px solid ${card.border}` }\n    },\n    { dark: color.dark }\n  );\n}\nfunction createHighlight(theme) {\n  const c = theme.sanity.color.base, s = theme.sanity.color.syntax;\n  return _codemirror_language__WEBPACK_IMPORTED_MODULE_15__.HighlightStyle.define([\n    { tag: _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.keyword, color: s.keyword },\n    { tag: [_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.propertyName, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.name, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.deleted, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.character, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.macroName], color: s.property },\n    { tag: [_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.function(_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.variableName), _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.labelName], color: s.function },\n    { tag: [_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.color, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.constant(_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.name), _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.standard(_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.name)], color: s.variable },\n    { tag: [_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.definition(_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.name), _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.separator], color: s.constant },\n    {\n      tag: [\n        _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.typeName,\n        _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.className,\n        _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.number,\n        _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.changed,\n        _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.annotation,\n        _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.modifier,\n        _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.self,\n        _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.namespace\n      ],\n      color: s.number\n    },\n    {\n      tag: [_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.operator, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.operatorKeyword, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.url, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.escape, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.regexp, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.link, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.special(_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.string)],\n      color: s.operator\n    },\n    { tag: [_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.meta, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.comment], color: s.comment },\n    { tag: _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.strong, fontWeight: \"bold\" },\n    { tag: _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.emphasis, fontStyle: \"italic\" },\n    { tag: _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.strikethrough, textDecoration: \"line-through\" },\n    { tag: _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.heading, fontWeight: \"bold\", color: s.property },\n    { tag: [_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.atom, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.bool, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.special(_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.variableName)], color: s.boolean },\n    { tag: [_lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.processingInstruction, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.string, _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.inserted], color: s.string },\n    { tag: _lezer_highlight__WEBPACK_IMPORTED_MODULE_4__.tags.invalid, color: c.fg }\n  ]);\n}\nconst EditorRoot = styled_components__WEBPACK_IMPORTED_MODULE_19__.styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({ theme }) => (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({ theme }) => (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(theme.sanity.space[4])} !important;\n    padding-top: ${({ theme }) => (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(theme.sanity.space[5])};\n  }\n`;\nfunction VisionCodeMirror(props) {\n  const sanityTheme = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.useTheme)(), theme = useCodemirrorTheme(sanityTheme);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EditorRoot, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_uiw_react_codemirror__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { basicSetup: !1, theme, extensions: codemirrorExtensions, ...props }) });\n}\nconst PERSPECTIVES = [\"raw\", \"previewDrafts\", \"published\"], DEFAULT_PERSPECTIVE = PERSPECTIVES[0];\nfunction isPerspective(p) {\n  return PERSPECTIVES.includes(p);\n}\nfunction encodeQueryString(query, params = {}, options = {}) {\n  const searchParams = new URLSearchParams();\n  searchParams.set(\"query\", query);\n  for (const [key, value] of Object.entries(params))\n    searchParams.set(`$${key}`, JSON.stringify(value));\n  for (const [key, value] of Object.entries(options))\n    value && searchParams.set(key, `${value}`);\n  return `?${searchParams}`;\n}\nfunction getBlobUrl(content, mimeType) {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType\n    })\n  );\n}\nfunction getMemoizedBlobUrlResolver(mimeType, stringEncoder) {\n  return /* @__PURE__ */ (() => {\n    let prevResult = \"\", prevContent = \"\";\n    return (input) => {\n      const content = stringEncoder(input);\n      if (!(typeof content != \"string\" || content === \"\"))\n        return content === prevContent || (prevContent = content, prevResult && URL.revokeObjectURL(prevResult), prevResult = getBlobUrl(content, mimeType)), prevResult;\n    };\n  })();\n}\nconst getJsonBlobUrl = getMemoizedBlobUrlResolver(\n  \"application/json\",\n  (input) => JSON.stringify(input, null, 2)\n), getCsvBlobUrl = getMemoizedBlobUrlResolver(\"text/csv\", (input) => (0,json_2_csv__WEBPACK_IMPORTED_MODULE_5__.json2csv)(Array.isArray(input) ? input : [input]).trim());\nfunction isPlainObject(obj) {\n  return !!obj && typeof obj == \"object\" && Object.prototype.toString.call(obj) === \"[object Object]\";\n}\nconst hasLocalStorage = supportsLocalStorage(), keyPrefix = \"sanityVision:\";\nfunction clearLocalStorage() {\n  if (hasLocalStorage)\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      key != null && key.startsWith(keyPrefix) && localStorage.removeItem(key);\n    }\n}\nfunction getLocalStorage(namespace) {\n  const storageKey = `${keyPrefix}${namespace}`;\n  let loadedState = null;\n  return { get, set, merge };\n  function get(key, defaultVal) {\n    const state = ensureState();\n    return typeof state[key] > \"u\" ? defaultVal : state[key];\n  }\n  function set(key, value) {\n    const state = ensureState();\n    return state[key] = value, localStorage.setItem(storageKey, JSON.stringify(loadedState)), value;\n  }\n  function merge(props) {\n    const state = { ...ensureState(), ...props };\n    return localStorage.setItem(storageKey, JSON.stringify(state)), state;\n  }\n  function ensureState() {\n    return loadedState === null && (loadedState = loadState()), loadedState;\n  }\n  function loadState() {\n    if (!hasLocalStorage)\n      return {};\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || \"{}\");\n      return isPlainObject(stored) ? stored : {};\n    } catch {\n      return {};\n    }\n  }\n}\nfunction supportsLocalStorage() {\n  const mod = \"lsCheck\";\n  try {\n    return localStorage.setItem(mod, mod), localStorage.removeItem(mod), !0;\n  } catch {\n    return !1;\n  }\n}\nfunction parseApiQueryString(qs) {\n  const params = {}, options = {};\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === \"$\") {\n      params[key.slice(1)] = JSON.parse(value);\n      continue;\n    }\n    if (key === \"perspective\") {\n      options[key] = value;\n      continue;\n    }\n  }\n  return { query: qs.get(\"query\") || \"\", params, options };\n}\nfunction prefixApiVersion(version) {\n  return version[0] !== \"v\" && version !== \"other\" ? `v${version}` : version;\n}\nconst RO = typeof document > \"u\" ? _juggle_resize_observer__WEBPACK_IMPORTED_MODULE_6__.ResizeObserver : window.ResizeObserver;\nfunction tryParseParams(val, t) {\n  try {\n    const parsed = val ? json5__WEBPACK_IMPORTED_MODULE_7__[\"default\"].parse(val) : {};\n    return typeof parsed == \"object\" && parsed && !Array.isArray(parsed) ? parsed : {};\n  } catch (err) {\n    return err.message = `${t(\"params.error.params-invalid-json\")}:\n\n${err.message.replace(\n      \"JSON5:\",\n      \"\"\n    )}`, err;\n  }\n}\nfunction validateApiVersion(apiVersion) {\n  const parseableApiVersion = apiVersion.replace(/^v/, \"\").trim().toUpperCase();\n  return parseableApiVersion.length > 0 && (parseableApiVersion === \"X\" || parseableApiVersion === \"1\" || /^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion)));\n}\nconst defaultValue = `{\n  \n}`;\nfunction ParamsEditor(props) {\n  const { onChange } = props, { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_20__.useTranslation)(_index_mjs__WEBPACK_IMPORTED_MODULE_21__.visionLocaleNamespace), { raw: value, error, parsed, valid } = eventFromValue(props.value, t), [isValid, setValid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(valid), [init, setInit] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    init || (onChange({ parsed, raw: value, valid: isValid, error }), setInit(!0));\n  }, [error, init, isValid, onChange, parsed, value]);\n  const handleChangeRaw = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (newValue) => {\n      const event = eventFromValue(newValue, t);\n      setValid(event.valid), onChange(event);\n    },\n    [onChange, t]\n  ), handleChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => lodash_debounce_js__WEBPACK_IMPORTED_MODULE_8__(handleChangeRaw, 333), [handleChangeRaw]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VisionCodeMirror, { value: props.value || defaultValue, onChange: handleChange });\n}\nfunction eventFromValue(value, t) {\n  const parsedParams = tryParseParams(value, t), params = parsedParams instanceof Error ? {} : parsedParams, validationError = parsedParams instanceof Error ? parsedParams.message : void 0;\n  return {\n    parsed: params,\n    raw: value,\n    valid: !validationError,\n    error: validationError\n  };\n}\nconst PerspectivePopoverContent = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box))`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`, PerspectivePopoverLink = styled_components__WEBPACK_IMPORTED_MODULE_19__.styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`;\nfunction PerspectivePopover() {\n  const [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [buttonEl, setButtonEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [popoverEl, setPopoverEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), handleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setOpen((o) => !o), []), handleClickOutside = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setOpen(!1), []), { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_20__.useTranslation)(_index_mjs__WEBPACK_IMPORTED_MODULE_21__.visionLocaleNamespace);\n  return (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.useClickOutside)(handleClickOutside, [buttonEl, popoverEl]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Popover,\n    {\n      content: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PerspectivePopoverContent, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { space: 4, children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Inline, { space: 2, children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Text, { weight: \"medium\", children: t(\"settings.perspectives.title\") }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Badge, { tone: \"primary\", children: t(\"label.new\") })\n        ] }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Text, { muted: !0, children: t(\"settings.perspectives.description\") }) }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Text, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(PerspectivePopoverLink, { href: \"https://sanity.io/docs/perspectives\", target: \"_blank\", children: [\n          t(\"settings.perspectives.action.docs-link\"),\n          \" \\u2192\"\n        ] }) }) })\n      ] }) }),\n      placement: \"bottom-start\",\n      portal: !0,\n      padding: 3,\n      ref: setPopoverEl,\n      open,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n        {\n          icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_22__.HelpCircleIcon,\n          mode: \"bleed\",\n          padding: 2,\n          tone: \"primary\",\n          fontSize: 1,\n          ref: setButtonEl,\n          onClick: handleClick,\n          selected: open\n        }\n      )\n    }\n  );\n}\nconst ErrorCode = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Code))`\n  color: ${({ theme }) => theme.sanity.color.muted.critical.enabled.fg};\n`;\nfunction QueryErrorDetails({ error }) {\n  const { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_20__.useTranslation)(_index_mjs__WEBPACK_IMPORTED_MODULE_21__.visionLocaleNamespace);\n  if (!(\"details\" in error))\n    return null;\n  const details = { ...error.details, ...mapToLegacyDetails(error.details) };\n  return details.line ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorCode, { size: 1, children: `${details.line}\n${dashLine(\n      details.column,\n      details.columnEnd\n    )}` }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { marginTop: 4, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorCode, { size: 1, children: `${t(\"query.error.line\")}:   ${details.lineNumber}\n${t(\n      \"query.error.column\"\n    )}: ${details.column}` }) })\n  ] }) : null;\n}\nfunction mapToLegacyDetails(details) {\n  if (!details || typeof details.query != \"string\" || typeof details.start != \"number\")\n    return {};\n  const { query, start, end } = details, lineStart = query.slice(0, start).lastIndexOf(`\n`) + 1, lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length, line = query.slice(lineStart, query.indexOf(`\n`, lineStart)), column = start - lineStart, columnEnd = typeof end == \"number\" ? end - lineStart : void 0;\n  return { line, lineNumber, column, columnEnd };\n}\nfunction dashLine(column, columnEnd) {\n  const line = \"-\".repeat(column), hats = \"^\".repeat(columnEnd ? columnEnd - column : 1);\n  return `${line}${hats}`;\n}\nfunction QueryErrorDialog(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { space: 5, marginTop: 2, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorCode, { size: 1, children: props.error.message }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(QueryErrorDetails, { error: props.error })\n  ] });\n}\nconst ResultViewWrapper = styled_components__WEBPACK_IMPORTED_MODULE_19__.styled.div(({ theme }) => {\n  const { color, fonts, space } = theme.sanity;\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.css)`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${(0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${(0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${(0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${(0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${(0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `;\n}), lru = new quick_lru__WEBPACK_IMPORTED_MODULE_10__({ maxSize: 5e4 });\nfunction ResultView(props) {\n  const { data } = props;\n  return isRecord(data) || Array.isArray(data) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ResultViewWrapper, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    _rexxars_react_json_inspector__WEBPACK_IMPORTED_MODULE_9__,\n    {\n      data,\n      search: !1,\n      isExpanded,\n      onClick: toggleExpanded\n    }\n  ) }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Code, { language: \"json\", children: JSON.stringify(data) });\n}\nfunction isExpanded(keyPath, value) {\n  const cached = lru.get(keyPath);\n  if (typeof cached == \"boolean\")\n    return cached;\n  const segments = keyPath.split(\".\", 4);\n  return segments.length === 4 ? !1 : Array.isArray(value) ? !0 : isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key));\n}\nfunction toggleExpanded(event) {\n  const { path } = event, current = lru.get(path);\n  current !== void 0 && lru.set(path, !current);\n}\nfunction isRecord(value) {\n  return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\nconst numeric = /^\\d+$/;\nfunction isArrayKeyOverLimit(segment, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit;\n}\nfunction preventSave(evt) {\n  return evt.preventDefault();\n}\nfunction SaveCsvButton({ blobUrl }) {\n  const { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_20__.useTranslation)(_index_mjs__WEBPACK_IMPORTED_MODULE_21__.visionLocaleNamespace), isDisabled = !blobUrl, button = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n    {\n      as: \"a\",\n      disabled: isDisabled,\n      download: isDisabled ? void 0 : \"query-result.csv\",\n      href: blobUrl,\n      icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_22__.DocumentSheetIcon,\n      mode: \"ghost\",\n      onClick: isDisabled ? preventSave : void 0,\n      text: \"CSV\",\n      tone: \"default\"\n    }\n  );\n  return isDisabled ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Tooltip, { content: t(\"result.save-result-as-csv.not-csv-encodable\"), placement: \"top\", children: button }) : button;\n}\nfunction SaveJsonButton({ blobUrl }) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n    {\n      as: \"a\",\n      download: \"query-result.json\",\n      href: blobUrl,\n      icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_22__.DocumentSheetIcon,\n      mode: \"ghost\",\n      text: \"JSON\",\n      tone: \"default\"\n    }\n  );\n}\nconst Root = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex))`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`;\nRoot.displayName = \"Root\";\nconst Header = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card))`\n  border-bottom: 1px solid var(--card-border-color);\n`, StyledLabel = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Label))`\n  flex: 1;\n`, SplitpaneContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box))`\n  position: relative;\n`, QueryCopyLink = styled_components__WEBPACK_IMPORTED_MODULE_19__.styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`, InputBackgroundContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box))`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`, InputBackgroundContainerLeft = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`, InputContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card))`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`, ResultOuterContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex))`\n  height: 100%;\n`, ResultInnerContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box))`\n  position: relative;\n`, ResultContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card))`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({ $isInvalid }) => $isInvalid && (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.css)`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`, Result = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box))`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`, ResultFooter = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex))`\n  border-top: 1px solid var(--card-border-color);\n`, TimingsCard = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card))`\n  position: relative;\n`;\n(0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box))`\n  width: 100%;\n  height: 100%;\n`;\nconst TimingsTextContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex))`\n  height: 100%;\n  min-height: ${({ theme }) => (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(\n  theme.sanity.space[3] * 2 + theme.sanity.fonts.text.sizes[2].lineHeight - theme.sanity.fonts.text.sizes[2].ascenderHeight - theme.sanity.fonts.text.sizes[2].descenderHeight\n)};\n`, DownloadsCard = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card))`\n  position: relative;\n`, SaveResultLabel = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Text))`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({ theme }) => (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.rem)(theme.sanity.space[3])};\n    align-items: center;\n  }\n`, ControlsContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_19__.styled)((0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box))`\n  border-top: 1px solid var(--card-border-color);\n`;\nvar __defProp$1 = Object.defineProperty, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField$1 = (obj, key, value) => __defNormalProp$1(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nfunction nodeContains(node, other) {\n  return !node || !other ? !1 : node === other || !!(node.compareDocumentPosition(other) & 16);\n}\nconst sanityUrl = /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/, isRunHotkey = (event) => (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"ctrl+enter\", event) || (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_23__.isHotkey)(\"mod+enter\", event);\nfunction narrowBreakpoint() {\n  return typeof window < \"u\" && window.innerWidth > 600;\n}\nfunction calculatePaneSizeOptions(rootHeight) {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? void 0 : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6\n  };\n}\nclass VisionGui extends react__WEBPACK_IMPORTED_MODULE_1__.PureComponent {\n  constructor(props) {\n    super(props), __publicField$1(this, \"_visionRoot\"), __publicField$1(this, \"_queryEditorContainer\"), __publicField$1(this, \"_paramsEditorContainer\"), __publicField$1(this, \"_operationUrlElement\"), __publicField$1(this, \"_customApiVersionElement\"), __publicField$1(this, \"_resizeListener\"), __publicField$1(this, \"_querySubscription\"), __publicField$1(this, \"_listenSubscription\"), __publicField$1(this, \"_client\"), __publicField$1(this, \"_localStorage\");\n    const { client, datasets, config } = props;\n    this._localStorage = getLocalStorage(client.config().projectId || \"default\");\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0], defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`), defaultPerspective = DEFAULT_PERSPECTIVE;\n    let dataset = this._localStorage.get(\"dataset\", defaultDataset), apiVersion = this._localStorage.get(\"apiVersion\", defaultApiVersion), lastQuery = this._localStorage.get(\"query\", \"\"), lastParams = this._localStorage.get(\"params\", `{\n  \n}`);\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? !1 : apiVersion;\n    let perspective = this._localStorage.get(\"perspective\", defaultPerspective);\n    datasets.includes(dataset) || (dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]), API_VERSIONS.includes(apiVersion) || (apiVersion = DEFAULT_API_VERSION), PERSPECTIVES.includes(perspective) || (perspective = DEFAULT_PERSPECTIVE), typeof lastQuery != \"string\" && (lastQuery = \"\"), typeof lastParams != \"string\" && (lastParams = `{\n  \n}`), this._visionRoot = (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)(), this._operationUrlElement = (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)(), this._queryEditorContainer = (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)(), this._paramsEditorContainer = (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)(), this._customApiVersionElement = (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)(), this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective,\n      allowReconfigure: !0\n    });\n    const bodyHeight = typeof window < \"u\" && typeof document < \"u\" ? document.body.getBoundingClientRect().height - 60 : 0, params = lastParams ? tryParseParams(lastParams, this.props.t) : void 0;\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : !1,\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n      // Query/listen results\n      listenMutations: [],\n      // Operation state\n      queryInProgress: !1,\n      listenInProgress: !1,\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight)\n    }, this.handleChangeDataset = this.handleChangeDataset.bind(this), this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this), this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this), this.handleChangePerspective = this.handleChangePerspective.bind(this), this.handleListenExecution = this.handleListenExecution.bind(this), this.handleListenerEvent = this.handleListenerEvent.bind(this), this.handleQueryExecution = this.handleQueryExecution.bind(this), this.handleQueryChange = this.handleQueryChange.bind(this), this.handleParamsChange = this.handleParamsChange.bind(this), this.handleCopyUrl = this.handleCopyUrl.bind(this), this.handlePaste = this.handlePaste.bind(this), this.handleKeyDown = this.handleKeyDown.bind(this), this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    window.document.addEventListener(\"paste\", this.handlePaste), window.document.addEventListener(\"keydown\", this.handleKeyDown), this.handleResizeListen();\n  }\n  componentWillUnmount() {\n    this.cancelQuery(), this.cancelListener(), this.cancelEventListener(), this.cancelResizeListener();\n  }\n  handleResizeListen() {\n    this._visionRoot.current && (this._resizeListener = new RO(this.handleResize), this._resizeListener.observe(this._visionRoot.current));\n  }\n  handleResize(entries) {\n    const entry = entries == null ? void 0 : entries[0];\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height)\n    }));\n  }\n  cancelResizeListener() {\n    this._resizeListener && this._resizeListener.disconnect();\n  }\n  handlePaste(evt) {\n    if (!evt.clipboardData)\n      return;\n    const match = evt.clipboardData.getData(\"text/plain\").match(sanityUrl);\n    if (!match)\n      return;\n    const [, usedApiVersion, usedDataset, urlQuery] = match;\n    let parts;\n    try {\n      const qs = new URLSearchParams(urlQuery);\n      parts = parseApiQueryString(qs);\n    } catch (err) {\n      console.warn(\"Error while trying to parse API URL: \", err.message);\n      return;\n    }\n    let apiVersion, customApiVersion;\n    validateApiVersion(usedApiVersion) && (API_VERSIONS.includes(usedApiVersion) ? (apiVersion = usedApiVersion, customApiVersion = !1) : customApiVersion = usedApiVersion);\n    const perspective = PERSPECTIVES.includes(parts.options.perspective) ? parts.options.perspective : void 0;\n    evt.preventDefault(), this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion > \"u\" ? prevState.apiVersion : apiVersion,\n        customApiVersion: typeof customApiVersion > \"u\" ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective > \"u\" ? prevState.perspective : perspective\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective\n        }), this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective\n        }), this.handleQueryExecution(), this.props.toast.push({\n          closable: !0,\n          id: \"vision-paste\",\n          status: \"info\",\n          title: \"Parsed URL to query\"\n        });\n      }\n    );\n  }\n  cancelQuery() {\n    this._querySubscription && (this._querySubscription.unsubscribe(), this._querySubscription = void 0);\n  }\n  cancelListener() {\n    this._listenSubscription && (this._listenSubscription.unsubscribe(), this._listenSubscription = void 0);\n  }\n  cancelEventListener() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  handleChangeDataset(evt) {\n    const dataset = evt.target.value;\n    this._localStorage.set(\"dataset\", dataset), this.setState({ dataset }), this._client.config({ dataset }), this.handleQueryExecution();\n  }\n  handleChangeApiVersion(evt) {\n    const apiVersion = evt.target.value;\n    if ((apiVersion == null ? void 0 : apiVersion.toLowerCase()) === \"other\") {\n      this.setState({ customApiVersion: \"v\" }, () => {\n        var _a;\n        (_a = this._customApiVersionElement.current) == null || _a.focus();\n      });\n      return;\n    }\n    this.setState({ apiVersion, customApiVersion: !1 }, () => {\n      this._localStorage.set(\"apiVersion\", this.state.apiVersion), this._client.config({\n        apiVersion: this.state.apiVersion\n      }), this.handleQueryExecution();\n    });\n  }\n  handleCustomApiVersionChange(evt) {\n    const customApiVersion = evt.target.value || \"\", isValidApiVersion = validateApiVersion(customApiVersion);\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || \"v\",\n        isValidApiVersion\n      }),\n      () => {\n        !this.state.isValidApiVersion || typeof this.state.customApiVersion != \"string\" || (this._localStorage.set(\"apiVersion\", this.state.customApiVersion), this._client.config({ apiVersion: this.state.customApiVersion }));\n      }\n    );\n  }\n  handleChangePerspective(evt) {\n    const perspective = evt.target.value;\n    isPerspective(perspective) && this.setState({ perspective }, () => {\n      this._localStorage.set(\"perspective\", this.state.perspective), this._client.config({\n        perspective: this.state.perspective\n      }), this.handleQueryExecution();\n    });\n  }\n  handleListenerEvent(evt) {\n    if (evt.type !== \"mutation\") {\n      this.props.toast.push({\n        closable: !0,\n        id: \"vision-listen\",\n        status: \"success\",\n        title: \"Listening for mutations\\u2026\"\n      });\n      return;\n    }\n    this.setState(({ listenMutations }) => ({\n      listenMutations: listenMutations.length === 50 ? [evt, ...listenMutations.slice(0, 49)] : [evt, ...listenMutations]\n    }));\n  }\n  handleKeyDown(event) {\n    const { hasValidParams } = this.state, isWithinRoot = this._visionRoot.current && nodeContains(this._visionRoot.current, event.target);\n    isRunHotkey(event) && isWithinRoot && hasValidParams && (this.handleQueryExecution(), event.preventDefault(), event.stopPropagation());\n  }\n  ensureSelectedApiVersion() {\n    const { apiVersion, customApiVersion } = this.state, wantedApiVersion = customApiVersion || apiVersion;\n    this._client.config().apiVersion !== wantedApiVersion && this._client.config({ apiVersion: wantedApiVersion });\n  }\n  handleListenExecution() {\n    const { query, params, rawParams, listenInProgress } = this.state;\n    if (listenInProgress) {\n      this.cancelListener(), this.setState({ listenInProgress: !1 });\n      return;\n    }\n    this.ensureSelectedApiVersion();\n    const paramsError = params instanceof Error ? params : void 0, encodeParams = params instanceof Error ? {} : params || {}, url = this._client.getDataUrl(\"listen\", encodeQueryString(query, encodeParams, {})), shouldExecute = !paramsError && query.trim().length > 0;\n    this._localStorage.set(\"query\", query), this._localStorage.set(\"params\", rawParams), this.cancelQuery(), this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: !1,\n      queryResult: void 0,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: void 0,\n      e2eTime: void 0\n    }), shouldExecute && (this._listenSubscription = this._client.listen(query, params, { events: [\"mutation\", \"welcome\"] }).subscribe({\n      next: this.handleListenerEvent,\n      error: (error) => this.setState({\n        error,\n        query,\n        listenInProgress: !1\n      })\n    }));\n  }\n  handleQueryExecution() {\n    const { query, params, rawParams, queryInProgress } = this.state;\n    if (queryInProgress)\n      return this.cancelQuery(), this.cancelListener(), this.setState({ queryInProgress: !1 }), !0;\n    const paramsError = params instanceof Error && params;\n    if (this._localStorage.set(\"query\", query), this._localStorage.set(\"params\", rawParams), this.cancelListener(), this.setState({\n      queryInProgress: !paramsError && !!query,\n      listenInProgress: !1,\n      listenMutations: [],\n      error: paramsError || void 0,\n      queryResult: void 0,\n      queryTime: void 0,\n      e2eTime: void 0\n    }), !query || paramsError)\n      return !0;\n    this.ensureSelectedApiVersion();\n    const urlQueryOpts = {};\n    this.state.perspective !== \"raw\" && (urlQueryOpts.perspective = this.state.perspective);\n    const url = this._client.getUrl(\n      this._client.getDataUrl(\"query\", encodeQueryString(query, params, urlQueryOpts))\n    );\n    this.setState({ url });\n    const queryStart = Date.now();\n    return this._querySubscription = this._client.observable.fetch(query, params, { filterResponse: !1, tag: \"vision\" }).subscribe({\n      next: (res) => this.setState({\n        queryTime: res.ms,\n        e2eTime: Date.now() - queryStart,\n        queryResult: res.result,\n        queryInProgress: !1,\n        error: void 0\n      }),\n      error: (error) => this.setState({\n        error,\n        query,\n        queryInProgress: !1\n      })\n    }), !0;\n  }\n  handleQueryChange(query) {\n    this.setState({ query });\n  }\n  handleParamsChange({ raw, parsed, valid, error }) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error\n      },\n      () => this._localStorage.set(\"params\", raw)\n    );\n  }\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current;\n    if (el)\n      try {\n        el.select(), document.execCommand(\"copy\"), this.props.toast.push({\n          closable: !0,\n          title: \"Copied to clipboard\",\n          status: \"info\",\n          id: \"vision-copy\"\n        });\n      } catch {\n        console.error(\"Unable to copy to clipboard :(\");\n      }\n  }\n  render() {\n    const { datasets, t } = this.props, {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url\n    } = this.state, hasResult = !error && !queryInProgress && typeof queryResult < \"u\", jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : \"\", csvUrl = hasResult ? getCsvBlobUrl(queryResult) : \"\";\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      Root,\n      {\n        direction: \"column\",\n        height: \"fill\",\n        ref: this._visionRoot,\n        sizing: \"border\",\n        overflow: \"hidden\",\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Header, { paddingX: 3, paddingY: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Grid, { columns: [1, 4, 8, 12], children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { padding: 1, column: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { paddingTop: 2, paddingBottom: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLabel, { children: t(\"settings.dataset-label\") }) }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Select, { value: dataset, onChange: this.handleChangeDataset, children: datasets.map((ds) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", { children: ds }, ds)) })\n            ] }) }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { padding: 1, column: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { paddingTop: 2, paddingBottom: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLabel, { children: t(\"settings.api-version-label\") }) }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n                _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Select,\n                {\n                  value: customApiVersion === !1 ? apiVersion : \"other\",\n                  onChange: this.handleChangeApiVersion,\n                  children: [\n                    API_VERSIONS.map((version) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", { children: version }, version)),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", { value: \"other\", children: t(\"settings.other-api-version-label\") }, \"other\")\n                  ]\n                }\n              )\n            ] }) }),\n            customApiVersion !== !1 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { padding: 1, column: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { paddingTop: 2, paddingBottom: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLabel, { textOverflow: \"ellipsis\", children: t(\"settings.custom-api-version-label\") }) }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.TextInput,\n                {\n                  ref: this._customApiVersionElement,\n                  value: customApiVersion,\n                  onChange: this.handleCustomApiVersionChange,\n                  customValidity: isValidApiVersion ? void 0 : t(\"settings.error.invalid-api-version\"),\n                  maxLength: 11\n                }\n              )\n            ] }) }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { padding: 1, column: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { paddingBottom: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Inline, { space: 1, children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLabel, { children: t(\"settings.perspective-label\") }) }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PerspectivePopover, {}) })\n              ] }) }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Select, { value: perspective, onChange: this.handleChangePerspective, children: PERSPECTIVES.map((p) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", { children: p }, p)) })\n            ] }) }),\n            typeof url == \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { padding: 1, flex: 1, column: customApiVersion === !1 ? 6 : 4, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { paddingTop: 2, paddingBottom: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledLabel, { children: [\n                t(\"query.url\"),\n                \"\\xA0\",\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(QueryCopyLink, { onClick: this.handleCopyUrl, children: [\n                  \"[\",\n                  t(\"action.copy-url-to-clipboard\"),\n                  \"]\"\n                ] })\n              ] }) }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex, { flex: 1, gap: 1, children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.TextInput, { readOnly: !0, type: \"url\", ref: this._operationUrlElement, value: url }) }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Tooltip, { content: t(\"action.copy-url-to-clipboard\"), children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                  _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n                  {\n                    \"aria-label\": t(\"action.copy-url-to-clipboard\"),\n                    type: \"button\",\n                    mode: \"ghost\",\n                    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_22__.CopyIcon,\n                    onClick: this.handleCopyUrl\n                  }\n                ) })\n              ] })\n            ] }) }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { flex: 1 })\n          ] }) }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SplitpaneContainer, { flex: \"auto\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n            _rexxars_react_split_pane__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n            {\n              split: narrowBreakpoint() ? \"vertical\" : \"horizontal\",\n              minSize: 280,\n              defaultSize: 400,\n              maxSize: -400,\n              children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { height: \"stretch\", flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n                  _rexxars_react_split_pane__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n                  {\n                    className: \"sidebarPanes\",\n                    split: \"horizontal\",\n                    defaultSize: narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize,\n                    size: paneSizeOptions.size,\n                    allowResize: paneSizeOptions.allowResize,\n                    minSize: narrowBreakpoint() ? paneSizeOptions.minSize : 100,\n                    maxSize: paneSizeOptions.maxSize,\n                    primary: \"first\",\n                    children: [\n                      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InputContainer, { display: \"flex\", ref: this._queryEditorContainer, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { flex: 1, children: [\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InputBackgroundContainerLeft, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLabel, { muted: !0, children: t(\"query.label\") }) }) }),\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VisionCodeMirror, { value: query, onChange: this.handleQueryChange })\n                      ] }) }),\n                      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(InputContainer, { display: \"flex\", ref: this._paramsEditorContainer, children: [\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { flex: 1, tone: hasValidParams ? \"default\" : \"critical\", children: [\n                          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InputBackgroundContainerLeft, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex, { children: [\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLabel, { muted: !0, children: t(\"params.label\") }),\n                            paramsError && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Tooltip, { placement: \"top-end\", portal: !0, content: paramsError, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { padding: 1, marginX: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Text, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_22__.ErrorOutlineIcon, {}) }) }) })\n                          ] }) }),\n                          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ParamsEditor, { value: rawParams, onChange: this.handleParamsChange })\n                        ] }),\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ControlsContainer, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { padding: 3, paddingX: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                          _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Tooltip,\n                          {\n                            content: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { radius: 4, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Text, { size: 1, muted: !0, children: t(\"params.error.params-invalid-json\") }) }),\n                            placement: \"top\",\n                            disabled: hasValidParams,\n                            portal: !0,\n                            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex, { justify: \"space-evenly\", children: [\n                              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                                _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Tooltip,\n                                {\n                                  content: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { radius: 4, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Hotkeys, { keys: [\"Ctrl\", \"Enter\"] }) }),\n                                  placement: \"top\",\n                                  portal: !0,\n                                  children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                                    _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n                                    {\n                                      width: \"fill\",\n                                      onClick: this.handleQueryExecution,\n                                      type: \"button\",\n                                      icon: queryInProgress ? _sanity_icons__WEBPACK_IMPORTED_MODULE_22__.StopIcon : _sanity_icons__WEBPACK_IMPORTED_MODULE_22__.PlayIcon,\n                                      disabled: listenInProgress || !hasValidParams,\n                                      tone: queryInProgress ? \"positive\" : \"primary\",\n                                      text: t(queryInProgress ? \"action.query-cancel\" : \"action.query-execute\")\n                                    }\n                                  )\n                                }\n                              ) }),\n                              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { flex: 1, marginLeft: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                                _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n                                {\n                                  width: \"fill\",\n                                  onClick: this.handleListenExecution,\n                                  type: \"button\",\n                                  icon: listenInProgress ? _sanity_icons__WEBPACK_IMPORTED_MODULE_22__.StopIcon : _sanity_icons__WEBPACK_IMPORTED_MODULE_22__.PlayIcon,\n                                  text: t(listenInProgress ? \"action.listen-cancel\" : \"action.listen-execute\"),\n                                  mode: \"ghost\",\n                                  disabled: !hasValidParams,\n                                  tone: listenInProgress ? \"positive\" : \"default\"\n                                }\n                              ) })\n                            ] })\n                          }\n                        ) }) })\n                      ] })\n                    ]\n                  }\n                ) }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(ResultOuterContainer, { direction: \"column\", children: [\n                  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ResultInnerContainer, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                    ResultContainer,\n                    {\n                      flex: 1,\n                      overflow: \"hidden\",\n                      tone: error ? \"critical\" : \"default\",\n                      $isInvalid: !!error,\n                      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Result, { overflow: \"auto\", children: [\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InputBackgroundContainer, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { marginLeft: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLabel, { muted: !0, children: t(\"result.label\") }) }) }),\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { padding: 3, paddingTop: 5, children: [\n                          (queryInProgress || listenInProgress && listenMutations.length === 0) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { marginTop: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DelayedSpinner, {}) }),\n                          error && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(QueryErrorDialog, { error }),\n                          hasResult && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ResultView, { data: queryResult }),\n                          listenInProgress && listenMutations.length > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ResultView, { data: listenMutations })\n                        ] })\n                      ] })\n                    }\n                  ) }),\n                  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(ResultFooter, { justify: \"space-between\", direction: [\"column\", \"column\", \"row\"], children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TimingsCard, { paddingX: 4, paddingY: 3, sizing: \"border\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(TimingsTextContainer, { align: \"center\", children: [\n                      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Text, { muted: !0, children: [\n                        t(\"result.execution-time-label\"),\n                        \":\",\n                        \" \",\n                        typeof queryTime == \"number\" ? `${queryTime}ms` : t(\"result.timing-not-applicable\")\n                      ] }) }),\n                      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Box, { marginLeft: 4, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Text, { muted: !0, children: [\n                        t(\"result.end-to-end-time-label\"),\n                        \":\",\n                        \" \",\n                        typeof e2eTime == \"number\" ? `${e2eTime}ms` : t(\"result.timing-not-applicable\")\n                      ] }) })\n                    ] }) }),\n                    hasResult && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DownloadsCard, { paddingX: 4, paddingY: 3, sizing: \"border\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SaveResultLabel, { muted: !0, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                      sanity__WEBPACK_IMPORTED_MODULE_20__.Translate,\n                      {\n                        components: {\n                          SaveResultButtons: () => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SaveJsonButton, { blobUrl: jsonUrl }),\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SaveCsvButton, { blobUrl: csvUrl })\n                          ] })\n                        },\n                        i18nKey: \"result.save-result-as-format\",\n                        t\n                      }\n                    ) }) })\n                  ] })\n                ] })\n              ]\n            }\n          ) })\n        ]\n      }\n    );\n  }\n}\nfunction useDatasets(client) {\n  const projectId = client.config().projectId, [datasets, setDatasets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err)\n    });\n    return () => datasets$.unsubscribe();\n  }, [client, projectId]), datasets || void 0;\n}\nfunction VisionContainer(props) {\n  const toast = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.useToast)(), loadedDatasets = useDatasets(props.client), { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_20__.useTranslation)(_index_mjs__WEBPACK_IMPORTED_MODULE_21__.visionLocaleNamespace);\n  if (!loadedDatasets)\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Flex, { align: \"center\", height: \"fill\", justify: \"center\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DelayedSpinner, {}) });\n  const datasets = loadedDatasets instanceof Error ? (\n    // On error, use the clients configured dataset\n    [props.client.config().dataset || \"production\"]\n  ) : (\n    // Otherwise use the loaded list, obviously\n    loadedDatasets\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VisionGui, { ...props, datasets, toast, t });\n}\nvar __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass VisionErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  constructor(props) {\n    super(props), __publicField(this, \"handleRetryRender\", () => this.setState((prev) => ({ error: null, numRetries: prev.numRetries + 1 }))), __publicField(this, \"handleRetryWithCacheClear\", () => {\n      clearLocalStorage(), this.handleRetryRender();\n    }), this.state = { error: null, numRetries: 0 };\n  }\n  static getDerivedStateFromError(error) {\n    return { error: error instanceof Error ? error.message : `${error}` };\n  }\n  render() {\n    if (!this.state.error)\n      return this.props.children;\n    const message = this.state.error, withCacheClear = this.state.numRetries > 0;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card,\n      {\n        height: \"fill\",\n        overflow: \"auto\",\n        paddingY: [4, 5, 6, 7],\n        paddingX: 4,\n        sizing: \"border\",\n        tone: \"critical\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Container, { width: 3, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { space: 4, children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            _sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n            {\n              onClick: withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender,\n              text: withCacheClear ? \"Clear cache and retry\" : \"Retry\",\n              tone: \"default\"\n            }\n          ) }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Heading, { children: \"An error occured\" }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Card, { border: !0, radius: 2, overflow: \"auto\", padding: 4, tone: \"inherit\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Stack, { space: 4, children: message && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_11__.Code, { size: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"strong\", { children: [\n            \"Error: \",\n            message\n          ] }) }) }) })\n        ] }) })\n      }\n    );\n  }\n}\nfunction SanityVision(props) {\n  const client = (0,sanity__WEBPACK_IMPORTED_MODULE_20__.useClient)({ apiVersion: \"1\" }), config = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options\n  };\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VisionErrorBoundary, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VisionContainer, { client, config }) });\n}\n\n//# sourceMappingURL=SanityVision.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/SanityVision.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@sanity/vision/lib/_chunks-es/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   visionLocaleNamespace: () => (/* binding */ visionLocaleNamespace),\n/* harmony export */   visionTool: () => (/* binding */ visionTool)\n/* harmony export */ });\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sanity/icons */ \"(ssr)/./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sanity */ \"(ssr)/./node_modules/sanity/lib/index.mjs\");\n/* harmony import */ var sanity_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sanity/router */ \"(ssr)/./node_modules/sanity/lib/router.mjs\");\n\n\n\n\nconst visionLocaleNamespace = \"vision\", visionUsEnglishLocaleBundle = (0,sanity__WEBPACK_IMPORTED_MODULE_1__.defineLocaleResourceBundle)({\n  locale: \"en-US\",\n  namespace: visionLocaleNamespace,\n  resources: () => __webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ./resources.mjs */ \"(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/resources.mjs\"))\n}), visionTool = (0,sanity__WEBPACK_IMPORTED_MODULE_1__.definePlugin)((options) => {\n  const { name, title, icon, ...config } = options || {};\n  return {\n    name: \"@sanity/vision\",\n    tools: [\n      {\n        name: name || \"vision\",\n        title: title || \"Vision\",\n        icon: icon || _sanity_icons__WEBPACK_IMPORTED_MODULE_2__.EyeOpenIcon,\n        component: (0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/@rexxars\"), __webpack_require__.e(\"vendor-chunks/@babel\"), __webpack_require__.e(\"vendor-chunks/@codemirror\"), __webpack_require__.e(\"vendor-chunks/@uiw\"), __webpack_require__.e(\"vendor-chunks/json-2-csv\"), __webpack_require__.e(\"vendor-chunks/@lezer\"), __webpack_require__.e(\"vendor-chunks/deeks\"), __webpack_require__.e(\"vendor-chunks/react-style-proptype\"), __webpack_require__.e(\"vendor-chunks/w3c-keyname\"), __webpack_require__.e(\"vendor-chunks/style-mod\"), __webpack_require__.e(\"vendor-chunks/crelt\"), __webpack_require__.e(\"vendor-chunks/react-lifecycles-compat\"), __webpack_require__.e(\"vendor-chunks/doc-path\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./SanityVision.mjs */ \"(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/SanityVision.mjs\"))),\n        options: config,\n        router: sanity_router__WEBPACK_IMPORTED_MODULE_3__.route.create(\"/*\")\n      }\n    ],\n    i18n: {\n      bundles: [visionUsEnglishLocaleBundle]\n    }\n  };\n});\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXNpb24vbGliL19jaHVua3MtZXMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0QztBQUNmO0FBQ3FDO0FBQzVCO0FBQ3RDLHNFQUFzRSxrRUFBMEI7QUFDaEc7QUFDQTtBQUNBLG1CQUFtQiw2TUFBeUI7QUFDNUMsQ0FBQyxnQkFBZ0Isb0RBQVk7QUFDN0IsVUFBVSwrQkFBK0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFXO0FBQ2pDLG1CQUFtQiwyQ0FBSSxPQUFPLG8zQkFBNEI7QUFDMUQ7QUFDQSxnQkFBZ0IsZ0RBQUs7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUlDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzaW9uL2xpYi9fY2h1bmtzLWVzL2luZGV4Lm1qcz82N2FmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV5ZU9wZW5JY29uIH0gZnJvbSBcIkBzYW5pdHkvaWNvbnNcIjtcbmltcG9ydCB7IGxhenkgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGRlZmluZUxvY2FsZVJlc291cmNlQnVuZGxlLCBkZWZpbmVQbHVnaW4gfSBmcm9tIFwic2FuaXR5XCI7XG5pbXBvcnQgeyByb3V0ZSB9IGZyb20gXCJzYW5pdHkvcm91dGVyXCI7XG5jb25zdCB2aXNpb25Mb2NhbGVOYW1lc3BhY2UgPSBcInZpc2lvblwiLCB2aXNpb25Vc0VuZ2xpc2hMb2NhbGVCdW5kbGUgPSBkZWZpbmVMb2NhbGVSZXNvdXJjZUJ1bmRsZSh7XG4gIGxvY2FsZTogXCJlbi1VU1wiLFxuICBuYW1lc3BhY2U6IHZpc2lvbkxvY2FsZU5hbWVzcGFjZSxcbiAgcmVzb3VyY2VzOiAoKSA9PiBpbXBvcnQoXCIuL3Jlc291cmNlcy5tanNcIilcbn0pLCB2aXNpb25Ub29sID0gZGVmaW5lUGx1Z2luKChvcHRpb25zKSA9PiB7XG4gIGNvbnN0IHsgbmFtZSwgdGl0bGUsIGljb24sIC4uLmNvbmZpZyB9ID0gb3B0aW9ucyB8fCB7fTtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBcIkBzYW5pdHkvdmlzaW9uXCIsXG4gICAgdG9vbHM6IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogbmFtZSB8fCBcInZpc2lvblwiLFxuICAgICAgICB0aXRsZTogdGl0bGUgfHwgXCJWaXNpb25cIixcbiAgICAgICAgaWNvbjogaWNvbiB8fCBFeWVPcGVuSWNvbixcbiAgICAgICAgY29tcG9uZW50OiBsYXp5KCgpID0+IGltcG9ydChcIi4vU2FuaXR5VmlzaW9uLm1qc1wiKSksXG4gICAgICAgIG9wdGlvbnM6IGNvbmZpZyxcbiAgICAgICAgcm91dGVyOiByb3V0ZS5jcmVhdGUoXCIvKlwiKVxuICAgICAgfVxuICAgIF0sXG4gICAgaTE4bjoge1xuICAgICAgYnVuZGxlczogW3Zpc2lvblVzRW5nbGlzaExvY2FsZUJ1bmRsZV1cbiAgICB9XG4gIH07XG59KTtcbmV4cG9ydCB7XG4gIHZpc2lvbkxvY2FsZU5hbWVzcGFjZSxcbiAgdmlzaW9uVG9vbFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/resources.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@sanity/vision/lib/_chunks-es/resources.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ visionLocaleStrings)\n/* harmony export */ });\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sanity */ \"(ssr)/./node_modules/sanity/lib/index.mjs\");\n\nconst visionLocaleStrings = (0,sanity__WEBPACK_IMPORTED_MODULE_0__.defineLocalesResources)(\"vision\", {\n  /** Label for action \"Copy to clipboard\", tied to the \"Query URL\" field. Also used for accessibility purposes on button */\n  \"action.copy-url-to-clipboard\": \"Copy to clipboard\",\n  /** Label for stopping an ongoing listen operation */\n  \"action.listen-cancel\": \"Stop\",\n  /** Label for setting up a listener */\n  \"action.listen-execute\": \"Listen\",\n  /** Label for cancelling an ongoing query */\n  \"action.query-cancel\": \"Cancel\",\n  /** Label for executing the query, eg doing a fetch */\n  \"action.query-execute\": \"Fetch\",\n  /**\n   * Some features has a \"New\" label indicating that the feature was recently introduced.\n   * This defines what the text of that label is. Keep it short and sweet.\n   */\n  \"label.new\": \"New\",\n  /** Error message for when the \"Params\" input are not a valid json */\n  \"params.error.params-invalid-json\": \"Parameters are not valid JSON\",\n  /** Label for \"Params\" (parameters) editor/input */\n  \"params.label\": \"Params\",\n  /** Label for 'Column' indicator when there is an error within the query */\n  \"query.error.column\": \"Column\",\n  /** Label for 'Line' indicator when there is an error within the query */\n  \"query.error.line\": \"Line\",\n  /** Label for \"Query\" editor/input */\n  \"query.label\": \"Query\",\n  /** Label for the \"Query URL\" field, shown after executing a query, and allows for copying */\n  \"query.url\": \"Query URL\",\n  /** Label for \"End to End time\" information of the fetched query */\n  \"result.end-to-end-time-label\": \"End-to-end\",\n  /** Label for \"Execution time\" information of the fetched query */\n  \"result.execution-time-label\": \"Execution\",\n  /** Label for \"Result\" explorer/view */\n  \"result.label\": \"Result\",\n  /** Tooltip text shown when the query result is not encodable as CSV */\n  \"result.save-result-as-csv.not-csv-encodable\": \"Result cannot be encoded as CSV\",\n  /** Label for \"Save result as\" result action */\n  \"result.save-result-as-format\": \"Save result as <SaveResultButtons/>\",\n  /**\n   * \"Not applicable\" message for when there is no Execution time or End to End time information\n   * available for the query (eg when the query has not been executed, or errored)\n   */\n  \"result.timing-not-applicable\": \"n/a\",\n  /** Label for the \"API version\" dropdown in settings */\n  \"settings.api-version-label\": \"API version\",\n  /** Label for the \"Custom API version\" input in settings, shown when \"other\" is chosen as API version */\n  \"settings.custom-api-version-label\": \"Custom API version\",\n  /** Label for the \"Dataset\" dropdown in vision settings */\n  \"settings.dataset-label\": \"Dataset\",\n  /** Error label for when the API version in 'Custom API version' input is invalid */\n  \"settings.error.invalid-api-version\": \"Invalid API version\",\n  /** Label for the \"other\" versions within the \"API version\" dropdown */\n  \"settings.other-api-version-label\": \"Other\",\n  /**\n   * Label for the \"Perspective\" dropdown in vision settings\n   * @see {@link https://www.sanity.io/docs/perspectives}\n   */\n  \"settings.perspective-label\": \"Perspective\",\n  /** Call to action to read the docs related to \"Perspectives\" */\n  \"settings.perspectives.action.docs-link\": \"Read docs\",\n  /** Description for popover that explains what \"Perspectives\" are */\n  \"settings.perspectives.description\": 'Perspectives allow your query to run against different \"views\" of the content in your dataset',\n  /** Title for popover that explains what \"Perspectives\" are */\n  \"settings.perspectives.title\": \"Perspectives\"\n});\n\n//# sourceMappingURL=resources.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXNpb24vbGliL19jaHVua3MtZXMvcmVzb3VyY2VzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDtBQUNoRCw0QkFBNEIsOERBQXNCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUdDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3RlbC1tYW5hZ2VtZW50Ly4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzaW9uL2xpYi9fY2h1bmtzLWVzL3Jlc291cmNlcy5tanM/ZWZjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVMb2NhbGVzUmVzb3VyY2VzIH0gZnJvbSBcInNhbml0eVwiO1xuY29uc3QgdmlzaW9uTG9jYWxlU3RyaW5ncyA9IGRlZmluZUxvY2FsZXNSZXNvdXJjZXMoXCJ2aXNpb25cIiwge1xuICAvKiogTGFiZWwgZm9yIGFjdGlvbiBcIkNvcHkgdG8gY2xpcGJvYXJkXCIsIHRpZWQgdG8gdGhlIFwiUXVlcnkgVVJMXCIgZmllbGQuIEFsc28gdXNlZCBmb3IgYWNjZXNzaWJpbGl0eSBwdXJwb3NlcyBvbiBidXR0b24gKi9cbiAgXCJhY3Rpb24uY29weS11cmwtdG8tY2xpcGJvYXJkXCI6IFwiQ29weSB0byBjbGlwYm9hcmRcIixcbiAgLyoqIExhYmVsIGZvciBzdG9wcGluZyBhbiBvbmdvaW5nIGxpc3RlbiBvcGVyYXRpb24gKi9cbiAgXCJhY3Rpb24ubGlzdGVuLWNhbmNlbFwiOiBcIlN0b3BcIixcbiAgLyoqIExhYmVsIGZvciBzZXR0aW5nIHVwIGEgbGlzdGVuZXIgKi9cbiAgXCJhY3Rpb24ubGlzdGVuLWV4ZWN1dGVcIjogXCJMaXN0ZW5cIixcbiAgLyoqIExhYmVsIGZvciBjYW5jZWxsaW5nIGFuIG9uZ29pbmcgcXVlcnkgKi9cbiAgXCJhY3Rpb24ucXVlcnktY2FuY2VsXCI6IFwiQ2FuY2VsXCIsXG4gIC8qKiBMYWJlbCBmb3IgZXhlY3V0aW5nIHRoZSBxdWVyeSwgZWcgZG9pbmcgYSBmZXRjaCAqL1xuICBcImFjdGlvbi5xdWVyeS1leGVjdXRlXCI6IFwiRmV0Y2hcIixcbiAgLyoqXG4gICAqIFNvbWUgZmVhdHVyZXMgaGFzIGEgXCJOZXdcIiBsYWJlbCBpbmRpY2F0aW5nIHRoYXQgdGhlIGZlYXR1cmUgd2FzIHJlY2VudGx5IGludHJvZHVjZWQuXG4gICAqIFRoaXMgZGVmaW5lcyB3aGF0IHRoZSB0ZXh0IG9mIHRoYXQgbGFiZWwgaXMuIEtlZXAgaXQgc2hvcnQgYW5kIHN3ZWV0LlxuICAgKi9cbiAgXCJsYWJlbC5uZXdcIjogXCJOZXdcIixcbiAgLyoqIEVycm9yIG1lc3NhZ2UgZm9yIHdoZW4gdGhlIFwiUGFyYW1zXCIgaW5wdXQgYXJlIG5vdCBhIHZhbGlkIGpzb24gKi9cbiAgXCJwYXJhbXMuZXJyb3IucGFyYW1zLWludmFsaWQtanNvblwiOiBcIlBhcmFtZXRlcnMgYXJlIG5vdCB2YWxpZCBKU09OXCIsXG4gIC8qKiBMYWJlbCBmb3IgXCJQYXJhbXNcIiAocGFyYW1ldGVycykgZWRpdG9yL2lucHV0ICovXG4gIFwicGFyYW1zLmxhYmVsXCI6IFwiUGFyYW1zXCIsXG4gIC8qKiBMYWJlbCBmb3IgJ0NvbHVtbicgaW5kaWNhdG9yIHdoZW4gdGhlcmUgaXMgYW4gZXJyb3Igd2l0aGluIHRoZSBxdWVyeSAqL1xuICBcInF1ZXJ5LmVycm9yLmNvbHVtblwiOiBcIkNvbHVtblwiLFxuICAvKiogTGFiZWwgZm9yICdMaW5lJyBpbmRpY2F0b3Igd2hlbiB0aGVyZSBpcyBhbiBlcnJvciB3aXRoaW4gdGhlIHF1ZXJ5ICovXG4gIFwicXVlcnkuZXJyb3IubGluZVwiOiBcIkxpbmVcIixcbiAgLyoqIExhYmVsIGZvciBcIlF1ZXJ5XCIgZWRpdG9yL2lucHV0ICovXG4gIFwicXVlcnkubGFiZWxcIjogXCJRdWVyeVwiLFxuICAvKiogTGFiZWwgZm9yIHRoZSBcIlF1ZXJ5IFVSTFwiIGZpZWxkLCBzaG93biBhZnRlciBleGVjdXRpbmcgYSBxdWVyeSwgYW5kIGFsbG93cyBmb3IgY29weWluZyAqL1xuICBcInF1ZXJ5LnVybFwiOiBcIlF1ZXJ5IFVSTFwiLFxuICAvKiogTGFiZWwgZm9yIFwiRW5kIHRvIEVuZCB0aW1lXCIgaW5mb3JtYXRpb24gb2YgdGhlIGZldGNoZWQgcXVlcnkgKi9cbiAgXCJyZXN1bHQuZW5kLXRvLWVuZC10aW1lLWxhYmVsXCI6IFwiRW5kLXRvLWVuZFwiLFxuICAvKiogTGFiZWwgZm9yIFwiRXhlY3V0aW9uIHRpbWVcIiBpbmZvcm1hdGlvbiBvZiB0aGUgZmV0Y2hlZCBxdWVyeSAqL1xuICBcInJlc3VsdC5leGVjdXRpb24tdGltZS1sYWJlbFwiOiBcIkV4ZWN1dGlvblwiLFxuICAvKiogTGFiZWwgZm9yIFwiUmVzdWx0XCIgZXhwbG9yZXIvdmlldyAqL1xuICBcInJlc3VsdC5sYWJlbFwiOiBcIlJlc3VsdFwiLFxuICAvKiogVG9vbHRpcCB0ZXh0IHNob3duIHdoZW4gdGhlIHF1ZXJ5IHJlc3VsdCBpcyBub3QgZW5jb2RhYmxlIGFzIENTViAqL1xuICBcInJlc3VsdC5zYXZlLXJlc3VsdC1hcy1jc3Yubm90LWNzdi1lbmNvZGFibGVcIjogXCJSZXN1bHQgY2Fubm90IGJlIGVuY29kZWQgYXMgQ1NWXCIsXG4gIC8qKiBMYWJlbCBmb3IgXCJTYXZlIHJlc3VsdCBhc1wiIHJlc3VsdCBhY3Rpb24gKi9cbiAgXCJyZXN1bHQuc2F2ZS1yZXN1bHQtYXMtZm9ybWF0XCI6IFwiU2F2ZSByZXN1bHQgYXMgPFNhdmVSZXN1bHRCdXR0b25zLz5cIixcbiAgLyoqXG4gICAqIFwiTm90IGFwcGxpY2FibGVcIiBtZXNzYWdlIGZvciB3aGVuIHRoZXJlIGlzIG5vIEV4ZWN1dGlvbiB0aW1lIG9yIEVuZCB0byBFbmQgdGltZSBpbmZvcm1hdGlvblxuICAgKiBhdmFpbGFibGUgZm9yIHRoZSBxdWVyeSAoZWcgd2hlbiB0aGUgcXVlcnkgaGFzIG5vdCBiZWVuIGV4ZWN1dGVkLCBvciBlcnJvcmVkKVxuICAgKi9cbiAgXCJyZXN1bHQudGltaW5nLW5vdC1hcHBsaWNhYmxlXCI6IFwibi9hXCIsXG4gIC8qKiBMYWJlbCBmb3IgdGhlIFwiQVBJIHZlcnNpb25cIiBkcm9wZG93biBpbiBzZXR0aW5ncyAqL1xuICBcInNldHRpbmdzLmFwaS12ZXJzaW9uLWxhYmVsXCI6IFwiQVBJIHZlcnNpb25cIixcbiAgLyoqIExhYmVsIGZvciB0aGUgXCJDdXN0b20gQVBJIHZlcnNpb25cIiBpbnB1dCBpbiBzZXR0aW5ncywgc2hvd24gd2hlbiBcIm90aGVyXCIgaXMgY2hvc2VuIGFzIEFQSSB2ZXJzaW9uICovXG4gIFwic2V0dGluZ3MuY3VzdG9tLWFwaS12ZXJzaW9uLWxhYmVsXCI6IFwiQ3VzdG9tIEFQSSB2ZXJzaW9uXCIsXG4gIC8qKiBMYWJlbCBmb3IgdGhlIFwiRGF0YXNldFwiIGRyb3Bkb3duIGluIHZpc2lvbiBzZXR0aW5ncyAqL1xuICBcInNldHRpbmdzLmRhdGFzZXQtbGFiZWxcIjogXCJEYXRhc2V0XCIsXG4gIC8qKiBFcnJvciBsYWJlbCBmb3Igd2hlbiB0aGUgQVBJIHZlcnNpb24gaW4gJ0N1c3RvbSBBUEkgdmVyc2lvbicgaW5wdXQgaXMgaW52YWxpZCAqL1xuICBcInNldHRpbmdzLmVycm9yLmludmFsaWQtYXBpLXZlcnNpb25cIjogXCJJbnZhbGlkIEFQSSB2ZXJzaW9uXCIsXG4gIC8qKiBMYWJlbCBmb3IgdGhlIFwib3RoZXJcIiB2ZXJzaW9ucyB3aXRoaW4gdGhlIFwiQVBJIHZlcnNpb25cIiBkcm9wZG93biAqL1xuICBcInNldHRpbmdzLm90aGVyLWFwaS12ZXJzaW9uLWxhYmVsXCI6IFwiT3RoZXJcIixcbiAgLyoqXG4gICAqIExhYmVsIGZvciB0aGUgXCJQZXJzcGVjdGl2ZVwiIGRyb3Bkb3duIGluIHZpc2lvbiBzZXR0aW5nc1xuICAgKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5zYW5pdHkuaW8vZG9jcy9wZXJzcGVjdGl2ZXN9XG4gICAqL1xuICBcInNldHRpbmdzLnBlcnNwZWN0aXZlLWxhYmVsXCI6IFwiUGVyc3BlY3RpdmVcIixcbiAgLyoqIENhbGwgdG8gYWN0aW9uIHRvIHJlYWQgdGhlIGRvY3MgcmVsYXRlZCB0byBcIlBlcnNwZWN0aXZlc1wiICovXG4gIFwic2V0dGluZ3MucGVyc3BlY3RpdmVzLmFjdGlvbi5kb2NzLWxpbmtcIjogXCJSZWFkIGRvY3NcIixcbiAgLyoqIERlc2NyaXB0aW9uIGZvciBwb3BvdmVyIHRoYXQgZXhwbGFpbnMgd2hhdCBcIlBlcnNwZWN0aXZlc1wiIGFyZSAqL1xuICBcInNldHRpbmdzLnBlcnNwZWN0aXZlcy5kZXNjcmlwdGlvblwiOiAnUGVyc3BlY3RpdmVzIGFsbG93IHlvdXIgcXVlcnkgdG8gcnVuIGFnYWluc3QgZGlmZmVyZW50IFwidmlld3NcIiBvZiB0aGUgY29udGVudCBpbiB5b3VyIGRhdGFzZXQnLFxuICAvKiogVGl0bGUgZm9yIHBvcG92ZXIgdGhhdCBleHBsYWlucyB3aGF0IFwiUGVyc3BlY3RpdmVzXCIgYXJlICovXG4gIFwic2V0dGluZ3MucGVyc3BlY3RpdmVzLnRpdGxlXCI6IFwiUGVyc3BlY3RpdmVzXCJcbn0pO1xuZXhwb3J0IHtcbiAgdmlzaW9uTG9jYWxlU3RyaW5ncyBhcyBkZWZhdWx0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzb3VyY2VzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/vision/lib/_chunks-es/resources.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/vision/node_modules/json5/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@sanity/vision/node_modules/json5/dist/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// This is a generated file. Do not edit.\nvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\nvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nvar unicode = {\n\tSpace_Separator: Space_Separator,\n\tID_Start: ID_Start,\n\tID_Continue: ID_Continue\n};\n\nvar util = {\n    isSpaceSeparator (c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return typeof c === 'string' && /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n    },\n};\n\nlet source;\nlet parseState;\nlet stack;\nlet pos;\nlet line;\nlet column;\nlet token;\nlet key;\nlet root;\n\nvar parse = function parse (text, reviver) {\n    source = String(text);\n    parseState = 'start';\n    stack = [];\n    pos = 0;\n    line = 1;\n    column = 0;\n    token = undefined;\n    key = undefined;\n    root = undefined;\n\n    do {\n        token = lex();\n\n        // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]();\n    } while (token.type !== 'eof')\n\n    if (typeof reviver === 'function') {\n        return internalize({'': root}, '', reviver)\n    }\n\n    return root\n};\n\nfunction internalize (holder, name, reviver) {\n    const value = holder[name];\n    if (value != null && typeof value === 'object') {\n        if (Array.isArray(value)) {\n            for (let i = 0; i < value.length; i++) {\n                const key = String(i);\n                const replacement = internalize(value, key, reviver);\n                if (replacement === undefined) {\n                    delete value[key];\n                } else {\n                    Object.defineProperty(value, key, {\n                        value: replacement,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true,\n                    });\n                }\n            }\n        } else {\n            for (const key in value) {\n                const replacement = internalize(value, key, reviver);\n                if (replacement === undefined) {\n                    delete value[key];\n                } else {\n                    Object.defineProperty(value, key, {\n                        value: replacement,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true,\n                    });\n                }\n            }\n        }\n    }\n\n    return reviver.call(holder, name, value)\n}\n\nlet lexState;\nlet buffer;\nlet doubleQuote;\nlet sign;\nlet c;\n\nfunction lex () {\n    lexState = 'default';\n    buffer = '';\n    doubleQuote = false;\n    sign = 1;\n\n    for (;;) {\n        c = peek();\n\n        // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        const token = lexStates[lexState]();\n        if (token) {\n            return token\n        }\n    }\n}\n\nfunction peek () {\n    if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos))\n    }\n}\n\nfunction read () {\n    const c = peek();\n\n    if (c === '\\n') {\n        line++;\n        column = 0;\n    } else if (c) {\n        column += c.length;\n    } else {\n        column++;\n    }\n\n    if (c) {\n        pos += c.length;\n    }\n\n    return c\n}\n\nconst lexStates = {\n    default () {\n        switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'comment';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        if (util.isSpaceSeparator(c)) {\n            read();\n            return\n        }\n\n        // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n        return lexStates[parseState]()\n    },\n\n    comment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineComment';\n            return\n\n        case '/':\n            read();\n            lexState = 'singleLineComment';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    multiLineComment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineCommentAsterisk';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n    },\n\n    multiLineCommentAsterisk () {\n        switch (c) {\n        case '*':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n        lexState = 'multiLineComment';\n    },\n\n    singleLineComment () {\n        switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        read();\n    },\n\n    value () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        case 'n':\n            read();\n            literal('ull');\n            return newToken('null', null)\n\n        case 't':\n            read();\n            literal('rue');\n            return newToken('boolean', true)\n\n        case 'f':\n            read();\n            literal('alse');\n            return newToken('boolean', false)\n\n        case '-':\n        case '+':\n            if (read() === '-') {\n                sign = -1;\n            }\n\n            lexState = 'sign';\n            return\n\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            buffer = '';\n            lexState = 'string';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    identifierNameStartEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n            break\n\n        default:\n            if (!util.isIdStartChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    identifierName () {\n        switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            buffer += read();\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameEscape';\n            return\n        }\n\n        if (util.isIdContinueChar(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('identifier', buffer)\n    },\n\n    identifierNameEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            break\n\n        default:\n            if (!util.isIdContinueChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    sign () {\n        switch (c) {\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', sign * Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n        }\n\n        throw invalidChar(read())\n    },\n\n    zero () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n\n        case 'x':\n        case 'X':\n            buffer += read();\n            lexState = 'hexadecimal';\n            return\n        }\n\n        return newToken('numeric', sign * 0)\n    },\n\n    decimalInteger () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalPointLeading () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalPoint () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalFraction () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalExponent () {\n        switch (c) {\n        case '+':\n        case '-':\n            buffer += read();\n            lexState = 'decimalExponentSign';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentSign () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentInteger () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    hexadecimal () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            lexState = 'hexadecimalInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    hexadecimalInteger () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    string () {\n        switch (c) {\n        case '\\\\':\n            read();\n            buffer += escape();\n            return\n\n        case '\"':\n            if (doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case \"'\":\n            if (!doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case '\\n':\n        case '\\r':\n            throw invalidChar(read())\n\n        case '\\u2028':\n        case '\\u2029':\n            separatorChar(c);\n            break\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    },\n\n    start () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n        }\n\n        lexState = 'value';\n    },\n\n    beforePropertyName () {\n        switch (c) {\n        case '$':\n        case '_':\n            buffer = read();\n            lexState = 'identifierName';\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameStartEscape';\n            return\n\n        case '}':\n            return newToken('punctuator', read())\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            lexState = 'string';\n            return\n        }\n\n        if (util.isIdStartChar(c)) {\n            buffer += read();\n            lexState = 'identifierName';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    afterPropertyName () {\n        if (c === ':') {\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforePropertyValue () {\n        lexState = 'value';\n    },\n\n    afterPropertyValue () {\n        switch (c) {\n        case ',':\n        case '}':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforeArrayValue () {\n        if (c === ']') {\n            return newToken('punctuator', read())\n        }\n\n        lexState = 'value';\n    },\n\n    afterArrayValue () {\n        switch (c) {\n        case ',':\n        case ']':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n\n        throw invalidChar(read())\n    },\n};\n\nfunction newToken (type, value) {\n    return {\n        type,\n        value,\n        line,\n        column,\n    }\n}\n\nfunction literal (s) {\n    for (const c of s) {\n        const p = peek();\n\n        if (p !== c) {\n            throw invalidChar(read())\n        }\n\n        read();\n    }\n}\n\nfunction escape () {\n    const c = peek();\n    switch (c) {\n    case 'b':\n        read();\n        return '\\b'\n\n    case 'f':\n        read();\n        return '\\f'\n\n    case 'n':\n        read();\n        return '\\n'\n\n    case 'r':\n        read();\n        return '\\r'\n\n    case 't':\n        read();\n        return '\\t'\n\n    case 'v':\n        read();\n        return '\\v'\n\n    case '0':\n        read();\n        if (util.isDigit(peek())) {\n            throw invalidChar(read())\n        }\n\n        return '\\0'\n\n    case 'x':\n        read();\n        return hexEscape()\n\n    case 'u':\n        read();\n        return unicodeEscape()\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n        read();\n        return ''\n\n    case '\\r':\n        read();\n        if (peek() === '\\n') {\n            read();\n        }\n\n        return ''\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        throw invalidChar(read())\n\n    case undefined:\n        throw invalidChar(read())\n    }\n\n    return read()\n}\n\nfunction hexEscape () {\n    let buffer = '';\n    let c = peek();\n\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    c = peek();\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nfunction unicodeEscape () {\n    let buffer = '';\n    let count = 4;\n\n    while (count-- > 0) {\n        const c = peek();\n        if (!util.isHexDigit(c)) {\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nconst parseStates = {\n    start () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforePropertyName () {\n        switch (token.type) {\n        case 'identifier':\n        case 'string':\n            key = token.value;\n            parseState = 'afterPropertyName';\n            return\n\n        case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n\n            pop();\n            return\n\n        case 'eof':\n            throw invalidEOF()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterPropertyName () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        parseState = 'beforePropertyValue';\n    },\n\n    beforePropertyValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforeArrayValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n            pop();\n            return\n        }\n\n        push();\n    },\n\n    afterPropertyValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforePropertyName';\n            return\n\n        case '}':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterArrayValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforeArrayValue';\n            return\n\n        case ']':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n    },\n};\n\nfunction push () {\n    let value;\n\n    switch (token.type) {\n    case 'punctuator':\n        switch (token.value) {\n        case '{':\n            value = {};\n            break\n\n        case '[':\n            value = [];\n            break\n        }\n\n        break\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n        value = token.value;\n        break\n\n    // This code is unreachable.\n    // default:\n    //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n        root = value;\n    } else {\n        const parent = stack[stack.length - 1];\n        if (Array.isArray(parent)) {\n            parent.push(value);\n        } else {\n            Object.defineProperty(parent, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true,\n            });\n        }\n    }\n\n    if (value !== null && typeof value === 'object') {\n        stack.push(value);\n\n        if (Array.isArray(value)) {\n            parseState = 'beforeArrayValue';\n        } else {\n            parseState = 'beforePropertyName';\n        }\n    } else {\n        const current = stack[stack.length - 1];\n        if (current == null) {\n            parseState = 'end';\n        } else if (Array.isArray(current)) {\n            parseState = 'afterArrayValue';\n        } else {\n            parseState = 'afterPropertyValue';\n        }\n    }\n}\n\nfunction pop () {\n    stack.pop();\n\n    const current = stack[stack.length - 1];\n    if (current == null) {\n        parseState = 'end';\n    } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue';\n    } else {\n        parseState = 'afterPropertyValue';\n    }\n}\n\n// This code is unreachable.\n// function invalidParseState () {\n//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n// }\n\n// This code is unreachable.\n// function invalidLexState (state) {\n//     return new Error(`JSON5: invalid lex state '${state}'`)\n// }\n\nfunction invalidChar (c) {\n    if (c === undefined) {\n        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    }\n\n    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n}\n\nfunction invalidEOF () {\n    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n}\n\n// This code is unreachable.\n// function invalidToken () {\n//     if (token.type === 'eof') {\n//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n//     }\n\n//     const c = String.fromCodePoint(token.value.codePointAt(0))\n//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n// }\n\nfunction invalidIdentifier () {\n    column -= 5;\n    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)\n}\n\nfunction separatorChar (c) {\n    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`);\n}\n\nfunction formatChar (c) {\n    const replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n\n    if (replacements[c]) {\n        return replacements[c]\n    }\n\n    if (c < ' ') {\n        const hexString = c.charCodeAt(0).toString(16);\n        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n    }\n\n    return c\n}\n\nfunction syntaxError (message) {\n    const err = new SyntaxError(message);\n    err.lineNumber = line;\n    err.columnNumber = column;\n    return err\n}\n\nvar stringify = function stringify (value, replacer, space) {\n    const stack = [];\n    let indent = '';\n    let propertyList;\n    let replacerFunc;\n    let gap = '';\n    let quote;\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space;\n        quote = replacer.quote;\n        replacer = replacer.replacer;\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer;\n    } else if (Array.isArray(replacer)) {\n        propertyList = [];\n        for (const v of replacer) {\n            let item;\n\n            if (typeof v === 'string') {\n                item = v;\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v);\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item);\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space);\n    } else if (space instanceof String) {\n        space = String(space);\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space));\n            gap = '          '.substr(0, space);\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10);\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key];\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key);\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key);\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value);\n        }\n\n        if (value instanceof Number) {\n            value = Number(value);\n        } else if (value instanceof String) {\n            value = String(value);\n        } else if (value instanceof Boolean) {\n            value = value.valueOf();\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value, false)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        };\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        };\n\n        let product = '';\n\n        for (let i = 0; i < value.length; i++) {\n            const c = value[i];\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++;\n                product += c;\n                continue\n\n            case '\\0':\n                if (util.isDigit(value[i + 1])) {\n                    product += '\\\\x00';\n                    continue\n                }\n            }\n\n            if (replacements[c]) {\n                product += replacements[c];\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16);\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n                continue\n            }\n\n            product += c;\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b);\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let keys = propertyList || Object.keys(value);\n        let partial = [];\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value);\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':';\n                if (gap !== '') {\n                    member += ' ';\n                }\n                member += propertyString;\n                partial.push(member);\n            }\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '{}';\n        } else {\n            let properties;\n            if (gap === '') {\n                properties = partial.join(',');\n                final = '{' + properties + '}';\n            } else {\n                let separator = ',\\n' + indent;\n                properties = partial.join(separator);\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key, true)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0));\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key, true)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key, true)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let partial = [];\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value);\n            partial.push((propertyString !== undefined) ? propertyString : 'null');\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '[]';\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',');\n                final = '[' + properties + ']';\n            } else {\n                let separator = ',\\n' + indent;\n                let properties = partial.join(separator);\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n};\n\nconst JSON5 = {\n    parse,\n    stringify,\n};\n\nvar lib = JSON5;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lib);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/vision/node_modules/json5/dist/index.mjs\n");

/***/ })

};
;